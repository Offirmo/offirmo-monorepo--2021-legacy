
// THIS FILE IS AUTO GENERATED!
// This is a base64 version of the Universal Web Debug API:
// https://github.com/Offirmo/offirmo-monorepo/tree/master/3-advanced/universal-debug-api-browser
// bundled in a single file through this local file:
// ../src/injected-libs/universal-debug-api-from-webext.ts
const lib = 'parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"YzPu":[function(require,module,exports) {
var global = arguments[3];
var e=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0});var o={};function t(){return"undefined"!=typeof globalThis?globalThis:void 0!==e?e:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==this?this:o}exports.default=t,exports.getGlobalThis=t;
},{}],"qbD6":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DEFAULT_LOG_LEVEL="error",exports.DEFAULT_LOGGER_KEY="";
},{}],"BzK9":[function(require,module,exports) {
"use strict";function e(e){for(var r in e)exports.hasOwnProperty(r)||(exports[r]=e[r])}Object.defineProperty(exports,"__esModule",{value:!0}),exports.LIB="@offirmo/practical-logger-core",exports.LOG_LEVEL_TO_INTEGER={fatal:1,emerg:2,alert:10,crit:20,error:30,warning:40,warn:40,notice:45,info:50,verbose:70,log:80,debug:81,trace:90,silly:100},exports.ALL_LOG_LEVELS=Object.keys(exports.LOG_LEVEL_TO_INTEGER).map(function(e){return e}).sort(function(e,r){return exports.LOG_LEVEL_TO_INTEGER[e]-exports.LOG_LEVEL_TO_INTEGER[r]}),exports.LOG_LEVEL_TO_HUMAN=exports.ALL_LOG_LEVELS.reduce(function(e,r){return e[r]={em:"emergency",wa:"warn"}[r.slice(0,1)]||r,e},{}),e(require("./consts-base"));
},{"./consts-base":"qbD6"}],"xY3M":[function(require,module,exports) {
"use strict";var e=this&&this.__assign||function(){return(e=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)};function r(e){return!!((null==e?void 0:e.name)&&(null==e?void 0:e.message)&&(null==e?void 0:e.stack))}function t(t){var n,o=[],s={},i=void 0;Array.from(t).forEach(function(t){t&&(r(t)?i||(i=t):(!i&&r(t.err)&&(i=t.err),"object"!=typeof t?o.push(String(t)):s=e(e({},s),t)))}),"string"!=typeof s.message||o.length||(o.push(s.message),delete s.message);var a=o.join(" ")||(null===(n=i)||void 0===n?void 0:n.message)||"(no message)";return i?s.err=i:delete s.err,[a,s]}Object.defineProperty(exports,"__esModule",{value:!0}),exports.looksLikeAnError=r,exports.normalizeArguments=t;
},{}],"joTl":[function(require,module,exports) {
"use strict";var e=this&&this.__assign||function(){return(e=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},r=this&&this.__rest||function(e,r){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)r.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(t[n[o]]=e[n[o]])}return t};Object.defineProperty(exports,"__esModule",{value:!0});var t=require("./consts"),n=require("./normalize-args");function o(e){if(!t.ALL_LOG_LEVELS.includes(e))throw new Error("["+t.LIB+'] Not a valid log level: "'+e+'"!')}function i(i,l){var u=void 0===i?{}:i,a=u.name,s=void 0===a?t.DEFAULT_LOGGER_KEY:a,c=u.suggestedLevel,f=void 0===c?t.DEFAULT_LOG_LEVEL:c,v=u.forcedLevel,L=u.commonDetails,p=void 0===L?{}:L;void 0===l&&(l=console.log);var m={name:s,level:v||f,commonDetails:e({},p),outputFn:l},E=100,O=t.ALL_LOG_LEVELS.reduce(function(i,l){return i[l]=function(i,u){if(function(e){return o(e),t.LOG_LEVEL_TO_INTEGER[e]<=E}(l)){var a=n.normalizeArguments(arguments),c=a[0],f=a[1];m.outputFn(function(t,n,o){var i=o.err,l=r(o,["err"]),u={level:t,name:s,msg:n,time:+new Date,details:e(e({},m.commonDetails),l)};return i&&(u.err=i),u}(l,c,f))}},i},{setLevel:d,getLevel:_,addCommonDetails:function(r){if(r.err)throw new Error("["+t.LIB+'] Can\'t set reserved property "err"!');m.commonDetails=e(e({},m.commonDetails),r)},group:function(){},groupCollapsed:function(){},groupEnd:function(){}});function d(e){o(e),m.level=e,E=t.LOG_LEVEL_TO_INTEGER[e]}function _(){return m.level}return d(_()),O}exports.checkLevel=o,exports.create=i;
},{"./consts":"BzK9","./normalize-args":"xY3M"}],"c8Iv":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});
},{}],"VzNr":[function(require,module,exports) {
"use strict";function e(e){for(var r in e)exports.hasOwnProperty(r)||(exports[r]=e[r])}Object.defineProperty(exports,"__esModule",{value:!0});var r=require("./core");exports.createLogger=r.create,e(require("@offirmo/practical-logger-types"));var L=require("./consts");exports.ALL_LOG_LEVELS=L.ALL_LOG_LEVELS,exports.LOG_LEVEL_TO_INTEGER=L.LOG_LEVEL_TO_INTEGER,exports.LOG_LEVEL_TO_HUMAN=L.LOG_LEVEL_TO_HUMAN,exports.DEFAULT_LOG_LEVEL=L.DEFAULT_LOG_LEVEL,exports.DEFAULT_LOGGER_KEY=L.DEFAULT_LOGGER_KEY;var E=require("./core");exports.checkLevel=E.checkLevel,e(require("./normalize-args"));
},{"./core":"joTl","@offirmo/practical-logger-types":"c8Iv","./consts":"BzK9","./normalize-args":"xY3M"}],"QrWd":[function(require,module,exports) {
"use strict";function e(e){var t,r=!1;return function(){for(var n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];return r||(t=e.apply(void 0,n),r=!0),t}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=e,exports.tiny_singleton=e;
},{}],"FCME":[function(require,module,exports) {
"use strict";function e(e){for(var r in e)exports.hasOwnProperty(r)||(exports[r]=e[r])}Object.defineProperty(exports,"__esModule",{value:!0}),exports.LIB="@offirmo/practical-logger-core",exports.LOG_LEVEL_TO_INTEGER={fatal:1,emerg:2,alert:10,crit:20,error:30,warning:40,warn:40,notice:45,info:50,verbose:70,log:80,debug:81,trace:90,silly:100},exports.ALL_LOG_LEVELS=Object.keys(exports.LOG_LEVEL_TO_INTEGER).map(function(e){return e}).sort(function(e,r){return exports.LOG_LEVEL_TO_INTEGER[e]-exports.LOG_LEVEL_TO_INTEGER[r]}),exports.LOG_LEVEL_TO_HUMAN=exports.ALL_LOG_LEVELS.reduce(function(e,r){return e[r]={em:"emergency",wa:"warn"}[r.slice(0,1)]||r,e},{}),e(require("./consts-base"));
},{"./consts-base":"qbD6"}],"IgRO":[function(require,module,exports) {
"use strict";var e=this&&this.__assign||function(){return(e=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},r=this&&this.__rest||function(e,r){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)r.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(t[n[o]]=e[n[o]])}return t};Object.defineProperty(exports,"__esModule",{value:!0});var t=require("./consts"),n=require("./normalize-args");function o(e){if(!t.ALL_LOG_LEVELS.includes(e))throw new Error("["+t.LIB+'] Not a valid log level: "'+e+'"!')}function i(i,l){var u=void 0===i?{}:i,a=u.name,s=void 0===a?t.DEFAULT_LOGGER_KEY:a,c=u.suggestedLevel,f=void 0===c?t.DEFAULT_LOG_LEVEL:c,v=u.forcedLevel,L=u.commonDetails,p=void 0===L?{}:L;void 0===l&&(l=console.log);var m={name:s,level:v||f,commonDetails:e({},p),outputFn:l},E=100,O=t.ALL_LOG_LEVELS.reduce(function(i,l){return i[l]=function(i,u){if(function(e){return o(e),t.LOG_LEVEL_TO_INTEGER[e]<=E}(l)){var a=n.normalizeArguments(arguments),c=a[0],f=a[1];m.outputFn(function(t,n,o){var i=o.err,l=r(o,["err"]),u={level:t,name:s,msg:n,time:+new Date,details:e(e({},m.commonDetails),l)};return i&&(u.err=i),u}(l,c,f))}},i},{setLevel:d,getLevel:_,addCommonDetails:function(r){if(r.err)throw new Error("["+t.LIB+'] Can\'t set reserved property "err"!');m.commonDetails=e(e({},m.commonDetails),r)},group:function(){},groupCollapsed:function(){},groupEnd:function(){}});function d(e){o(e),m.level=e,E=t.LOG_LEVEL_TO_INTEGER[e]}function _(){return m.level}return d(_()),O}exports.checkLevel=o,exports.create=i;
},{"./consts":"FCME","./normalize-args":"xY3M"}],"qAHM":[function(require,module,exports) {
"use strict";function e(e){for(var r in e)exports.hasOwnProperty(r)||(exports[r]=e[r])}Object.defineProperty(exports,"__esModule",{value:!0});var r=require("./core");exports.createLogger=r.create,e(require("@offirmo/practical-logger-types"));var L=require("./consts");exports.ALL_LOG_LEVELS=L.ALL_LOG_LEVELS,exports.LOG_LEVEL_TO_INTEGER=L.LOG_LEVEL_TO_INTEGER,exports.LOG_LEVEL_TO_HUMAN=L.LOG_LEVEL_TO_HUMAN,exports.DEFAULT_LOG_LEVEL=L.DEFAULT_LOG_LEVEL,exports.DEFAULT_LOGGER_KEY=L.DEFAULT_LOGGER_KEY;var E=require("./core");exports.checkLevel=E.checkLevel,e(require("./normalize-args"));
},{"./core":"IgRO","@offirmo/practical-logger-types":"c8Iv","./consts":"FCME","./normalize-args":"xY3M"}],"ItOh":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("@offirmo/practical-logger-core");exports.LEVEL_TO_CONSOLE_METHOD={fatal:"error",emerg:"error",alert:"error",crit:"error",error:"error",warning:"warn",warn:"warn",notice:"info",info:"info",verbose:"info",log:"log",debug:"debug",trace:"debug",silly:"debug"};var e=5;function o(o){var i=r.LOG_LEVEL_TO_HUMAN[o];return i=(i+"         ").slice(0,e)}exports.to_uniform_level=o;
},{"@offirmo/practical-logger-core":"qAHM"}],"fg74":[function(require,module,exports) {
"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(r){for(var o,e=1,t=arguments.length;e<t;e++)for(var n in o=arguments[e])Object.prototype.hasOwnProperty.call(o,n)&&(r[n]=o[n]);return r}).apply(this,arguments)},o=this&&this.__spreadArrays||function(){for(var r=0,o=0,e=arguments.length;o<e;o++)r+=arguments[o].length;var t=Array(r),n=0;for(o=0;o<e;o++)for(var s=arguments[o],a=0,i=s.length;a<i;a++,n++)t[n]=s[a];return t};Object.defineProperty(exports,"__esModule",{value:!0});var e="font-family: "+["-apple-system","BlinkMacSystemFont","noto","roboto","sans-serif"].join(", ");exports.FONT_FAMILY_BETTER_PROPORTIONAL=e;var t="font-family: "+['"Fira Code"',"Menlo","Consolas","monospace"].join(", ");exports.FONT_FAMILY_BETTER_MONOSPACE=t;var n={fatal:"",emerg:"",alert:"",crit:"",error:"",warning:"",warn:"",notice:"color: #659AD2",info:"color: #659AD2",verbose:"color: #659AD2",log:"",debug:"color: #9AA2AA",trace:"color: #9AA2AA",silly:"color: #9AA2AA"};function s(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];var s=r[0],a=r.slice(1);return o([s+"%c"+e],a,[t.join(";")+";"])}function a(o,e){var t=e.err,n=e.details,s=o;return t&&(n=r(r({},n),{err:t})),Object.keys(n).length&&s.push(n),t&&s.push(t),s}exports.LEVEL_TO_COLOR_STYLE=n,exports.add_styled_string=s,exports.build_args=a;
},{}],"a70i":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _=require("../common"),O=require("./common");function e(_){return"error"===_}var L="font-size: 10px";exports.sink=function(T){var E=T.level,t=T.name,r=T.msg,s=(T.err,T.details,_.LEVEL_TO_CONSOLE_METHOD[E]),d=console[s],n=[""];e(s)||(n=O.add_styled_string(n,"▷",O.LEVEL_TO_COLOR_STYLE[E],"font-size: 8px",O.FONT_FAMILY_BETTER_PROPORTIONAL,"margin-left: .35em","margin-right: .5em")),n=O.add_styled_string(n,"[",O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_PROPORTIONAL),n=O.add_styled_string(n,_.to_uniform_level(E),O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_MONOSPACE),n=O.add_styled_string(n,"] ",O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_PROPORTIONAL),n=O.add_styled_string(n,"","font-size: unset"),t&&(n=O.add_styled_string(n,t+" › ",O.LEVEL_TO_COLOR_STYLE[E],O.FONT_FAMILY_BETTER_PROPORTIONAL)),n=O.add_styled_string(n,r,O.LEVEL_TO_COLOR_STYLE[E],O.FONT_FAMILY_BETTER_PROPORTIONAL),d.apply(void 0,O.build_args(n,T))},exports.default=exports.sink;
},{"../common":"ItOh","./common":"fg74"}],"XU3o":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _=require("../common"),O=require("./common");function e(_){return"error"===_||"warn"===_}var L="font-size: 8px",T="font-size: 11px";exports.sink=function(t){var E=t.level,r=t.name,s=t.msg,n=(t.err,t.details,_.LEVEL_TO_CONSOLE_METHOD[E]),d=console[n],i=[""];e(n)||(i=O.add_styled_string(i,"▷",O.LEVEL_TO_COLOR_STYLE[E],"font-size: 8px",O.FONT_FAMILY_BETTER_PROPORTIONAL,"margin-left: .1em","margin-right: .2em")),i=O.add_styled_string(i,"[",O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_PROPORTIONAL),i=O.add_styled_string(i,_.to_uniform_level(E),O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_MONOSPACE),i=O.add_styled_string(i,"] ",O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_PROPORTIONAL),i=O.add_styled_string(i,"","font-size: unset"),r&&(i=O.add_styled_string(i,r+" › ",O.LEVEL_TO_COLOR_STYLE[E],O.FONT_FAMILY_BETTER_PROPORTIONAL,T)),i=O.add_styled_string(i,s,O.LEVEL_TO_COLOR_STYLE[E],O.FONT_FAMILY_BETTER_PROPORTIONAL,T),d.apply(void 0,O.build_args(i,t))},exports.default=exports.sink;
},{"../common":"ItOh","./common":"fg74"}],"ySq2":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _=require("../common"),O=require("./common");function e(_,O){return O||"error"===_}var L="font-size: 9px";exports.sink=function(T){var E=T.level,t=T.name,r=T.msg,s=(T.err,T.details),d=_.LEVEL_TO_CONSOLE_METHOD[E],n=console[d],i=[""];e(d,s)||(i=O.add_styled_string(i,"▷",O.LEVEL_TO_COLOR_STYLE[E],"font-size: 10px",O.FONT_FAMILY_BETTER_PROPORTIONAL,"margin-left: .15em","margin-right: .4em")),i=O.add_styled_string(i,"[",O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_PROPORTIONAL),i=O.add_styled_string(i,_.to_uniform_level(E),O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_MONOSPACE),i=O.add_styled_string(i,"] ",O.LEVEL_TO_COLOR_STYLE[E],L,O.FONT_FAMILY_BETTER_PROPORTIONAL),i=O.add_styled_string(i,"","font-size: unset"),t&&(i=O.add_styled_string(i,t+" › ",O.LEVEL_TO_COLOR_STYLE[E],O.FONT_FAMILY_BETTER_PROPORTIONAL)),i=O.add_styled_string(i,r,O.LEVEL_TO_COLOR_STYLE[E],O.FONT_FAMILY_BETTER_PROPORTIONAL),n.apply(void 0,O.build_args(i,T))},exports.default=exports.sink;
},{"../common":"ItOh","./common":"fg74"}],"ebUi":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./common");function r(r){return void 0===r&&(r={}),function(r){var o=r.level,t=r.name,s=r.msg,u=r.err,l=r.details,n=e.LEVEL_TO_CONSOLE_METHOD[o],i=console[n],p=["[",e.to_uniform_level(o),"] "];t&&p.push(t+" › "),p.push(s);var a=p;Object.keys(l).length&&a.push(l),u&&a.push(u),i.apply(void 0,a)}}exports.default=r;
},{"./common":"ItOh"}],"jtK7":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var r=e(require("./advanced/firefox")),t=e(require("./advanced/chromium")),i=e(require("./advanced/safari")),u=e(require("./no-css"));function a(){try{if(window.InstallTrigger)return"firefox";if(window.ApplePaySession)return"safari";if(window.chrome)return"chromium"}catch(e){}return"other"}function n(e){if(void 0===e&&(e={}),!1===e.useCss)return u.default(e);switch(e.explicitBrowser||a()){case"firefox":return r.default;case"safari":return i.default;case"chromium":return t.default;default:return u.default(e)}}exports.create=n;
},{"./advanced/firefox":"a70i","./advanced/chromium":"XU3o","./advanced/safari":"ySq2","./no-css":"ebUi"}],"Qqzz":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var o=["debug","log","info","warn","error","group","groupCollapsed","groupEnd"],e=!1;function l(l){var r=void 0===l?{}:l,n=r.uncollapse_level,p=void 0===n?"warn":n,t=r.lazy,u=void 0===t||t,a=r.original_console,d=void 0===a?console:a;e&&console.log("install",{uncollapse_level:p,lazy:u});var g=[],i=!1,s={};function f(){for(var o=[],l=0;l<arguments.length;l++)o[l]=arguments[l];e&&s.log(">>> before groupEnd",{lazy:u,depth:g.length},'"'+o[0]+'"');var r=g.pop();r&&r.is_effective&&(i=!0,s.groupEnd.apply(s,o),i=!1),e&&s.log("<<< after groupEnd",{lazy:u,depth:g.length})}function c(o,l){for(var r=[],n=2;n<arguments.length;n++)r[n-2]=arguments[n];if(i)return o.apply(void 0,r);if(e&&o(">>> before output",{depth:g.length},'"'+r[0]+'"'),g.forEach(function(r){var n=r.is_effective,p=r.is_deployed,t=r.params;n||(e&&o("--- lazy call"),l||p?(i=!0,s.group.apply(s,t),i=!1,r.is_deployed=!0):(i=!0,s.groupCollapsed.apply(s,t),i=!1,r.is_deployed=!1),r.is_effective=!0)}),e&&o("--- output"),l)for(var p=g.findIndex(function(o){return!o.is_deployed});p>=0&&g.length&&g.length>p;)f(),s.debug("(forced break out of group ↑ due to error)");e&&o("--- output"),o.apply(void 0,r),e&&o("<<<after output",{depth:g.length})}o.forEach(function(o){s[o]=d[o]}),console.group=function(){for(var o=[],l=0;l<arguments.length;l++)o[l]=arguments[l];e&&s.log(">>> before group",{lazy:u,depth:g.length},'"'+o[0]+'"'),g.push({params:o,is_deployed:!0,is_effective:!u}),u||(i=!0,s.group.apply(s,o),i=!1),e&&s.log("<<< after group",{depth:g.length})},console.groupCollapsed=function(){for(var o=[],l=0;l<arguments.length;l++)o[l]=arguments[l];e&&s.log(">>> before groupCollapsed",{lazy:u,depth:g.length},'"'+o[0]+'"'),g.push({params:o,is_deployed:!1,is_effective:!u}),u||(i=!0,s.groupCollapsed.apply(s,o),i=!1),e&&s.log("after groupCollapsed",{depth:g.length})},console.groupEnd=f,console.debug=c.bind(null,s.debug,!1),console.log=c.bind(null,s.log,!1),console.info=c.bind(null,s.info,!1),console.warn=c.bind(null,s.warn,"warn"===p),console.error=c.bind(null,s.error,!0)}exports.improve_console_groups=l,exports.default=l;
},{}],"QGPf":[function(require,module,exports) {
"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(r){for(var e,o=1,t=arguments.length;o<t;o++)for(var i in e=arguments[o])Object.prototype.hasOwnProperty.call(e,i)&&(r[i]=e[i]);return r}).apply(this,arguments)};function e(r){for(var e in r)exports.hasOwnProperty(e)||(exports[e]=r[e])}var o=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(exports,"__esModule",{value:!0});var t=o(require("@offirmo/tiny-singleton")),i=require("@offirmo/practical-logger-core"),n=require("./sinks"),s=o(require("./better-console-groups/practical-logger")),u=console,a=t.default(function(r){r&&s.default()});function p(e){var o,t;void 0===e&&(e={}),a(!1!==(null===(o=e.sinkOptions)||void 0===o?void 0:o.betterGroups));var s=(null===(t=e.sinkOptions)||void 0===t?void 0:t.sink)||n.create(e.sinkOptions),p=u.group,l=u.groupCollapsed,c=u.groupEnd;return r(r({},i.createLogger(e,s)),{group:p,groupCollapsed:l,groupEnd:c})}exports.createLogger=p,e(require("@offirmo/practical-logger-types"));var l=require("@offirmo/practical-logger-core");exports.DEFAULT_LOG_LEVEL=l.DEFAULT_LOG_LEVEL,exports.DEFAULT_LOGGER_KEY=l.DEFAULT_LOGGER_KEY;
},{"@offirmo/tiny-singleton":"QrWd","@offirmo/practical-logger-core":"qAHM","./sinks":"jtK7","./better-console-groups/practical-logger":"Qqzz","@offirmo/practical-logger-types":"c8Iv"}],"ote7":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LS_ROOT="🛠UDA";
},{}],"Lyjh":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../consts"),r=require("../consts");function t(e){return"logger."+(e||"default")+".logLevel"}function o(r){return e.LS_ROOT+".override."+r}exports.LS_ROOT=r.LS_ROOT,exports.getOverrideKeyForLogger=t,exports.getLSKeyForOverride=o;
},{"../consts":"ote7"}],"fRtK":[function(require,module,exports) {
"use strict";var e=this&&this.__assign||function(){return(e=Object.assign||function(e){for(var r,o=1,t=arguments.length;o<t;o++)for(var n in r=arguments[o])Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);return e}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0});var r=require("@offirmo/practical-logger-core"),o=require("@offirmo/practical-logger-browser"),t=require("./keys");exports.OWN_LOGGER_NAME=t.LS_ROOT;var n=1;function a(){var i={},l={},c={},g={},v=i[exports.OWN_LOGGER_NAME]=o.createLogger({name:exports.OWN_LOGGER_NAME,suggestedLevel:"fatal"});function s(e){try{var r=t.getLSKeyForOverride(e);return localStorage.getItem(r)}catch(o){return v.warn('🔴 error reading LS for override "'+e+'"!',{err:o}),null}}var u=s(t.getOverrideKeyForLogger("_UDA_internal"));try{u&&v.setLevel(JSON.parse(u))}catch(f){v.fatal('🔴 error setting internal logger forced level: "'+u+'"!')}function d(e,r){try{var o=function(e){if(!g[e]){g[e]={isOn:!1,value:void 0};var r=s(e);if(r)try{g[e].isOn=!0;var o="undefined"===r?void 0:JSON.parse(r);g[e].value=o,v.log(' 🔵 overriden "'+e+'"',{value:o})}catch(f){v.warn('🔴 failed to override "'+e+'"!',{badValue:r,err:f})}}return g[e]}(e);if(o.isOn)return o.value}catch(f){v.error("overrideHook(): error retrieving override!",{key:e,err:f})}return r}return v.log("Instantiated. (revision: "+n+")"),{getLogger:function(n){void 0===n&&(n={});var a=n.name||r.DEFAULT_LOGGER_KEY;if(!i[a]){try{var l=t.getOverrideKeyForLogger(a);!n.forcedLevel&&s(l)&&(n=e(e({},n),{forcedLevel:d(l,n.suggestedLevel||r.DEFAULT_LOG_LEVEL)}))}catch(f){v.error("getLogger(): error overriding the level!",{name:a,err:f})}i[a]=o.createLogger(n)}return i[a]},exposeInternal:function(e,r){v.warn("exposeInternal(): alpha, not documented!");try{var o=e.split("."),t=o.length-1,n=c;o.forEach(function(e,o){n[e]=n[e]||(o===t?r:{}),n=n[e]})}catch(f){v.error("exposeInternal(): error exposing!",{path:e,err:f})}},overrideHook:d,addDebugCommand:function(e,r){v.warn("addDebugCommand(): alpha, not documented!"),l[e]=r},_:{exposed:c,overrides:g,minor:n,source:"browser-lib",create:a}}}exports.default=a;
},{"@offirmo/practical-logger-core":"VzNr","@offirmo/practical-logger-browser":"QGPf","./keys":"Lyjh"}],"b8D4":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@offirmo/practical-logger-types");exports.Logger=e.Logger,exports.LoggerCreationParams=e.LoggerCreationParams;
},{"@offirmo/practical-logger-types":"c8Iv"}],"tW5K":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./v1");exports.DebugApiV1=e.DebugApi;var r=require("@offirmo/practical-logger-types");exports.Logger=r.Logger,exports.LoggerCreationParams=r.LoggerCreationParams;
},{"./v1":"b8D4","@offirmo/practical-logger-types":"c8Iv"}],"Vju9":[function(require,module,exports) {
"use strict";function e(e){for(var r in e)exports.hasOwnProperty(r)||(exports[r]=e[r])}var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)Object.hasOwnProperty.call(e,t)&&(r[t]=e[t]);return r.default=e,r};Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@offirmo/globalthis-ponyfill"),a=r(require("./v1"));exports.createV1=a.default;var o=t.getGlobalThis();exports.globalThis=o,o._debug=o._debug||{};var i=o._debug;i.v1=function(e){var r=a.default(),t=r.getLogger({name:a.OWN_LOGGER_NAME});if(t.log("as a candidate, attempting to attach…"),!e)return t.log("nominal install ✅"),r;if(!e._)return t.warn("install warning: a placeholder is already present, you may miss some calls! the true implementation should be imported earlier!"),t.log("as a candidate, replacing existing ⚠"),r;(t=e.getLogger({name:a.OWN_LOGGER_NAME})).warn("install warning: several true implementation coexists, only the top module should import it. Check your submodules!");var o=Math.min(e._.minor,r._.minor);return o!==r._.minor&&t.warn('install warning: several true implementation coexists, including an outdated one: "v'+o+'"!'),t.log("as a candidate, discarding myself: existing is good enough ✅"),e}(i.v1);var n=i.v1,l=n.getLogger,s=n.exposeInternal,u=n.overrideHook,d=n.addDebugCommand;exports.getLogger=l,exports.exposeInternal=s,exports.overrideHook=u,exports.addDebugCommand=d,e(require("@offirmo/universal-debug-api-interface"));
},{"@offirmo/globalthis-ponyfill":"YzPu","./v1":"fRtK","@offirmo/universal-debug-api-interface":"tW5K"}],"zISz":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),require("@offirmo/universal-debug-api-browser");
},{"@offirmo/universal-debug-api-browser":"Vju9"}]},{},["zISz"], null)'
export default lib
