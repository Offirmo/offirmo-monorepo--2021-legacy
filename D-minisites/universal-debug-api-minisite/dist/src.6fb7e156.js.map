{"version":3,"sources":["../../../node_modules/@offirmo/globalthis-ponyfill/src/index.ts","../../../node_modules/@offirmo/practical-logger-types/src/index.ts","../../../node_modules/@offirmo/practical-logger-minimal-noop/src/index.ts","../../../node_modules/@offirmo/universal-debug-api-placeholder/src/v1.ts","../../../node_modules/@offirmo/universal-debug-api-interface/src/v1.ts","../../../node_modules/@offirmo/universal-debug-api-interface/src/index.ts","../../../node_modules/@offirmo/universal-debug-api-placeholder/src/index.ts","../../../node_modules/@offirmo/practical-logger-core/src/consts-base.ts","../../../node_modules/@offirmo/practical-logger-core/src/consts.ts","../../../node_modules/@offirmo/practical-logger-core/src/normalize-args.ts","../../../node_modules/@offirmo/practical-logger-core/src/core.ts","../../../node_modules/@offirmo/practical-logger-core/src/index.ts","../../../node_modules/@offirmo/practical-logger-core/doc/shared-demo.js","index.ts"],"names":["ALL_LOG_LEVELS","require","demo_legacy_console","console","log","debug","level","foo","info","warn","error","demo_logger_basic_usage","logger","in_group","silly","trace","version","bob","firstName","lastName","age","verbose","user","elapsedMs","err","Error","httpStatus","undefined","groupEnd","demo_logger_levels","reverse","forEach","demo_group","group","groupCollapsed","assert","demo_incorrect_logger_invocations","more","demo_logger_api","getLogger","root_logger","suggestedLevel","name","demo_error","bar","statusCode","details","hello","some","demo_devtools_fonts","font","module","exports"],"mappings":"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","file":"src.6fb7e156.js","sourceRoot":"../src","sourcesContent":["/* global globalThis, self, window, global */\n\nconst lastResort: { [k:string]: any } = {}\n\nexport default function getGlobalThis(this: any): { [k:string]: any } {\n\n\t// @ts-ignore\n\tif (typeof globalThis !== 'undefined') return globalThis\n\n\t// check node first https://github.com/ljharb/globalThis/issues/2\n\t// @ts-ignore\n\tif (typeof global !== 'undefined') return global\n\n\t// @ts-ignore\n\tif (typeof self !== 'undefined') return self\n\n\t// @ts-ignore\n\tif (typeof window !== 'undefined') return window\n\n\tif (typeof this !== 'undefined') return this\n\n\treturn lastResort // should never happen\n}\n\nexport { getGlobalThis }\n","\n//////////// Public interface (for logger usage) ////////////\n\n// List of all known logging primitives, in order of criticity\n// https://docs.google.com/spreadsheets/d/1Bc32plQTswNdCqXS99deB0n7Te7FfD7uepGAOOlPbvY/edit?usp=sharing\nexport type LogLevel =\n\t// TODO an extra \"never\" level?\n\t  'fatal'\n\t| 'emerg'\n\t| 'alert'\n\t| 'crit'\n\t| 'error'\n\t| 'warning'\n\t| 'warn'\n\t| 'notice'\n\t| 'info'\n\t| 'verbose'\n\t| 'log'\n\t| 'debug'\n\t| 'trace'\n\t| 'silly'\n\nexport interface LogDetails { [k: string]: any }\n\n// We INTENTIONALLY restrict to a structured primitive with no overloading.\n// - we do NOT follow bunyan with its multiple overloads (https://github.com/trentm/node-bunyan#log-method-api)\n//   Rationale: multiple overloads prove hard to type and force to use complex normalization code.\n// - we do not attempt to mirror console.x() API:\n//   it's not relevant since the introduction of string templates literals.\n// Still, we MAY tolerate a few simplifying cases:\n// - omitting the message: it will be extracted from details.message\n// - passing an error directly, either as the only arg or as details\n//   (to allow the simple logging of an error)\n// Those \"tolerances\" are non standard and may not be handled!\nexport type LogPrimitive = (message?: string, details?: Readonly<LogDetails>) => void\n\n// The top-level interface\nexport interface Logger {\n\tsetLevel: (level: LogLevel) => void\n\tgetLevel: () => LogLevel\n\taddCommonDetails: (hash: Readonly<LogDetails>) => void\n\n\tfatal: LogPrimitive\n\temerg: LogPrimitive\n\talert: LogPrimitive\n\tcrit: LogPrimitive\n\terror: LogPrimitive\n\twarning: LogPrimitive\n\twarn: LogPrimitive\n\tnotice: LogPrimitive\n\tinfo: LogPrimitive\n\tverbose: LogPrimitive\n\tlog: LogPrimitive\n\tdebug: LogPrimitive\n\ttrace: LogPrimitive\n\tsilly: LogPrimitive\n\n\t// for convenience. Not guaranteed to do anything.\n\tgroup(groupTitle?: string): void\n\tgroupCollapsed(groupTitle?: string): void\n\tgroupEnd(): void\n}\n\n//////////// Private interface (for logger implementations) ////////////\n\n// internal representation of a log line\n// inspired by:\n// https://github.com/trentm/node-bunyan#core-fields\nexport interface LogPayload {\n\tname: string // logger name\n\n\ttime: number // UTC timestamp\n\tlevel: LogLevel\n\tmsg: string\n\terr?: Error\n\tdetails: LogDetails\n}\n\n// a fn responsible to display a log line (or whatever)\nexport type LogSink = (payload: LogPayload) => void\n\n// a suggested base logger state\nexport interface BaseInternalLoggerState {\n\tname: string\n\tlevel: LogLevel // inclusive lower bound\n\tcommonDetails: LogDetails\n\toutputFn: LogSink\n}\n\n// suggested creation params\nexport interface BaseSinkOptions {\n\tsink?: LogSink\n}\nexport interface LoggerCreationParams<SinkOptions extends BaseSinkOptions = {}> {\n\tname?: string\n\tsuggestedLevel?: LogLevel // the code is free to suggest a default level, but can expect it to be dynamically overriden (see Universal Debug API)\n\tforcedLevel?: LogLevel // use only if you provide your own mechanism for dynamically setting the level\n\tcommonDetails?: Readonly<LogDetails>\n\tsinkOptions?: SinkOptions // options specifically targeted at the sink, usually platform dependent\n}\n","import { Logger, LoggerCreationParams } from '@offirmo/practical-logger-types'\n\n\nfunction NOP () {}\n\nconst NOP_LOGGER: Logger = {\n\tsetLevel: NOP,\n\tgetLevel: () => 'silly',\n\n\taddCommonDetails: NOP,\n\n\tfatal: NOP,\n\temerg: NOP,\n\talert: NOP,\n\tcrit: NOP,\n\terror: NOP,\n\twarning: NOP,\n\twarn: NOP,\n\tnotice: NOP,\n\tinfo: NOP,\n\tverbose: NOP,\n\tlog: NOP,\n\tdebug: NOP,\n\ttrace: NOP,\n\tsilly: NOP,\n\n\tgroup: NOP,\n\tgroupCollapsed: NOP,\n\tgroupEnd: NOP,\n}\n\nfunction createLogger(_?: any): Logger {\n\treturn NOP_LOGGER\n}\n\nexport {\n\tLogger,\n\tLoggerCreationParams,\n\tcreateLogger,\n}\n","import { DebugApiV1 } from '@offirmo/universal-debug-api-interface'\nimport { createLogger } from '@offirmo/practical-logger-minimal-noop'\n\n\nexport default function create(): DebugApiV1 {\n\t//console.trace('[UDA--placeholder installing…]')\n\n\tfunction NOP () {}\n\tconst NOP_LOGGER = createLogger()\n\n\treturn {\n\t\tgetLogger: () => NOP_LOGGER,\n\t\toverrideHook: (k, v) => v,\n\t\texposeInternal: NOP,\n\t\taddDebugCommand: NOP,\n\t}\n}\n","import { Logger, LoggerCreationParams } from '@offirmo/practical-logger-types'\n\ninterface DebugApi {\n\tgetLogger: (p?: Readonly<LoggerCreationParams>) => Logger\n\n\toverrideHook: <T>(key: string, defaultValue: T) => T\n\n\texposeInternal: (path: string, value: any) => void\n\n\taddDebugCommand: (name: string, callback: ( /* todo common libs as params ? */ ) => void) => void\n\n\t// This is internal, undocumented, should not be used!\n\t// For ex. the placeholder won't feture this\n\t_?: {\n\t\texposed: any\n\t\toverrides: { [k: string]: any }\n\n\t\t// For internal setup debug:\n\t\t// TODO review if really useful\n\t\tminor: number // minor isolated increment as a number, for trivial INTERNAL semver check (of course <99 required)\n\t\t              // this \"minor\" is specific to an implementation, i.e. browser or node\n\t\tsource: string // what installed this lib\n\t\tcreate: () => DebugApi // allows re-creating for special purpose (for now, only the browser extension needs it)\n\t}\n}\n\nexport {\n\tLogger,\n\tLoggerCreationParams,\n\tDebugApi,\n}\n","import { DebugApi as DebugApiV1 } from './v1'\n\ninterface DebugApiRoot {\n\tv1: DebugApiV1,\n}\n\ntype DebugApi = DebugApiV1\n\nexport {\n\tDebugApiV1,\n\n\t// v latest\n\tDebugApi,\n\tDebugApiRoot,\n}\n\n// for convenience\nexport { Logger, LoggerCreationParams } from '@offirmo/practical-logger-types'\n","import { getGlobalThis } from '@offirmo/globalthis-ponyfill'\nimport { DebugApiRoot, DebugApi } from '@offirmo/universal-debug-api-interface'\n\nimport createV1 from './v1'\n\nconst globalThis = getGlobalThis()\n\n// ensure the root is present\nglobalThis._debug = globalThis._debug || {} as DebugApiRoot\n\n// install globally if no other implementation already present\nglobalThis._debug.v1 = globalThis._debug.v1 || createV1()\n\n// expose the installed implementation\nconst instance: DebugApi = globalThis._debug.v1\n\nconst {\n\tgetLogger,\n\texposeInternal,\n\toverrideHook,\n\taddDebugCommand,\n} = instance\n\nexport {\n\tgetLogger,\n\texposeInternal,\n\toverrideHook,\n\taddDebugCommand,\n\n\tglobalThis, // for convenience\n\n\tcreateV1, // for special cases\n}\n\n// types & sub-types, for convenience\nexport * from '@offirmo/universal-debug-api-interface'\n","// base to be directly importable from other modules\n// without a full lib penalty.\n// This a very very specific use case, don't mind.\n\nimport { LogLevel } from '@offirmo/practical-logger-types'\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = 'error'\nexport const DEFAULT_LOGGER_KEY = '' // yes, can be used as a key\n","import { LogLevel } from '@offirmo/practical-logger-types'\n\nexport const LIB = '@offirmo/practical-logger-core'\n\n// level to a numerical value, for ordering and filtering.\n// mnemonic:  100 = 100% = you will see 100% of the logs\n//              1 =   1% = you will see 1% of the logs (obviously the most important)\nexport const LOG_LEVEL_TO_INTEGER: Readonly<{ readonly [k: string]: number }> = {\n\tfatal:    1,\n\temerg:    2,\n\n\talert:   10,\n\tcrit:    20,\n\terror:   30,\n\n\twarning: 40,\n\twarn:    40,\n\n\tnotice:  45,\n\n\tinfo:    50,\n\n\tverbose: 70,\n\tlog:     80,\n\tdebug:   81,\n\n\ttrace:   90,\n\n\tsilly:  100,\n}\n\nexport const ALL_LOG_LEVELS: ReadonlyArray<LogLevel> =\n\tObject.keys(LOG_LEVEL_TO_INTEGER)\n\t\t.map(s => s as LogLevel)\n\t\t.sort((a: LogLevel, b: LogLevel) => LOG_LEVEL_TO_INTEGER[a] - LOG_LEVEL_TO_INTEGER[b])\n\n// rationalization to a clear, human understandable string\n// generated to shave a few bytes\n// not using fromEntries bc not available in node <12\nexport const LOG_LEVEL_TO_HUMAN: Readonly<{ readonly [k: string]: string }> = ALL_LOG_LEVELS.reduce((acc, ll) => {\n\tacc[ll] = ({ em: 'emergency', wa: 'warn'} as any)[ll.slice(0, 1)] || ll\n\treturn acc\n}, {} as any)\n\nexport * from './consts-base'\n","import {\n\tLogDetails,\n} from '@offirmo/practical-logger-types'\n\n\n// TODO externalize?\nexport function looksLikeAnError(x: any): boolean {\n\treturn !!(x?.name && x?.message && x?.stack)\n}\n\n// harmonize\n// also try to recover from incorrect invocations\nexport function normalizeArguments(raw_args: IArguments | any[]): [ string, LogDetails ] {\n\tconst message_parts: string[] = []\n\tlet details: LogDetails = {}\n\tlet err: Error | undefined = undefined\n\n\tArray.from(raw_args)\n\t\t.forEach(arg => {\n\t\t\tif (!arg)\n\t\t\t\treturn\n\n\t\t\t// errors are first class, look for them first\n\t\t\tif (looksLikeAnError(arg)) {\n\t\t\t\tif (!err)\n\t\t\t\t\terr = arg // extract it\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (!err && looksLikeAnError(arg.err)) {\n\t\t\t\terr = arg.err // extract it\n\t\t\t\t// don't return, still stuff to pick\n\t\t\t}\n\n\t\t\tif (typeof arg === 'object') {\n\t\t\t\tdetails = {\n\t\t\t\t\t...details,\n\t\t\t\t\t...arg,\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmessage_parts.push(String(arg))\n\t\t})\n\n\tif (typeof details.message === 'string' && !message_parts.length) {\n\t\tmessage_parts.push(details.message)\n\t\tdelete details.message\n\t}\n\n\tconst message = message_parts.join(' ') || (err as any)?.message || '(no message)'\n\tif (err)\n\t\tdetails.err = err\n\telse\n\t\tdelete details.err // because could be present but not be a correct err type\n\n\treturn [ message, details ]\n}\n\n","import {\n\tLogLevel,\n\tBaseInternalLoggerState,\n\tLogger,\n\tLoggerCreationParams,\n\tLogDetails,\n\tLogPayload,\n\tLogPrimitive,\n\tLogSink,\n} from '@offirmo/practical-logger-types'\n\nimport {\n\tLIB,\n\tALL_LOG_LEVELS,\n\tLOG_LEVEL_TO_INTEGER,\n\tDEFAULT_LOG_LEVEL,\n\tDEFAULT_LOGGER_KEY,\n} from './consts'\n\nimport { normalizeArguments } from './normalize-args'\n\nexport function checkLevel(level: any): asserts level is LogLevel {\n\tif (!ALL_LOG_LEVELS.includes(level))\n\t\tthrow new Error(`[${LIB}] Not a valid log level: \"${level}\"!`)\n}\n\nexport function create(\n\t{\n\t\tname = DEFAULT_LOGGER_KEY,\n\t\tsuggestedLevel = DEFAULT_LOG_LEVEL,\n\t\tforcedLevel,\n\t\tcommonDetails = {},\n\t}: LoggerCreationParams = {},\n\toutputFn: LogSink = console.log,\n): Logger {\n\n\tconst internalState: BaseInternalLoggerState = {\n\t\tname,\n\t\tlevel: forcedLevel || suggestedLevel,\n\t\tcommonDetails: {...commonDetails},\n\t\toutputFn,\n\t}\n\n\tlet levelAsInt = 100 // so far\n\n\tconst logger: Logger = ALL_LOG_LEVELS.reduce(\n\t\t(logger: any, level: LogLevel) => {\n\t\t\tconst primitive: LogPrimitive = function (rawMessage?: string, rawDetails?: LogDetails) {\n\t\t\t\tif (!isLevelEnabled(level)) return\n\n\t\t\t\tconst [ message, details ] = normalizeArguments(arguments)\n\n\t\t\t\tinternalState.outputFn(serializer(level, message, details))\n\t\t\t}\n\n\t\t\tlogger[level] = primitive\n\n\t\t\treturn logger\n\t\t},\n\t\t{\n\t\t\tsetLevel,\n\t\t\tgetLevel,\n\t\t\taddCommonDetails,\n\t\t\tgroup() {},\n\t\t\tgroupCollapsed() {},\n\t\t\tgroupEnd() {},\n\t\t},\n\t)\n\n\tfunction setLevel(level: LogLevel) {\n\t\tcheckLevel(level)\n\n\t\tinternalState.level = level\n\t\tlevelAsInt = LOG_LEVEL_TO_INTEGER[level]\n\t}\n\tsetLevel(getLevel()) // to check it\n\n\tfunction isLevelEnabled(level: LogLevel) {\n\t\tcheckLevel(level)\n\n\t\treturn LOG_LEVEL_TO_INTEGER[level] <= levelAsInt\n\t}\n\n\tfunction getLevel() {\n\t\treturn internalState.level\n\t}\n\n\tfunction addCommonDetails(details: Readonly<LogDetails>): void {\n\t\tif (details.err)\n\t\t\tthrow new Error(`[${LIB}] Can't set reserved property \"err\"!`)\n\n\t\tinternalState.commonDetails = {\n\t\t\t...internalState.commonDetails,\n\t\t\t...details,\n\t\t}\n\t}\n\n\tfunction serializer(level: LogLevel, msg: string, { err, ...details }: Readonly<LogDetails>): LogPayload {\n\t\tconst payload: LogPayload = {\n\t\t\tlevel,\n\t\t\tname,\n\t\t\tmsg,\n\t\t\ttime: +(new Date()), // UTC timestamp\n\t\t\tdetails: {\n\t\t\t\t...internalState.commonDetails,\n\t\t\t\t...details,\n\t\t\t},\n\t\t}\n\t\tif (err)\n\t\t\tpayload.err = err\n\n\t\treturn payload\n\t}\n\n\treturn logger\n}\n","import { create as createLogger } from './core'\nexport { createLogger }\n\nexport * from '@offirmo/practical-logger-types'\n\nexport {\n\tALL_LOG_LEVELS,\n\tLOG_LEVEL_TO_INTEGER,\n\tLOG_LEVEL_TO_HUMAN,\n\tDEFAULT_LOG_LEVEL,\n\tDEFAULT_LOGGER_KEY,\n} from './consts'\n\nexport { checkLevel } from './core'\nexport * from './normalize-args'\n\n","const { ALL_LOG_LEVELS } = require('..')\n\nfunction demo_legacy_console() {\n\tconsole.log('------------↓ For comparison: Legacy console: levels, in order ↓-----------')\n\tconsole.debug('Legacy console > message with level \"debug\"', { level: 'debug', foo: 42 })\n\tconsole.log('Legacy console > message with level \"log\"', { level: 'log', foo: 42 })\n\tconsole.info('Legacy console > message with level \"info\"', { level: 'info', foo: 42 })\n\tconsole.warn('Legacy console > message with level \"warn\"', { level: 'warn', foo: 42 })\n\tconsole.error('Legacy console > message with level \"error\"', { level: 'error', foo: 42 })\n}\n\n\nfunction demo_logger_basic_usage(logger, in_group = true) {\n\tconsole[in_group ? 'group' : 'log']('------------↓ Practical logger demo: example real usage ↓------------')\n\n\tlogger.silly('Hi!')\n\tlogger.trace('App starting...', { version: '1.2.3' })\n\n\tconst bob = {\n\t\tfirstName: 'Bob',\n\t\tlastName: 'Dupont',\n\t\tage: 42,\n\t}\n\n\tlogger.verbose('Current user already logged in', { user: bob })\n\n\tlogger.verbose('Restoring state from cloud…')\n\n\tlogger.warn('Restoration of state is taking more time than expected', { elapsedMs: 3000 })\n\n\tconst err = new Error('Timeout loading state!')\n\terr.httpStatus = 418 // to check that custom props are preserved\n\n\tlogger.error(undefined, err)\n\n\tlogger.info('Reverting to last known local state')\n\n\tlogger.log('Test of a very very long message: \"In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available.\"')\n\n\tlogger.trace('Test of a very very long data:', {\n\t\t'What is Lorem Ipsum?':\n\t\t\t`Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`,\n\t\t'Why do we use it?':\n\t\t\t`It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).`,\n\t\t'Where does it come from?':\n\t\t\t`Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.`,\n\t})\n\n\tif (in_group) console.groupEnd()\n}\n\nfunction demo_logger_levels(logger) {\n\tconsole.log('------------↓ Practical logger demo: all levels, in order ↓------------')\n\t;[...ALL_LOG_LEVELS].reverse().forEach(level =>\n\t\tlogger[level](`message with level \"${level}\"`, { level, foo: 42 }),\n\t)\n\n\t/*\nconsole.groupCollapsed('in group')\nALL_LOG_LEVELS.forEach(level =>\n    logger[level](`msg with level \"${level}\"`)\n)\nconsole.groupEnd()\n*/\n}\n\nfunction demo_group(logger) {\n\tconsole.log('------------↓ logger demo: group ↓------------')\n\n\tlogger.group('level 1 (NOT collapsed)')\n\t\tlogger.log('in level 1')\n\n\t\tlogger.groupCollapsed('level 2a (collapsed)')\n\t\t\tlogger.log('in level 2a')\n\t\tlogger.groupEnd()\n\n\t\tlogger.groupCollapsed('level 2b (collapsed)')\n\t\t\t// no output\n\t\t\tlogger.group('level 3a (NOT collapsed)')\n\t\t\t\t// no output\n\t\t\t\tconsole.assert(true)\n\t\t\tlogger.groupEnd()\n\t\tlogger.groupEnd()\n\n\t\tlogger.groupCollapsed('level 2c (collapsed)')\n\t\t\t// no output\n\t\t\tlogger.warn('warn from level 2c!')\n\t\t\tlogger.error(new Error('error from level 2c!'))\n\t\tlogger.groupEnd()\n\n\t\tlogger.groupCollapsed('level 2d (collapsed)')\n\t\t\tlogger.log('in level 2d')\n\t\t\tlogger.group('level 3b (NOT collapsed)')\n\t\t\t\tlogger.warn('warn from level 3b!')\n\t\t\t\tlogger.error(new Error('error from level 3b!'))\n\t\t\t\tlogger.log('in level 3b')\n\t\t\tlogger.groupEnd()\n\t\t\tlogger.log('in level 2d')\n\t\tlogger.groupEnd()\n\n\t\tlogger.groupCollapsed('level 2e (collapsed)')\n\t\t\tlogger.log('in level 2e')\n\t\t\tconsole.assert(false, 'foo')\n\t\tlogger.groupEnd()\n\n\t\tlogger.log('where am I? (should be in level 1)')\n\tlogger.groupEnd()\n\n\tlogger.groupEnd()\n\tlogger.groupEnd()\n}\n\nfunction demo_incorrect_logger_invocations(logger) {\n\tconst bob = {\n\t\tfirstName: 'Bob',\n\t\tlastName: 'Dupont',\n\t\tage: 42,\n\t}\n\n\tconst more = 'some stuff'\n\n\tconst err = new Error('Timeout loading state!')\n\terr.httpStatus = 418 // to check that custom props are preserved\n\n\tconsole.group('------------↓ logger demo: incorrect invocation (bunyan style) ↓------------')\n\tlogger.info()\n\n\tlogger.info('hi')\n\tlogger.info('hi %s', bob, more)\n\n\tlogger.info({foo: 'bar'}, 'hi')\n\n\tlogger.info(err)\n\tlogger.info(err, 'more on this: %s', more)\n\n\tlogger.info({foo: 'bar', err: err}, 'some msg about this error')\n\tlogger.warn('foo', 'bar', 42)\n\tconsole.groupEnd()\n}\n\nfunction demo_logger_api(getLogger) {\n\tconsole.log('------------↓ logger creation and basic usage ↓------------')\n\tconst root_logger = getLogger({\n\t\tsuggestedLevel: 'silly',\n\t})\n\troot_logger.log('Starting up')\n\n\tconst logger = getLogger({\n\t\tname: 'LibSharedDemo',\n\t\tsuggestedLevel: 'silly',\n\t})\n\n\tdemo_logger_basic_usage(logger)\n\n\tdemo_logger_levels(logger)\n\n\tdemo_group(logger)\n\n\tdemo_incorrect_logger_invocations(logger)\n}\n\nfunction demo_error(logger, in_group = true) {\n\tconsole[in_group ? 'group' : 'log']('------------↓ logger demo: error display ↓------------')\n\n\tfunction foo() {\n\t\tfunction bar() {\n\t\t\tconst err = new Error('Test error!')\n\t\t\terr.statusCode = 1234\n\t\t\terr.details = {\n\t\t\t\thello: 42,\n\t\t\t}\n\n\t\t\tthrow err\n\t\t}\n\t\tbar()\n\t}\n\n\ttry {\n\t\tfoo()\n\t}\n\tcatch (err) {\n\t\tlogger.log(err)\n\t\tlogger.log('message', err)\n\t\tlogger.log('message', { some: 'stuff', err })\n\t\tlogger.error(err)\n\t\tlogger.error('message', err)\n\t\tlogger.error('message', { some: 'stuff', err })\n\t\t//logger.error('message', { some: 'stuff' }, err)\n\t\t//logger.error('message', err, { some: 'stuff' })\n\t\tlogger.error('message', { some: 'stuff' })\n\t}\n\n\tif (in_group) console.groupEnd()\n}\n\nfunction demo_devtools_fonts() {\n\tconsole.group('------------↓ available font styles ↓------------')\n\tconsole.log('default: ABCdef012')\n\n\t;[\n\t\t'-apple-system',\n\t\t'BlinkMacSystemFont',\n\t\t'\"avenir next\"',\n\t\t'avenir',\n\t\t'\"Segoe UI\"',\n\t\t'\"lucida grande\"',\n\t\t'\"helvetica neue\"',\n\t\t'helvetica',\n\t\t'\"Fira Sans\"',\n\t\t'roboto',\n\t\t//'noto',\n\t\t//'\"Droid Sans\"',\n\t\t//'cantarell',\n\t\t//'oxygen',\n\t\t//'ubuntu',\n\t\t//'\"franklin gothic medium\"',\n\t\t//'\"century gothic\"',\n\t\t'\"Liberation Sans\"',\n\t\t'sans-serif',\n\t\t'\"dejavu sans mono\"',\n\t\t'\"Fira Code\"',\n\t\t'Menlo',\n\t\t'Consolas',\n\t\t'\"Lucida Console\"',\n\t\t'\"Courier New\"',\n\t\t'monospace',\n\t].forEach(font => console.log(`%c${font}: ABCdefi012 %cABCdefi012`, `font-family: ${font};`, 'font-family: unset;'))\n\tconsole.groupEnd()\n}\n\nmodule.exports = {\n\tdemo_legacy_console,\n\tdemo_logger_basic_usage,\n\tdemo_logger_levels,\n\tdemo_error,\n\tdemo_group,\n\tdemo_incorrect_logger_invocations,\n\tdemo_logger_api,\n\tdemo_devtools_fonts,\n}\n","import {\n\tgetLogger,\n\toverrideHook,\n\texposeInternal,\n\taddDebugCommand,\n} from '@offirmo/universal-debug-api-placeholder'\n\n\nimport {\n\tdemo_logger_basic_usage,\n\tdemo_logger_levels,\n\tdemo_error,\n\tdemo_group,\n\tdemo_logger_api,\n\n\tdemo_incorrect_logger_invocations,\n\tdemo_legacy_console,\n\tdemo_devtools_fonts,\n} from '@offirmo/practical-logger-core/doc/shared-demo'\n\n//demo_legacy_console()\n\nconst logger = getLogger({\n\tsuggestedLevel: 'warn',\n})\nlogger.log('hello from logger!')\n\nconst demoLogger = getLogger({\n\tname: 'Demo',\n\tsuggestedLevel: 'silly',\n})\ndemoLogger.log('hello from demoLogger!', { bar: 42, baz: 33 })\n\nconst state = {\n\ttarget: undefined as undefined | 'browser' | 'node' | 'module',\n\tlast_demo_launched: null as null | string,\n}\n\nconst target_envs = [\n\t'browser',\n\t'node',\n\t'module'\n]\n\nconst demos = {\n\t'all-levels': (l) => { demo_legacy_console(); demo_logger_levels(l) },\n\t'basic': (l) => demo_logger_basic_usage(l, false),\n\t'error': (l) => demo_error(l, false),\n\t'groups': demo_group,\n]\n\nfunction run_demo(demo_id: string) {\n\tdemos[demo_id](demoLogger)\n\tstate.last_demo_launched = demo_id\n}\n\nfunction render() {\n\tObject.keys(demos).forEach(demo_id => {\n\t\tdocument.getElementById(`demo-${demo_id}`).removeAttribute('open')\n\t})\n\tif (state.last_demo_launched) {\n\t\tdocument.getElementById(`demo-${state.last_demo_launched}`).setAttribute(\"open\", \"true\")\n\t}\n\n\ttarget_envs.forEach(demo_id => {\n\t})\n}\nrender()\n\n/// event delegation\ndocument.addEventListener('click', event => {\n\tresolution: {\n\t\ttry {\n\t\t\tconst { target: clickedElement } = event\n\t\t\tif (!clickedElement)\n\t\t\t\tthrow new Error('click event has no target!')\n\n\t\t\tlet demo_id = Object.keys(demos).find(id => clickedElement.matches(`#btn-demo-${id}`))\n\t\t\tif (demo_id) {\n\t\t\t\trun_demo(demo_id)\n\t\t\t\tbreak resolution\n\t\t\t}\n\n\t\t\tlogger.trace('Event delegation: unknown click target:', { clickedElement })\n\t\t} catch (err) {\n\t\t\tlogger.error('processingClick', { err })\n\t\t}\n\t}\n\n\trender()\n})\n"]}