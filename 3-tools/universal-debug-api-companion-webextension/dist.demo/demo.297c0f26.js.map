{"version":3,"sources":["../../node_modules/@offirmo/universal-debug-api-placeholder/node_modules/@offirmo/globalthis-ponyfill/src/index.ts","../../node_modules/@offirmo/universal-debug-api-placeholder/node_modules/@offirmo/practical-logger-minimal-noop/node_modules/@offirmo/practical-logger-types/src/index.ts","../../node_modules/@offirmo/universal-debug-api-placeholder/node_modules/@offirmo/practical-logger-minimal-noop/src/index.ts","../../node_modules/@offirmo/universal-debug-api-placeholder/src/v1.ts","../../node_modules/@offirmo/universal-debug-api-placeholder/node_modules/@offirmo/universal-debug-api-interface/node_modules/@offirmo/practical-logger-types/src/index.ts","../../node_modules/@offirmo/universal-debug-api-placeholder/node_modules/@offirmo/universal-debug-api-interface/src/v1.ts","../../node_modules/@offirmo/universal-debug-api-placeholder/node_modules/@offirmo/universal-debug-api-interface/src/index.ts","../../node_modules/@offirmo/universal-debug-api-placeholder/src/index.ts","../../src/consts-base.ts","../../src/consts.ts","../../src/normalize-args.ts","../../src/core.ts","../../src/index.ts","../../../../1-foundation/practical-logger-core/doc/shared-demo.js","index.js"],"names":["ALL_LOG_LEVELS","require","demo_legacy_console","console","log","debug","level","foo","info","warn","error","demo_logger_basic_usage","logger","in_group","silly","trace","version","bob","firstName","lastName","age","verbose","user","elapsedMs","err","Error","httpStatus","undefined","groupEnd","demo_logger_levels","reverse","forEach","demo_group","group","groupCollapsed","demo_incorrect_logger_invocations","more","demo_logger_api","getLogger","root_logger","suggestedLevel","name","demo_error","bar","statusCode","details","hello","some","demo_devtools_fonts","font","module","exports","LIB","Date","now","foo_js","window","foo_ls","localStorage","getItem","_debug","v1","addDebugCommand","render","is_feature_x_on","span_f","document","getElementById","innerText","server","link","href","forced_variation","variation","span_x","custom","span_c","String","setInterval","setTimeout"],"mappings":"cICA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AJDA;;;;;AAEA,IAAM,UAAU,GAAwB,EAAxC;;AAEA,SAAgB,aAAhB,GAA6B;AAE5B;AACA,MAAI,OAAO,UAAP,KAAsB,WAA1B,EAAuC,OAAO,UAAP,CAHX,CAK5B;AACA;;AACA,MAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC,OAAO,MAAP,CAPP,CAS5B;;AACA,MAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC,OAAO,IAAP,CAVL,CAY5B;;AACA,MAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC,OAAO,MAAP;AAEnC,MAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC,OAAO,IAAP;AAEjC,SAAO,UAAP,CAjB4B,CAiBV;AAClB;;AAlBD,OAAA,CAAA,aAAA,GAAA,aAAA;;cCHA;;;;;;;;;;;;ACDA,IAAA,wBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAoCC,OAAA,CAAA,MAAA,GApCQ,wBAAA,CAAA,MAoCR;AACA,OAAA,CAAA,oBAAA,GArCgB,wBAAA,CAAA,oBAqChB;;AAlCD,IAAM,KAAK,GAAG,YAAA,CAAQ,CAAtB;;AAEA,IAAM,YAAY,GAAW;AAC5B,EAAA,QAAQ,EAAE,KADkB;AAE5B,EAAA,QAAQ,EAAE,YAAA;AAAM,WAAA,OAAA;AAAO,GAFK;AAI5B,EAAA,gBAAgB,EAAE,KAJU;AAM5B,EAAA,KAAK,EAAE,KANqB;AAO5B,EAAA,KAAK,EAAE,KAPqB;AAQ5B,EAAA,KAAK,EAAE,KARqB;AAS5B,EAAA,IAAI,EAAE,KATsB;AAU5B,EAAA,KAAK,EAAE,KAVqB;AAW5B,EAAA,OAAO,EAAE,KAXmB;AAY5B,EAAA,IAAI,EAAE,KAZsB;AAa5B,EAAA,MAAM,EAAE,KAboB;AAc5B,EAAA,IAAI,EAAE,KAdsB;AAe5B,EAAA,OAAO,EAAE,KAfmB;AAgB5B,EAAA,GAAG,EAAE,KAhBuB;AAiB5B,EAAA,KAAK,EAAE,KAjBqB;AAkB5B,EAAA,KAAK,EAAE,KAlBqB;AAmB5B,EAAA,KAAK,EAAE,KAnBqB;AAqB5B,EAAA,KAAK,EAAE,KArBqB;AAsB5B,EAAA,cAAc,EAAE,KAtBY;AAuB5B,EAAA,QAAQ,EAAE;AAvBkB,CAA7B;;AA0BA,SAAS,YAAT,CAAsB,CAAtB,EAA6B;AAC5B,SAAO,YAAP;AACA;;AAKA,OAAA,CAAA,YAAA,GAAA,YAAA;;;;;;;;ACrCD,IAAA,+BAAA,GAAA,OAAA,CAAA,wCAAA,CAAA;;AAGA,SAAgB,MAAhB,GAAsB;AACrB,MAAM,KAAK,GAAG,YAAA,CAAQ,CAAtB;;AACA,MAAM,YAAY,GAAG,+BAAA,CAAA,YAAA,EAArB;AAEA,SAAO;AACN,IAAA,SAAS,EAAE,YAAA;AAAM,aAAA,YAAA;AAAY,KADvB;AAEN,IAAA,cAAc,EAAE,KAFV;AAGN,IAAA,YAAY,EAAE,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aAAA,CAAA;AAAC,KAHnB;AAIN,IAAA,eAAe,EAAE;AAJX,GAAP;AAMA;;AAVD,OAAA,CAAA,MAAA,GAAA,MAAA;;;;;;;;AEJA,IAAA,wBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAkBC,OAAA,CAAA,MAAA,GAlBQ,wBAAA,CAAA,MAkBR;AACA,OAAA,CAAA,oBAAA,GAnBgB,wBAAA,CAAA,oBAmBhB;;;;;;;;ACnBD,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AASC,OAAA,CAAA,UAAA,GAToB,IAAA,CAAA,QASpB,EAOD;;AACA,IAAA,wBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAAS,OAAA,CAAA,MAAA,GAAA,wBAAA,CAAA,MAAA;AAAQ,OAAA,CAAA,oBAAA,GAAA,wBAAA,CAAA,oBAAA;;;;;;;;;;;;ACjBjB,IAAA,qBAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AAGA,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AA2BC,OAAA,CAAA,QAAA,GA3BkB,IAAA,CAAA,MA2BlB,EAzBD;;AACA,IAAM,UAAU,GAAG,qBAAA,CAAA,aAAA,EAAnB;AAsBC,OAAA,CAAA,UAAA,GAAA,UAAA;AArBD,UAAU,CAAC,MAAX,GAAoB,UAAU,CAAC,MAAX,IAAqB,EAAzC,EAEA;;AACA,UAAU,CAAC,MAAX,CAAkB,EAAlB,GAAuB,UAAU,CAAC,MAAX,CAAkB,EAAlB,IAAwB,IAAA,CAAA,MAAA,EAA/C,EAEA;;AACA,IAAM,QAAQ,GAAa,UAAU,CAAC,MAAX,CAAkB,EAA7C;AAGC,IAAA,SAAA,GAAA,QAAA,CAAA,SAAA;AAAA,IACA,cAAA,GAAA,QAAA,CAAA,cADA;AAAA,IAEA,YAAA,GAAA,QAAA,CAAA,YAFA;AAAA,IAGA,eAAA,GAAA,QAAA,CAAA,eAHA;AAOA,OAAA,CAAA,SAAA,GAAA,SAAA;AACA,OAAA,CAAA,cAAA,GAAA,cAAA;AACA,OAAA,CAAA,YAAA,GAAA,YAAA;AACA,OAAA,CAAA,eAAA,GAAA,eAAA,EAOD;;AACA,QAAA,CAAA,OAAA,CAAA,wCAAA,CAAA,CAAA;;;;;;;;AClCA;AACA;AACA;AAIO,MAAM,iBAAiB,GAAa,OAApC;;AACA,MAAM,kBAAkB,GAAG,EAA3B,EAA8B;;;;;;;;;;;;;;;;;ACqCrC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CO,MAAM,GAAG,GAAG,gCAAZ,EAEP;AACA;AACA;;;AACO,MAAM,oBAAoB,GAAsC;AACtE,EAAA,KAAK,EAAK,CAD4D;AAEtE,EAAA,KAAK,EAAK,CAF4D;AAItE,EAAA,KAAK,EAAI,EAJ6D;AAKtE,EAAA,IAAI,EAAK,EAL6D;AAMtE,EAAA,KAAK,EAAI,EAN6D;AAQtE,EAAA,OAAO,EAAE,EAR6D;AAStE,EAAA,IAAI,EAAK,EAT6D;AAWtE,EAAA,MAAM,EAAG,EAX6D;AAatE,EAAA,IAAI,EAAK,EAb6D;AAetE,EAAA,OAAO,EAAE,EAf6D;AAgBtE,EAAA,GAAG,EAAM,EAhB6D;AAiBtE,EAAA,KAAK,EAAI,EAjB6D;AAmBtE,EAAA,KAAK,EAAI,EAnB6D;AAqBtE,EAAA,KAAK,EAAG;AArB8D,CAAhE;;AAwBA,MAAM,cAAc,GAC1B,MAAM,CAAC,IAAP,CAAY,oBAAZ,EACE,GADF,CACM,CAAC,IAAI,CADX,EAEE,IAFF,CAEO,CAAC,CAAD,EAAc,CAAd,KAA8B,oBAAoB,CAAC,CAAD,CAApB,GAA0B,oBAAoB,CAAC,CAAD,CAFnF,CADM,EAKP;AACA;AACA;;;AACO,MAAM,kBAAkB,GAAsC,cAAc,CAAC,MAAf,CAAsB,CAAC,GAAD,EAAM,EAAN,KAAY;AACtG,EAAA,GAAG,CAAC,EAAD,CAAH,GAAW;AAAE,IAAA,EAAE,EAAE,WAAN;AAAmB,IAAA,EAAE,EAAE;AAAvB,IAAuC,EAAE,CAAC,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAvC,KAA0D,EAArE;AACA,SAAO,GAAP;AACA,CAHoE,EAGlE,EAHkE,CAA9D;;;;;;;;;;;AClCD,SAAU,gBAAV,CAA2B,CAA3B,EAAiC;;;AACtC,SAAO,CAAC,EAAE,CAAA,CAAA,EAAA,GAAA,CAAA,MAAC,IAAD,IAAC,EAAA,KAAA,KAAA,CAAD,GAAC,KAAA,CAAD,GAAC,EAAA,CAAE,IAAH,MAAO,CAAA,EAAA,GAAI,CAAJ,MAAK,IAAL,IAAK,EAAA,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAK,EAAA,CAAE,OAAd,MAAqB,CAAA,EAAA,GAAI,CAAJ,MAAK,IAAL,IAAK,EAAA,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAK,EAAA,CAAE,KAA5B,CAAF,CAAR;AACA,EAED;AACA;;;AACM,SAAU,kBAAV,CAA6B,QAA7B,EAAiD;;;AACtD,QAAM,aAAa,GAAa,EAAhC;AACA,MAAI,OAAO,GAAe,EAA1B;AACA,MAAI,GAAG,GAAsB,SAA7B;AAEA,EAAA,KAAK,CAAC,IAAN,CAAW,QAAX,EACE,OADF,CACU,GAAG,IAAG;AACd,QAAI,CAAC,GAAL,EACC,OAFa,CAId;;AACA,QAAI,gBAAgB,CAAC,GAAD,CAApB,EAA2B;AAC1B,UAAI,CAAC,GAAL,EACC,GAAG,GAAG,GAAN,CAFyB,CAEf;;AACX;AACA;;AACD,QAAI,CAAC,GAAD,IAAQ,gBAAgB,CAAC,GAAG,CAAC,GAAL,CAA5B,EAAuC;AACtC,MAAA,GAAG,GAAG,GAAG,CAAC,GAAV,CADsC,CACxB;AACd;AACA;;AAED,QAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC5B,MAAA,OAAO,GAAG,EACT,GAAG,OADM;AAET,WAAG;AAFM,OAAV;AAKA;AACA;;AAED,IAAA,aAAa,CAAC,IAAd,CAAmB,MAAM,CAAC,GAAD,CAAzB;AACA,GA1BF;;AA4BA,MAAI,OAAO,OAAO,CAAC,OAAf,KAA2B,QAA3B,IAAuC,CAAC,aAAa,CAAC,MAA1D,EAAkE;AACjE,IAAA,aAAa,CAAC,IAAd,CAAmB,OAAO,CAAC,OAA3B;AACA,WAAO,OAAO,CAAC,OAAf;AACA;;AAED,QAAM,OAAO,GAAG,aAAa,CAAC,IAAd,CAAmB,GAAnB,MAAuB,CAAA,EAAA,GAAK,GAAL,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,OAAzC,KAAoD,cAApE;AACA,MAAI,GAAJ,EACC,OAAO,CAAC,GAAR,GAAc,GAAd,CADD,KAGC,OAAO,OAAO,CAAC,GAAf,CA1CqD,CA0ClC;;AAEpB,SAAO,CAAE,OAAF,EAAW,OAAX,CAAP;AACA;;;;;;;;;;AC7CD;;AAQA;;AAEM,SAAU,UAAV,CAAqB,KAArB,EAA+B;AACpC,MAAI,CAAC,uBAAe,QAAf,CAAwB,KAAxB,CAAL,EACC,MAAM,IAAI,KAAJ,CAAU,IAAI,WAAG,6BAA6B,KAAK,IAAnD,CAAN;AACD;;AAEK,SAAU,MAAV,CACL;AACC,EAAA,IAAI,GAAG,0BADR;AAEC,EAAA,cAAc,GAAG,yBAFlB;AAGC,EAAA,WAHD;AAIC,EAAA,aAAa,GAAG;AAJjB,IAK0B,EANrB,EAOL,QAAA,GAAoB,OAAO,CAAC,GAPvB,EAO0B;AAG/B,QAAM,aAAa,GAA4B;AAC9C,IAAA,IAD8C;AAE9C,IAAA,KAAK,EAAE,WAAW,IAAI,cAFwB;AAG9C,IAAA,aAAa,EAAE,EAAC,GAAG;AAAJ,KAH+B;AAI9C,IAAA;AAJ8C,GAA/C;AAOA,MAAI,UAAU,GAAG,GAAjB,CAV+B,CAUV;;AAErB,QAAM,MAAM,GAAW,uBAAe,MAAf,CACtB,CAAC,MAAD,EAAc,KAAd,KAAiC;AAChC,UAAM,SAAS,GAAiB,UAAU,UAAV,EAA+B,UAA/B,EAAsD;AACrF,UAAI,CAAC,cAAc,CAAC,KAAD,CAAnB,EAA4B;AAE5B,YAAM,CAAE,OAAF,EAAW,OAAX,IAAuB,uCAAmB,SAAnB,CAA7B;AAEA,MAAA,aAAa,CAAC,QAAd,CAAuB,UAAU,CAAC,KAAD,EAAQ,OAAR,EAAiB,OAAjB,CAAjC;AACA,KAND;;AAQA,IAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,SAAhB;AAEA,WAAO,MAAP;AACA,GAbqB,EActB;AACC,IAAA,QADD;AAEC,IAAA,QAFD;AAGC,IAAA,gBAHD;;AAIC,IAAA,KAAK,GAAA,CAAK,CAJX;;AAKC,IAAA,cAAc,GAAA,CAAK,CALpB;;AAMC,IAAA,QAAQ,GAAA,CAAK;;AANd,GAdsB,CAAvB;;AAwBA,WAAS,QAAT,CAAkB,KAAlB,EAAiC;AAChC,IAAA,UAAU,CAAC,KAAD,CAAV;AAEA,IAAA,aAAa,CAAC,KAAd,GAAsB,KAAtB;AACA,IAAA,UAAU,GAAG,6BAAqB,KAArB,CAAb;AACA;;AACD,EAAA,QAAQ,CAAC,QAAQ,EAAT,CAAR,CA1C+B,CA0CV;;AAErB,WAAS,cAAT,CAAwB,KAAxB,EAAuC;AACtC,IAAA,UAAU,CAAC,KAAD,CAAV;AAEA,WAAO,6BAAqB,KAArB,KAA+B,UAAtC;AACA;;AAED,WAAS,QAAT,GAAiB;AAChB,WAAO,aAAa,CAAC,KAArB;AACA;;AAED,WAAS,gBAAT,CAA0B,OAA1B,EAAuD;AACtD,QAAI,OAAO,CAAC,GAAZ,EACC,MAAM,IAAI,KAAJ,CAAU,IAAI,WAAG,sCAAjB,CAAN;AAED,IAAA,aAAa,CAAC,aAAd,GAA8B,EAC7B,GAAG,aAAa,CAAC,aADY;AAE7B,SAAG;AAF0B,KAA9B;AAIA;;AAED,WAAS,UAAT,CAAoB,KAApB,EAAqC,GAArC,EAAkD;AAAE,IAAA,GAAF;AAAO,OAAG;AAAV,GAAlD,EAA2F;AAC1F,UAAM,OAAO,GAAe;AAC3B,MAAA,KAD2B;AAE3B,MAAA,IAF2B;AAG3B,MAAA,GAH2B;AAI3B,MAAA,IAAI,EAAE,CAAE,IAAI,IAAJ,EAJmB;AAK3B,MAAA,OAAO,EAAE,EACR,GAAG,aAAa,CAAC,aADT;AAER,WAAG;AAFK;AALkB,KAA5B;AAUA,QAAI,GAAJ,EACC,OAAO,CAAC,GAAR,GAAc,GAAd;AAED,WAAO,OAAP;AACA;;AAED,SAAO,MAAP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnHD;;AAKA;;AASA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;ACdA,MAAM;AAAEA,EAAAA;AAAF,IAAqBC,OAAO,CAAC,IAAD,CAAlC;;AAEA,SAASC,mBAAT,GAA+B;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,6EAAZ;AACAD,EAAAA,OAAO,CAACE,KAAR,CAAc,6CAAd,EAA6D;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAA7D;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyD;AAAEE,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAAzD;AACAJ,EAAAA,OAAO,CAACK,IAAR,CAAa,4CAAb,EAA2D;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAA3D;AACAJ,EAAAA,OAAO,CAACM,IAAR,CAAa,4CAAb,EAA2D;AAAEH,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAA3D;AACAJ,EAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6D;AAAEJ,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAA7D;AACA;;AAGD,SAASI,uBAAT,CAAiCC,MAAjC,EAAyCC,QAAQ,GAAG,IAApD,EAA0D;AACzDV,EAAAA,OAAO,CAACU,QAAQ,GAAG,OAAH,GAAa,KAAtB,CAAP,CAAoC,uEAApC;AAEAD,EAAAA,MAAM,CAACE,KAAP,CAAa,KAAb;AACAF,EAAAA,MAAM,CAACG,KAAP,CAAa,iBAAb,EAAgC;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAhC;AAEA,QAAMC,GAAG,GAAG;AACXC,IAAAA,SAAS,EAAE,KADA;AAEXC,IAAAA,QAAQ,EAAE,QAFC;AAGXC,IAAAA,GAAG,EAAE;AAHM,GAAZ;AAMAR,EAAAA,MAAM,CAACS,OAAP,CAAe,gCAAf,EAAiD;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAjD;AAEAL,EAAAA,MAAM,CAACS,OAAP,CAAe,6BAAf;AAEAT,EAAAA,MAAM,CAACH,IAAP,CAAY,wDAAZ,EAAsE;AAAEc,IAAAA,SAAS,EAAE;AAAb,GAAtE;AAEA,QAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAU,wBAAV,CAAZ;AACAD,EAAAA,GAAG,CAACE,UAAJ,GAAiB,GAAjB,CAnByD,CAmBpC;;AAErBd,EAAAA,MAAM,CAACF,KAAP,CAAaiB,SAAb,EAAwBH,GAAxB;AAEAZ,EAAAA,MAAM,CAACJ,IAAP,CAAY,qCAAZ;AAEA,MAAIK,QAAJ,EAAcV,OAAO,CAACyB,QAAR;AACd;;AAED,SAASC,kBAAT,CAA4BjB,MAA5B,EAAoC;AACnCT,EAAAA,OAAO,CAACC,GAAR,CAAY,yEAAZ;AACC,GAAC,GAAGJ,cAAJ,EAAoB8B,OAApB,GAA8BC,OAA9B,CAAsCzB,KAAK,IAC3CM,MAAM,CAACN,KAAD,CAAN,CAAe,uBAAsBA,KAAM,GAA3C,EAA+C;AAAEA,IAAAA,KAAF;AAASC,IAAAA,GAAG,EAAE;AAAd,GAA/C,CADA;AAID;;;;;;;AAOA;;AAED,SAASyB,UAAT,CAAoBpB,MAApB,EAA4B;AAC3BT,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AAEAQ,EAAAA,MAAM,CAACqB,KAAP,CAAa,yBAAb;AACCrB,EAAAA,MAAM,CAACR,GAAP,CAAW,YAAX;AAEAQ,EAAAA,MAAM,CAACsB,cAAP,CAAsB,sBAAtB;AACCtB,EAAAA,MAAM,CAACR,GAAP,CAAW,aAAX;AACDQ,EAAAA,MAAM,CAACgB,QAAP;AAEAhB,EAAAA,MAAM,CAACsB,cAAP,CAAsB,sBAAtB,EAV0B,CAWzB;;AACAtB,EAAAA,MAAM,CAACqB,KAAP,CAAa,0BAAb,EAZyB,CAaxB;;AACDrB,EAAAA,MAAM,CAACgB,QAAP;AACDhB,EAAAA,MAAM,CAACgB,QAAP;AAEAhB,EAAAA,MAAM,CAACsB,cAAP,CAAsB,sBAAtB,EAjB0B,CAkBzB;;AACAtB,EAAAA,MAAM,CAACH,IAAP,CAAY,qBAAZ;AACAG,EAAAA,MAAM,CAACF,KAAP,CAAa,IAAIe,KAAJ,CAAU,sBAAV,CAAb;AACDb,EAAAA,MAAM,CAACgB,QAAP;AAEAhB,EAAAA,MAAM,CAACsB,cAAP,CAAsB,sBAAtB;AACCtB,EAAAA,MAAM,CAACR,GAAP,CAAW,aAAX;AACAQ,EAAAA,MAAM,CAACqB,KAAP,CAAa,0BAAb;AACCrB,EAAAA,MAAM,CAACH,IAAP,CAAY,qBAAZ;AACAG,EAAAA,MAAM,CAACF,KAAP,CAAa,IAAIe,KAAJ,CAAU,sBAAV,CAAb;AACAb,EAAAA,MAAM,CAACR,GAAP,CAAW,aAAX;AACDQ,EAAAA,MAAM,CAACgB,QAAP;AACAhB,EAAAA,MAAM,CAACR,GAAP,CAAW,aAAX;AACDQ,EAAAA,MAAM,CAACgB,QAAP;AAEAhB,EAAAA,MAAM,CAACR,GAAP,CAAW,oCAAX;AACDQ,EAAAA,MAAM,CAACgB,QAAP;AAEAhB,EAAAA,MAAM,CAACgB,QAAP;AACAhB,EAAAA,MAAM,CAACgB,QAAP;AACA;;AAED,SAASO,iCAAT,CAA2CvB,MAA3C,EAAmD;AAClD,QAAMK,GAAG,GAAG;AACXC,IAAAA,SAAS,EAAE,KADA;AAEXC,IAAAA,QAAQ,EAAE,QAFC;AAGXC,IAAAA,GAAG,EAAE;AAHM,GAAZ;AAMA,QAAMgB,IAAI,GAAG,YAAb;AAEA,QAAMZ,GAAG,GAAG,IAAIC,KAAJ,CAAU,wBAAV,CAAZ;AACAD,EAAAA,GAAG,CAACE,UAAJ,GAAiB,GAAjB,CAVkD,CAU7B;;AAErBvB,EAAAA,OAAO,CAAC8B,KAAR,CAAc,8EAAd;AACArB,EAAAA,MAAM,CAACJ,IAAP;AAEAI,EAAAA,MAAM,CAACJ,IAAP,CAAY,IAAZ;AACAI,EAAAA,MAAM,CAACJ,IAAP,CAAY,OAAZ,EAAqBS,GAArB,EAA0BmB,IAA1B;AAEAxB,EAAAA,MAAM,CAACJ,IAAP,CAAY;AAACD,IAAAA,GAAG,EAAE;AAAN,GAAZ,EAA0B,IAA1B;AAEAK,EAAAA,MAAM,CAACJ,IAAP,CAAYgB,GAAZ;AACAZ,EAAAA,MAAM,CAACJ,IAAP,CAAYgB,GAAZ,EAAiB,kBAAjB,EAAqCY,IAArC;AAEAxB,EAAAA,MAAM,CAACJ,IAAP,CAAY;AAACD,IAAAA,GAAG,EAAE,KAAN;AAAaiB,IAAAA,GAAG,EAAEA;AAAlB,GAAZ,EAAoC,2BAApC;AACAZ,EAAAA,MAAM,CAACH,IAAP,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,EAA1B;AACAN,EAAAA,OAAO,CAACyB,QAAR;AACA;;AAED,SAASS,eAAT,CAAyBC,SAAzB,EAAoC;AACnCnC,EAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ;AACA,QAAMmC,WAAW,GAAGD,SAAS,CAAC;AAC7BE,IAAAA,cAAc,EAAE;AADa,GAAD,CAA7B;AAGAD,EAAAA,WAAW,CAACnC,GAAZ,CAAgB,aAAhB;AAEA,QAAMQ,MAAM,GAAG0B,SAAS,CAAC;AACxBG,IAAAA,IAAI,EAAE,aADkB;AAExBD,IAAAA,cAAc,EAAE;AAFQ,GAAD,CAAxB;AAKA7B,EAAAA,uBAAuB,CAACC,MAAD,CAAvB;AAEAiB,EAAAA,kBAAkB,CAACjB,MAAD,CAAlB;AAEAoB,EAAAA,UAAU,CAACpB,MAAD,CAAV;AAEAuB,EAAAA,iCAAiC,CAACvB,MAAD,CAAjC;AACA;;AAED,SAAS8B,UAAT,CAAoB9B,MAApB,EAA4BC,QAAQ,GAAG,IAAvC,EAA6C;AAC5CV,EAAAA,OAAO,CAACU,QAAQ,GAAG,OAAH,GAAa,KAAtB,CAAP,CAAoC,wDAApC;;AAEA,WAASN,GAAT,GAAe;AACd,aAASoC,GAAT,GAAe;AACd,YAAMnB,GAAG,GAAG,IAAIC,KAAJ,CAAU,OAAV,CAAZ;AACAD,MAAAA,GAAG,CAACoB,UAAJ,GAAiB,IAAjB;AACApB,MAAAA,GAAG,CAACqB,OAAJ,GAAc;AACbC,QAAAA,KAAK,EAAE;AADM,OAAd;AAIA,YAAMtB,GAAN;AACA;;AACDmB,IAAAA,GAAG;AACH;;AAED,MAAI;AACHpC,IAAAA,GAAG;AACH,GAFD,CAGA,OAAOiB,GAAP,EAAY;AACXZ,IAAAA,MAAM,CAACR,GAAP,CAAWoB,GAAX;AACAZ,IAAAA,MAAM,CAACR,GAAP,CAAW,SAAX,EAAsBoB,GAAtB;AACAZ,IAAAA,MAAM,CAACR,GAAP,CAAW,SAAX,EAAsB;AAAE2C,MAAAA,IAAI,EAAE,OAAR;AAAiBvB,MAAAA;AAAjB,KAAtB;AACAZ,IAAAA,MAAM,CAACF,KAAP,CAAac,GAAb;AACAZ,IAAAA,MAAM,CAACF,KAAP,CAAa,SAAb,EAAwBc,GAAxB;AACAZ,IAAAA,MAAM,CAACF,KAAP,CAAa,SAAb,EAAwB;AAAEqC,MAAAA,IAAI,EAAE,OAAR;AAAiBvB,MAAAA;AAAjB,KAAxB,EANW,CAOX;AACA;;AACAZ,IAAAA,MAAM,CAACF,KAAP,CAAa,SAAb,EAAwB;AAAEqC,MAAAA,IAAI,EAAE;AAAR,KAAxB;AACA;;AAED,MAAIlC,QAAJ,EAAcV,OAAO,CAACyB,QAAR;AACd;;AAED,SAASoB,mBAAT,GAA+B;AAC9B7C,EAAAA,OAAO,CAAC8B,KAAR,CAAc,mDAAd;AACA9B,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEC,GACA,eADA,EAEA,oBAFA,EAGA,eAHA,EAIA,QAJA,EAKA,YALA,EAMA,iBANA,EAOA,kBAPA,EAQA,WARA,EASA,aATA,EAUA,QAVA,EAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAlBA,EAmBA,YAnBA,EAoBA,oBApBA,EAqBA,aArBA,EAsBA,OAtBA,EAuBA,UAvBA,EAwBA,kBAxBA,EAyBA,eAzBA,EA0BA,WA1BA,EA2BC2B,OA3BD,CA2BSkB,IAAI,IAAI9C,OAAO,CAACC,GAAR,CAAa,KAAI6C,IAAK,2BAAtB,EAAmD,gBAAeA,IAAK,GAAvE,EAA2E,qBAA3E,CA3BjB;AA4BD9C,EAAAA,OAAO,CAACyB,QAAR;AACA;;AAEDsB,MAAM,CAACC,OAAP,GAAiB;AAChBjD,EAAAA,mBADgB;AAEhBS,EAAAA,uBAFgB;AAGhBkB,EAAAA,kBAHgB;AAIhBa,EAAAA,UAJgB;AAKhBV,EAAAA,UALgB;AAMhBG,EAAAA,iCANgB;AAOhBE,EAAAA,eAPgB;AAQhBW,EAAAA;AARgB,CAAjB;;;;ACnNA;;AAQA;;AAVA;AACA;AAoBA,MAAMI,GAAG,GAAG,qBAAZ;AAGAjD,OAAO,CAACM,IAAR,CAAc,IAAG2C,GAAI,IAAG,CAACC,IAAI,CAACC,GAAL,EAAW,yBAApC,EAA8D;AAC7DC,EAAAA,MAAM,EAAEC,MAAM,CAACjD,GAD8C;AAE7DkD,EAAAA,MAAM,EAAE,CAAC,MAAM;AACd,QAAI;AACH;AACA,aAAOC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAP;AACA,KAHD,CAIA,MAAM;AAAE;AAAc;AACtB,GANO,GAFqD;AAS7DC,EAAAA;AAT6D,CAA9D,GAYA;;AACA,MAAMhD,MAAM,GAAG,8CAAf;AACAA,MAAM,CAACJ,IAAP,CAAY,yBAAZ;;AAEA,IAAI,KAAJ,EAAW;AACV,sCAAmBI,MAAnB;AACA;;AAEDgD,MAAM,CAACC,EAAP,CAAUC,eAAV,CAA0B,OAA1B,EAAmC,MAAM;AACxC3D,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,CAFD;;AAIA,SAAS2D,MAAT,GAAkB;AACjB,QAAMC,eAAe,GAAG,gDAAa,eAAb,EAA8B,KAA9B,CAAxB;AACA,QAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAf;AACAF,EAAAA,MAAM,CAACG,SAAP,GAAmBJ,eAAe,GAAG,GAAH,GAAS,GAA3C;AAEA,QAAMK,MAAM,GAAG,gDAAa,YAAb,EAA2B,iCAA3B,CAAf;AACA,QAAMC,IAAI,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAb;AACAG,EAAAA,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACF,SAAL,GAAiBC,MAA7B;AAEA,QAAMG,gBAAgB,GAAG,gDAAa,mBAAb,EAAkC7C,SAAlC,CAAzB;AACA,QAAM8C,SAAS,GAAGD,gBAAgB,IAAId,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB,IAAyD,cAA3E;AACA,QAAMe,MAAM,GAAGR,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAf;AACAO,EAAAA,MAAM,CAACN,SAAP,GAAmBK,SAAnB;AAEA,QAAME,MAAM,GAAG,gDAAa,QAAb,EAAuBhD,SAAvB,CAAf;AACA,QAAMiD,MAAM,GAAGV,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACAS,EAAAA,MAAM,CAACR,SAAP,GAAmBS,MAAM,CAACF,MAAD,CAAzB;AACA;;AACDG,WAAW,CAACf,MAAD,EAAS,IAAT,CAAX;AACAgB,UAAU,CAAChB,MAAD,EAAS,CAAT,CAAV,EAAsB;AAEtB;;AAEA;;;;;;;;;;AASA","file":"demo.297c0f26.js","sourceRoot":"../doc/demo","sourcesContent":["/* global globalThis, self, window, global */\n\nconst lastResort: { [k:string]: any } = {}\n\nexport function getGlobalThis(this: any): { [k:string]: any } {\n\n\t// @ts-ignore\n\tif (typeof globalThis !== 'undefined') return globalThis\n\n\t// check node first https://github.com/ljharb/globalThis/issues/2\n\t// @ts-ignore\n\tif (typeof global !== 'undefined') return global\n\n\t// @ts-ignore\n\tif (typeof self !== 'undefined') return self\n\n\t// @ts-ignore\n\tif (typeof window !== 'undefined') return window\n\n\tif (typeof this !== 'undefined') return this\n\n\treturn lastResort // should never happen\n}\n","\n//////////// Public interface (for logger usage) ////////////\n\n// List of all known logging primitives, in order of criticity\n// https://docs.google.com/spreadsheets/d/1Bc32plQTswNdCqXS99deB0n7Te7FfD7uepGAOOlPbvY/edit?usp=sharing\nexport type LogLevel =\n\t  'fatal'\n\t| 'emerg'\n\t| 'alert'\n\t| 'crit'\n\t| 'error'\n\t| 'warning'\n\t| 'warn'\n\t| 'notice'\n\t| 'info'\n\t| 'verbose'\n\t| 'log'\n\t| 'debug'\n\t| 'trace'\n\t| 'silly'\n\nexport interface LogDetails { [k: string]: any }\n\n// We INTENTIONALLY restrict to a structured primitive with no overloading.\n// - we do NOT follow bunyan with its multiple overloads (https://github.com/trentm/node-bunyan#log-method-api)\n//   Rationale: multiple overloads prove hard to type and force to use complex normalization code.\n// - we do not attempt to mirror console.x() API:\n//   it's not relevant since the introduction of string templates literals.\n// Still, we MAY tolerate a few simplifying cases:\n// - omitting the message: it will be extracted from details.message\n// - passing an error directly, either as the only arg or as details\n//   (to allow the simple logging of an error)\n// Those \"tolerances\" are non standard and may not be handled!\nexport type LogPrimitive = (message?: string, details?: Readonly<LogDetails>) => void\n\n// The top-level interface\nexport interface Logger {\n\tsetLevel: (level: LogLevel) => void\n\tgetLevel: () => LogLevel\n\taddCommonDetails: (hash: Readonly<LogDetails>) => void\n\n\tfatal: LogPrimitive,\n\temerg: LogPrimitive,\n\talert: LogPrimitive,\n\tcrit: LogPrimitive,\n\terror: LogPrimitive,\n\twarning: LogPrimitive,\n\twarn: LogPrimitive,\n\tnotice: LogPrimitive,\n\tinfo: LogPrimitive,\n\tverbose: LogPrimitive,\n\tlog: LogPrimitive,\n\tdebug: LogPrimitive,\n\ttrace: LogPrimitive,\n\tsilly: LogPrimitive,\n\n\t// for convenience. Not guaranteed to do anything.\n\tgroup(groupTitle?: string): void;\n\tgroupCollapsed(groupTitle?: string): void;\n\tgroupEnd(): void;\n}\n\n//////////// Private interface (for logger implementations) ////////////\n\n// internal representation of a log line\n// inspired by:\n// https://github.com/trentm/node-bunyan#core-fields\nexport interface LogPayload {\n\tlevel: LogLevel\n\tname: string\n\tmsg: string\n\ttime: number // UTC timestamp\n\terr?: Error\n\tdetails: LogDetails\n}\n\n// a fn responsible to display a log line (or whatever)\nexport type LogSink = (payload: LogPayload) => void\n\n// a suggested base logger state\nexport interface BaseInternalLoggerState {\n\tname: string\n\tlevel: LogLevel // inclusive lower bound\n\tcommonDetails: LogDetails\n\toutputFn: LogSink\n}\n\n// suggested creation params\nexport interface BaseSinkOptions {\n\tsink?: LogSink\n}\nexport interface LoggerCreationParams<SinkOptions extends BaseSinkOptions = {}> {\n\tname?: string\n\tsuggestedLevel?: LogLevel // the code is free to suggest a default level, but can expect it to be dynamically overriden (see Universal Debug API)\n\tforcedLevel?: LogLevel // use only if you provide your own mechanism for dynamically setting the level\n\tcommonDetails?: Readonly<LogDetails>\n\tsinkOptions?: SinkOptions // options specifically targeted at the sink, usually platform dependent\n}\n","import { Logger, LoggerCreationParams } from '@offirmo/practical-logger-types'\n\n\nconst NO_OP = () => {}\n\nconst NO_OP_LOGGER: Logger = {\n\tsetLevel: NO_OP,\n\tgetLevel: () => 'silly',\n\n\taddCommonDetails: NO_OP,\n\n\tfatal: NO_OP,\n\temerg: NO_OP,\n\talert: NO_OP,\n\tcrit: NO_OP,\n\terror: NO_OP,\n\twarning: NO_OP,\n\twarn: NO_OP,\n\tnotice: NO_OP,\n\tinfo: NO_OP,\n\tverbose: NO_OP,\n\tlog: NO_OP,\n\tdebug: NO_OP,\n\ttrace: NO_OP,\n\tsilly: NO_OP,\n\n\tgroup: NO_OP,\n\tgroupCollapsed: NO_OP,\n\tgroupEnd: NO_OP,\n}\n\nfunction createLogger(_?: any): Logger {\n\treturn NO_OP_LOGGER\n}\n\nexport {\n\tLogger,\n\tLoggerCreationParams,\n\tcreateLogger,\n}\n","import { DebugApiV1 } from '@offirmo/universal-debug-api-interface'\nimport { createLogger } from '@offirmo/practical-logger-minimal-noop'\n\n\nexport function create(): DebugApiV1 {\n\tconst NO_OP = () => {}\n\tconst NO_OP_LOGGER = createLogger()\n\n\treturn {\n\t\tgetLogger: () => NO_OP_LOGGER,\n\t\texposeInternal: NO_OP,\n\t\toverrideHook: (k, v) => v,\n\t\taddDebugCommand: NO_OP,\n\t}\n}\n","\n//////////// Public interface (for logger usage) ////////////\n\n// List of all known logging primitives, in order of criticity\n// https://docs.google.com/spreadsheets/d/1Bc32plQTswNdCqXS99deB0n7Te7FfD7uepGAOOlPbvY/edit?usp=sharing\nexport type LogLevel =\n\t  'fatal'\n\t| 'emerg'\n\t| 'alert'\n\t| 'crit'\n\t| 'error'\n\t| 'warning'\n\t| 'warn'\n\t| 'notice'\n\t| 'info'\n\t| 'verbose'\n\t| 'log'\n\t| 'debug'\n\t| 'trace'\n\t| 'silly'\n\nexport interface LogDetails { [k: string]: any }\n\n// We INTENTIONALLY restrict to a structured primitive with no overloading.\n// - we do NOT follow bunyan with its multiple overloads (https://github.com/trentm/node-bunyan#log-method-api)\n//   Rationale: multiple overloads prove hard to type and force to use complex normalization code.\n// - we do not attempt to mirror console.x() API:\n//   it's not relevant since the introduction of string templates literals.\n// Still, we MAY tolerate a few simplifying cases:\n// - omitting the message: it will be extracted from details.message\n// - passing an error directly, either as the only arg or as details\n//   (to allow the simple logging of an error)\n// Those \"tolerances\" are non standard and may not be handled!\nexport type LogPrimitive = (message?: string, details?: Readonly<LogDetails>) => void\n\n// The top-level interface\nexport interface Logger {\n\tsetLevel: (level: LogLevel) => void\n\tgetLevel: () => LogLevel\n\taddCommonDetails: (hash: Readonly<LogDetails>) => void\n\n\tfatal: LogPrimitive,\n\temerg: LogPrimitive,\n\talert: LogPrimitive,\n\tcrit: LogPrimitive,\n\terror: LogPrimitive,\n\twarning: LogPrimitive,\n\twarn: LogPrimitive,\n\tnotice: LogPrimitive,\n\tinfo: LogPrimitive,\n\tverbose: LogPrimitive,\n\tlog: LogPrimitive,\n\tdebug: LogPrimitive,\n\ttrace: LogPrimitive,\n\tsilly: LogPrimitive,\n\n\t// for convenience. Not guaranteed to do anything.\n\tgroup(groupTitle?: string): void;\n\tgroupCollapsed(groupTitle?: string): void;\n\tgroupEnd(): void;\n}\n\n//////////// Private interface (for logger implementations) ////////////\n\n// internal representation of a log line\n// inspired by:\n// https://github.com/trentm/node-bunyan#core-fields\nexport interface LogPayload {\n\tlevel: LogLevel\n\tname: string\n\tmsg: string\n\ttime: number // UTC timestamp\n\terr?: Error\n\tdetails: LogDetails\n}\n\n// a fn responsible to display a log line (or whatever)\nexport type LogSink = (payload: LogPayload) => void\n\n// a suggested base logger state\nexport interface BaseInternalLoggerState {\n\tname: string\n\tlevel: LogLevel // inclusive lower bound\n\tcommonDetails: LogDetails\n\toutputFn: LogSink\n}\n\n// suggested creation params\nexport interface BaseSinkOptions {\n\tsink?: LogSink\n}\nexport interface LoggerCreationParams<SinkOptions extends BaseSinkOptions = {}> {\n\tname?: string\n\tsuggestedLevel?: LogLevel // the code is free to suggest a default level, but can expect it to be dynamically overriden (see Universal Debug API)\n\tforcedLevel?: LogLevel // use only if you provide your own mechanism for dynamically setting the level\n\tcommonDetails?: Readonly<LogDetails>\n\tsinkOptions?: SinkOptions // options specifically targeted at the sink, usually platform dependent\n}\n","import { Logger, LoggerCreationParams } from '@offirmo/practical-logger-types'\n\ninterface DebugApi {\n\tgetLogger: (p?: Readonly<LoggerCreationParams>) => Logger\n\n\toverrideHook: <T>(key: string, defaultValue: T) => T\n\n\texposeInternal: (path: string, value: any) => void\n\n\taddDebugCommand: (name: string, callback: ( /* todo common libs as params ? */ ) => void) => void\n\n\t_?: {\n\t\texposed: any\n\t\toverrides: { [k: string]: any }\n\t}\n}\n\nexport {\n\tLogger,\n\tLoggerCreationParams,\n\tDebugApi,\n}\n","import { DebugApi as DebugApiV1 } from './v1'\n\ninterface DebugApiRoot {\n\tv1: DebugApiV1,\n}\n\ntype DebugApi = DebugApiV1\n\nexport {\n\tDebugApiV1,\n\n\t// v latest\n\tDebugApi,\n\tDebugApiRoot,\n}\n\n// for convenience\nexport { Logger, LoggerCreationParams } from '@offirmo/practical-logger-types'\n","import { getGlobalThis } from '@offirmo/globalthis-ponyfill'\nimport { DebugApiRoot, DebugApi } from '@offirmo/universal-debug-api-interface'\n\nimport { create as createV1 } from './v1'\n\n// ensure the root is present\nconst globalThis = getGlobalThis()\nglobalThis._debug = globalThis._debug || {} as DebugApiRoot\n\n// install globally if no other implementation already present\nglobalThis._debug.v1 = globalThis._debug.v1 || createV1()\n\n// expose the current implementation\nconst instance: DebugApi = globalThis._debug.v1\n\nconst {\n\tgetLogger,\n\texposeInternal,\n\toverrideHook,\n\taddDebugCommand,\n} = instance\n\nexport {\n\tgetLogger,\n\texposeInternal,\n\toverrideHook,\n\taddDebugCommand,\n\n\tglobalThis, // for convenience\n\n\tcreateV1, // special cases\n}\n\n// types & sub-types\nexport * from '@offirmo/universal-debug-api-interface'\n","// base to be directly importable from other modules\n// without a full lib penalty.\n// This a very very specific use case, don't mind.\n\nimport { LogLevel } from '@offirmo/practical-logger-types'\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = 'error'\nexport const DEFAULT_LOGGER_KEY = '' // yes, can be used as a key\n","import { LogLevel } from '@offirmo/practical-logger-types'\n\nexport const LIB = '@offirmo/practical-logger-core'\n\n// level to a numerical value, for ordering and filtering.\n// mnemonic:  100 = 100% = you will see 100% of the logs\n//              1 =   1% = you will see 1% of the logs (obviously the most important)\nexport const LOG_LEVEL_TO_INTEGER: Readonly<{ [k: string]: number }> = {\n\tfatal:    1,\n\temerg:    2,\n\n\talert:   10,\n\tcrit:    20,\n\terror:   30,\n\n\twarning: 40,\n\twarn:    40,\n\n\tnotice:  45,\n\n\tinfo:    50,\n\n\tverbose: 70,\n\tlog:     80,\n\tdebug:   81,\n\n\ttrace:   90,\n\n\tsilly:  100,\n}\n\nexport const ALL_LOG_LEVELS: Readonly<LogLevel[]> =\n\tObject.keys(LOG_LEVEL_TO_INTEGER)\n\t\t.map(s => s as LogLevel)\n\t\t.sort((a: LogLevel, b: LogLevel) => LOG_LEVEL_TO_INTEGER[a] - LOG_LEVEL_TO_INTEGER[b])\n\n// rationalization to a clear, human understandable string\n// generated to shave a few bytes\n// not using fromEntries bc not available in node <12\nexport const LOG_LEVEL_TO_HUMAN: Readonly<{ [k: string]: string }> = ALL_LOG_LEVELS.reduce((acc, ll) => {\n\tacc[ll] = ({ em: 'emergency', wa: 'warn'} as any)[ll.slice(0, 1)] || ll\n\treturn acc\n}, {} as any)\n\nexport * from './consts-base'\n","import {\n\tLogDetails,\n} from '@offirmo/practical-logger-types'\n\n\nexport function looksLikeAnError(x: any): boolean {\n\treturn !!(x?.name && x?.message && x?.stack)\n}\n\n// harmonize\n// also try to recover from incorrect invocations\nexport function normalizeArguments(raw_args: IArguments): [ string, LogDetails ] {\n\tconst message_parts: string[] = []\n\tlet details: LogDetails = {}\n\tlet err: Error | undefined = undefined\n\n\tArray.from(raw_args)\n\t\t.forEach(arg => {\n\t\t\tif (!arg)\n\t\t\t\treturn\n\n\t\t\t// errors are first class, look for them first\n\t\t\tif (looksLikeAnError(arg)) {\n\t\t\t\tif (!err)\n\t\t\t\t\terr = arg // extract it\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (!err && looksLikeAnError(arg.err)) {\n\t\t\t\terr = arg.err // extract it\n\t\t\t\t// don't return, still stuff to pick\n\t\t\t}\n\n\t\t\tif (typeof arg === 'object') {\n\t\t\t\tdetails = {\n\t\t\t\t\t...details,\n\t\t\t\t\t...arg,\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmessage_parts.push(String(arg))\n\t\t})\n\n\tif (typeof details.message === 'string' && !message_parts.length) {\n\t\tmessage_parts.push(details.message)\n\t\tdelete details.message\n\t}\n\n\tconst message = message_parts.join(' ') || (err as any)?.message || '(no message)'\n\tif (err)\n\t\tdetails.err = err\n\telse\n\t\tdelete details.err // because could be present but not be a correct err type\n\n\treturn [ message, details ]\n}\n\n","import {\n\tLogLevel,\n\tBaseInternalLoggerState,\n\tLogger,\n\tLoggerCreationParams,\n\tLogDetails,\n\tLogPayload,\n\tLogPrimitive,\n\tLogSink,\n} from '@offirmo/practical-logger-types'\n\nimport {\n\tLIB,\n\tALL_LOG_LEVELS,\n\tLOG_LEVEL_TO_INTEGER,\n\tDEFAULT_LOG_LEVEL,\n\tDEFAULT_LOGGER_KEY,\n} from './consts'\n\nimport { normalizeArguments } from './normalize-args'\n\nexport function checkLevel(level: any): asserts level is LogLevel {\n\tif (!ALL_LOG_LEVELS.includes(level))\n\t\tthrow new Error(`[${LIB}] Not a valid log level: \"${level}\"!`)\n}\n\nexport function create(\n\t{\n\t\tname = DEFAULT_LOGGER_KEY,\n\t\tsuggestedLevel = DEFAULT_LOG_LEVEL,\n\t\tforcedLevel,\n\t\tcommonDetails = {},\n\t}: LoggerCreationParams = {},\n\toutputFn: LogSink = console.log,\n): Logger {\n\n\tconst internalState: BaseInternalLoggerState = {\n\t\tname,\n\t\tlevel: forcedLevel || suggestedLevel,\n\t\tcommonDetails: {...commonDetails},\n\t\toutputFn,\n\t}\n\n\tlet levelAsInt = 100 // so far\n\n\tconst logger: Logger = ALL_LOG_LEVELS.reduce(\n\t\t(logger: any, level: LogLevel) => {\n\t\t\tconst primitive: LogPrimitive = function (rawMessage?: string, rawDetails?: LogDetails) {\n\t\t\t\tif (!isLevelEnabled(level)) return\n\n\t\t\t\tconst [ message, details ] = normalizeArguments(arguments)\n\n\t\t\t\tinternalState.outputFn(serializer(level, message, details))\n\t\t\t}\n\n\t\t\tlogger[level] = primitive\n\n\t\t\treturn logger\n\t\t},\n\t\t{\n\t\t\tsetLevel,\n\t\t\tgetLevel,\n\t\t\taddCommonDetails,\n\t\t\tgroup() {},\n\t\t\tgroupCollapsed() {},\n\t\t\tgroupEnd() {},\n\t\t},\n\t)\n\n\tfunction setLevel(level: LogLevel) {\n\t\tcheckLevel(level)\n\n\t\tinternalState.level = level\n\t\tlevelAsInt = LOG_LEVEL_TO_INTEGER[level]\n\t}\n\tsetLevel(getLevel()) // to check it\n\n\tfunction isLevelEnabled(level: LogLevel) {\n\t\tcheckLevel(level)\n\n\t\treturn LOG_LEVEL_TO_INTEGER[level] <= levelAsInt\n\t}\n\n\tfunction getLevel() {\n\t\treturn internalState.level\n\t}\n\n\tfunction addCommonDetails(details: Readonly<LogDetails>): void {\n\t\tif (details.err)\n\t\t\tthrow new Error(`[${LIB}] Can't set reserved property \"err\"!`)\n\n\t\tinternalState.commonDetails = {\n\t\t\t...internalState.commonDetails,\n\t\t\t...details,\n\t\t}\n\t}\n\n\tfunction serializer(level: LogLevel, msg: string, { err, ...details }: Readonly<LogDetails>): LogPayload {\n\t\tconst payload: LogPayload = {\n\t\t\tlevel,\n\t\t\tname,\n\t\t\tmsg,\n\t\t\ttime: +(new Date()), // UTC timestamp\n\t\t\tdetails: {\n\t\t\t\t...internalState.commonDetails,\n\t\t\t\t...details,\n\t\t\t},\n\t\t}\n\t\tif (err)\n\t\t\tpayload.err = err\n\n\t\treturn payload\n\t}\n\n\treturn logger\n}\n","import { create as createLogger } from './core'\nexport { createLogger }\n\nexport * from '@offirmo/practical-logger-types'\n\nexport {\n\tALL_LOG_LEVELS,\n\tLOG_LEVEL_TO_INTEGER,\n\tLOG_LEVEL_TO_HUMAN,\n\tDEFAULT_LOG_LEVEL,\n\tDEFAULT_LOGGER_KEY,\n} from './consts'\n\nexport { checkLevel } from './core'\nexport * from './normalize-args'\n\n","const { ALL_LOG_LEVELS } = require('..')\n\nfunction demo_legacy_console() {\n\tconsole.log('------------↓ For comparison: Legacy console: levels, in order ↓-----------')\n\tconsole.debug('Legacy console > message with level \"debug\"', { level: 'debug', foo: 42 })\n\tconsole.log('Legacy console > message with level \"log\"', { level: 'log', foo: 42 })\n\tconsole.info('Legacy console > message with level \"info\"', { level: 'info', foo: 42 })\n\tconsole.warn('Legacy console > message with level \"warn\"', { level: 'warn', foo: 42 })\n\tconsole.error('Legacy console > message with level \"error\"', { level: 'error', foo: 42 })\n}\n\n\nfunction demo_logger_basic_usage(logger, in_group = true) {\n\tconsole[in_group ? 'group' : 'log']('------------↓ Practical logger demo: example real usage ↓------------')\n\n\tlogger.silly('Hi!')\n\tlogger.trace('App starting...', { version: '1.2.3' })\n\n\tconst bob = {\n\t\tfirstName: 'Bob',\n\t\tlastName: 'Dupont',\n\t\tage: 42,\n\t}\n\n\tlogger.verbose('Current user already logged in', { user: bob })\n\n\tlogger.verbose('Restoring state from cloud…')\n\n\tlogger.warn('Restoration of state is taking more time than expected', { elapsedMs: 3000 })\n\n\tconst err = new Error('Timeout loading state!')\n\terr.httpStatus = 418 // to check that custom props are preserved\n\n\tlogger.error(undefined, err)\n\n\tlogger.info('Reverting to last known local state')\n\n\tif (in_group) console.groupEnd()\n}\n\nfunction demo_logger_levels(logger) {\n\tconsole.log('------------↓ Practical logger demo: all levels, in order ↓------------')\n\t;[...ALL_LOG_LEVELS].reverse().forEach(level =>\n\t\tlogger[level](`message with level \"${level}\"`, { level, foo: 42 }),\n\t)\n\n\t/*\nconsole.groupCollapsed('in group')\nALL_LOG_LEVELS.forEach(level =>\n    logger[level](`msg with level \"${level}\"`)\n)\nconsole.groupEnd()\n*/\n}\n\nfunction demo_group(logger) {\n\tconsole.log('------------↓ logger demo: group ↓------------')\n\n\tlogger.group('level 1 (NOT collapsed)')\n\t\tlogger.log('in level 1')\n\n\t\tlogger.groupCollapsed('level 2a (collapsed)')\n\t\t\tlogger.log('in level 2a')\n\t\tlogger.groupEnd()\n\n\t\tlogger.groupCollapsed('level 2b (collapsed)')\n\t\t\t// no output\n\t\t\tlogger.group('level 3a (NOT collapsed)')\n\t\t\t\t// no output\n\t\t\tlogger.groupEnd()\n\t\tlogger.groupEnd()\n\n\t\tlogger.groupCollapsed('level 2c (collapsed)')\n\t\t\t// no output\n\t\t\tlogger.warn('warn from level 2c!')\n\t\t\tlogger.error(new Error('error from level 2c!'))\n\t\tlogger.groupEnd()\n\n\t\tlogger.groupCollapsed('level 2d (collapsed)')\n\t\t\tlogger.log('in level 2d')\n\t\t\tlogger.group('level 3b (NOT collapsed)')\n\t\t\t\tlogger.warn('warn from level 3b!')\n\t\t\t\tlogger.error(new Error('error from level 3b!'))\n\t\t\t\tlogger.log('in level 3b')\n\t\t\tlogger.groupEnd()\n\t\t\tlogger.log('in level 2d')\n\t\tlogger.groupEnd()\n\n\t\tlogger.log('where am I? (should be in level 1)')\n\tlogger.groupEnd()\n\n\tlogger.groupEnd()\n\tlogger.groupEnd()\n}\n\nfunction demo_incorrect_logger_invocations(logger) {\n\tconst bob = {\n\t\tfirstName: 'Bob',\n\t\tlastName: 'Dupont',\n\t\tage: 42,\n\t}\n\n\tconst more = 'some stuff'\n\n\tconst err = new Error('Timeout loading state!')\n\terr.httpStatus = 418 // to check that custom props are preserved\n\n\tconsole.group('------------↓ logger demo: incorrect invocation (bunyan style) ↓------------')\n\tlogger.info()\n\n\tlogger.info('hi')\n\tlogger.info('hi %s', bob, more)\n\n\tlogger.info({foo: 'bar'}, 'hi')\n\n\tlogger.info(err)\n\tlogger.info(err, 'more on this: %s', more)\n\n\tlogger.info({foo: 'bar', err: err}, 'some msg about this error')\n\tlogger.warn('foo', 'bar', 42)\n\tconsole.groupEnd()\n}\n\nfunction demo_logger_api(getLogger) {\n\tconsole.log('------------↓ logger creation and basic usage ↓------------')\n\tconst root_logger = getLogger({\n\t\tsuggestedLevel: 'silly',\n\t})\n\troot_logger.log('Starting up')\n\n\tconst logger = getLogger({\n\t\tname: 'Persistence',\n\t\tsuggestedLevel: 'silly',\n\t})\n\n\tdemo_logger_basic_usage(logger)\n\n\tdemo_logger_levels(logger)\n\n\tdemo_group(logger)\n\n\tdemo_incorrect_logger_invocations(logger)\n}\n\nfunction demo_error(logger, in_group = true) {\n\tconsole[in_group ? 'group' : 'log']('------------↓ logger demo: error display ↓------------')\n\n\tfunction foo() {\n\t\tfunction bar() {\n\t\t\tconst err = new Error('Test!')\n\t\t\terr.statusCode = 1234\n\t\t\terr.details = {\n\t\t\t\thello: 42,\n\t\t\t}\n\n\t\t\tthrow err\n\t\t}\n\t\tbar()\n\t}\n\n\ttry {\n\t\tfoo()\n\t}\n\tcatch (err) {\n\t\tlogger.log(err)\n\t\tlogger.log('message', err)\n\t\tlogger.log('message', { some: 'stuff', err })\n\t\tlogger.error(err)\n\t\tlogger.error('message', err)\n\t\tlogger.error('message', { some: 'stuff', err })\n\t\t//logger.error('message', { some: 'stuff' }, err)\n\t\t//logger.error('message', err, { some: 'stuff' })\n\t\tlogger.error('message', { some: 'stuff' })\n\t}\n\n\tif (in_group) console.groupEnd()\n}\n\nfunction demo_devtools_fonts() {\n\tconsole.group('------------↓ available font styles ↓------------')\n\tconsole.log('default: ABCdef012')\n\n\t;[\n\t\t'-apple-system',\n\t\t'BlinkMacSystemFont',\n\t\t'\"avenir next\"',\n\t\t'avenir',\n\t\t'\"Segoe UI\"',\n\t\t'\"lucida grande\"',\n\t\t'\"helvetica neue\"',\n\t\t'helvetica',\n\t\t'\"Fira Sans\"',\n\t\t'roboto',\n\t\t//'noto',\n\t\t//'\"Droid Sans\"',\n\t\t//'cantarell',\n\t\t//'oxygen',\n\t\t//'ubuntu',\n\t\t//'\"franklin gothic medium\"',\n\t\t//'\"century gothic\"',\n\t\t'\"Liberation Sans\"',\n\t\t'sans-serif',\n\t\t'\"dejavu sans mono\"',\n\t\t'\"Fira Code\"',\n\t\t'Menlo',\n\t\t'Consolas',\n\t\t'\"Lucida Console\"',\n\t\t'\"Courier New\"',\n\t\t'monospace',\n\t].forEach(font => console.log(`%c${font}: ABCdefi012 %cABCdefi012`, `font-family: ${font};`, 'font-family: unset;'))\n\tconsole.groupEnd()\n}\n\nmodule.exports = {\n\tdemo_legacy_console,\n\tdemo_logger_basic_usage,\n\tdemo_logger_levels,\n\tdemo_error,\n\tdemo_group,\n\tdemo_incorrect_logger_invocations,\n\tdemo_logger_api,\n\tdemo_devtools_fonts,\n}\n","/* global: _debug */\n//import '../../src/injected-libs/universal-debug-api-control'\nimport {\n\tgetLogger,\n\texposeInternal,\n\toverrideHook,\n\taddDebugCommand,\n\tglobalThis,\n} from '@offirmo/universal-debug-api-placeholder'\n\nimport {\n\tdemo_legacy_console,\n\tdemo_logger_basic_usage,\n\tdemo_logger_levels,\n\tdemo_error,\n\tdemo_group,\n\tdemo_incorrect_logger_invocations,\n\tdemo_logger_api,\n\tdemo_devtools_fonts,\n} from '../../../../1-foundation/practical-logger-core/doc/shared-demo'\n\nconst LIB = '📄 demo/head-script'\n\n\nconsole.warn(`[${LIB}.${+Date.now()}] Hello, more standard!`, {\n\tfoo_js: window.foo,\n\tfoo_ls: (() => {\n\t\ttry {\n\t\t\t// local files may not have local storage\n\t\t\treturn localStorage.getItem('foo')\n\t\t}\n\t\tcatch { /* ignore */ }\n\t})(),\n\t_debug,\n})\n\n//////////// usage\nconst logger = getLogger()\nlogger.info('Hello from root logger!')\n\nif (false) {\n\tdemo_logger_levels(logger)\n}\n\n_debug.v1.addDebugCommand('pause', () => {\n\tconsole.log('paused')\n})\n\nfunction render() {\n\tconst is_feature_x_on = overrideHook('is_feature_on', false)\n\tconst span_f = document.getElementById('feature-x')\n\tspan_f.innerText = is_feature_x_on ? '✅' : '❌'\n\n\tconst server = overrideHook('SERVER_URL', 'https://www.online-adventur.es/')\n\tconst link = document.getElementById('server-url')\n\tlink.href = link.innerText = server\n\n\tconst forced_variation = overrideHook('experiment_cohort', undefined)\n\tconst variation = forced_variation || localStorage.getItem('variation') || 'not-enrolled'\n\tconst span_x = document.getElementById('experiment')\n\tspan_x.innerText = variation\n\n\tconst custom = overrideHook('custom', undefined)\n\tconst span_c = document.getElementById('custom')\n\tspan_c.innerText = String(custom)\n}\nsetInterval(render, 1000)\nsetTimeout(render, 1) // just for it not to be sync\n\n//////////// communication ////////////\n\n/*\nfunction onMessage(event) {\n\tconsole.log(`[${LIB}.${+Date.now()}] seen postMessage:`, event.data)\n}\nconst listenerOptions = {\n\tcapture: false, // http://devdocs.io/dom/window/postmessage\n}\nwindow.addEventListener('message', onMessage, listenerOptions)\n*/\n/*\nconsole.log(`[${LIB}.${+Date.now()}] sending a test postMessage...`)\nwindow.postMessage({msg: `Test message from ${LIB}`}, '*')\n*/\n"]}