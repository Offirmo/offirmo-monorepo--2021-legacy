{"version":3,"sources":["../../src/index.ts","../../src/create.ts","index.js"],"names":["console","warn","Date","now","foo_js","window","foo","foo_ls","localStorage","getItem","logger","info","group","forEach","level","groupEnd","_debug","addDebugCommand","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAEA,IAAM,UAAU,GAAwB,EAAxC;;AAEA,SAAgB,aAAhB,GAA6B;AAE5B;AACA,MAAI,OAAO,UAAP,KAAsB,WAA1B,EAAuC,OAAO,UAAP,CAHX,CAK5B;AACA;;AACA,MAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC,OAAO,MAAP,CAPP,CAS5B;;AACA,MAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC,OAAO,IAAP,CAVL,CAY5B;;AACA,MAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC,OAAO,MAAP;AAEnC,SAAO,UAAP,CAf4B,CAeV;AAClB;;AAhBD,OAAA,CAAA,aAAA,GAAA,aAAA;;;;AADA,MAAM,KAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAA;AAEtB,MAAM,YAAY,GAAW;IAC5B,QAAQ,EAAE,KAAK;IACf,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO;IAEvB,gBAAgB,EAAE,KAAK;IAEvB,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,KAAK;IACX,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,KAAK;IACd,IAAI,EAAE,KAAK;IACX,MAAM,EAAE,KAAK;IACb,IAAI,EAAE,KAAK;IACX,OAAO,EAAE,KAAK;IACd,GAAG,EAAE,KAAK;IACV,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,KAAK;CACZ,CAAA;AAED,SAAS,YAAY;IACpB,OAAO,YAAY,CAAA;AACpB,CAAC;AAKA,oCAAY;;;;;ACjCb,gGAAwE;AAGxE,SAAgB,MAAM;IACrB,MAAM,KAAK,GAAG,GAAG,EAAE,GAAE,CAAC,CAAA;IACtB,MAAM,YAAY,GAAG,+CAAY,EAAE,CAAA;IAEnC,OAAO;QACN,SAAS,EAAE,GAAG,EAAE,CAAC,YAAY;QAC7B,eAAe,EAAE,KAAK;KACtB,CAAA;AACF,CAAC;AARD,wBAQC;;;;;ADZD,sEAA4D;AAG5D,qCAAiC;AAGjC,8DAA8D;AAC9D,MAAM,UAAU,GAAG,mCAAa,EAAE,CAAA;AAClC,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,IAAI,eAAM,EAAE,CAAA;AAEjD,oCAAoC;AACpC,MAAM,QAAQ,GAAgB,UAAU,CAAC,MAAM,CAAA;AAE/C,MAAM,EACL,SAAS,EACT,eAAe,GACf,GAAG,QAAQ,CAAA;AAGX,8BAAS;AACT,0CAAe;;;;;AEpBhB;;AAEAA,OAAO,CAACC,IAAR,0CAAqC,CAACC,IAAI,CAACC,GAAL,EAAtC,8BAA2E;AAC1EC,EAAAA,MAAM,EAAEC,MAAM,CAACC,GAD2D;AAE1EC,EAAAA,MAAM,EAAG,YAAM;AACd,QAAI;AACH;AACA,aAAOC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAP;AACA,KAHD,CAIA,gBAAM,CAAE;AACR,GANO;AAFkE,CAA3E,GAaA;;AACA,IAAMC,MAAM,GAAG,gDAAf;AACAA,MAAM,CAACC,IAAP,CAAY,oBAAZ;;AAEA,IAAI,IAAJ,EAAU;AACTX,EAAAA,OAAO,CAACY,KAAR,CAAc,uBAAd;AACC,GACA,OADA,EAEA,OAFA,EAGA,OAHA,EAIA,MAJA,EAKA,OALA,EAMA,SANA,EAOA,MAPA,EAQA,QARA,EASA,MATA,EAUA,SAVA,EAWA,KAXA,EAYA,OAZA,EAaA,OAbA,EAcA,OAdA,EAeCC,OAfD,CAeS,UAAAC,KAAK,EAAI;AAClBJ,IAAAA,MAAM,CAACI,KAAD,CAAN,oCAAyCA,KAAzC,SAAmD;AAACA,MAAAA,KAAK,EAALA;AAAD,KAAnD;AACA,GAjBA;AAkBDd,EAAAA,OAAO,CAACe,QAAR;AACA;;AAEDC,MAAM,CAACC,eAAP,CAAuB,OAAvB,EAAgC,YAAM;AACrCjB,EAAAA,OAAO,CAACkB,GAAR,CAAY,QAAZ;AACA,CAFD","file":"demo.e31bb0bc.map","sourceRoot":"../doc/demo","sourcesContent":["/* global globalThis, self, window, global */\n\nconst lastResort: { [k:string]: any } = {}\n\nexport function getGlobalThis(): { [k:string]: any } {\n\n\t// @ts-ignore\n\tif (typeof globalThis !== 'undefined') return globalThis\n\n\t// check node first https://github.com/ljharb/globalThis/issues/2\n\t// @ts-ignore\n\tif (typeof global !== 'undefined') return global\n\n\t// @ts-ignore\n\tif (typeof self !== 'undefined') return self\n\n\t// @ts-ignore\n\tif (typeof window !== 'undefined') return window\n\n\treturn lastResort // should never happen\n}\n","import { WebDebugApi } from '@offirmo/universal-debug-api-interface'\nimport { createLogger } from '@offirmo/practical-logger-minimal-to-void'\n\n\nexport function create(): WebDebugApi {\n\tconst NO_OP = () => {}\n\tconst NO_OP_LOGGER = createLogger()\n\n\treturn {\n\t\tgetLogger: () => NO_OP_LOGGER,\n\t\taddDebugCommand: NO_OP,\n\t}\n}\n","import { getLogger } from '@offirmo/universal-debug-api-minimal-to-void'\n\nconsole.warn(`ðŸ“„ [page/head-script.${+Date.now()}] Hello, more standard!`, {\n\tfoo_js: window.foo,\n\tfoo_ls: (() => {\n\t\ttry {\n\t\t\t// local files may not have local storage\n\t\t\treturn localStorage.getItem('foo')\n\t\t}\n\t\tcatch {}\n\t})(),\n})\n\n\n\n// usage\nconst logger = getLogger()\nlogger.info('Hello from logger!')\n\nif (true) {\n\tconsole.group('Testing log levels...')\n\t;[\n\t\t'fatal',\n\t\t'emerg',\n\t\t'alert',\n\t\t'crit',\n\t\t'error',\n\t\t'warning',\n\t\t'warn',\n\t\t'notice',\n\t\t'info',\n\t\t'verbose',\n\t\t'log',\n\t\t'debug',\n\t\t'trace',\n\t\t'silly',\n\t].forEach(level => {\n\t\tlogger[level](`logger demo with level \"${level}\"`, {level})\n\t})\n\tconsole.groupEnd()\n}\n\n_debug.addDebugCommand('pause', () => {\n\tconsole.log('paused')\n})\n"]}