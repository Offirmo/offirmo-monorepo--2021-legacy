
// THIS FILE IS AUTO GENERATED!
// This is a base64 version of the Universal Web Debug API:
// https://github.com/Offirmo/offirmo-monorepo/tree/master/2-advanced/universal-debug-api-full-browser
// bundled in a single file through this local file:
// ../src/injected-libs/universal-debug-api-from-webext.ts
const lib = ''
export default lib
