// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"yheg":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
'use strict';
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};
},{}],"FoTz":[function(require,module,exports) {
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var l = require("object-assign"),
    n = 60103,
    p = 60106;

exports.Fragment = 60107;
exports.StrictMode = 60108;
exports.Profiler = 60114;
var q = 60109,
    r = 60110,
    t = 60112;
exports.Suspense = 60113;
var u = 60115,
    v = 60116;

if ("function" === typeof Symbol && Symbol.for) {
  var w = Symbol.for;
  n = w("react.element");
  p = w("react.portal");
  exports.Fragment = w("react.fragment");
  exports.StrictMode = w("react.strict_mode");
  exports.Profiler = w("react.profiler");
  q = w("react.provider");
  r = w("react.context");
  t = w("react.forward_ref");
  exports.Suspense = w("react.suspense");
  u = w("react.memo");
  v = w("react.lazy");
}

var x = "function" === typeof Symbol && Symbol.iterator;

function y(a) {
  if (null === a || "object" !== typeof a) return null;
  a = x && a[x] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}

function z(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

var A = {
  isMounted: function () {
    return !1;
  },
  enqueueForceUpdate: function () {},
  enqueueReplaceState: function () {},
  enqueueSetState: function () {}
},
    B = {};

function C(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

C.prototype.isReactComponent = {};

C.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error(z(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};

C.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function D() {}

D.prototype = C.prototype;

function E(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

var F = E.prototype = new D();
F.constructor = E;
l(F, C.prototype);
F.isPureReactComponent = !0;
var G = {
  current: null
},
    H = Object.prototype.hasOwnProperty,
    I = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function J(a, b, c) {
  var e,
      d = {},
      k = null,
      h = null;
  if (null != b) for (e in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) H.call(b, e) && !I.hasOwnProperty(e) && (d[e] = b[e]);
  var g = arguments.length - 2;
  if (1 === g) d.children = c;else if (1 < g) {
    for (var f = Array(g), m = 0; m < g; m++) f[m] = arguments[m + 2];

    d.children = f;
  }
  if (a && a.defaultProps) for (e in g = a.defaultProps, g) void 0 === d[e] && (d[e] = g[e]);
  return {
    $$typeof: n,
    type: a,
    key: k,
    ref: h,
    props: d,
    _owner: G.current
  };
}

function K(a, b) {
  return {
    $$typeof: n,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function L(a) {
  return "object" === typeof a && null !== a && a.$$typeof === n;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + a.replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var M = /\/+/g;

function N(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}

function O(a, b, c, e, d) {
  var k = typeof a;
  if ("undefined" === k || "boolean" === k) a = null;
  var h = !1;
  if (null === a) h = !0;else switch (k) {
    case "string":
    case "number":
      h = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case n:
        case p:
          h = !0;
      }

  }
  if (h) return h = a, d = d(h), a = "" === e ? "." + N(h, 0) : e, Array.isArray(d) ? (c = "", null != a && (c = a.replace(M, "$&/") + "/"), O(d, b, c, "", function (a) {
    return a;
  })) : null != d && (L(d) && (d = K(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace(M, "$&/") + "/") + a)), b.push(d)), 1;
  h = 0;
  e = "" === e ? "." : e + ":";
  if (Array.isArray(a)) for (var g = 0; g < a.length; g++) {
    k = a[g];
    var f = e + N(k, g);
    h += O(k, b, c, f, d);
  } else if (f = y(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) k = k.value, f = e + N(k, g++), h += O(k, b, c, f, d);else if ("object" === k) throw b = "" + a, Error(z(31, "[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));
  return h;
}

function P(a, b, c) {
  if (null == a) return a;
  var e = [],
      d = 0;
  O(a, e, "", "", function (a) {
    return b.call(c, a, d++);
  });
  return e;
}

function Q(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    a._status = 0;
    a._result = b;
    b.then(function (b) {
      0 === a._status && (b = b.default, a._status = 1, a._result = b);
    }, function (b) {
      0 === a._status && (a._status = 2, a._result = b);
    });
  }

  if (1 === a._status) return a._result;
  throw a._result;
}

var R = {
  current: null
};

function S() {
  var a = R.current;
  if (null === a) throw Error(z(321));
  return a;
}

var T = {
  ReactCurrentDispatcher: R,
  ReactCurrentBatchConfig: {
    transition: 0
  },
  ReactCurrentOwner: G,
  IsSomeRendererActing: {
    current: !1
  },
  assign: l
};
exports.Children = {
  map: P,
  forEach: function (a, b, c) {
    P(a, function () {
      b.apply(this, arguments);
    }, c);
  },
  count: function (a) {
    var b = 0;
    P(a, function () {
      b++;
    });
    return b;
  },
  toArray: function (a) {
    return P(a, function (a) {
      return a;
    }) || [];
  },
  only: function (a) {
    if (!L(a)) throw Error(z(143));
    return a;
  }
};
exports.Component = C;
exports.PureComponent = E;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T;

exports.cloneElement = function (a, b, c) {
  if (null === a || void 0 === a) throw Error(z(267, a));
  var e = l({}, a.props),
      d = a.key,
      k = a.ref,
      h = a._owner;

  if (null != b) {
    void 0 !== b.ref && (k = b.ref, h = G.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;

    for (f in b) H.call(b, f) && !I.hasOwnProperty(f) && (e[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
  }

  var f = arguments.length - 2;
  if (1 === f) e.children = c;else if (1 < f) {
    g = Array(f);

    for (var m = 0; m < f; m++) g[m] = arguments[m + 2];

    e.children = g;
  }
  return {
    $$typeof: n,
    type: a.type,
    key: d,
    ref: k,
    props: e,
    _owner: h
  };
};

exports.createContext = function (a, b) {
  void 0 === b && (b = null);
  a = {
    $$typeof: r,
    _calculateChangedBits: b,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  a.Provider = {
    $$typeof: q,
    _context: a
  };
  return a.Consumer = a;
};

exports.createElement = J;

exports.createFactory = function (a) {
  var b = J.bind(null, a);
  b.type = a;
  return b;
};

exports.createRef = function () {
  return {
    current: null
  };
};

exports.forwardRef = function (a) {
  return {
    $$typeof: t,
    render: a
  };
};

exports.isValidElement = L;

exports.lazy = function (a) {
  return {
    $$typeof: v,
    _payload: {
      _status: -1,
      _result: a
    },
    _init: Q
  };
};

exports.memo = function (a, b) {
  return {
    $$typeof: u,
    type: a,
    compare: void 0 === b ? null : b
  };
};

exports.useCallback = function (a, b) {
  return S().useCallback(a, b);
};

exports.useContext = function (a, b) {
  return S().useContext(a, b);
};

exports.useDebugValue = function () {};

exports.useEffect = function (a, b) {
  return S().useEffect(a, b);
};

exports.useImperativeHandle = function (a, b, c) {
  return S().useImperativeHandle(a, b, c);
};

exports.useLayoutEffect = function (a, b) {
  return S().useLayoutEffect(a, b);
};

exports.useMemo = function (a, b) {
  return S().useMemo(a, b);
};

exports.useReducer = function (a, b, c) {
  return S().useReducer(a, b, c);
};

exports.useRef = function (a) {
  return S().useRef(a);
};

exports.useState = function (a) {
  return S().useState(a);
};

exports.version = "17.0.2";
},{"object-assign":"yheg"}],"dmLA":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
},{"./cjs/react.production.min.js":"FoTz"}],"px6A":[function(require,module,exports) {
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';var f,g,h,k;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}
if("undefined"===typeof window||"function"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if("undefined"!==typeof console){var z=
window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");"function"!==typeof z&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=
E};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=
x(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}
function K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;
function T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}
function V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if("function"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;
exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};
exports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};
exports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};

},{}],"vqYn":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
},{"./cjs/scheduler.production.min.js":"px6A"}],"ogJH":[function(require,module,exports) {
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
'use strict';var aa=require("react"),m=require("object-assign"),r=require("scheduler");function y(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+"Capture",b)}
function ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}
var fa=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ha=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ia=Object.prototype.hasOwnProperty,
ja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function na(a,b,c,d){if(null===b||"undefined"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});
["checked","multiple","muted","selected"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(oa,
pa);D[b]=new B(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});
D.xlinkHref=new B("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});
function qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
var ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;
if("function"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E("react.element");ta=E("react.portal");ua=E("react.fragment");wa=E("react.strict_mode");xa=E("react.profiler");ya=E("react.provider");za=E("react.context");Aa=E("react.forward_ref");Ba=E("react.suspense");Ca=E("react.suspense_list");Da=E("react.memo");Ea=E("react.lazy");Fa=E("react.block");E("react.scope");Ga=E("react.opaque.id");Ha=E("react.debug_trace_mode");Ia=E("react.offscreen");Ja=E("react.legacy_hidden")}
var Ka="function"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||"object"!==typeof a)return null;a=Ka&&a[Ka]||a["@@iterator"];return"function"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);Ma=b&&b[1]||""}return"\n"+Ma+a}var Oa=!1;
function Pa(a,b){if(!a||Oa)return"";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&"string"===typeof k.stack){for(var e=k.stack.split("\n"),
f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return"\n"+e[g].replace(" at new "," at ");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Na(a):""}
function Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na("Lazy");case 13:return Na("Suspense");case 19:return Na("SuspenseList");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return""}}
function Ra(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ua:return"Fragment";case ta:return"Portal";case xa:return"Profiler";case wa:return"StrictMode";case Ba:return"Suspense";case Ca:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case za:return(a.displayName||"Context")+".Consumer";case ya:return(a._context.displayName||"Context")+".Provider";case Aa:var b=a.render;b=b.displayName||b.name||"";
return a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}
function Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,"checked",b,!1)}
function ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?bb(a,b.type,c):b.hasOwnProperty("defaultValue")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function cb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function bb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function db(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}
function fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}
function ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var kb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function lb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function mb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?lb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var nb,ob=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||"innerHTML"in a)a.innerHTML=b;else{nb=nb||document.createElement("div");nb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=["Webkit","ms","Moz","O"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(""+b).trim():b+"px"}
function tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=sb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(y(62));}}
function wb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;
function Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}
function Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}
function Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==
typeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,"passive",{get:function(){Pb=!0}});window.addEventListener("test",Qb,Qb);window.removeEventListener("test",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}
function Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}
function bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case "focusin":case "focusout":kc=null;break;case "dragenter":case "dragleave":lc=null;break;case "mouseover":case "mouseout":mc=null;break;case "pointerover":case "pointerout":nc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":oc.delete(b.pointerId)}}
function tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}
function uc(a,b,c,d,e){switch(b){case "focusin":return kc=tc(kc,a,b,c,d,e),!0;case "dragenter":return lc=tc(lc,a,b,c,d,e),!0;case "mouseover":return mc=tc(mc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}
function vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}
function xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}
function Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}
function Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}
function Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}
function Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Ec={animationend:Dc("Animation","AnimationEnd"),animationiteration:Dc("Animation","AnimationIteration"),animationstart:Dc("Animation","AnimationStart"),transitionend:Dc("Transition","TransitionEnd")},Fc={},Gc={};
fa&&(Gc=document.createElement("div").style,"AnimationEvent"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),"TransitionEvent"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}
var Ic=Hc("animationend"),Jc=Hc("animationiteration"),Kc=Hc("animationstart"),Lc=Hc("transitionend"),Mc=new Map,Nc=new Map,Oc=["abort","abort",Ic,"animationEnd",Jc,"animationIteration",Kc,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart",
"lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lc,"transitionEnd","waiting","waiting"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e="on"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;
function Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;
F=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}
function Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}
function Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}
function $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}
function hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}
function yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;
function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}
function rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&
(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}
var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in
a)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",
Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",
119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}
var Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},
deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&"CompositionEvent"in window,be=null;fa&&"documentMode"in document&&(be=document.documentMode);var ce=fa&&"TextEvent"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;
function ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}
function ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}
var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}
function ve(a,b){if("change"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}
function Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;
function Je(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
var Pe=fa&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;
function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}
Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),
0);Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);Pc(Oc,2);for(var Ve="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea("onMouseEnter",["mouseout","mouseover"]);
ea("onMouseLeave",["mouseout","mouseover"]);ea("onPointerEnter",["pointerout","pointerover"]);ea("onPointerLeave",["pointerout","pointerover"]);da("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));da("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));da("onBeforeInput",["compositionend","keypress","textInput","paste"]);da("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));da("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));
function Ze(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}
function se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}
function G(a,b){var c=$e(b),d=a+"__bubble";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf="_reactListening"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}
function df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;"selectionchange"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if("scroll"!==a)return;e|=2;f=d}var g=$e(f),h=a+"__"+(b?"capture":"bubble");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}
function af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}
function jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];
a:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":x="focus";k=Fd;break;case "focusout":x="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=
Dd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var w=0!==(b&4),z=!w&&"scroll"===a,u=w?null!==h?h+"Capture":null:h;w=[];for(var t=d,q;null!==
t;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==
x&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v="onMouseLeave";u="onMouseEnter";t="mouse";if("pointerout"===a||"pointerover"===a)w=Td,v="onPointerLeave",u="onPointerEnter",t="pointer";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+"leave",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+"enter",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=
gf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);"focusout"===a&&(K=h._wrapperState)&&
K.controlled&&"number"===h.type&&bb(h,"number",h.value)}K=d?ue(d):window;switch(a){case "focusin":if(me(K)||"true"===K.contentEditable)Qe=K,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case "compositionstart":var L="onCompositionStart";break b;case "compositionend":L="onCompositionEnd";break b;
case "compositionupdate":L="onCompositionUpdate";break b}L=void 0}else ie?ge(a,c)&&(L="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(L="onCompositionStart");L&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==L?"onCompositionEnd"===L&&ie&&(Q=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),0<d.length&&(e=new Ld("onBeforeInput",
"beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}
function hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function nf(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of="function"===typeof setTimeout?setTimeout:void 0,pf="function"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent="":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=""))}
function rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf="__reactFiber$"+vf,xf="__reactProps$"+vf,ff="__reactContainer$"+vf,yf="__reactEvents$"+vf;
function wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}
function $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;
function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}
function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||"Unknown",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}
var Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};
function eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}
function jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}
function rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}
function vg(a,b){if(pg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}
function yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
function Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=
b;c.lastBaseUpdate=b}
function Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,
next:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if("function"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h="function"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===
f)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;
function Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}
var Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=
b);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}
function Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;"object"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Ng(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}
function Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;
function Qg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}
function Rg(a,b){if("textarea"!==a.type)throw Error(y(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b));}
function Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,
c):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
Wg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Ug(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,
a.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||
null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===
n.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if("function"!==typeof l)throw Error(y(150));h=l.call(h);if(null==
h)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&
u.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);
d=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=
Wg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||"Component"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);
function dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);
function ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;
function mh(a,b){var c=nh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}
function rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}
function sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}
function Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}
function Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return"function"===typeof b?b(a):b}
function Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,
eagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
function Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
function Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}
function Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=
e.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}
function Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}
function Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}
function Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}
function $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}
function di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}
function Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}
var Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,
b,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;
wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c("r:"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c("r:"+(tf++).toString(36))},
void 0,null));return b}b="r:"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}
function ii(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}
function mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode||"unstable-defer-without-hiding"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}
function oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}
function pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A="function"===typeof n||"function"===typeof g.getSnapshotBeforeUpdate;A||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?("function"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.flags|=4)):("function"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n="function"===typeof C||
"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?("function"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||
h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}
function qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}
var si={dehydrated:null,retryLane:0};
function ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if("number"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},
b.memoizedState=si,b.lanes=33554432,a;c=vi({mode:"visible",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:
{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:"hidden",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}
function xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:"visible",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}
function wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:"hidden",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}
function zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}
function Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case "together":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;
Bi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};
Di=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "option":e=eb(a,e);d=eb(a,d);f=[];break;case "select":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===
l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||
(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ca.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&G("scroll",a),f||h===k||(f=[])):"object"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",
c);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===
b.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case "dialog":G("cancel",d);G("close",d);break;case "iframe":case "object":case "embed":G("load",d);break;case "video":case "audio":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case "source":G("error",d);break;case "img":case "image":case "link":G("error",d);G("load",d);break;case "details":G("toggle",d);break;case "input":Za(d,f);G("invalid",d);break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};G("invalid",d);break;case "textarea":hb(d,f),G("invalid",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],"children"===g?"string"===typeof e?d.textContent!==e&&(a=["children",e]):"number"===typeof e&&d.textContent!==""+e&&(a=["children",""+e]):ca.hasOwnProperty(g)&&null!=e&&"onScroll"===g&&G("scroll",d));switch(c){case "input":Va(d);cb(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=
jf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case "dialog":G("cancel",a);G("close",a);
e=d;break;case "iframe":case "object":case "embed":G("load",a);e=d;break;case "video":case "audio":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case "source":G("error",a);e=d;break;case "img":case "image":case "link":G("error",a);G("load",a);e=d;break;case "details":G("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);G("invalid",a);break;case "option":e=eb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G("invalid",a);break;case "textarea":hb(a,d);e=
gb(a,d);G("invalid",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?tb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):"children"===f?"string"===typeof k?("textarea"!==c||""!==k)&&pb(a,k):"number"===typeof k&&pb(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ca.hasOwnProperty(f)?null!=k&&"onScroll"===f&&G("scroll",a):null!=k&&qa(a,f,k,g))}switch(c){case "input":Va(a);cb(a,d,!1);
break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(y(166));
c=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=
4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);
null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,
f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&"hidden"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=
64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&"unstable-defer-without-hiding"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}
function Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}
function Mi(a,b){try{var c="",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi="function"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}
function Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}var Ui="function"===typeof WeakSet?WeakSet:Set;
function Vi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}
function Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,
b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));
return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}
function aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,"function"===typeof d.setProperty?d.setProperty("display","none","important"):d.display="none";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null;d.style.display=sb("display",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?"":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===
a)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}
function bj(a,b){if(Mf&&"function"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if("function"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,
f)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}
function fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,""),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===
c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}
function gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}
function hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}
function cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,
8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}
function ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;"input"===a&&"radio"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=
2){var g=f[e],h=f[e+1];"style"===g?tb(c,h):"dangerouslySetInnerHTML"===g?ob(c,h):"children"===g?pb(c,h):qa(c,g,h,b)}switch(a){case "input":ab(c,d);break;case "textarea":ib(c,d);break;case "select":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=
b.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
function mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}
function Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}
function Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}
function Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),
c=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}
function Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=
a.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>
c?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}
function Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}
function Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}
function Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}
function Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):
(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=
void 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==V&&(V=2);k=Mi(k,h);p=
g;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&("function"===typeof K.getDerivedStateFromError||null!==Q&&"function"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}
function Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}
function Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==
a.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}
function dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==
Cj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if("selectionStart"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;
break a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===
Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,"");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&("function"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==
J&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),"selectionStart"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===
g.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});"function"===typeof t.focus&&t.focus();for(t=
0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}"function"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=
Z.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&"function"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}
function ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}
function fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if("function"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=
null,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}
function Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if("function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}
function Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;
ck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==
b?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if("object"===
typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);
a=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));
d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&
ph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,
c),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=
k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,
f.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));
};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}
function hk(a){if("function"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}
function Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};
c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Vg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)ji(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if("object"===
typeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,""));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}
function Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}
function kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
function lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==
d&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}
function qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}
qk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
function sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}
function tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};
gc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};
yb=function(a,b,c){switch(b){case "input":ab(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;
Hb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"};
var xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||
pk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;
exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};
exports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version="17.0.2";

},{"react":"dmLA","object-assign":"yheg","scheduler":"vqYn"}],"kUqu":[function(require,module,exports) {
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if ("production" !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if ("production" === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
},{"./cjs/react-dom.production.min.js":"ogJH"}],"lQpO":[function(require,module,exports) {
"use strict"; // Must be Firefox ESR compatible!
// Beware of cross-origin!
// TODO clean the logs

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_from_top = exports.load_script_from_top = exports.set_xoff_flag = exports.extend_xoff = exports.get_xoff_flag = exports.get_log_symbol = exports.get_xoff_depth = exports.get_top_ish_window = exports.get_top_xoff_window = exports.get_top_window = exports.is_isolated = exports.get_xoff = void 0; // check that we are always explicit

var document; //let window: never
////////////////////////////////////
// note that should NEVER be accessed directly on another iframe without a try/catch
// due to cross origin/sandbox

var PROP = 'oᐧextra';
var FLAG_DEBUG_XOFF = 'debug_xoff';
var FLAG_DEBUG_RENDER = 'debug_render'; ////////////////////////////////////
/////// Accessors

function _get_xoff(win) {
  if (win === void 0) {
    win = window;
  }

  try {
    // may throw if cross-origin/sandbox
    return win[PROP];
  } catch (_a) {
    return undefined;
  }
}

function get_xoff(win) {
  if (win === void 0) {
    win = window;
  }

  var xoff = _get_xoff(win);

  if (!xoff) throw new Error('🆇ⓧ get_xoff(): not found on target!');
  return xoff;
}

exports.get_xoff = get_xoff; // can't access parent, either sandboxed or cross-origin

function is_isolated(win) {
  if (win === void 0) {
    win = window;
  }

  var top_win = get_xoff(win).top_win;
  return !_get_xoff(top_win);
}

exports.is_isolated = is_isolated; // TODO isn't that always the parent of the top xoff win?

function get_top_window(win) {
  if (win === void 0) {
    win = window;
  }

  return get_xoff(win).top_win;
}

exports.get_top_window = get_top_window;

function get_top_xoff_window(win) {
  if (win === void 0) {
    win = window;
  }

  return get_xoff(win).top_xoff_win;
}

exports.get_top_xoff_window = get_top_xoff_window;

function get_top_ish_window(win) {
  if (win === void 0) {
    win = window;
  }

  return is_isolated() ? get_top_xoff_window(win) : get_top_window(win);
}

exports.get_top_ish_window = get_top_ish_window;

function get_xoff_depth(win) {
  if (win === void 0) {
    win = window;
  }

  var xoff = _get_xoff(win);

  if (xoff) return xoff.xdepth;

  if (win.parent !== win) {
    try {
      var parent_xoff = _get_xoff(win.parent);

      if (parent_xoff) return parent_xoff.xdepth + 1;
    } catch (_a) {}

    return 1;
  }

  return 0;
}

exports.get_xoff_depth = get_xoff_depth;

function get_log_symbol(win) {
  if (win === void 0) {
    win = window;
  }

  var xoff = _get_xoff(win);

  if (!xoff) return 'ⓧ';
  var xdepth = get_xoff_depth(win);
  if (xdepth === 0) return '⓪'; // no zero, we use o

  return String.fromCodePoint(0x245F + xdepth);
}

exports.get_log_symbol = get_log_symbol;

function get_log_prefix(win) {
  if (win === void 0) {
    win = window;
  }

  return "\uD83C\uDD87 " + get_log_symbol(win);
}

function get_script_memo_attribute(url) {
  return "\u2186script\uA4FD" + url;
}

function get_flag_attribute(name) {
  return "flag\uA4FD" + name;
}

function get_xoff_flag(name, win) {
  if (win === void 0) {
    win = window;
  }

  var xoff = get_xoff(win);
  return xoff[get_flag_attribute(name)];
}

exports.get_xoff_flag = get_xoff_flag; ////////////////////////////////////

function ensure_xoff(win) {
  //console.log('🆇 ensure_xoff()', { win, existing_xoff_depth: get_xoff_depth(win) || undefined })
  var _a;

  if (win === void 0) {
    win = window;
  }

  if (!_get_xoff(win)) {
    var root = null;

    if (win.parent !== win) {
      try {
        // can fail if cross-origin
        root = ensure_xoff(win.parent);
      } catch (err) {//console.warn(`${get_log_prefix(win)} error on ensure_xoff(parent)`, { err })
      }
    }

    var properties = __assign(__assign({}, root === null && (_a = {
      top_win: {
        value: win.parent,
        writable: false
      },
      top_xoff_win: {
        value: win,
        writable: false
      }
    }, _a[get_flag_attribute(FLAG_DEBUG_XOFF)] = {
      value: false,
      writable: true
    }, _a[get_flag_attribute(FLAG_DEBUG_RENDER)] = {
      value: false,
      writable: true
    }, _a)), {
      xdepth: {
        value: get_xoff_depth(win),
        writable: false
      }
    });

    win[PROP] = Object.create(root, properties); //console.log(`${get_log_prefix(win)} ensure_xoff() installed`, { xdepth: get_xoff(win).xdepth, xoff: get_xoff(win) })
  }

  if (get_xoff_flag(FLAG_DEBUG_XOFF, win)) console.log(get_log_prefix(win) + " ensure_xoff() \u2714", {
    xoff: get_xoff(win)
  });
  return get_xoff(win);
}

function extend_xoff(defaults, win) {
  if (win === void 0) {
    win = window;
  }

  if (get_xoff_flag(FLAG_DEBUG_XOFF, win)) console.log(get_log_prefix(win) + " extend_xoff()", {
    defaults: defaults,
    win: win
  });
  var xoff = get_xoff(win);
  Object.entries(defaults).filter(function (_a) {
    var k = _a[0];
    return !(k in xoff);
  }).forEach(function (_a) {
    var k = _a[0],
        value = _a[1];
    return xoff[k] = value;
  });
  return xoff;
}

exports.extend_xoff = extend_xoff;

function set_xoff_flag(name, value, win) {
  if (win === void 0) {
    win = window;
  }

  var xoff = get_xoff(win);
  xoff[get_flag_attribute(name)] = value;
}

exports.set_xoff_flag = set_xoff_flag; ////////////////////////////////////
// needed to bypass X-Frame preventions

function load_script_from_top(url, target_win) {
  if (target_win === void 0) {
    target_win = get_top_ish_window();
  }

  console.log(get_log_prefix() + " \u2192 " + get_log_symbol(target_win) + " load_script_from_top()\u2026", {
    url: url
  });
  return Promise.resolve().then(function () {
    if (!_get_xoff(target_win)) throw new Error(get_log_prefix() + " load_script_from_top(): invalid target window! (cross origin?)");
    var xoff_scripts = get_xoff(target_win);
    var memo_attribute = get_script_memo_attribute(url);

    if (!xoff_scripts[memo_attribute]) {
      var all_existing_target_scripts = Array.from(target_win.document.querySelectorAll('script'));

      var script_1 = all_existing_target_scripts.find(function (s) {
        return s.src === url;
      }) || function () {
        var el = target_win.document.createElement('script'); //el.type = 'text/javascript'

        el.src = url;
        el.importance = 'low'; // https://developers.google.com/web/updates/2019/02/priority-hints

        el.defer = true;
        target_win.document.body.appendChild(el);
        return el;
      }();

      xoff_scripts[memo_attribute] = new Promise(function (resolve, reject) {
        script_1.onload = function () {
          if (get_xoff_flag(FLAG_DEBUG_XOFF)) console.log(get_log_prefix() + " script loaded from top \u2714", url);
          resolve(script_1);
        };

        script_1.onerror = function (_m, _s, _l, _c, err) {
          err = err !== null && err !== void 0 ? err : new Error('Unknown script loading error!');
          console.warn(get_log_prefix() + " script failed to load from top!", {
            url: url,
            err: err
          }, err);
          reject(err);
        };
      });
    }

    return xoff_scripts[memo_attribute];
  });
}

exports.load_script_from_top = load_script_from_top;

function _stringify_fn_call(fn) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  return ";(" + String(fn) + ")(" + args.map(function (p) {
    return JSON.stringify(p);
  }).join(',') + ")";
}

function execute_from_top(fn) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  var target_win = get_top_ish_window();

  var code = _stringify_fn_call.apply(void 0, __spreadArray([fn], args));

  console.log(get_log_prefix() + " \u2192 " + get_log_symbol(target_win) + " execute_from_top()\u2026", {
    fn: fn,
    code: code,
    target_win: target_win
  });
  return Promise.resolve().then(function () {
    var target_is_me = target_win === window;

    if (target_is_me) {
      // better bc 1) better error report 2) better privacy (avoid a postMessage)
      eval(code);
      return;
    }

    var origin = window.document.location.origin; // local files all have unique origins https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSRequestNotHttp
    // also a local file has origin === "null" on Firefox ESR

    var targetOrigin = !origin || origin === 'file://' || origin === 'null' ? '*' : origin;
    target_win.postMessage({
      xoff: {
        code: code
      }
    }, targetOrigin); // TODO some sort of callback?
  }).catch(function (err) {
    console.warn(get_log_prefix() + " \u2192 " + get_log_symbol(target_win) + " execute_from_top() failed!", {
      fn: fn,
      code: code,
      err: err
    });
    throw err;
  });
}

exports.execute_from_top = execute_from_top; ////////////////////////////////////

ensure_xoff();
window.addEventListener('message', function (_a) {
  var data = _a.data,
      origin = _a.origin,
      source = _a.source;
  if (!data.xoff) return;
  console.log(get_log_prefix() + " received xoff postm", {
    data: data,
    origin: origin,
    source: source,
    depth: get_xoff_depth()
  });
  if (data.xoff.code) eval(data.xoff.code);
}, false);
if (get_xoff_flag(FLAG_DEBUG_XOFF)) console.log(get_log_prefix() + " is listening");
},{}],"rNv7":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],"JWAU":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

},{"./lib/ReactPropTypesSecret":"rNv7"}],"X9bF":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
if ("production" !== 'production') {
  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod


  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}
},{"./factoryWithThrowingShims":"JWAU"}],"VYmh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var isProduction = "production" === 'production';
var prefix = 'Invariant failed';

function invariant(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction) {
    throw new Error(prefix);
  }

  throw new Error(prefix + ": " + (message || ''));
}

var _default = invariant;
exports.default = _default;
},{}],"ehj8":[function(require,module,exports) {
var global = arguments[3];
"use strict";
/* global globalThis, self, window, global */

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getGlobalThis = void 0;
var lastResort = {};

function getGlobalThis() {
  // @ts-ignore
  if (typeof globalThis !== 'undefined') return globalThis; // check node first https://github.com/ljharb/globalThis/issues/2
  // @ts-ignore

  if (typeof global !== 'undefined') return global; // @ts-ignore

  if (typeof self !== 'undefined') return self; // @ts-ignore

  if (typeof window !== 'undefined') return window;
  if (typeof this !== 'undefined') return this;
  return lastResort; // should never happen
}

exports.default = getGlobalThis;
exports.getGlobalThis = getGlobalThis;
},{}],"uoWx":[function(require,module,exports) {
"use strict";

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

var _a, _b;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestIdleCallback = exports.MAX_IDLE_DELAY_MS = exports.MIN_IDLE_DELAY_MS = exports.setImmediate = exports.nextTick = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var globalthis_ponyfill_1 = require("@offirmo/globalthis-ponyfill"); // XXX DO NOT USE
// XXX queueMicrotask() SHOULD ALWAYS BE PREFERRED
// node only so far, semantic changed in >=0.9.1
// adds callback to the "next tick queue".
// This queue is fully drained after the current operation on the JavaScript stack runs to completion
// and before the event loop is allowed to continue.
// It's possible to create an infinite loop if one were to recursively call process.nextTick()


exports.nextTick = ((_a = globalthis_ponyfill_1.getGlobalThis().process) === null || _a === void 0 ? void 0 : _a.nextTick) || function nextTickPonyFill(callback) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  } // closest possible effect in browser


  queueMicrotask(function () {
    return callback.apply(void 0, args);
  });
};

exports.setImmediate = globalthis_ponyfill_1.getGlobalThis().setImmediate || function setImmediatePonyFill(callback) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  } // closest possible effect


  setTimeout.apply(void 0, __spreadArray([callback, 0], args));
}; // browser only
// Strange semantic of being clamped to 50ms
// https://developers.google.com/web/updates/2015/08/using-requestidlecallback


exports.MIN_IDLE_DELAY_MS = 2; // since <=1 is all the same

exports.MAX_IDLE_DELAY_MS = 50; // according to https://developers.google.com/web/updates/2015/08/using-requestidlecallback

var DEFAULT_IDLE_DELAY_MS = exports.MIN_IDLE_DELAY_MS; // interesting discussion:

exports.requestIdleCallback = ((_b = globalthis_ponyfill_1.getGlobalThis().requestIdleCallback) === null || _b === void 0 ? void 0 : _b.bind(globalthis_ponyfill_1.getGlobalThis()) // yes, the bind is needed
) || function requestIdleCallbackPonyFill(callback, _a) {
  // inspired from https://developers.google.com/web/updates/2015/08/using-requestidlecallback#checking_for_requestidlecallback
  var _b = _a === void 0 ? {} : _a,
      _c = _b.timeout,
      timeout = _c === void 0 ? DEFAULT_IDLE_DELAY_MS : _c;

  tiny_invariant_1.default(timeout >= exports.MIN_IDLE_DELAY_MS, 'whats the point in requesting idle with a short timeout??');
  tiny_invariant_1.default(timeout <= exports.MAX_IDLE_DELAY_MS, 'must be an error requesting idle with a timeout of more than 50ms??');
  var startTime = Date.now();

  function timeRemaining() {
    return Math.max(0, Date.now() - startTime);
  } // const fake_possible_idle_delay_for_polyfill_ms = Math.floor(Math.random() * timeout) NO!! or subsequent calls may happen earlier than the previous!
  //const final_delay_ms = Math.max(fake_possible_idle_delay_for_polyfill_ms, MIN_IDLE_DELAY_MS)


  var final_delay_ms = exports.MIN_IDLE_DELAY_MS; // no choice in a polyfill...

  return setTimeout(function () {
    callback({
      didTimeout: false,
      timeRemaining: timeRemaining
    });
  }, final_delay_ms);
}; // TODO one day cancelIdleCallback (I don't need it)
},{"tiny-invariant":"VYmh","@offirmo/globalthis-ponyfill":"ehj8"}],"aA5C":[function(require,module,exports) {
"use strict";

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.all_planned_idle_executed = exports.next_idle = exports.elapsed_time_ms = exports.end_of_current_event_loop = exports.next_microtask = void 0;

var ponyfills_1 = require("./ponyfills");

function next_microtask() {
  return __awaiter(this, void 0, Promise, function () {
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          return [4
          /*yield*/
          , Promise.resolve()];
        // promise resolution is in microtasks

        case 1:
          _a.sent(); // promise resolution is in microtasks


          return [2
          /*return*/
          ];
      }
    });
  });
}

exports.next_microtask = next_microtask;

function end_of_current_event_loop() {
  return __awaiter(this, void 0, Promise, function () {
    return __generator(this, function (_a) {
      return [2
      /*return*/
      , new Promise(function (resolve) {
        setTimeout(resolve, 0);
      })];
    });
  });
}

exports.end_of_current_event_loop = end_of_current_event_loop;

function elapsed_time_ms(duration_ms) {
  return __awaiter(this, void 0, Promise, function () {
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          return [4
          /*yield*/
          , new Promise(function (resolve) {
            setTimeout(resolve, duration_ms);
          })];

        case 1:
          _a.sent();

          return [4
          /*yield*/
          , end_of_current_event_loop()];
        // extra wait for stuff that would fire exactly at the limit

        case 2:
          _a.sent(); // extra wait for stuff that would fire exactly at the limit


          return [2
          /*return*/
          ];
      }
    });
  });
}

exports.elapsed_time_ms = elapsed_time_ms;

function next_idle() {
  return __awaiter(this, void 0, Promise, function () {
    return __generator(this, function (_a) {
      return [2
      /*return*/
      , new Promise(function (resolve) {
        ponyfills_1.requestIdleCallback(resolve);
      })];
    });
  });
}

exports.next_idle = next_idle; // useful for tests

function all_planned_idle_executed() {
  var _a;

  return __awaiter(this, void 0, Promise, function () {
    var info, safety;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          safety = 10;
          _b.label = 1;

        case 1:
          if (!(--safety && ((_a = info === null || info === void 0 ? void 0 : info.didTimeout) !== null && _a !== void 0 ? _a : true))) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , next_idle() //console.log({ safety, dt: info?.didTimeout ?? true})
          ];

        case 2:
          info = _b.sent();
          return [3
          /*break*/
          , 1];

        case 3:
          return [2
          /*return*/
          ];
      }
    });
  });
}

exports.all_planned_idle_executed = all_planned_idle_executed;
},{"./ponyfills":"uoWx"}],"l9Jw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dezalgo = exports.asap_but_out_of_current_event_loop = exports.asap_but_out_of_immediate_execution = exports.asap_but_not_synchronous = exports.schedule_when_idle_but_within_human_perception = exports.schedule_when_idle_but_not_too_far = exports.MAX_IDLE_DELAY_SAFE_FOR_HUMAN_PERCEPTION_MS = exports.HUMAN_PERCEPTION_MS = exports.FRAME_DURATION_MS = exports.BETTER_DELAY_UNTIL_NEXT_EVENT_LOOP_MS = exports.DELAY_UNTIL_NEXT_EVENT_LOOP_MS = void 0;

var ponyfills_1 = require("./ponyfills");

exports.DELAY_UNTIL_NEXT_EVENT_LOOP_MS = 1; // for Chrome/nodejs at least

exports.BETTER_DELAY_UNTIL_NEXT_EVENT_LOOP_MS = 2 * exports.DELAY_UNTIL_NEXT_EVENT_LOOP_MS; // to account for outdated code using setTimeout(0)

exports.FRAME_DURATION_MS = Math.floor(1000 / 60); // 60 fps

exports.HUMAN_PERCEPTION_MS = 100; // https://developers.google.com/web/updates/2015/08/using-requestidlecallback

exports.MAX_IDLE_DELAY_SAFE_FOR_HUMAN_PERCEPTION_MS = Math.floor(exports.HUMAN_PERCEPTION_MS / 2.); // https://developers.google.com/web/updates/2015/08/using-requestidlecallback

function schedule_when_idle_but_not_too_far(callback, max_delay_ms) {
  if (max_delay_ms === void 0) {
    max_delay_ms = ponyfills_1.MAX_IDLE_DELAY_MS;
  }

  ponyfills_1.requestIdleCallback(callback, {
    timeout: max_delay_ms
  });
}

exports.schedule_when_idle_but_not_too_far = schedule_when_idle_but_not_too_far;

function schedule_when_idle_but_within_human_perception(callback) {
  // yes, same as above but semantically different
  ponyfills_1.requestIdleCallback(callback, {
    timeout: exports.MAX_IDLE_DELAY_SAFE_FOR_HUMAN_PERCEPTION_MS
  });
}

exports.schedule_when_idle_but_within_human_perception = schedule_when_idle_but_within_human_perception;

function asap_but_not_synchronous(callback) {
  queueMicrotask(callback);
}

exports.asap_but_not_synchronous = asap_but_not_synchronous;

function asap_but_out_of_immediate_execution(callback) {
  setTimeout(callback, exports.BETTER_DELAY_UNTIL_NEXT_EVENT_LOOP_MS);
}

exports.asap_but_out_of_immediate_execution = asap_but_out_of_immediate_execution;

function asap_but_out_of_current_event_loop(callback) {
  setTimeout(callback, exports.BETTER_DELAY_UNTIL_NEXT_EVENT_LOOP_MS);
}

exports.asap_but_out_of_current_event_loop = asap_but_out_of_current_event_loop; // https://blog.izs.me/2013/08/designing-apis-for-asynchrony

function dezalgo(callback) {
  return function () {
    return queueMicrotask(callback);
  };
}

exports.dezalgo = dezalgo;
},{"./ponyfills":"uoWx"}],"i8Ln":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./awaitable"), exports);

__exportStar(require("./ponyfills"), exports);

__exportStar(require("./semantic"), exports);
},{"./awaitable":"aA5C","./ponyfills":"uoWx","./semantic":"l9Jw"}],"MKE5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"Hpim":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INTERNAL_PROP = exports.LIB = void 0;
const LIB = 'soft-execution-context';
exports.LIB = LIB;
const INTERNAL_PROP = '_SEC';
exports.INTERNAL_PROP = INTERNAL_PROP;
},{}],"NksD":[function(require,module,exports) {
'use strict';

const anyMap = new WeakMap();
const eventsMap = new WeakMap();
const producersMap = new WeakMap();
const anyProducer = Symbol('anyProducer');
const resolvedPromise = Promise.resolve();
const listenerAdded = Symbol('listenerAdded');
const listenerRemoved = Symbol('listenerRemoved');

function assertEventName(eventName) {
  if (typeof eventName !== 'string' && typeof eventName !== 'symbol') {
    throw new TypeError('eventName must be a string or a symbol');
  }
}

function assertListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('listener must be a function');
  }
}

function getListeners(instance, eventName) {
  const events = eventsMap.get(instance);

  if (!events.has(eventName)) {
    events.set(eventName, new Set());
  }

  return events.get(eventName);
}

function getEventProducers(instance, eventName) {
  const key = typeof eventName === 'string' || typeof eventName === 'symbol' ? eventName : anyProducer;
  const producers = producersMap.get(instance);

  if (!producers.has(key)) {
    producers.set(key, new Set());
  }

  return producers.get(key);
}

function enqueueProducers(instance, eventName, eventData) {
  const producers = producersMap.get(instance);

  if (producers.has(eventName)) {
    for (const producer of producers.get(eventName)) {
      producer.enqueue(eventData);
    }
  }

  if (producers.has(anyProducer)) {
    const item = Promise.all([eventName, eventData]);

    for (const producer of producers.get(anyProducer)) {
      producer.enqueue(item);
    }
  }
}

function iterator(instance, eventNames) {
  eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];
  let isFinished = false;

  let flush = () => {};

  let queue = [];
  const producer = {
    enqueue(item) {
      queue.push(item);
      flush();
    },

    finish() {
      isFinished = true;
      flush();
    }

  };

  for (const eventName of eventNames) {
    getEventProducers(instance, eventName).add(producer);
  }

  return {
    async next() {
      if (!queue) {
        return {
          done: true
        };
      }

      if (queue.length === 0) {
        if (isFinished) {
          queue = undefined;
          return this.next();
        }

        await new Promise(resolve => {
          flush = resolve;
        });
        return this.next();
      }

      return {
        done: false,
        value: await queue.shift()
      };
    },

    async return(value) {
      queue = undefined;

      for (const eventName of eventNames) {
        getEventProducers(instance, eventName).delete(producer);
      }

      flush();
      return arguments.length > 0 ? {
        done: true,
        value: await value
      } : {
        done: true
      };
    },

    [Symbol.asyncIterator]() {
      return this;
    }

  };
}

function defaultMethodNamesOrAssert(methodNames) {
  if (methodNames === undefined) {
    return allEmitteryMethods;
  }

  if (!Array.isArray(methodNames)) {
    throw new TypeError('`methodNames` must be an array of strings');
  }

  for (const methodName of methodNames) {
    if (!allEmitteryMethods.includes(methodName)) {
      if (typeof methodName !== 'string') {
        throw new TypeError('`methodNames` element must be a string');
      }

      throw new Error(`${methodName} is not Emittery method`);
    }
  }

  return methodNames;
}

const isListenerSymbol = symbol => symbol === listenerAdded || symbol === listenerRemoved;

class Emittery {
  static mixin(emitteryPropertyName, methodNames) {
    methodNames = defaultMethodNamesOrAssert(methodNames);
    return target => {
      if (typeof target !== 'function') {
        throw new TypeError('`target` must be function');
      }

      for (const methodName of methodNames) {
        if (target.prototype[methodName] !== undefined) {
          throw new Error(`The property \`${methodName}\` already exists on \`target\``);
        }
      }

      function getEmitteryProperty() {
        Object.defineProperty(this, emitteryPropertyName, {
          enumerable: false,
          value: new Emittery()
        });
        return this[emitteryPropertyName];
      }

      Object.defineProperty(target.prototype, emitteryPropertyName, {
        enumerable: false,
        get: getEmitteryProperty
      });

      const emitteryMethodCaller = methodName => function (...args) {
        return this[emitteryPropertyName][methodName](...args);
      };

      for (const methodName of methodNames) {
        Object.defineProperty(target.prototype, methodName, {
          enumerable: false,
          value: emitteryMethodCaller(methodName)
        });
      }

      return target;
    };
  }

  constructor() {
    anyMap.set(this, new Set());
    eventsMap.set(this, new Map());
    producersMap.set(this, new Map());
  }

  on(eventNames, listener) {
    assertListener(listener);
    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

    for (const eventName of eventNames) {
      assertEventName(eventName);
      getListeners(this, eventName).add(listener);

      if (!isListenerSymbol(eventName)) {
        this.emit(listenerAdded, {
          eventName,
          listener
        });
      }
    }

    return this.off.bind(this, eventNames, listener);
  }

  off(eventNames, listener) {
    assertListener(listener);
    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

    for (const eventName of eventNames) {
      assertEventName(eventName);
      getListeners(this, eventName).delete(listener);

      if (!isListenerSymbol(eventName)) {
        this.emit(listenerRemoved, {
          eventName,
          listener
        });
      }
    }
  }

  once(eventNames) {
    return new Promise(resolve => {
      const off = this.on(eventNames, data => {
        off();
        resolve(data);
      });
    });
  }

  events(eventNames) {
    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

    for (const eventName of eventNames) {
      assertEventName(eventName);
    }

    return iterator(this, eventNames);
  }

  async emit(eventName, eventData) {
    assertEventName(eventName);
    enqueueProducers(this, eventName, eventData);
    const listeners = getListeners(this, eventName);
    const anyListeners = anyMap.get(this);
    const staticListeners = [...listeners];
    const staticAnyListeners = isListenerSymbol(eventName) ? [] : [...anyListeners];
    await resolvedPromise;
    await Promise.all([...staticListeners.map(async listener => {
      if (listeners.has(listener)) {
        return listener(eventData);
      }
    }), ...staticAnyListeners.map(async listener => {
      if (anyListeners.has(listener)) {
        return listener(eventName, eventData);
      }
    })]);
  }

  async emitSerial(eventName, eventData) {
    assertEventName(eventName);
    const listeners = getListeners(this, eventName);
    const anyListeners = anyMap.get(this);
    const staticListeners = [...listeners];
    const staticAnyListeners = [...anyListeners];
    await resolvedPromise;
    /* eslint-disable no-await-in-loop */

    for (const listener of staticListeners) {
      if (listeners.has(listener)) {
        await listener(eventData);
      }
    }

    for (const listener of staticAnyListeners) {
      if (anyListeners.has(listener)) {
        await listener(eventName, eventData);
      }
    }
    /* eslint-enable no-await-in-loop */

  }

  onAny(listener) {
    assertListener(listener);
    anyMap.get(this).add(listener);
    this.emit(listenerAdded, {
      listener
    });
    return this.offAny.bind(this, listener);
  }

  anyEvent() {
    return iterator(this);
  }

  offAny(listener) {
    assertListener(listener);
    this.emit(listenerRemoved, {
      listener
    });
    anyMap.get(this).delete(listener);
  }

  clearListeners(eventNames) {
    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

    for (const eventName of eventNames) {
      if (typeof eventName === 'string' || typeof eventName === 'symbol') {
        getListeners(this, eventName).clear();
        const producers = getEventProducers(this, eventName);

        for (const producer of producers) {
          producer.finish();
        }

        producers.clear();
      } else {
        anyMap.get(this).clear();

        for (const listeners of eventsMap.get(this).values()) {
          listeners.clear();
        }

        for (const producers of producersMap.get(this).values()) {
          for (const producer of producers) {
            producer.finish();
          }

          producers.clear();
        }
      }
    }
  }

  listenerCount(eventNames) {
    eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];
    let count = 0;

    for (const eventName of eventNames) {
      if (typeof eventName === 'string') {
        count += anyMap.get(this).size + getListeners(this, eventName).size + getEventProducers(this, eventName).size + getEventProducers(this).size;
        continue;
      }

      if (typeof eventName !== 'undefined') {
        assertEventName(eventName);
      }

      count += anyMap.get(this).size;

      for (const value of eventsMap.get(this).values()) {
        count += value.size;
      }

      for (const value of producersMap.get(this).values()) {
        count += value.size;
      }
    }

    return count;
  }

  bindMethods(target, methodNames) {
    if (typeof target !== 'object' || target === null) {
      throw new TypeError('`target` must be an object');
    }

    methodNames = defaultMethodNamesOrAssert(methodNames);

    for (const methodName of methodNames) {
      if (target[methodName] !== undefined) {
        throw new Error(`The property \`${methodName}\` already exists on \`target\``);
      }

      Object.defineProperty(target, methodName, {
        enumerable: false,
        value: this[methodName].bind(this)
      });
    }
  }

}

const allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');
Object.defineProperty(Emittery, 'listenerAdded', {
  value: listenerAdded,
  writable: false,
  enumerable: true,
  configurable: false
});
Object.defineProperty(Emittery, 'listenerRemoved', {
  value: listenerRemoved,
  writable: false,
  enumerable: true,
  configurable: false
});
module.exports = Emittery;
},{}],"ZOiq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ROOT_PROTOTYPE = void 0;

var _emittery = _interopRequireDefault(require("emittery"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/////////////////////
const ROOT_PROTOTYPE = Object.create(null); // global bus shared by all SECs

exports.ROOT_PROTOTYPE = ROOT_PROTOTYPE;
ROOT_PROTOTYPE.emitter = new _emittery.default(); // common functions
// because we often set the same details

ROOT_PROTOTYPE.setAnalyticsAndErrorDetails = function setAnalyticsAndErrorDetails(details = {}) {
  const SEC = this;
  return SEC.setAnalyticsDetails(details).setErrorReportDetails(details);
}; /////////////////////
},{"emittery":"NksD"}],"yxs4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = create;
exports.activate_plugin = activate_plugin;
exports.reduce_plugin = reduce_plugin;
// Note: let's keep everything immutable
/////////////////////
let instance_count = 0;

function create(parent_state) {
  return {
    sid: instance_count++,
    parent: parent_state || null,
    plugins: {},
    cache: {} // per-SEC cache for complex computations

  };
}

function activate_plugin(state, PLUGIN
/*, args*/
) {
  const plugin_parent_state = state.parent ? state.parent.plugins[PLUGIN.id] : null;
  const plugin_state = PLUGIN.state.create(plugin_parent_state);
  return { ...state,
    plugins: { ...state.plugins,
      [PLUGIN.id]: { ...plugin_state,
        sid: state.sid // propagate sid. Not really useful yet, but helps debug

      }
    }
  };
}

function reduce_plugin(state, PLUGIN_ID, reducer) {
  const initial_plugin_state = state.plugins[PLUGIN_ID];
  const new_plugin_state = reducer(initial_plugin_state);
  if (new_plugin_state === initial_plugin_state) return state; // no change (immutability expected)

  return { ...state,
    plugins: { ...state.plugins,
      [PLUGIN_ID]: new_plugin_state
    }
  };
} /////////////////////
},{}],"UZff":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LOGICAL_STACK_SEPARATOR_NON_ADJACENT = exports.LOGICAL_STACK_OPERATION_MARKER = exports.LOGICAL_STACK_SEPARATOR = exports.LOGICAL_STACK_MODULE_MARKER = exports.LOGICAL_STACK_END_MARKER = exports.LOGICAL_STACK_BEGIN_MARKER = void 0;
const LOGICAL_STACK_BEGIN_MARKER = '';
exports.LOGICAL_STACK_BEGIN_MARKER = LOGICAL_STACK_BEGIN_MARKER;
const LOGICAL_STACK_END_MARKER = '';
exports.LOGICAL_STACK_END_MARKER = LOGICAL_STACK_END_MARKER;
const LOGICAL_STACK_SEPARATOR = '›'; // '⋅' '↘' ':' '•' '›'

exports.LOGICAL_STACK_SEPARATOR = LOGICAL_STACK_SEPARATOR;
const LOGICAL_STACK_MODULE_MARKER = '';
exports.LOGICAL_STACK_MODULE_MARKER = LOGICAL_STACK_MODULE_MARKER;
const LOGICAL_STACK_OPERATION_MARKER = ''; // '…'

exports.LOGICAL_STACK_OPERATION_MARKER = LOGICAL_STACK_OPERATION_MARKER;
const LOGICAL_STACK_SEPARATOR_NON_ADJACENT = '…';
exports.LOGICAL_STACK_SEPARATOR_NON_ADJACENT = LOGICAL_STACK_SEPARATOR_NON_ADJACENT;
},{}],"pUmZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = create;
exports.set_module = set_module;
exports.set_operation = set_operation;

/////////////////////
function create(parent_state) {
  const stack = parent_state ? Object.create(parent_state.stack) : (() => {
    const stack = Object.create(null);
    stack.module = undefined;
    return stack;
  })();
  stack.operation = undefined; // should never inherit this one

  return {
    stack
  };
}

function set_module(state, module) {
  const {
    stack
  } = state;
  if (stack.module === module) return state;
  stack.module = module;
  return { ...state,
    stack
  };
}

function set_operation(state, operation) {
  const {
    stack
  } = state;
  if (stack.operation === operation) return state;
  stack.operation = operation;
  return { ...state,
    stack
  };
}
},{}],"WTsU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flattenToOwn = flattenToOwn;
exports._getSECStatePath = _getSECStatePath;
exports._flattenSEC = _flattenSEC;

var _consts = require("./consts");

function flattenToOwn(object) {
  if (!object) return object;
  if (Array.isArray(object)) return object;
  if (typeof object !== 'object') return object;
  const res = Object.create(null);

  for (const property in object) {
    res[property] = object[property];
  }

  return res;
} // needed for various tree traversal algorithms


function _getSECStatePath(SEC) {
  if (!SEC[_consts.INTERNAL_PROP].cache.statePath) {
    const path = [];
    let state = SEC[_consts.INTERNAL_PROP];

    while (state) {
      path.unshift(state);
      state = state.parent;
    }

    SEC[_consts.INTERNAL_PROP].cache.statePath = path;
  }

  return SEC[_consts.INTERNAL_PROP].cache.statePath;
} // for debug


function _flattenSEC(SEC) {
  const plugins = { ...SEC[_consts.INTERNAL_PROP].plugins
  };
  plugins.analytics.details = flattenToOwn(plugins.analytics.details);
  plugins.dependency_injection.context = flattenToOwn(plugins.dependency_injection.context);
  plugins.error_handling.details = flattenToOwn(plugins.error_handling.details);
  plugins.logical_stack.stack = flattenToOwn(plugins.logical_stack.stack);
  return plugins;
}
},{"./consts":"Hpim"}],"XZ6L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PLUGIN = void 0;

var _consts = require("../../consts");

var TopState = _interopRequireWildcard(require("../../state"));

var _consts2 = require("./consts");

var State = _interopRequireWildcard(require("./state"));

var _utils = require("../../utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PLUGIN_ID = 'logical_stack';
const BRANCH_JUMP_PSEUDO_STATE = {
  sid: -1,
  plugins: {
    [PLUGIN_ID]: {
      stack: {
        // NO module
        operation: _consts2.LOGICAL_STACK_SEPARATOR_NON_ADJACENT
      }
    }
  }
};

function _reduceStatePathToLogicalStack(statePath) {
  let current_module = null;
  return statePath.reduce((res, state) => {
    const {
      module,
      operation
    } = state.plugins[PLUGIN_ID].stack;

    if (module // check existence of module due to special case "BRANCH_JUMP_PSEUDO_STATE" above
    && module !== current_module) {
      res = res + (res.length ? _consts2.LOGICAL_STACK_SEPARATOR : '') + module;
      current_module = module;
    }

    if (operation) res = res + _consts2.LOGICAL_STACK_SEPARATOR + operation + _consts2.LOGICAL_STACK_OPERATION_MARKER;
    return res;
  }, '') + _consts2.LOGICAL_STACK_END_MARKER;
}

const PLUGIN = {
  id: PLUGIN_ID,
  state: State,
  augment: prototype => {
    prototype.setLogicalStack = function setLogicalStack({
      module,
      operation
    }) {
      const SEC = this;
      let root_state = SEC[_consts.INTERNAL_PROP];
      root_state = TopState.reduce_plugin(root_state, PLUGIN_ID, state => {
        if (module) state = State.set_module(state, module);
        if (operation) state = State.set_operation(state, operation);
        return state;
      });
      SEC[_consts.INTERNAL_PROP] = root_state;
      return SEC;
    };

    prototype.getLogicalStack = function getLogicalStack() {
      const SEC = this;
      return _reduceStatePathToLogicalStack((0, _utils._getSECStatePath)(SEC));
    };

    prototype.getShortLogicalStack = function get_stack_end() {
      const {
        stack
      } = this[_consts.INTERNAL_PROP].plugins[PLUGIN_ID];
      return _consts2.LOGICAL_STACK_BEGIN_MARKER + stack.module + _consts2.LOGICAL_STACK_SEPARATOR_NON_ADJACENT //LOGICAL_STACK_SEPARATOR
      + stack.operation + _consts2.LOGICAL_STACK_OPERATION_MARKER + _consts2.LOGICAL_STACK_END_MARKER;
    };

    prototype._decorateErrorWithLogicalStack = function _decorateErrorWithLogicalStack(err) {
      const SEC = this;
      err._temp = err._temp || {};
      err.details = err.details || {};
      const logicalStack = {
        full: SEC.getLogicalStack()
      };

      if (err._temp.SEC) {
        // OK this error is already decorated.
        // Thus the message is also already decorated, don't touch it.
        // BUT we may be able to add more info, can we?
        if (err.details.logicalStack.includes(logicalStack.full)) {// ok, logical stack already chained, nothing to add
        } else {
          // SEC chain has branched, reconcile paths
          // OK maybe overkill...
          const other_path = err._temp.statePath;
          const current_path = (0, _utils._getSECStatePath)(SEC); // find common path

          let last_common_index = 0;

          for (let i = 1; i < current_path.length; ++i) {
            if (other_path[i] !== current_path[i]) break;
            last_common_index = i;
          } // reconcile the 2 stack traces


          let improvedStatePath = [].concat(current_path);
          improvedStatePath.push(BRANCH_JUMP_PSEUDO_STATE);
          improvedStatePath = improvedStatePath.concat(other_path.slice(last_common_index + 1));
          err._temp.statePath = improvedStatePath;
          err.details.logicalStack = _reduceStatePathToLogicalStack(improvedStatePath);
        }
      } else {
        err._temp.SEC = SEC;
        err._temp.statePath = (0, _utils._getSECStatePath)(SEC);
        logicalStack.short = SEC.getShortLogicalStack();

        if (err.message.startsWith(logicalStack.short)) {
          // can that happen??? It's a bug!

          /* eslint-disable no-console */
          console.warn('UNEXPECTED SEC non-decorated error already prefixed??');
          /* eslint-enable no-console */
        } else {
          err.message = logicalStack.short + ': ' + err.message;
        }

        err.details.logicalStack = logicalStack.full;
      }

      return err;
    };
  }
};
exports.PLUGIN = PLUGIN;
},{"../../consts":"Hpim","../../state":"yxs4","./consts":"UZff","./state":"pUmZ","../../utils":"WTsU"}],"ix0I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = create;
exports.injectDependencies = injectDependencies;

function create(parent_state) {
  const context = parent_state ? Object.create(parent_state.context) : Object.create(null); // NO auto-injections here, let's keep it simple. See core.

  return {
    context
  };
}

function injectDependencies(state, key, value) {
  const {
    context
  } = state;
  context[key] = value;
  return { ...state,
    context
  };
} /////////////////////
},{}],"D6KO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PLUGIN = exports.PLUGIN_ID = void 0;

var _consts = require("../../consts");

var TopState = _interopRequireWildcard(require("../../state"));

var State = _interopRequireWildcard(require("./state"));

var _utils = require("../../utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PLUGIN_ID = 'dependency_injection';
exports.PLUGIN_ID = PLUGIN_ID;
const PLUGIN = {
  id: PLUGIN_ID,
  state: State,
  augment: prototype => {
    prototype.injectDependencies = function injectDependencies(deps) {
      let root_state = this[_consts.INTERNAL_PROP];
      root_state = TopState.reduce_plugin(root_state, PLUGIN_ID, state => {
        Object.entries(deps).forEach(([key, value]) => {
          state = State.injectDependencies(state, key, value);
        });
        return state;
      });
      this[_consts.INTERNAL_PROP] = root_state;
      return this; // for chaining
    };

    prototype.getInjectedDependencies = function getInjectedDependencies() {
      const plugin_state = this[_consts.INTERNAL_PROP].plugins[PLUGIN_ID];
      return (0, _utils.flattenToOwn)(plugin_state.context);
    };
  }
};
exports.PLUGIN = PLUGIN;
},{"../../consts":"Hpim","../../state":"yxs4","./state":"ix0I","../../utils":"WTsU"}],"pNBs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promiseTry = void 0; // https://2ality.com/2017/08/promise-try.html#work-arounds

function promiseTry(fn) {
  return Promise.resolve().then(fn);
}

exports.promiseTry = promiseTry;
},{}],"QNOK":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_ISO8601_simplified_day = exports.get_ISO8601_simplified_minutes = exports.get_ISO8601_extended_ms = exports.get_human_readable_UTC_timestamp_ms = exports.get_human_readable_UTC_timestamp_seconds = exports.get_human_readable_UTC_timestamp_minutes = exports.get_human_readable_UTC_timestamp_days = exports.get_UTC_timestamp_ms = void 0; // ex. 1542780045627

function get_UTC_timestamp_ms(now) {
  if (now === void 0) {
    now = new Date();
  }

  return +now;
}

exports.get_UTC_timestamp_ms = get_UTC_timestamp_ms; /////////////////////
// spec:
// - human readable
// - as short as possible
// ex. 20181121
// assumed side effect of being castable to a number

function get_human_readable_UTC_timestamp_days(now) {
  if (now === void 0) {
    now = new Date();
  }

  var YYYY = now.getUTCFullYear();
  var MM = String(now.getUTCMonth() + 1).padStart(2, '0');
  var DD = String(now.getUTCDate()).padStart(2, '0');
  return "" + YYYY + MM + DD;
}

exports.get_human_readable_UTC_timestamp_days = get_human_readable_UTC_timestamp_days; // ex. 20181121_06h00

function get_human_readable_UTC_timestamp_minutes(now) {
  if (now === void 0) {
    now = new Date();
  }

  var hh = String(now.getUTCHours()).padStart(2, '0');
  var mm = String(now.getUTCMinutes()).padStart(2, '0');
  return get_human_readable_UTC_timestamp_days(now) + ("_" + hh + "h" + mm);
}

exports.get_human_readable_UTC_timestamp_minutes = get_human_readable_UTC_timestamp_minutes; // ex. 20190608_04h23m15

function get_human_readable_UTC_timestamp_seconds(now) {
  if (now === void 0) {
    now = new Date();
  }

  var ss = String(now.getUTCSeconds()).padStart(2, '0');
  return get_human_readable_UTC_timestamp_minutes(now) + ("m" + ss);
}

exports.get_human_readable_UTC_timestamp_seconds = get_human_readable_UTC_timestamp_seconds; // ex.      20181121_06h00m45s632
// formerly 20181121_06h00+45.632

function get_human_readable_UTC_timestamp_ms(now) {
  if (now === void 0) {
    now = new Date();
  }

  var mmm = String(now.getUTCMilliseconds()).padStart(3, '0');
  return get_human_readable_UTC_timestamp_seconds(now) + ("s" + mmm);
}

exports.get_human_readable_UTC_timestamp_ms = get_human_readable_UTC_timestamp_ms; /////////////////////
// ISO 8601 Extended Format. The format is as follows: YYYY-MM-DDTHH:mm:ss.sssZ
// https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15

function get_ISO8601_extended_ms(now) {
  if (now === void 0) {
    now = new Date();
  }

  return now.toISOString();
}

exports.get_ISO8601_extended_ms = get_ISO8601_extended_ms;

function get_ISO8601_simplified_minutes(now) {
  if (now === void 0) {
    now = new Date();
  }

  return get_ISO8601_extended_ms(now).slice(0, 16);
}

exports.get_ISO8601_simplified_minutes = get_ISO8601_simplified_minutes;

function get_ISO8601_simplified_day(now) {
  if (now === void 0) {
    now = new Date();
  }

  return get_ISO8601_extended_ms(now).slice(0, 10);
}

exports.get_ISO8601_simplified_day = get_ISO8601_simplified_day; // fun but unclear
// https://space.stackexchange.com/questions/36628/utc-timestamp-format-for-launch-vehicles

/*function get_space_timestamp_ms(now: Readonly<Date> = new Date()): string {
    const YYYY = now.getUTCFullYear()
    const MM = now.getUTCMonth()
    const DD = ('0' + now.getUTCDate()).slice(-2)
    const hh = ('0' + now.getUTCHours()).slice(-2)
    const mm = ('0' + now.getUTCMinutes()).slice(-2)
    const ss = ('0' + now.getUTCSeconds()).slice(-2)
    const mmm = ('00' + now.getUTCMilliseconds()).slice(-3)

    return `${DD} ${hh}:${mm}:${ss}.${mmm}`
}*/
/////////////////////
},{}],"bMV2":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TEST_TIMESTAMP_MS = void 0;

__exportStar(require("./types"), exports);

__exportStar(require("./generate"), exports);

exports.TEST_TIMESTAMP_MS = 1234567890; // useful for unit tests
},{"./types":"MKE5","./generate":"QNOK"}],"LZ8G":[function(require,module,exports) {
"use strict"; // explanation of the fields is in ./consts.ts

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"Krjq":[function(require,module,exports) {
"use strict";

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.COMMON_ERROR_FIELDS_EXTENDED = exports.COMMON_ERROR_FIELDS = exports.QUASI_STANDARD_ERROR_FIELDS = exports.STRICT_STANDARD_ERROR_FIELDS = void 0;
exports.STRICT_STANDARD_ERROR_FIELDS = new Set([// standard fields
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/prototype
'name', 'message']);
exports.QUASI_STANDARD_ERROR_FIELDS = new Set(__spreadArray(__spreadArray([], Array.from(exports.STRICT_STANDARD_ERROR_FIELDS)), [// quasi-standard: followed by all browsers + node
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/prototype
'stack']));
exports.COMMON_ERROR_FIELDS = new Set(__spreadArray(__spreadArray([], Array.from(exports.QUASI_STANDARD_ERROR_FIELDS)), [// standard in node only:
'code', // https://nodejs.org/dist/latest/docs/api/errors.html#errors_node_js_error_codes
// non standard but widely used:
'statusCode', 'shouldRedirect', 'framesToPop' // see facebook https://github.com/facebook/flux/blob/2.0.2/src/invariant.js
]));
exports.COMMON_ERROR_FIELDS_EXTENDED = new Set(__spreadArray(__spreadArray([], Array.from(exports.COMMON_ERROR_FIELDS)), [// My (Offirmo) extensions:
'_temp', 'details' // hash to store any other property not defined in this set
]));
},{}],"DrCq":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createError = void 0;

var fields_1 = require("./fields");

function createError(message, attributes, ctor) {
  var _a;

  if (attributes === void 0) {
    attributes = {};
  }

  if (ctor === void 0) {
    ctor = Error;
  }

  message = String(message || attributes.message || 'Unknown error!');

  if (!message.toLowerCase().includes('error')) {
    if ((_a = ctor.name) === null || _a === void 0 ? void 0 : _a.endsWith('Error')) message = ctor.name + ': ' + message;else message = 'Error: ' + message;
  }

  var err = new ctor(message);
  Object.keys(attributes).forEach(function (k) {
    var isErrorAttribute = fields_1.COMMON_ERROR_FIELDS_EXTENDED.has(k);
    var isAutogeneratedErrorAttribute = fields_1.QUASI_STANDARD_ERROR_FIELDS.has(k);

    if (k === 'details') {
      err.details = __assign(__assign({}, err.details), attributes[k]);
    } else if (isAutogeneratedErrorAttribute) {// strange...
      // ignore, don't allow overriding auto-generated props
    } else if (isErrorAttribute) {
      // attach directly
      ;
      err[k] = attributes[k];
    } else {
      err.details = err.details || {};
      err.details[k] = attributes[k];
    }
  });
  err.framesToPop = (err.framesToPop || 0) + 1;
  return err;
}

exports.createError = createError;
},{"./fields":"Krjq"}],"thze":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeError = void 0;

var fields_1 = require("./fields"); // Normalize any thrown object into a true, normal error.
// NOTE: will *always* recreate the error. TODO evaluate if possible to improve?
// Anything can be thrown: undefined, string, number...
// But that's obviously not a good practice.
// Even Error-like objects are sometime fancy!
// - seen: in browser, sometimes, an error-like, un-writable object is thrown
// - seen: frozen
// - seen: non-enumerable props
// So we want to ensure a true, safe, writable error object.


function normalizeError(err_like) {
  var _a, _b;

  if (err_like === void 0) {
    err_like = {};
  } // Yes, we always re-create in case


  var p = Object.getPrototypeOf(err_like); // should we restrict to global standard constructors? TBD

  var constructor = ((_b = (_a = p === null || p === void 0 ? void 0 : p.constructor) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.endsWith('Error')) ? p.constructor : Error; // https://stackoverflow.com/questions/1606797/use-of-apply-with-new-operator-is-this-possible

  var true_err = new (Function.prototype.bind.call(constructor, null, err_like.message || "(non-error caught: \"" + err_like + "\")"))(); // properly attach fields if they exist

  fields_1.COMMON_ERROR_FIELDS_EXTENDED.forEach(function (prop) {
    if (err_like[prop]) true_err[prop] = err_like[prop];
  });
  return true_err;
}

exports.normalizeError = normalizeError;
},{"./fields":"Krjq"}],"Ugq1":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./fields"), exports);

__exportStar(require("./util--create"), exports);

__exportStar(require("./util--normalize"), exports);
},{"./types":"LZ8G","./fields":"Krjq","./util--create":"DrCq","./util--normalize":"thze"}],"lI4Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = create;
exports.addDetail = addDetail;

/////////////////////
function create(parent_state) {
  const details = parent_state ? Object.create(parent_state.details) : Object.create(null); // NO auto-details here, let's keep it simple + usually shared with analytics. See core or platform specific code.

  return {
    details
  };
}

function addDetail(state, key, value) {
  const {
    details
  } = state;
  details[key] = value;
  return { ...state,
    details
  };
} /////////////////////
},{}],"CkXR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCatcher = createCatcher;

function createCatcher({
  decorators = [],
  onError,
  debugId = '?'
} = {}) {
  return err => {
    //console.info(`[catchFactory from ${debugId}]`)
    err = decorators.reduce((err, decorator) => {
      try {
        err = decorator(err);
        if (!err.message) throw new Error();
      } catch (decoratorErr) {
        /* eslint-disable no-console */
        console.error(`catchFactory exec from ${debugId}: bad decorator!`, {
          err,
          decoratorErr,
          'decorator.name': decorator.name
        });
        /* eslint-enable no-console */
      }

      return err;
    }, err);
    if (onError) return onError(err);
    throw err; // or rethrow since still unhandled
  };
}
},{}],"TWTR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PLUGIN = void 0;

var _promiseTry = require("@offirmo-private/promise-try");

var _timestamps = require("@offirmo-private/timestamps");

var _errorUtils = require("@offirmo/error-utils");

var _consts = require("../../consts");

var _utils = require("../../utils");

var State = _interopRequireWildcard(require("./state"));

var _catchFactory = require("./catch-factory");

var _index = require("../dependency-injection/index");

var TopState = _interopRequireWildcard(require("../../state"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PLUGIN_ID = 'error_handling';

function cleanTemp(err) {
  delete err._temp;
  return err;
}

const PLUGIN = {
  id: PLUGIN_ID,
  state: State,
  augment: prototype => {
    prototype._handleError = function handleError({
      SEC,
      debugId = '?',
      shouldRethrow = true
    }, err) {
      (0, _catchFactory.createCatcher)({
        debugId,
        decorators: [_errorUtils.normalizeError, err => SEC._decorateErrorWithLogicalStack(err), err => SEC._decorateErrorWithDetails(err)],
        onError: shouldRethrow ? null : err => SEC.emitter.emit('final-error', {
          SEC,
          err: cleanTemp(err)
        })
      })(err);
    };

    prototype._decorateErrorWithDetails = function _decorateErrorWithDetails(err) {
      const SEC = this;
      const state = SEC[_consts.INTERNAL_PROP];
      const now = (0, _timestamps.get_UTC_timestamp_ms)();
      const autoDetails = {
        ENV: state.plugins[_index.PLUGIN_ID].context.ENV,
        TIME: now,
        SESSION_DURATION_MS: now - state.plugins[_index.PLUGIN_ID].context.SESSION_START_TIME_MS
      };
      const userDetails = (0, _utils.flattenToOwn)(state.plugins[PLUGIN_ID].details);
      err.details = { ...autoDetails,
        ...userDetails,
        ...(err.details || {})
      };
      return err;
    };

    prototype.setErrorReportDetails = function setErrorReportDetails(details) {
      const SEC = this;
      let root_state = SEC[_consts.INTERNAL_PROP];
      root_state = TopState.reduce_plugin(root_state, PLUGIN_ID, plugin_state => {
        Object.entries(details).forEach(([key, value]) => {
          plugin_state = State.addDetail(plugin_state, key, value);
        });
        return plugin_state;
      });
      this[_consts.INTERNAL_PROP] = root_state;
      return SEC; // for chaining
    }; // useful if creating an error later from a saved SEC, ex. from a pipeline


    prototype.createError = function createError(message, details = {}) {
      const SEC = this;
      const err = (0, _errorUtils.createError)(message, details);
      err.framesToPop = (err.framesToPop || 0) + 1;
      return SEC._decorateErrorWithLogicalStack(SEC._decorateErrorWithDetails(err));
    }; // for termination promises


    prototype.handleError = function handleError(err) {
      const SEC = this;

      SEC._handleError({
        SEC,
        debugId: 'handleError',
        shouldRethrow: false
      }, err);
    };

    prototype.xTry = function xTry(operation, fn) {
      console.assert(!!operation);
      const SEC = this.createChild().setLogicalStack({
        operation
      });
      const params = SEC[_consts.INTERNAL_PROP].plugins[_index.PLUGIN_ID].context;

      try {
        return fn(params);
      } catch (err) {
        SEC._handleError({
          SEC,
          debugId: 'xTry',
          shouldRethrow: true
        }, err);
      }
    };

    prototype.xTryCatch = function xTryCatch(operation, fn) {
      console.assert(!!operation);
      const SEC = this.createChild().setLogicalStack({
        operation
      });
      const params = SEC[_consts.INTERNAL_PROP].plugins[_index.PLUGIN_ID].context;

      try {
        return fn(params);
      } catch (err) {
        SEC._handleError({
          SEC,
          debugId: 'xTryCatch',
          shouldRethrow: false
        }, err);
      }
    };

    prototype.xNewPromise = function xPromise(operation, resolver_fn) {
      console.assert(!!operation);
      const SEC = this.createChild().setLogicalStack({
        operation
      });
      const params = SEC[_consts.INTERNAL_PROP].plugins[_index.PLUGIN_ID].context;
      return new Promise(resolver_fn.bind(undefined, params)).catch(err => {
        SEC._handleError({
          SEC,
          debugId: 'xPromise',
          shouldRethrow: true
        }, err);
      });
    };

    prototype.xPromiseTry = function xPromiseTry(operation, fn) {
      console.assert(!!operation);
      const SEC = this.createChild().setLogicalStack({
        operation
      });
      const params = SEC[_consts.INTERNAL_PROP].plugins[_index.PLUGIN_ID].context;
      return (0, _promiseTry.promiseTry)(() => fn(params)).catch(err => {
        SEC._handleError({
          SEC,
          debugId: 'xPromiseTry',
          shouldRethrow: true
        }, err);
      });
    };
  }
};
exports.PLUGIN = PLUGIN;
},{"@offirmo-private/promise-try":"pNBs","@offirmo-private/timestamps":"bMV2","@offirmo/error-utils":"Ugq1","../../consts":"Hpim","../../utils":"WTsU","./state":"lI4Q","./catch-factory":"CkXR","../dependency-injection/index":"D6KO","../../state":"yxs4"}],"aezv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = create;
exports.addDetail = addDetail;

function create(parent_state) {
  const details = parent_state ? Object.create(parent_state.details) : Object.create(null); // NO auto-details here, let's keep it simple. See core or platform specific code.

  return {
    details
  };
}

function addDetail(state, key, value) {
  const {
    details
  } = state;
  details[key] = value;
  return { ...state,
    details
  };
} /////////////////////
},{}],"lDJq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PLUGIN = exports.PLUGIN_ID = void 0;

var _timestamps = require("@offirmo-private/timestamps");

var _consts = require("../../consts");

var TopState = _interopRequireWildcard(require("../../state"));

var _utils = require("../../utils");

var State = _interopRequireWildcard(require("./state"));

var _dependencyInjection = require("../dependency-injection");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PLUGIN_ID = 'analytics';
exports.PLUGIN_ID = PLUGIN_ID;
const PLUGIN = {
  id: PLUGIN_ID,
  state: State,
  augment: prototype => {
    prototype.setAnalyticsDetails = function setAnalyticsDetails(details) {
      const SEC = this;
      let root_state = SEC[_consts.INTERNAL_PROP];
      root_state = TopState.reduce_plugin(root_state, PLUGIN_ID, plugin_state => {
        Object.entries(details).forEach(([key, value]) => {
          plugin_state = State.addDetail(plugin_state, key, value);
        });
        return plugin_state;
      });
      this[_consts.INTERNAL_PROP] = root_state;
      return SEC; // for chaining
    };

    prototype.fireAnalyticsEvent = function fireAnalyticsEvent(eventId, details = {}) {
      const SEC = this;
      const now = (0, _timestamps.get_UTC_timestamp_ms)();
      const root_state = SEC[_consts.INTERNAL_PROP];
      if (!eventId) throw new Error('Incorrect eventId!');
      const {
        ENV
      } = SEC.getInjectedDependencies();
      const autoDetails = {
        ENV,
        TIME: now,
        SESSION_DURATION_MS: now - root_state.plugins[_dependencyInjection.PLUGIN_ID].context.SESSION_START_TIME_MS
      };
      const userDetails = SEC.getAnalyticsDetails();
      details = { ...autoDetails,
        ...userDetails,
        ...details
      };
      SEC.emitter.emit('analytics', {
        SEC,
        eventId,
        details
      });
      return SEC; // for chaining
    };

    prototype.getAnalyticsDetails = function getAnalyticsDetails() {
      const SEC = this;
      const plugin_state = SEC[_consts.INTERNAL_PROP].plugins[PLUGIN_ID];
      return (0, _utils.flattenToOwn)(plugin_state.details);
    };
  }
};
exports.PLUGIN = PLUGIN;
},{"@offirmo-private/timestamps":"bMV2","../../consts":"Hpim","../../state":"yxs4","../../utils":"WTsU","./state":"aezv","../dependency-injection":"D6KO"}],"rkBS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PLUGINS = exports.PLUGINS_BY_ID = void 0;

var _index = require("./logical-stack/index");

var _index2 = require("./dependency-injection/index");

var _index3 = require("./error-handling/index");

var _index4 = require("./analytics/index");

const PLUGINS_BY_ID = {
  [_index4.PLUGIN]: _index4.PLUGIN,
  [_index.PLUGIN.id]: _index.PLUGIN,
  [_index2.PLUGIN.id]: _index2.PLUGIN,
  [_index3.PLUGIN.id]: _index3.PLUGIN
};
exports.PLUGINS_BY_ID = PLUGINS_BY_ID;
const PLUGINS = Object.values(PLUGINS_BY_ID);
exports.PLUGINS = PLUGINS;
},{"./logical-stack/index":"XZ6L","./dependency-injection/index":"D6KO","./error-handling/index":"TWTR","./analytics/index":"lDJq"}],"r7L2":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"VATX":[function(require,module,exports) {
var process = require("process");
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorateWithDetectedEnv = decorateWithDetectedEnv;

var _timestamps = require("@offirmo-private/timestamps");

/* global NODE_ENV process */
function decorateWithDetectedEnv(SEC) {
  const ENV = (() => {
    try {
      /*
      if (typeof NODE_ENV === 'string')
          return NODE_ENV
       */
      if (typeof process !== 'undefined' && typeof "production" === 'string') return "production";
    } catch (err) {
      /* swallow */
    }

    return 'development';
  })();

  const IS_DEV_MODE = false;
  const IS_VERBOSE = false;
  const CHANNEL = 'dev';
  const SESSION_START_TIME_MS = (0, _timestamps.get_UTC_timestamp_ms)();
  SEC.injectDependencies({
    ENV,
    'NODE_ENV': ENV,
    IS_DEV_MODE,
    IS_VERBOSE,
    CHANNEL,
    SESSION_START_TIME_MS
  });
  SEC.setAnalyticsAndErrorDetails({
    ENV,
    CHANNEL
  });
}
},{"@offirmo-private/timestamps":"bMV2","process":"r7L2"}],"oCPu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSEC = isSEC;
exports.createSEC = createSEC;
Object.defineProperty(exports, "LIB", {
  enumerable: true,
  get: function () {
    return _consts.LIB;
  }
});

var _consts = require("./consts");

var _rootPrototype = require("./root-prototype");

var State = _interopRequireWildcard(require("./state"));

var _index = require("./plugins/index");

var _common = require("./common");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

_rootPrototype.ROOT_PROTOTYPE.createChild = function createChild(args) {
  return createSEC({ ...args,
    parent: this
  });
};

_index.PLUGINS.forEach(PLUGIN => {
  PLUGIN.augment(_rootPrototype.ROOT_PROTOTYPE);
});

function isSEC(SEC) {
  return SEC && SEC[_consts.INTERNAL_PROP];
}

function createSEC(args = {}) {
  /////// PARAMS ///////
  if (args.parent && !isSEC(args.parent)) throw new Error(`${_consts.LIB}›createSEC() argument error: parent must be a valid SEC!`);
  let unhandled_args = Object.keys(args);
  const SEC = Object.create(_rootPrototype.ROOT_PROTOTYPE); /////// STATE ///////

  const parent_state = args.parent ? args.parent[_consts.INTERNAL_PROP] : undefined;
  let state = State.create(parent_state);
  unhandled_args = unhandled_args.filter(arg => arg !== 'parent');

  _index.PLUGINS.forEach(PLUGIN => {
    state = State.activate_plugin(state, PLUGIN);
  });

  SEC[_consts.INTERNAL_PROP] = state; // auto injections

  if (!args.parent) {
    SEC.injectDependencies({
      logger: console // use universal debug API? NO because the placeholder = NOOP = would cause no logs visible by default

    });
    (0, _common.decorateWithDetectedEnv)(SEC);
  }

  SEC.injectDependencies({
    SEC
  }); //console.log('createSEC', SEC, args.parent)
  // Here we could send an event on the SEC bus. No usage for now.
  // Her we could have lifecycle methods. No usage for now.

  if (unhandled_args.length) throw new Error(`${_consts.LIB}›createSEC() argument error: unknown args: [${unhandled_args.join(',')}]!`); /////////////////////

  return SEC;
}
},{"./consts":"Hpim","./root-prototype":"ZOiq","./state":"yxs4","./plugins/index":"rkBS","./common":"VATX"}],"Pw5o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRootSEC = getRootSEC;

var _globalthisPonyfill = require("@offirmo/globalthis-ponyfill");

var _consts = require("./consts");

var _core = require("./core");

/////////////////////
const GLOBAL_VAR_NAME = '__global_root_sec';

function getRootSEC() {
  const global_this = (0, _globalthisPonyfill.getGlobalThis)();

  if (!global_this[GLOBAL_VAR_NAME]) {
    console.log(`[${_consts.LIB}] Creating root context…`);
    global_this[GLOBAL_VAR_NAME] = (0, _core.createSEC)();
  }

  return global_this[GLOBAL_VAR_NAME];
} /////////////////////
},{"@offirmo/globalthis-ponyfill":"ehj8","./consts":"Hpim","./core":"oCPu"}],"cjhL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _types = require("./types");

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _types[key];
    }
  });
});

var _root = require("./root");

Object.keys(_root).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _root[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _root[key];
    }
  });
});

var _core = require("./core");

Object.keys(_core).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _core[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _core[key];
    }
  });
});

var _utils = require("./utils");

Object.keys(_utils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _utils[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _utils[key];
    }
  });
});
},{"./types":"MKE5","./root":"Pw5o","./core":"oCPu","./utils":"WTsU"}],"tIqg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = get_lib_SEC;

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

const LIB = 'ErrorBoundary';

function get_lib_SEC(parent) {
  return (parent || (0, _softExecutionContext.getRootSEC)()).createChild().setLogicalStack({
    module: LIB
  });
}
},{"@offirmo-private/soft-execution-context":"cjhL"}],"lvkj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === 'number' && value !== value;
};

function isEqual(first, second) {
  if (first === second) {
    return true;
  }

  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }

  return false;
}

function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }

  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }

  return true;
}

function memoizeOne(resultFn, isEqual) {
  if (isEqual === void 0) {
    isEqual = areInputsEqual;
  }

  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;

  function memoized() {
    var newArgs = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }

    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
      return lastResult;
    }

    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }

  return memoized;
}

var _default = memoizeOne;
exports.default = _default;
},{}],"LZQ8":[function(require,module,exports) {
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

require("object-assign");

var f = require("react"),
    g = 60103;

exports.Fragment = 60107;

if ("function" === typeof Symbol && Symbol.for) {
  var h = Symbol.for;
  g = h("react.element");
  exports.Fragment = h("react.fragment");
}

var m = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    n = Object.prototype.hasOwnProperty,
    p = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function q(c, a, k) {
  var b,
      d = {},
      e = null,
      l = null;
  void 0 !== k && (e = "" + k);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (l = a.ref);

  for (b in a) n.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);

  if (c && c.defaultProps) for (b in a = c.defaultProps, a) void 0 === d[b] && (d[b] = a[b]);
  return {
    $$typeof: g,
    type: c,
    key: e,
    ref: l,
    props: d,
    _owner: m.current
  };
}

exports.jsx = q;
exports.jsxs = q;
},{"object-assign":"yheg","react":"dmLA"}],"qEpl":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react-jsx-runtime.production.min.js');
} else {
  module.exports = require('./cjs/react-jsx-runtime.development.js');
}
},{"./cjs/react-jsx-runtime.production.min.js":"LZQ8"}],"Y2lg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_any = render_any;
exports.render_any_m = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// from React doc
// https://reactjs.org/docs/higher-order-components.html#convention-wrap-the-display-name-for-easy-debugging
function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || 'ComponentX';
} // inspired from render-props:
// https://github.com/donavon/render-props/blob/develop/src/index.js
// but enhanced.


const id = 0;

function render_any(xprops) {
  const {
    children,
    render,
    ...props
  } = xprops;
  const id = props.key || props.name || 'ra#{id++}'; //console.log(`render_any "${id}"`, { children, render, props })

  const ComponentOrFunctionOrAny = children || render || /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
    className: `o⋄error-report error-boundary-report--${id}`,
    children: "ErrorBoundary: no children nor render prop!"
  });
  (0, _tinyInvariant.default)(children || render, `render_any "${id}": no children nor render prop!`);
  (0, _tinyInvariant.default)(!(children && render), `render_any "${id}": competing children and render prop!`);
  const isComponent = ComponentOrFunctionOrAny.render || ComponentOrFunctionOrAny.prototype && ComponentOrFunctionOrAny.prototype.render;

  if (isComponent) {
    //console.warn('render_any: component', getDisplayName(ComponentOrFunctionOrAny), id)
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ComponentOrFunctionOrAny, { ...props
    });
  }

  if (typeof ComponentOrFunctionOrAny === 'function') return ComponentOrFunctionOrAny({ ...(ComponentOrFunctionOrAny.defaultProps || {}),
    ...props
  }); //console.warn(`render_any "${id}": defaulting to "${ComponentOrFunctionOrAny}"`, ComponentOrFunctionOrAny)

  return ComponentOrFunctionOrAny;
}

const render_any_m = (0, _memoizeOne.default)(render_any);
exports.render_any_m = render_any_m;
},{"prop-types":"X9bF","tiny-invariant":"VYmh","memoize-one":"lvkj","react/jsx-runtime":"qEpl"}],"alF9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

var _asyncUtils = require("@offirmo-private/async-utils");

var _sec = require("./sec");

var _renderAny = require("./render-any");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ErrorBoundary extends React.Component {
  // need to track that in case an error happen during unmounting
  constructor(props) {
    super(props);

    _defineProperty(this, "state", {
      error: null,
      errorInfo: null
    });

    _defineProperty(this, "mounted", true);

    _defineProperty(this, "componentDidCatch", (error, errorInfo) => {
      const {
        name
      } = this.props;
      this.SEC.xTryCatch(`handling error boundary "${name}"`, ({
        SEC,
        logger
      }) => {
        if (this.mounted) {
          // Catch errors in any components below and re-render with error message
          this.setState({
            error,
            errorInfo
          });
        } // You can also log error messages to an error reporting service here


        logger.error(`Error caught in react-error-boundary@"${name}"`, {
          error,
          errorInfo,
          isMounted: this.mounted
        });
        SEC.fireAnalyticsEvent('react.error-boundary.triggered', {
          err: error,
          isMounted: this.mounted
        }); // forward to parent

        this.props.onError({
          error,
          errorInfo,
          name
        });
      });
    });

    const {
      name: _name,
      SEC: _SEC
    } = props;
    (0, _tinyInvariant.default)(_name, 'ErrorBoundary must have a name!!!');
    this.SEC = (0, _sec.get_lib_SEC)(_SEC).createChild().setLogicalStack({
      module: `EB:${_name}`
    }).setAnalyticsAndErrorDetails({
      error_boundary: _name
    });
  }

  componentDidMount() {
    this.props.onMount(this.componentDidCatch);
  }

  componentWillUnmount() {
    this.mounted = false;
  } // as a member var to be able to pass it around


  render() {
    const {
      name
    } = this.props;

    if (this.state.error || this.state.errorInfo) {
      const {
        error,
        errorInfo
      } = this.state;
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: `o⋄error-report error-boundary-report-${name}`,
        style: {
          padding: '.3em'
        },
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("h2", {
          style: {
            margin: '0'
          },
          children: ["Boundary \"", name, "\": Something went wrong"]
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("details", {
          open: false,
          style: {
            whiteSpace: 'pre-wrap',
            margin: '.3em 0'
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("summary", {
            children: (error || 'unknown error').toString()
          }), ((errorInfo === null || errorInfo === void 0 ? void 0 : errorInfo.componentStack) || '').trim()]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
          href: "https://github.com/Offirmo/offirmo-monorepo/issues",
          target: "_blank",
          referrerPolicy: "no-referrer-when-downgrade",
          rel: "external",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("strong", {
            children: "Report bug"
          })
        }), "\xA0", /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          style: {
            '--o⋄color⁚fg--main': 'var(--o⋄color⁚fg--error)'
          },
          onClick: () => window.location.reload(),
          children: "Reload page"
        })]
      }, name);
    }

    try {
      return (0, _renderAny.render_any)(this.props);
    } catch (err) {
      (0, _asyncUtils.asap_but_not_synchronous)(() => this.componentDidCatch(err, 'crash in ErrorBoundary.render()'));
    }

    return null;
  }

}

ErrorBoundary.propTypes = {
  name: _propTypes.default.string.isRequired,
  onMount: _propTypes.default.func,
  onError: _propTypes.default.func,
  logger: _propTypes.default.any
};
ErrorBoundary.defaultProps = {
  onMount: () => {},
  onError: () => {},
  logger: console
};
var _default = ErrorBoundary;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","tiny-invariant":"VYmh","@offirmo-private/async-utils":"i8Ln","./sec":"tIqg","./render-any":"Y2lg","react/jsx-runtime":"qEpl"}],"UTEF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {};
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _errorBoundary.default;
  }
});

var _errorBoundary = _interopRequireDefault(require("./error-boundary"));

var _renderAny = require("./render-any");

Object.keys(_renderAny).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _renderAny[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _renderAny[key];
    }
  });
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./error-boundary":"alF9","./render-any":"Y2lg"}],"bC2m":[function(require,module,exports) {
"use strict"; // base to be directly importable from other modules
// without a full lib penalty.
// This a very very specific use case, don't mind.

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_LOGGER_KEY = exports.DEFAULT_LOG_LEVEL = void 0;
exports.DEFAULT_LOG_LEVEL = 'error';
exports.DEFAULT_LOGGER_KEY = ''; // yes, can be used as a key
},{}],"zg8C":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LOG_LEVEL_TO_HUMAN = exports.ALL_LOG_LEVELS = exports.LOG_LEVEL_TO_INTEGER = exports.LIB = void 0;
exports.LIB = '@offirmo/practical-logger-core'; // level to a numerical value, for ordering and filtering.
// mnemonic:  100 = 100% = you will see 100% of the logs
//              1 =   1% = you will see 1% of the logs (obviously the most important)

exports.LOG_LEVEL_TO_INTEGER = {
  fatal: 1,
  emerg: 2,
  alert: 10,
  crit: 20,
  error: 30,
  warning: 40,
  warn: 40,
  notice: 45,
  info: 50,
  verbose: 70,
  log: 80,
  debug: 81,
  trace: 90,
  silly: 100
};
exports.ALL_LOG_LEVELS = Object.keys(exports.LOG_LEVEL_TO_INTEGER).map(function (s) {
  return s;
}).sort(function (a, b) {
  return exports.LOG_LEVEL_TO_INTEGER[a] - exports.LOG_LEVEL_TO_INTEGER[b];
}); // rationalization to a clear, human understandable string
// generated to shave a few bytes
// not using fromEntries bc not available in node <12

exports.LOG_LEVEL_TO_HUMAN = exports.ALL_LOG_LEVELS.reduce(function (acc, ll) {
  acc[ll] = {
    em: 'emergency',
    wa: 'warn'
  }[ll.slice(0, 1)] || ll;
  return acc;
}, {});

__exportStar(require("./consts-base"), exports);
},{"./consts-base":"bC2m"}],"rIpC":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeArguments = exports.looksLikeAnError = void 0; // TODO externalize?

function looksLikeAnError(x) {
  return !!((x === null || x === void 0 ? void 0 : x.name) && (x === null || x === void 0 ? void 0 : x.message) && (x === null || x === void 0 ? void 0 : x.stack));
}

exports.looksLikeAnError = looksLikeAnError; // harmonize
// also try to recover from incorrect invocations

function normalizeArguments(raw_args) {
  var _a;

  var message_parts = [];
  var details = {};
  var err = undefined;
  Array.from(raw_args).forEach(function (arg) {
    if (!arg) return; // errors are first class, look for them first

    if (looksLikeAnError(arg)) {
      if (!err) err = arg; // extract it

      return;
    }

    if (!err && looksLikeAnError(arg.err)) {
      err = arg.err; // extract it
      // don't return, still stuff to pick
    }

    if (typeof arg === 'object') {
      details = __assign(__assign({}, details), arg);
      return;
    }

    message_parts.push(String(arg));
  });

  if (typeof details.message === 'string' && !message_parts.length) {
    message_parts.push(details.message);
    delete details.message;
  }

  var message = message_parts.join(' ') || ((_a = err) === null || _a === void 0 ? void 0 : _a.message) || '(no message)';
  if (err) details.err = err;else delete details.err; // because could be present but not be a correct err type

  return [message, details];
}

exports.normalizeArguments = normalizeArguments;
},{}],"m7xv":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = exports.checkLevel = void 0;

var consts_1 = require("./consts");

var normalize_args_1 = require("./normalize-args");

function checkLevel(level) {
  if (!consts_1.ALL_LOG_LEVELS.includes(level)) throw new Error("[" + consts_1.LIB + "] Not a valid log level: \"" + level + "\"!");
}

exports.checkLevel = checkLevel;

function create(_a, outputFn) {
  var _b = _a === void 0 ? {} : _a,
      _c = _b.name,
      name = _c === void 0 ? consts_1.DEFAULT_LOGGER_KEY : _c,
      _d = _b.suggestedLevel,
      suggestedLevel = _d === void 0 ? consts_1.DEFAULT_LOG_LEVEL : _d,
      forcedLevel = _b.forcedLevel,
      _e = _b.commonDetails,
      commonDetails = _e === void 0 ? {} : _e;

  if (outputFn === void 0) {
    outputFn = console.log;
  }

  var internalState = {
    name: name,
    level: forcedLevel || suggestedLevel,
    commonDetails: __assign({}, commonDetails),
    outputFn: outputFn
  };
  var levelAsInt = 100; // so far

  var logger = consts_1.ALL_LOG_LEVELS.reduce(function (logger, level) {
    var primitive = function (rawMessage, rawDetails) {
      if (!isLevelEnabled(level)) return;

      var _a = normalize_args_1.normalizeArguments(arguments),
          message = _a[0],
          details = _a[1];

      internalState.outputFn(serializer(level, message, details));
    };

    logger[level] = primitive;
    return logger;
  }, {
    setLevel: setLevel,
    getLevel: getLevel,
    addCommonDetails: addCommonDetails,
    group: function () {},
    groupCollapsed: function () {},
    groupEnd: function () {}
  });

  function setLevel(level) {
    checkLevel(level);
    internalState.level = level;
    levelAsInt = consts_1.LOG_LEVEL_TO_INTEGER[level];
  }

  setLevel(getLevel()); // to check it

  function isLevelEnabled(level) {
    checkLevel(level);
    return consts_1.LOG_LEVEL_TO_INTEGER[level] <= levelAsInt;
  }

  function getLevel() {
    return internalState.level;
  }

  function addCommonDetails(details) {
    if (details.err) throw new Error("[" + consts_1.LIB + "] Can't set reserved property \"err\"!");
    internalState.commonDetails = __assign(__assign({}, internalState.commonDetails), details);
  }

  function serializer(level, msg, _a) {
    var err = _a.err,
        details = __rest(_a, ["err"]);

    var payload = {
      level: level,
      name: name,
      msg: msg,
      time: +new Date(),
      details: __assign(__assign({}, internalState.commonDetails), details)
    };
    if (err) payload.err = err;
    return payload;
  }

  return logger;
}

exports.create = create;
},{"./consts":"zg8C","./normalize-args":"rIpC"}],"Qoo0":[function(require,module,exports) {
"use strict"; //////////// Public interface (for logger usage) ////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"DITU":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkLevel = exports.DEFAULT_LOGGER_KEY = exports.DEFAULT_LOG_LEVEL = exports.LOG_LEVEL_TO_HUMAN = exports.LOG_LEVEL_TO_INTEGER = exports.ALL_LOG_LEVELS = exports.createLogger = void 0;

var core_1 = require("./core");

Object.defineProperty(exports, "createLogger", {
  enumerable: true,
  get: function () {
    return core_1.create;
  }
});

__exportStar(require("@offirmo/practical-logger-types"), exports);

var consts_1 = require("./consts");

Object.defineProperty(exports, "ALL_LOG_LEVELS", {
  enumerable: true,
  get: function () {
    return consts_1.ALL_LOG_LEVELS;
  }
});
Object.defineProperty(exports, "LOG_LEVEL_TO_INTEGER", {
  enumerable: true,
  get: function () {
    return consts_1.LOG_LEVEL_TO_INTEGER;
  }
});
Object.defineProperty(exports, "LOG_LEVEL_TO_HUMAN", {
  enumerable: true,
  get: function () {
    return consts_1.LOG_LEVEL_TO_HUMAN;
  }
});
Object.defineProperty(exports, "DEFAULT_LOG_LEVEL", {
  enumerable: true,
  get: function () {
    return consts_1.DEFAULT_LOG_LEVEL;
  }
});
Object.defineProperty(exports, "DEFAULT_LOGGER_KEY", {
  enumerable: true,
  get: function () {
    return consts_1.DEFAULT_LOGGER_KEY;
  }
});

var core_2 = require("./core");

Object.defineProperty(exports, "checkLevel", {
  enumerable: true,
  get: function () {
    return core_2.checkLevel;
  }
});

__exportStar(require("./normalize-args"), exports);
},{"./core":"m7xv","@offirmo/practical-logger-types":"Qoo0","./consts":"zg8C","./normalize-args":"rIpC"}],"KdUZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tiny_singleton = void 0;

function tiny_singleton(generator) {
  var instantiated = false;
  var instance;
  return function get() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    if (!instantiated) {
      instance = generator.apply(void 0, args);
      instantiated = true;
    }

    return instance;
  };
}

exports.default = tiny_singleton;
exports.tiny_singleton = tiny_singleton;
},{}],"kJJ9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.to_uniform_level = exports.LEVEL_TO_CONSOLE_METHOD = void 0;

var practical_logger_core_1 = require("@offirmo/practical-logger-core");

exports.LEVEL_TO_CONSOLE_METHOD = {
  fatal: 'error',
  emerg: 'error',
  alert: 'error',
  crit: 'error',
  error: 'error',
  warning: 'warn',
  warn: 'warn',
  notice: 'info',
  info: 'info',
  verbose: 'info',
  log: 'log',
  debug: 'debug',
  trace: 'debug',
  silly: 'debug'
};
var MIN_WIDTH = 5;

function to_uniform_level(level) {
  var str = practical_logger_core_1.LOG_LEVEL_TO_HUMAN[level]; //.slice(0, MIN_WIDTH)
  //if (str.length < MIN_WIDTH)

  str = (str + '         ').slice(0, MIN_WIDTH);
  return str;
}

exports.to_uniform_level = to_uniform_level;
},{"@offirmo/practical-logger-core":"DITU"}],"jqLu":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.build_args = exports.add_styled_string = exports.LEVEL_TO_COLOR_STYLE = exports.FONT_FAMILY_BETTER_MONOSPACE = exports.FONT_FAMILY_BETTER_PROPORTIONAL = void 0;
var FONT_FAMILY_BETTER_PROPORTIONAL = 'font-family: ' + ['-apple-system', 'BlinkMacSystemFont', 'noto', 'roboto', 'sans-serif' //'unset', // default back to the devtools one
].join(', ');
exports.FONT_FAMILY_BETTER_PROPORTIONAL = FONT_FAMILY_BETTER_PROPORTIONAL;
var FONT_FAMILY_BETTER_MONOSPACE = 'font-family: ' + ['"Fira Code"', 'Menlo', 'Consolas', 'monospace'].join(', ');
exports.FONT_FAMILY_BETTER_MONOSPACE = FONT_FAMILY_BETTER_MONOSPACE;
var LEVEL_TO_COLOR_STYLE = {
  // empty = no need, console method already covers it well
  fatal: '',
  emerg: '',
  alert: '',
  crit: '',
  error: '',
  warning: '',
  warn: '',
  notice: 'color: #659AD2',
  info: 'color: #659AD2',
  verbose: 'color: #659AD2',
  log: '',
  debug: 'color: #9AA2AA',
  trace: 'color: #9AA2AA',
  silly: 'color: #9AA2AA'
};
exports.LEVEL_TO_COLOR_STYLE = LEVEL_TO_COLOR_STYLE;

function add_styled_string(line, chunk) {
  var styles = [];

  for (var _i = 2; _i < arguments.length; _i++) {
    styles[_i - 2] = arguments[_i];
  }

  var existing_chunks = line[0],
      existing_chunks_styles = line.slice(1);
  return __spreadArray(__spreadArray([existing_chunks + '%c' + chunk], existing_chunks_styles), [styles.join(';') + ';']);
}

exports.add_styled_string = add_styled_string;

function build_args(line, payload) {
  var err = payload.err;
  var details = payload.details;
  var args = line;

  if (err) {
    // err will be passed as the LAST arg for reasons (see below)
    // however the "last arg" display doesn't allow examining the optional err properties
    // so we also add the err to the details:
    // (tested on FF/Chrome/Safari)
    details = __assign(__assign({}, details), {
      err: err
    });
  }

  if (Object.keys(details).length) args.push(details); // err *as an arg* triggers a good display of the stacktrace
  // however it should be LAST because it takes a lot of room and "hides" further args
  // (tested on FF/Chrome/Safari)

  if (err) args.push(err);
  return args;
}

exports.build_args = build_args;
},{}],"ikJN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sink = void 0;

var common_1 = require("../common");

var common_2 = require("./common");

function has_details_indicator(console_method_name) {
  return console_method_name === 'error';
}

var HEADER_FONT_SIZE_STYLE = 'font-size: 10px';

var sink = function (payload) {
  var level = payload.level,
      name = payload.name,
      msg = payload.msg,
      err = payload.err,
      details = payload.details;
  var console_method_name = common_1.LEVEL_TO_CONSOLE_METHOD[level];
  var console_method = console[console_method_name];
  var line = [''];

  if (!has_details_indicator(console_method_name)) {
    line = common_2.add_styled_string(line, '▷', common_2.LEVEL_TO_COLOR_STYLE[level], 'font-size: 8px', common_2.FONT_FAMILY_BETTER_PROPORTIONAL, 'margin-left: .35em', 'margin-right: .5em');
  }

  line = common_2.add_styled_string(line, '[', common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  line = common_2.add_styled_string(line, common_1.to_uniform_level(level), common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_MONOSPACE);
  line = common_2.add_styled_string(line, '] ', common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  line = common_2.add_styled_string(line, '', 'font-size: unset');

  if (name) {
    line = common_2.add_styled_string(line, name + " \u203A ", common_2.LEVEL_TO_COLOR_STYLE[level], common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  }

  line = common_2.add_styled_string(line, msg, common_2.LEVEL_TO_COLOR_STYLE[level], common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  console_method.apply(void 0, common_2.build_args(line, payload));
};

exports.sink = sink;
exports.default = exports.sink;
},{"../common":"kJJ9","./common":"jqLu"}],"Co9R":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sink = void 0;

var common_1 = require("../common");

var common_2 = require("./common");

function has_details_indicator(console_method_name) {
  return console_method_name === 'error' || console_method_name === 'warn';
}

var HEADER_FONT_SIZE_STYLE = 'font-size: 8px';
var MESSAGE_FONT_SIZE_STYLE = 'font-size: 11px';

var sink = function (payload) {
  var level = payload.level,
      name = payload.name,
      msg = payload.msg,
      err = payload.err,
      details_orginal = payload.details;
  var console_method_name = common_1.LEVEL_TO_CONSOLE_METHOD[level];
  var console_method = console[console_method_name];
  var line = [''];

  if (!has_details_indicator(console_method_name)) {
    line = common_2.add_styled_string(line, '▷', common_2.LEVEL_TO_COLOR_STYLE[level], 'font-size: 8px', common_2.FONT_FAMILY_BETTER_PROPORTIONAL, 'margin-left: .1em', 'margin-right: .2em');
  }

  line = common_2.add_styled_string(line, '[', common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  line = common_2.add_styled_string(line, common_1.to_uniform_level(level), common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_MONOSPACE);
  line = common_2.add_styled_string(line, '] ', common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  line = common_2.add_styled_string(line, '', 'font-size: unset');

  if (name) {
    line = common_2.add_styled_string(line, name + " \u203A ", common_2.LEVEL_TO_COLOR_STYLE[level], common_2.FONT_FAMILY_BETTER_PROPORTIONAL, MESSAGE_FONT_SIZE_STYLE);
  }

  line = common_2.add_styled_string(line, msg, common_2.LEVEL_TO_COLOR_STYLE[level], common_2.FONT_FAMILY_BETTER_PROPORTIONAL, MESSAGE_FONT_SIZE_STYLE);
  console_method.apply(void 0, common_2.build_args(line, payload));
};

exports.sink = sink;
exports.default = exports.sink;
},{"../common":"kJJ9","./common":"jqLu"}],"mi2v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sink = void 0;

var common_1 = require("../common");

var common_2 = require("./common");

function has_details_indicator(console_method_name, details) {
  return details || console_method_name === 'error';
}

var HEADER_FONT_SIZE_STYLE = 'font-size: 9px';

var sink = function (payload) {
  var level = payload.level,
      name = payload.name,
      msg = payload.msg,
      err = payload.err,
      details = payload.details;
  var console_method_name = common_1.LEVEL_TO_CONSOLE_METHOD[level];
  var console_method = console[console_method_name];
  var line = [''];

  if (!has_details_indicator(console_method_name, details)) {
    line = common_2.add_styled_string(line, '▷', common_2.LEVEL_TO_COLOR_STYLE[level], 'font-size: 10px', common_2.FONT_FAMILY_BETTER_PROPORTIONAL, 'margin-left: .15em', 'margin-right: .4em');
  }

  line = common_2.add_styled_string(line, '[', common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  line = common_2.add_styled_string(line, common_1.to_uniform_level(level), common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_MONOSPACE);
  line = common_2.add_styled_string(line, '] ', common_2.LEVEL_TO_COLOR_STYLE[level], HEADER_FONT_SIZE_STYLE, common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  line = common_2.add_styled_string(line, '', 'font-size: unset');

  if (name) {
    line = common_2.add_styled_string(line, name + " \u203A ", common_2.LEVEL_TO_COLOR_STYLE[level], common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  }

  line = common_2.add_styled_string(line, msg, common_2.LEVEL_TO_COLOR_STYLE[level], common_2.FONT_FAMILY_BETTER_PROPORTIONAL);
  console_method.apply(void 0, common_2.build_args(line, payload));
};

exports.sink = sink;
exports.default = exports.sink;
},{"../common":"kJJ9","./common":"jqLu"}],"B7Z3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var common_1 = require("./common");

function create(options) {
  if (options === void 0) {
    options = {};
  }

  return function (payload) {
    var level = payload.level,
        name = payload.name,
        msg = payload.msg,
        err = payload.err,
        details = payload.details;
    var console_method_name = common_1.LEVEL_TO_CONSOLE_METHOD[level];
    var console_method = console[console_method_name];
    var line = ['[', common_1.to_uniform_level(level), '] '];

    if (name) {
      line.push(name + " \u203A ");
    }

    line.push(msg);
    var args = line;
    if (Object.keys(details).length) args.push(details); // err should be last because it takes a lot of room and "hides" further args

    if (err) args.push(err);
    console_method.apply(void 0, args);
  };
}

exports.default = create;
},{"./common":"kJJ9"}],"GBiU":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = void 0;

var firefox_1 = __importDefault(require("./advanced/firefox"));

var chromium_1 = __importDefault(require("./advanced/chromium"));

var safari_1 = __importDefault(require("./advanced/safari"));

var no_css_1 = __importDefault(require("./no-css")); // TODO export that?


function quick_detect_browser() {
  // https://stackoverflow.com/a/9851769/587407
  // https://dev.to/_elmahdim/safe-reliable-browser-sniffing-39bp
  try {
    if (window.InstallTrigger) return 'firefox';
    if (window.ApplePaySession) return 'safari';
    if (window.chrome) return 'chromium';
  } catch (_a) {
    /* ignore */
  }

  return 'other';
}

function create(options) {
  if (options === void 0) {
    options = {};
  }

  if (options.useCss === false) return no_css_1.default(options);

  switch (options.explicitBrowser || quick_detect_browser()) {
    case 'firefox':
      return firefox_1.default;

    case 'safari':
      return safari_1.default;

    case 'chromium':
      return chromium_1.default;

    default:
      return no_css_1.default(options);
  }
}

exports.create = create;
},{"./advanced/firefox":"ikJN","./advanced/chromium":"Co9R","./advanced/safari":"mi2v","./no-css":"B7Z3"}],"iBPN":[function(require,module,exports) {
"use strict"; // Note: the name of this file is because it appears in the dev tools!

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.improve_console_groups = void 0;
var PATCHED_METHODS = ['debug', 'log', 'info', 'warn', 'error', 'group', 'groupCollapsed', 'groupEnd', 'table', 'trace', 'dir', 'dirxml', 'count', 'assert'];
var DEBUG = false;

function install(_a) {
  var _b = _a === void 0 ? {} : _a,
      _c = _b.uncollapse_level,
      uncollapse_level = _c === void 0 ? 'warn' : _c,
      _d = _b.lazy,
      lazy = _d === void 0 ? true : _d,
      _e = _b.original_console,
      original_console = _e === void 0 ? console : _e;

  if (DEBUG) console.log('install', {
    uncollapse_level: uncollapse_level,
    lazy: lazy
  });
  var group_invocations = []; // in node, group() calls console.log()
  // to prevent infinite loops

  var in_original_call = false;
  var ORIGINAL_METHODS = {};
  PATCHED_METHODS.forEach(function (k) {
    ORIGINAL_METHODS[k] = original_console[k];
  });

  function better_group() {
    var p = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      p[_i] = arguments[_i];
    }

    if (DEBUG) ORIGINAL_METHODS.log('>>> before group', {
      lazy: lazy,
      depth: group_invocations.length
    }, "\"" + p[0] + "\"");
    group_invocations.push({
      params: p,
      is_deployed: true,
      is_effective: !lazy
    });

    if (!lazy) {
      in_original_call = true;
      ORIGINAL_METHODS.group.apply(ORIGINAL_METHODS, p);
      in_original_call = false;
    }

    if (DEBUG) ORIGINAL_METHODS.log('<<< after group', {
      depth: group_invocations.length
    });
  }

  function better_groupCollapsed() {
    var p = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      p[_i] = arguments[_i];
    }

    if (DEBUG) ORIGINAL_METHODS.log('>>> before groupCollapsed', {
      lazy: lazy,
      depth: group_invocations.length
    }, "\"" + p[0] + "\"");
    group_invocations.push({
      params: p,
      is_deployed: false,
      is_effective: !lazy
    });

    if (!lazy) {
      in_original_call = true;
      ORIGINAL_METHODS.groupCollapsed.apply(ORIGINAL_METHODS, p);
      in_original_call = false;
    }

    if (DEBUG) ORIGINAL_METHODS.log('after groupCollapsed', {
      depth: group_invocations.length
    });
  }

  function better_groupEnd() {
    var p = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      p[_i] = arguments[_i];
    }

    if (DEBUG) ORIGINAL_METHODS.log('>>> before groupEnd', {
      lazy: lazy,
      depth: group_invocations.length
    }, "\"" + p[0] + "\"");
    var last_invocation = group_invocations.pop();

    if (last_invocation && last_invocation.is_effective) {
      in_original_call = true;
      ORIGINAL_METHODS.groupEnd.apply(ORIGINAL_METHODS, p);
      in_original_call = false;
    }

    if (DEBUG) ORIGINAL_METHODS.log('<<< after groupEnd', {
      lazy: lazy,
      depth: group_invocations.length
    });
  }

  function better_output(original_method, uncollapse) {
    var p = [];

    for (var _i = 2; _i < arguments.length; _i++) {
      p[_i - 2] = arguments[_i];
    }

    if (in_original_call) {
      return original_method.apply(void 0, p);
    }

    if (DEBUG) original_method('>>> before output', {
      depth: group_invocations.length
    }, "\"" + p[0] + "\""); // lazily create groups
    // cancel collapsed if needed

    group_invocations.forEach(function (invocation) {
      var is_effective = invocation.is_effective,
          is_deployed = invocation.is_deployed,
          params = invocation.params;
      if (is_effective) return;
      if (DEBUG) original_method('--- lazy call');

      if (uncollapse || is_deployed) {
        in_original_call = true;
        ORIGINAL_METHODS.group.apply(ORIGINAL_METHODS, params);
        in_original_call = false;
        invocation.is_deployed = true;
      } else {
        in_original_call = true;
        ORIGINAL_METHODS.groupCollapsed.apply(ORIGINAL_METHODS, params);
        in_original_call = false;
        invocation.is_deployed = false;
      }

      invocation.is_effective = true;
    });
    if (DEBUG) original_method('--- output'); // uncollapse parents if needed

    if (uncollapse) {
      var lowest_uncollapsed_index = group_invocations.findIndex(function (_a) {
        var is_deployed = _a.is_deployed;
        return !is_deployed;
      });

      while (lowest_uncollapsed_index >= 0 && group_invocations.length && group_invocations.length > lowest_uncollapsed_index) {
        better_groupEnd();
        ORIGINAL_METHODS.debug('(forced break out of collapsed group ↑ due to critical log ↓)');
      }
    }

    if (DEBUG) original_method('--- output');
    original_method.apply(void 0, p);
    if (DEBUG) original_method('<<<after output', {
      depth: group_invocations.length
    });
  }

  var patched = new Set();
  console.group = better_group;
  patched.add('group');
  console.groupCollapsed = better_groupCollapsed;
  patched.add('groupCollapsed');
  console.groupEnd = better_groupEnd;
  patched.add('groupEnd');
  console.warn = better_output.bind(null, ORIGINAL_METHODS.warn, uncollapse_level === 'warn');
  patched.add('warn');
  console.error = better_output.bind(null, ORIGINAL_METHODS.error, true);
  patched.add('error');

  console.assert = function (assertion) {
    var args = [];

    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }

    if (assertion) {// do nothing
    } else {
      better_output.apply(void 0, __spreadArray([ORIGINAL_METHODS.assert, true, assertion], args));
    }
  };

  patched.add('assert');
  PATCHED_METHODS.forEach(function (method) {
    if (patched.has(method)) return;
    console[method] = better_output.bind(null, ORIGINAL_METHODS[method], false);
    patched.add(method);
  });
}

exports.improve_console_groups = install;
exports.default = install;
},{}],"qVXD":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_LOGGER_KEY = exports.DEFAULT_LOG_LEVEL = exports.createLogger = void 0;

var tiny_singleton_1 = __importDefault(require("@offirmo/tiny-singleton"));

var practical_logger_core_1 = require("@offirmo/practical-logger-core");

var sinks_1 = require("./sinks");

var practical_logger_1 = __importDefault(require("./better-console-groups/practical-logger"));

var ORIGINAL_CONSOLE = console;

var _install_groups_or_not_once_for_all = tiny_singleton_1.default(function (active) {
  if (active) practical_logger_1.default();
});

function createLogger(p) {
  var _a, _b;

  if (p === void 0) {
    p = {};
  }

  _install_groups_or_not_once_for_all(((_a = p.sinkOptions) === null || _a === void 0 ? void 0 : _a.betterGroups) !== false);

  var sink = ((_b = p.sinkOptions) === null || _b === void 0 ? void 0 : _b.sink) || sinks_1.create(p.sinkOptions);
  var group = ORIGINAL_CONSOLE.group,
      groupCollapsed = ORIGINAL_CONSOLE.groupCollapsed,
      groupEnd = ORIGINAL_CONSOLE.groupEnd;
  return __assign(__assign({}, practical_logger_core_1.createLogger(p, sink)), {
    group: group,
    groupCollapsed: groupCollapsed,
    groupEnd: groupEnd
  });
}

exports.createLogger = createLogger;

__exportStar(require("@offirmo/practical-logger-types"), exports);

var practical_logger_core_2 = require("@offirmo/practical-logger-core");

Object.defineProperty(exports, "DEFAULT_LOG_LEVEL", {
  enumerable: true,
  get: function () {
    return practical_logger_core_2.DEFAULT_LOG_LEVEL;
  }
});
Object.defineProperty(exports, "DEFAULT_LOGGER_KEY", {
  enumerable: true,
  get: function () {
    return practical_logger_core_2.DEFAULT_LOGGER_KEY;
  }
});
},{"@offirmo/tiny-singleton":"KdUZ","@offirmo/practical-logger-core":"DITU","./sinks":"GBiU","./better-console-groups/practical-logger":"iBPN","@offirmo/practical-logger-types":"Qoo0"}],"hZFD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LS_ROOT = void 0;
exports.LS_ROOT = '🛠UDA';
},{}],"wex4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLSKeyForOverride = exports.getOverrideKeyForLogger = exports.LS_ROOT = void 0;

var consts_1 = require("../consts");

var consts_2 = require("../consts");

Object.defineProperty(exports, "LS_ROOT", {
  enumerable: true,
  get: function () {
    return consts_2.LS_ROOT;
  }
});

function getOverrideKeyForLogger(name) {
  return "logger." + (name || 'default') + ".logLevel";
}

exports.getOverrideKeyForLogger = getOverrideKeyForLogger;

function getLSKeyForOverride(key) {
  // should we put v1 somewhere? no, most likely overkill.
  return consts_1.LS_ROOT + ".override." + key;
}

exports.getLSKeyForOverride = getLSKeyForOverride;
},{"../consts":"hZFD"}],"QmKr":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OWN_LOGGER_NAME = void 0;

var practical_logger_core_1 = require("@offirmo/practical-logger-core");

var practical_logger_browser_1 = require("@offirmo/practical-logger-browser");

var keys_1 = require("./keys"); ////////////////////////////////////


exports.OWN_LOGGER_NAME = keys_1.LS_ROOT;
var REVISION = 100.; ////////////////////////////////////

function create() {
  //console.trace('[UDA--browser installing…]')
  ////////////////////////////////////
  var loggers = {}; // to avoid creating duplicates

  var debugCommands = {}; // TODO check

  var exposed = {};
  var overrides = {}; // we'll expose them for clarity
  ////////////////////////////////////
  // TODO override?
  // TODO allow off?

  var _ownLogger = loggers[exports.OWN_LOGGER_NAME] = practical_logger_browser_1.createLogger({
    name: exports.OWN_LOGGER_NAME,
    suggestedLevel: 'fatal' // level adjustable, see below

  });

  function _getOverrideRequestedSJson(ovKey) {
    try {
      var LSKey = keys_1.getLSKeyForOverride(ovKey); //console.log(`LSKey = "${LSKey}"`)

      var rawValue = localStorage.getItem(LSKey); //console.log(`LSKey content = "${value}"`)

      return rawValue;
    } catch (err) {
      _ownLogger.warn("\uD83D\uDD34 error reading LS for override \"" + ovKey + "\"!", {
        err: err
      });

      return null;
    }
  }

  var forcedLevel = _getOverrideRequestedSJson(keys_1.getOverrideKeyForLogger('_UDA_internal'));

  try {
    if (forcedLevel) _ownLogger.setLevel(JSON.parse(forcedLevel));
  } catch (err) {
    _ownLogger.fatal("\uD83D\uDD34 error setting internal logger forced level: \"" + forcedLevel + "\"!");
  }

  _ownLogger.debug("Instantiated. (revision: " + REVISION + ")");

  function _getOverride(key) {
    if (!overrides[key]) {
      // we only read the LS once for speed reason
      overrides[key] = {
        // so far:
        isOn: false,
        value: undefined
      };

      var rawValue = _getOverrideRequestedSJson(key);

      if (rawValue) {
        try {
          overrides[key].isOn = true; // we allow the non-JSON "undefined"

          var value = rawValue === 'undefined' ? undefined : JSON.parse(rawValue);
          overrides[key].value = value;

          _ownLogger.log(" \uD83D\uDD35 overriden \"" + key + "\"", {
            value: value
          });
        } catch (err) {
          // TODO only complain once
          // TODO seen crash, to check again
          _ownLogger.warn("\uD83D\uDD34 failed to override \"" + key + "\"!", {
            badValue: rawValue,
            err: err
          });
        }
      }
    }

    return overrides[key];
  } ////////////////////////////////////


  var api = {
    getLogger: getLogger,
    exposeInternal: exposeInternal,
    overrideHook: overrideHook,
    addDebugCommand: addDebugCommand,
    _: {
      exposed: exposed,
      overrides: overrides,
      minor: REVISION,
      source: 'browser-lib',
      create: create
    }
  }; ////////////////////////////////////

  function overrideHook(key, defaultValue) {
    try {
      var status = _getOverride(key);

      if (status.isOn) return status.value;
    } catch (err) {
      // should never happen because _getOverride() already catch
      // TODO check!
      _ownLogger.error('overrideHook(): error retrieving override!', {
        key: key,
        err: err
      });
    }

    return defaultValue;
  }

  function getLogger(p) {
    if (p === void 0) {
      p = {};
    }

    var name = p.name || practical_logger_core_1.DEFAULT_LOGGER_KEY; // we need a name immediately

    if (!loggers[name]) {
      try {
        var ovKey = keys_1.getOverrideKeyForLogger(name);

        if (!p.forcedLevel && _getOverrideRequestedSJson(ovKey)) {
          p = __assign(__assign({}, p), {
            forcedLevel: overrideHook(ovKey, p.suggestedLevel || practical_logger_core_1.DEFAULT_LOG_LEVEL)
          });
        }
      } catch (err) {
        // this warning should appear only once on creation ✔
        _ownLogger.error('getLogger(): error overriding the level!', {
          name: name,
          err: err
        });
      }

      loggers[name] = practical_logger_browser_1.createLogger(p);
    }

    return loggers[name];
  }

  function exposeInternal(path, value) {
    _ownLogger.warn('exposeInternal(): alpha, not documented!');

    try {
      var pathParts = path.split('.'); // TODO switch to / ?

      var lastIndex_1 = pathParts.length - 1;
      var root_1 = exposed;
      pathParts.forEach(function (p, index) {
        root_1[p] = root_1[p] || (index === lastIndex_1 ? value : {});
        root_1 = root_1[p];
      });
    } catch (err) {
      _ownLogger.error('exposeInternal(): error exposing!', {
        path: path,
        err: err
      });
    }
  }

  function addDebugCommand(commandName, callback) {
    // TODO
    _ownLogger.warn('addDebugCommand(): alpha, not documented!'); // TODO try catch


    debugCommands[commandName] = callback;
  }

  return api;
}

exports.default = create;
},{"@offirmo/practical-logger-core":"DITU","@offirmo/practical-logger-browser":"qVXD","./keys":"wex4"}],"FUq7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LoggerCreationParams = exports.Logger = void 0;

var practical_logger_types_1 = require("@offirmo/practical-logger-types");

Object.defineProperty(exports, "Logger", {
  enumerable: true,
  get: function () {
    return practical_logger_types_1.Logger;
  }
});
Object.defineProperty(exports, "LoggerCreationParams", {
  enumerable: true,
  get: function () {
    return practical_logger_types_1.LoggerCreationParams;
  }
});
},{"@offirmo/practical-logger-types":"Qoo0"}],"ftHY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LoggerCreationParams = exports.Logger = exports.DebugApiV1 = void 0;

var v1_1 = require("./v1");

Object.defineProperty(exports, "DebugApiV1", {
  enumerable: true,
  get: function () {
    return v1_1.DebugApi;
  }
}); // for convenience

var practical_logger_types_1 = require("@offirmo/practical-logger-types");

Object.defineProperty(exports, "Logger", {
  enumerable: true,
  get: function () {
    return practical_logger_types_1.Logger;
  }
});
Object.defineProperty(exports, "LoggerCreationParams", {
  enumerable: true,
  get: function () {
    return practical_logger_types_1.LoggerCreationParams;
  }
});
},{"./v1":"FUq7","@offirmo/practical-logger-types":"Qoo0"}],"M3Pi":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createV1 = exports.globalThis = exports.addDebugCommand = exports.overrideHook = exports.exposeInternal = exports.getLogger = void 0;

var globalthis_ponyfill_1 = require("@offirmo/globalthis-ponyfill");

var v1_1 = __importStar(require("./v1"));

exports.createV1 = v1_1.default;
var globalThis = globalthis_ponyfill_1.getGlobalThis();
exports.globalThis = globalThis; // ensure the root is present

globalThis._debug = globalThis._debug || {};
var root = globalThis._debug; //////////// v1 ////////////
// TODO extract this common code!
// install globally if no better implementation already present

root.v1 = function (existing) {
  var candidate = v1_1.default();
  var ownLogger = candidate.getLogger({
    name: v1_1.OWN_LOGGER_NAME
  });
  ownLogger.debug('as a candidate, attempting to attach…');

  if (!existing) {
    ownLogger.debug('nominal install ✅');
    return candidate; // nominal case, this implementation is first
  } // something is wrong.
  // We CAN'T replace a non-placeholder existing one, even if we are more recent,
  // because the existing one may already have been called
  // and be having a state that can't be carried over.
  // HOWEVER some hints may help the user:


  var isExistingAPlaceholder = !existing._; // we know that the placeholder doesn't define this optional prop

  if (isExistingAPlaceholder) {
    ownLogger.warn('install warning: a placeholder is already present, you may have missed some calls! the true implementation should be imported earlier! Check the order of your scripts/imports!'); // better than nothing, may still miss some calls

    ownLogger.log('as a candidate, replacing existing ⚠');
    return candidate;
  }

  ownLogger = existing.getLogger({
    name: v1_1.OWN_LOGGER_NAME
  });
  ownLogger.warn('install warning: several true implementation coexists, only the top module should import it. Check your submodules!'); // note that this can happens if a bundler incorrectly duplicates the same module

  try {
    var minVersion = Math.min(existing._.minor, candidate._.minor);
    if (minVersion !== candidate._.minor) ownLogger.warn("install warning: several true implementation coexists, including an outdated one: \"v" + minVersion + "\"!");
  } catch (err) {
    ownLogger.warn(err);
  }

  ownLogger.log('as a candidate, discarding myself: existing is good enough ✅');
  return existing; // don't replace
}(root.v1); //////////// latest ////////////
// directly expose the latest implementation known to this lib


var instance = root.v1;
var getLogger = instance.getLogger,
    exposeInternal = instance.exposeInternal,
    overrideHook = instance.overrideHook,
    addDebugCommand = instance.addDebugCommand;
exports.getLogger = getLogger;
exports.exposeInternal = exposeInternal;
exports.overrideHook = overrideHook;
exports.addDebugCommand = addDebugCommand; // types

__exportStar(require("@offirmo/universal-debug-api-interface"), exports);
},{"@offirmo/globalthis-ponyfill":"ehj8","./v1":"QmKr","@offirmo/universal-debug-api-interface":"ftHY"}],"Be1M":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_loader = exports.loader_fallback = exports.PROP = void 0;

var xoff_1 = require("@offirmo-private/xoff");

var LIB = '🖼 iframe-loading';
exports.PROP = 'oᐧloader'; /////////////////////
//console.log('iframe-loading.ts', { window })

exports.loader_fallback = {
  // never hurt to try...
  configure: function () {
    var _a;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    window.parent.postMessage((_a = {}, _a[exports.PROP] = {
      method: 'configure',
      args: args
    }, _a), '*');
  },
  on_rsrc_loaded: function () {
    var _a;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    window.parent.postMessage((_a = {}, _a[exports.PROP] = {
      method: 'on_rsrc_loaded',
      args: args
    }, _a), '*');
  }
};
var loader_full;

try {
  loader_full = window.parent[exports.PROP];
} catch (_a) {}

loader_full = loader_full || window[exports.PROP];

if (!loader_full) {
  var url = new URL(window.location.href);
  var searchParams = url.searchParams;
  var hint_at_loader = searchParams.has(exports.PROP);
  if (!hint_at_loader) console.info("[" + LIB + "] loader not found" + (url.hostname === 'localhost' ? ' but looks like dev mode ✔' : ', are you properly set up?'));else console.info("[" + LIB + "] loader not found or cross-domain, will postMessage().");
}

var loader = loader_full || exports.loader_fallback;
xoff_1.extend_xoff({
  loader: loader
});

function get_loader(win) {
  if (win === void 0) {
    win = window;
  }

  return xoff_1.get_xoff(win).loader;
}

exports.get_loader = get_loader;
exports.default = get_loader;
},{"@offirmo-private/xoff":"lQpO"}],"B7Ip":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BUILD_DATE = exports.NUMERIC_VERSION = exports.VERSION = void 0; // THIS FILE IS AUTO GENERATED!

exports.VERSION = '0.67.2';
exports.NUMERIC_VERSION = 0.6702; // for easy comparisons

exports.BUILD_DATE = '20210609_06h43';
},{}],"xaPH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = exports.NUMERIC_VERSION = exports.VERSION = void 0;

var build_1 = require("./build");

Object.defineProperty(exports, "VERSION", {
  enumerable: true,
  get: function () {
    return build_1.VERSION;
  }
});
Object.defineProperty(exports, "NUMERIC_VERSION", {
  enumerable: true,
  get: function () {
    return build_1.NUMERIC_VERSION;
  }
});
exports.LIB = '@tbrpg/state';
exports.SCHEMA_VERSION = 15;
},{"./build":"B7Ip"}],"qyCc":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function Enum() {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    if (typeof values[0] === "string") {
        var result = {};
        for (var _a = 0, values_1 = values; _a < values_1.length; _a++) {
            var value = values_1[_a];
            result[value] = value;
        }
        return result;
    }
    else {
        return values[0];
    }
}
exports.Enum = Enum;
(function (Enum) {
    function ofKeys(e) {
        var result = {};
        for (var _i = 0, _a = Object.keys(e); _i < _a.length; _i++) {
            var key = _a[_i];
            result[key] = key;
        }
        return result;
    }
    Enum.ofKeys = ofKeys;
    function keys(e) {
        return Object.keys(e);
    }
    Enum.keys = keys;
    function values(e) {
        var result = [];
        for (var _i = 0, _a = Object.keys(e); _i < _a.length; _i++) {
            var key = _a[_i];
            result.push(e[key]);
        }
        return result;
    }
    Enum.values = values;
    function isType(e, value) {
        return values(e).indexOf(value) !== -1;
    }
    Enum.isType = isType;
})(Enum = exports.Enum || (exports.Enum = {}));

},{}],"UrHU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EngagementKey = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var EngagementKey = typescript_string_enums_1.Enum('just-some-text', 'hello_world--flow', 'hello_world--aside', 'hello_world--warning', 'tip--first_play', // TODO suggest changing name
// TODO suggest changing class
'code_redemption--failed', 'code_redemption--succeeded', 'achievement-unlocked', 'reborn');
exports.EngagementKey = EngagementKey;
},{"typescript-string-enums":"qyCc"}],"kCrO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NODE_TYPE_TO_DISPLAY_MODE = exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@offirmo-private/rich-text-format';
exports.LIB = LIB;
var SCHEMA_VERSION = 1;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
var NODE_TYPE_TO_DISPLAY_MODE = {
  // classics inline
  'inline_fragment': 'inline',
  'strong': 'inline',
  'weak': 'inline',
  'em': 'inline',
  // classics block
  'block_fragment': 'block',
  'heading': 'block',
  'hr': 'block',
  'ol': 'block',
  'ul': 'block',
  // special
  'br': 'inline',
  // internally used, don't mind
  'li': 'block'
};
exports.NODE_TYPE_TO_DISPLAY_MODE = NODE_TYPE_TO_DISPLAY_MODE;
},{}],"l9oy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NodeType = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); ///////


var NodeType = typescript_string_enums_1.Enum( // https://stackoverflow.com/questions/9189810/css-display-inline-vs-inline-block
// display "inline"
'inline_fragment', // = span
'strong', // strong but less strong than heading. Ex. ansi.bold
'weak', // opposite of strong ;) Ex. ansi.dim
'em', // TODO semantic difference with strong? Alternate? (= italic)
// display "block"
'block_fragment', // = div
'heading', 'hr', 'ol', 'ul', // special
'br', // internally used, don't mind, don't use directly
'li');
exports.NodeType = NodeType;
},{"typescript-string-enums":"qyCc"}],"mSmt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalize_node = void 0;

var consts_1 = require("./consts");

var types_1 = require("./types");

function normalize_node($raw_node) {
  var _a = $raw_node.$v,
      $v = _a === void 0 ? 1 : _a,
      _b = $raw_node.$type,
      $type = _b === void 0 ? types_1.NodeType.inline_fragment : _b,
      _c = $raw_node.$classes,
      $classes = _c === void 0 ? [] : _c,
      _d = $raw_node.$content,
      $content = _d === void 0 ? '' : _d,
      _e = $raw_node.$sub,
      $sub = _e === void 0 ? {} : _e,
      _f = $raw_node.$hints,
      $hints = _f === void 0 ? {} : _f; // TODO migration

  if ($v !== consts_1.SCHEMA_VERSION) throw new Error(consts_1.LIB + ": unknown schema version \"" + $v + "\"!"); // TODO validation

  var $node = {
    $v: $v,
    $type: $type,
    $classes: $classes,
    $content: $content,
    $sub: $sub,
    $hints: $hints
  };
  return $node;
}

exports.normalize_node = normalize_node;
},{"./consts":"kCrO","./types":"l9oy"}],"H4eg":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.walk = exports.Node = exports.CheckedNode = exports.NodeType = void 0;

var consts_1 = require("./consts");

var types_1 = require("./types");

Object.defineProperty(exports, "NodeType", {
  enumerable: true,
  get: function () {
    return types_1.NodeType;
  }
});
Object.defineProperty(exports, "CheckedNode", {
  enumerable: true,
  get: function () {
    return types_1.CheckedNode;
  }
});
Object.defineProperty(exports, "Node", {
  enumerable: true,
  get: function () {
    return types_1.Node;
  }
});

var utils_1 = require("./utils");

function get_default_callbacks() {
  function nothing() {}

  function identity(_a) {
    var state = _a.state;
    return state;
  }

  return {
    on_root_enter: nothing,
    on_root_exit: identity,
    on_node_enter: function () {
      throw new Error('Please define on_node_enter()!');
    },
    on_node_exit: identity,
    on_concatenate_str: identity,
    on_concatenate_sub_node: identity,
    on_filter: identity,
    on_filter_Capitalize: function (_a) {
      var state = _a.state; // generic processing that works for text, ansi, React...

      var generic_state = state;

      if (generic_state && typeof generic_state.str === 'string') {
        //console.log(`${LIB} auto capitalizing...`, state)
        var str = '' + generic_state.str;
        return __assign(__assign({}, generic_state), {
          str: str[0].toUpperCase() + str.slice(1)
        });
      }

      return state;
    },
    on_class_before: identity,
    on_class_after: identity,
    on_type: identity
  };
}

var SUB_NODE_BR = {
  $type: 'br'
};
var SUB_NODE_HR = {
  $type: 'hr'
};

function walk_content($node, callbacks, state, depth, options) {
  var $content = $node.$content,
      $sub_nodes = $node.$sub;
  var split1 = $content.split('{{');
  var initial_str = split1.shift();
  if (initial_str) state = callbacks.on_concatenate_str({
    str: initial_str,
    state: state,
    $node: $node,
    depth: depth
  }, options);
  state = split1.reduce(function (state, paramAndText) {
    var split2 = paramAndText.split('}}');
    if (split2.length !== 2) throw new Error(consts_1.LIB + ": syntax error in content \"" + $content + "\", unmatched {{}}!");

    var _a = split2.shift().split('|'),
        sub_node_id = _a[0],
        $filters = _a.slice(1);

    var $sub_node = $sub_nodes[sub_node_id];
    if (!$sub_node && sub_node_id === 'br') $sub_node = SUB_NODE_BR;
    if (!$sub_node && sub_node_id === 'hr') $sub_node = SUB_NODE_HR;
    if (!$sub_node) throw new Error(consts_1.LIB + ": syntax error in content \"" + $content + "\", it's referring to an unknown sub-node \"" + sub_node_id + "\"!");
    var sub_state = walk($sub_node, callbacks, options, {
      $parent_node: $node,
      $id: sub_node_id,
      depth: depth + 1
    }); //console.log('[filters', $filters, '])

    sub_state = $filters.reduce(function (state, $filter) {
      var fine_filter_cb_id = "on_filter_" + $filter; //console.log({fine_filter_cb_id})

      var fine_filter_callback = callbacks[fine_filter_cb_id];
      if (fine_filter_callback) state = fine_filter_callback({
        $filter: $filter,
        $filters: $filters,
        state: state,
        $node: $node,
        depth: depth
      }, options);
      return callbacks.on_filter({
        $filter: $filter,
        $filters: $filters,
        state: state,
        $node: $node,
        depth: depth
      }, options);
    }, sub_state); // Should we detect unused $subnodes?
    // NO it's convenient (ex. Oh-my-rpg) to over-set subnodes
    // and set a content which may or may not use them.

    state = callbacks.on_concatenate_sub_node({
      sub_state: sub_state,
      $id: sub_node_id,
      $parent_node: $node,
      state: state,
      $node: utils_1.normalize_node($sub_node),
      depth: depth
    }, options);
    if (split2[0]) state = callbacks.on_concatenate_str({
      str: split2[0],
      state: state,
      $node: $node,
      depth: depth
    }, options);
    return state;
  }, state);
  return state;
}

function walk($raw_node, raw_callbacks, options, // internal opts when recursing:
_a) {
  if (options === void 0) {
    options = {};
  }

  var // internal opts when recursing:
  _b = _a === void 0 ? {} : _a,
      $parent_node = _b.$parent_node,
      _c = _b.$id,
      $id = _c === void 0 ? 'root' : _c,
      _d = _b.depth,
      depth = _d === void 0 ? 0 : _d;

  var $node = utils_1.normalize_node($raw_node);
  var $type = $node.$type,
      $classes = $node.$classes,
      $sub_nodes = $node.$sub; // quick check

  if (!Object.keys(raw_callbacks).every(function (k) {
    return k.startsWith('on_');
  })) console.warn(consts_1.LIB + " Bad callbacks, check the API!");
  var callbacks = raw_callbacks;
  var isRoot = !$parent_node;

  if (isRoot) {
    callbacks = __assign(__assign({}, get_default_callbacks()), callbacks);
    callbacks.on_root_enter(options);
  }

  var state = callbacks.on_node_enter({
    $node: $node,
    $id: $id,
    depth: depth
  }, options); // TODO class begin / start ?

  state = $classes.reduce(function (state, $class) {
    return callbacks.on_class_before({
      $class: $class,
      state: state,
      $node: $node,
      depth: depth
    }, options);
  }, state);

  if ($type === 'ul' || $type === 'ol') {
    // special case of sub-content
    var sorted_keys_1 = Object.keys($sub_nodes).sort(); //console.log('walk ul/ol', sorted_keys)

    sorted_keys_1.forEach(function (key) {
      // I've been bitten by that...
      var number = Number(key);

      if (key === number.toString()) {
        console.warn("in sub-node '" + $id + "', the ul/ol key '" + key + "' suspiciously looks like a number. Beware of auto sorting!", {
          $node: $node,
          sorted_keys: sorted_keys_1
        });
      }
    });
    sorted_keys_1.forEach(function (key) {
      var $sub_node = {
        $type: types_1.NodeType.li,
        $content: '{{content}}',
        $sub: {
          content: $sub_nodes[key]
        }
      };
      var sub_state = walk($sub_node, callbacks, options, {
        $parent_node: $node,
        depth: depth + 1,
        $id: key
      });
      state = callbacks.on_concatenate_sub_node({
        state: state,
        sub_state: sub_state,
        $id: key,
        $node: utils_1.normalize_node($sub_node),
        $parent_node: $node,
        depth: depth
      }, options);
    });
  } else state = walk_content($node, callbacks, state, depth, options);

  state = $classes.reduce(function (state, $class) {
    return callbacks.on_class_after({
      $class: $class,
      state: state,
      $node: $node,
      depth: depth
    }, options);
  }, state);
  var fine_type_cb_id = "on_type_" + $type;
  var fine_type_callback = callbacks[fine_type_cb_id];
  if (fine_type_callback) state = fine_type_callback({
    $type: $type,
    $parent_node: $parent_node,
    state: state,
    $node: $node,
    depth: depth
  }, options);
  state = callbacks.on_type({
    $type: $type,
    $parent_node: $parent_node,
    state: state,
    $node: $node,
    depth: depth
  }, options);
  state = callbacks.on_node_exit({
    $node: $node,
    $id: $id,
    state: state,
    depth: depth
  }, options);
  if (!$parent_node) state = callbacks.on_root_exit({
    state: state,
    $node: $node,
    depth: 0
  }, options);
  return state;
}

exports.walk = walk;
},{"./consts":"kCrO","./types":"l9oy","./utils":"mSmt"}],"pESK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.to_debug = exports.callbacks = exports.DEFAULT_OPTIONS = void 0;

var walk_1 = require("../walk");

var MANY_SPACES = '                                                                                                ';

function indent(n) {
  return console.groupCollapsed || console.group ? '' : MANY_SPACES.slice(0, n * 2);
} ////////////////////////////////////


function debug_node_short($node) {
  var $type = $node.$type,
      $content = $node.$content;
  return $type + ".\"" + $content + "\"";
}

exports.DEFAULT_OPTIONS = {};
var consoleGroupStart = (console.groupCollapsed || console.group || console.log).bind(console);
var consoleGroupEnd = (console.groupEnd || console.log).bind(console);

var on_root_enter = function () {
  consoleGroupStart('⟩ [on_root_enter]');
};

var on_root_exit = function (_a) {
  var state = _a.state;
  console.log('⟨ [on_root_exit]');
  console.log("  [state=\"" + state + "\"]");
  consoleGroupEnd();
  return state;
};

var on_node_enter = function (_a) {
  var $node = _a.$node,
      $id = _a.$id,
      depth = _a.depth;
  consoleGroupStart(indent(depth) + ("\u27E9 [on_node_enter] #" + $id + "/") + debug_node_short($node));
  var state = '';
  console.log(indent(depth) + ("  [state=\"" + state + "\"] (init)"));
  return state;
};

var on_node_exit = function (_a) {
  var $node = _a.$node,
      $id = _a.$id,
      state = _a.state,
      depth = _a.depth;
  console.log(indent(depth) + ("\u27E8 [on_node_exit] #" + $id));
  console.log(indent(depth) + ("  [state=\"" + state + "\"]"));
  consoleGroupEnd();
  return state;
}; // when walking inside the content


var on_concatenate_str = function (_a) {
  var str = _a.str,
      state = _a.state,
      $node = _a.$node,
      depth = _a.depth;
  console.log(indent(depth) + ("+ [on_concatenate_str] \"" + str + "\""));
  state = state + str;
  console.log(indent(depth) + ("  [state=\"" + state + "\"]"));
  return state;
};

var on_concatenate_sub_node = function (_a) {
  var state = _a.state,
      sub_state = _a.sub_state,
      depth = _a.depth,
      $id = _a.$id,
      $parent_node = _a.$parent_node;
  console.log(indent(depth) + ("+ [on_concatenate_sub_node] \"" + sub_state + "\""));
  state = state + sub_state;
  console.log(indent(depth) + ("  [state=\"" + state + "\"]"));
  return state;
};

var on_filter = function (_a) {
  var $filter = _a.$filter,
      $filters = _a.$filters,
      state = _a.state,
      $node = _a.$node,
      depth = _a.depth;
  console.log(indent(depth) + ("  [on_filter] \"" + $filter));
  return state;
};

var on_class_before = function (_a) {
  var $class = _a.$class,
      state = _a.state,
      $node = _a.$node,
      depth = _a.depth;
  console.log(indent(depth) + ("  [\u27E9on_class_before] ." + $class));
  return state;
};

var on_class_after = function (_a) {
  var $class = _a.$class,
      state = _a.state,
      $node = _a.$node,
      depth = _a.depth;
  console.log(indent(depth) + ("  [\u27E8on_class_after] ." + $class));
  return state;
};

var on_type = function (_a) {
  var $type = _a.$type,
      state = _a.state,
      $node = _a.$node,
      depth = _a.depth;
  console.log(indent(depth) + ("  [on_type] \"" + $type + "\" " + $node.$classes));
  return state;
}; ////////////////////////////////////


var callbacks = {
  on_root_enter: on_root_enter,
  on_root_exit: on_root_exit,
  on_node_enter: on_node_enter,
  on_node_exit: on_node_exit,
  on_concatenate_str: on_concatenate_str,
  on_concatenate_sub_node: on_concatenate_sub_node,

  /*
  on_sub_node_id: ({$id, state, $node, depth}) => {
      console.log(indent(depth) + `  [sub-node] #${$id}`)
      console.log(indent(depth) + `  [state="${state}"]`)
      return state
  },
  */
  on_filter: on_filter,
  on_class_before: on_class_before,
  on_class_after: on_class_after,
  on_type: on_type,
  on_type_br: function (_a) {
    var state = _a.state,
        depth = _a.depth;
    console.log(indent(depth) + '  [on_type_br]');
    return state + '\\\\br\\\\';
  },
  on_type_hr: function (_a) {
    var state = _a.state,
        depth = _a.depth;
    console.log(indent(depth) + '  [on_type_hr]');
    return state + '--hr--';
  }
};
exports.callbacks = callbacks;

function to_debug($doc, options) {
  if (options === void 0) {
    options = exports.DEFAULT_OPTIONS;
  }

  return walk_1.walk($doc, callbacks, options);
}

exports.to_debug = to_debug;
},{"../walk":"H4eg"}],"LU4m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.to_actions = exports.callbacks = exports.DEFAULT_OPTIONS = void 0;

var walk_1 = require("../walk");

exports.DEFAULT_OPTIONS = {};

var on_type = function (_a) {
  //console.log('[on_type]', { $type, state })
  var $type = _a.$type,
      state = _a.state,
      $node = _a.$node,
      depth = _a.depth;

  if ($node.$hints.href) {
    state.actions.push({
      $node: $node,
      type: 'link',
      data: $node.$hints.href // TODO escaping for security? (This is debug, see React renderer which will do)

    });
  }

  return state;
};

var on_concatenate_sub_node = function (_a) {
  var _b;

  var state = _a.state,
      sub_state = _a.sub_state,
      $node = _a.$node,
      $id = _a.$id,
      $parent_node = _a.$parent_node;
  state.actions = (_b = state.actions).concat.apply(_b, sub_state.actions);
  return state;
};

var callbacks = {
  on_node_enter: function () {
    return {
      actions: []
    };
  },
  on_concatenate_str: function (_a) {
    var state = _a.state,
        str = _a.str; // nothing

    return state;
  },
  on_concatenate_sub_node: on_concatenate_sub_node,
  on_type: on_type
};
exports.callbacks = callbacks;

function to_actions($doc, options) {
  if (options === void 0) {
    options = exports.DEFAULT_OPTIONS;
  }

  return walk_1.walk($doc, callbacks, options).actions;
}

exports.to_actions = to_actions;
},{"../walk":"H4eg"}],"Te4g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_uuid_list = exports.is_KVP_list = exports.is_link = exports.is_list = void 0;

function is_list($node) {
  return $node.$type === 'ul' || $node.$type === 'ol';
}

exports.is_list = is_list;

function is_link($node) {
  return !!$node.$hints.href;
}

exports.is_link = is_link;

function is_KVP_list($node) {
  if (!is_list($node)) return false;
  return Object.values($node.$sub).every(function ($node) {
    return $node.$content === '{{key}}: {{value}}';
  });
}

exports.is_KVP_list = is_KVP_list;

function is_uuid_list($node) {
  if (!is_list($node)) return false;
  return Object.values($node.$sub).every(function ($node) {
    return !!($node.$hints || {}).uuid;
  });
}

exports.is_uuid_list = is_uuid_list;
},{}],"zhCr":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.to_text = exports.callbacks = exports.DEFAULT_OPTIONS = void 0;

var consts_1 = require("../consts");

var walk_1 = require("../walk");

var common_1 = require("./common");

exports.DEFAULT_OPTIONS = {
  style: 'advanced'
};
var DEFAULT_STATE = Object.freeze({
  sub_nodes: [],
  starts_with_block: false,
  ends_with_block: false,
  margin_top: 0,
  margin_bottom: 0,
  str: ''
});

var on_node_exit = function (_a, _b) {
  //console.log('[on_type]', { $type, state })
  var state = _a.state,
      $node = _a.$node,
      depth = _a.depth;
  var style = _b.style;

  switch ($node.$type) {
    case 'br':
      state.ends_with_block = true;
      break;

    default:
      break;
  }

  if (style === 'markdown') {
    switch ($node.$type) {
      case 'heading':
        state.str = "### " + state.str;
        state.margin_top = Math.max(state.margin_top, 1);
        state.margin_bottom = Math.max(state.margin_bottom, 1);
        break;

      case 'strong':
        state.str = "**" + state.str + "**";
        break;

      case 'weak':
        // how?
        // no change...
        break;

      case 'em':
        state.str = "_" + state.str + "_";
        break;

      case 'hr':
        state.str = '---';
        break;

      default:
        break;
    }

    if (common_1.is_link($node)) state.str = "[" + state.str + "](" + $node.$hints.href + ")";
  } else {
    switch ($node.$type) {
      case 'heading':
        state.margin_top = Math.max(state.margin_top, 1);
        break;

      case 'hr':
        state.str = '------------------------------------------------------------';
        break;

      default:
        break;
    }

    if (style === 'advanced' && common_1.is_KVP_list($node)) {
      // rewrite completely to a better-looking one
      var key_value_pairs_1 = [];
      var max_key_length_1 = 0;
      var max_value_length_1 = 0;
      state.sub_nodes.forEach(function (li_node) {
        //console.log({li_node})
        var kv_node = li_node.$sub.content;
        var key_node = kv_node.$sub.key;
        var value_node = kv_node.$sub.value;
        var key_text = to_text(key_node);
        var value_text = to_text(value_node);
        max_key_length_1 = Math.max(max_key_length_1, key_text.length);
        max_value_length_1 = Math.max(max_value_length_1, value_text.length);
        key_value_pairs_1.push([key_text, value_text]);
      });
      state.str = key_value_pairs_1.map(function (_a) {
        var key_text = _a[0],
            value_text = _a[1];
        return key_text.padEnd(max_key_length_1 + 1, '.') + value_text.padStart(max_value_length_1 + 1, '.');
      }).join('\n');
    }
  }

  if (consts_1.NODE_TYPE_TO_DISPLAY_MODE[$node.$type] === 'block') {
    state.starts_with_block = true;
    state.ends_with_block = true;
  }

  return state;
};

var on_concatenate_sub_node = function (_a, _b) {
  var state = _a.state,
      sub_state = _a.sub_state,
      $node = _a.$node,
      $id = _a.$id,
      $parent_node = _a.$parent_node;
  var style = _b.style;
  var sub_str = sub_state.str;
  var sub_starts_with_block = sub_state.starts_with_block;
  state.sub_nodes.push($node);

  switch ($parent_node.$type) {
    case 'ul':
      {
        // automake sub-state a ul > li
        var bullet = function () {
          if ($parent_node.$hints.bullets_style === 'none' && style === 'advanced') return '';
          return '- ';
        }();

        sub_starts_with_block = true;
        sub_str = bullet + sub_str;
        break;
      }

    case 'ol':
      {
        // automake sub-state a ol > li
        var bullet = function () {
          if (style === 'markdown') return $id + ". ";
          return (' ' + $id).slice(-2) + ". ";
        }();

        sub_starts_with_block = true;
        sub_str = bullet + sub_str;
        break;
      }

    default:
      break;
  }
  /*console.log('on_concatenate_sub_node()', {
      sub_node: $node,
      sub_state: {
          ...sub_state,
              str: sub_str,
              starts_with_block: sub_starts_with_block,
      },
      state: JSON.parse(JSON.stringify(state)),
  })*/


  if (state.str.length === 0) {
    // we are at start
    if (sub_state.starts_with_block) {
      // propagate start
      state.starts_with_block = true;
      state.margin_top = Math.max(state.margin_top, sub_state.margin_top);
    }
  } else {
    if (state.ends_with_block || sub_starts_with_block) {
      state.str += ''.padStart(Math.max(state.margin_bottom, sub_state.margin_top) + 1, '\n');
    }
  }

  state.str += sub_str;
  state.ends_with_block = sub_state.ends_with_block;
  return state;
};

var callbacks = {
  on_node_enter: function () {
    return __assign(__assign({}, DEFAULT_STATE), {
      sub_nodes: []
    });
  },
  on_concatenate_str: function (_a) {
    var state = _a.state,
        str = _a.str; //console.log('on_concatenate_str()', {str, state: JSON.parse(JSON.stringify(state)),})

    if (state.ends_with_block) {
      state.str += ''.padStart(state.margin_bottom + 1, '\n');
      state.ends_with_block = false;
      state.margin_bottom = 0;
    }

    state.str += str;
    return state;
  },
  on_concatenate_sub_node: on_concatenate_sub_node,
  on_node_exit: on_node_exit
};
exports.callbacks = callbacks;

function to_text($doc, options, callback_overrides) {
  if (options === void 0) {
    options = exports.DEFAULT_OPTIONS;
  }

  if (callback_overrides === void 0) {
    callback_overrides = {};
  }

  return walk_1.walk($doc, __assign(__assign({}, callbacks), callback_overrides), options).str;
}

exports.to_text = to_text; // TODO capitalize
},{"../consts":"kCrO","../walk":"H4eg","./common":"Te4g"}],"LH9I":[function(require,module,exports) {
"use strict";

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

var _a;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.to_html = exports.callbacks = exports.DEFAULT_OPTIONS = void 0;

var walk_1 = require("../walk");

var common_1 = require("./common");

var LIB = 'rich_text_to_html';
var MANY_TABS = '																																							';
exports.DEFAULT_OPTIONS = {};

function indent(n) {
  return MANY_TABS.slice(0, n);
}

var NODE_TYPE_TO_HTML_ELEMENT = (_a = {}, // will default to own tag if not in this list (ex. strong => strong)
_a[walk_1.NodeType.weak] = 'span', _a[walk_1.NodeType.heading] = 'h3', _a[walk_1.NodeType.inline_fragment] = 'span', _a[walk_1.NodeType.block_fragment] = 'div', _a);

var on_concatenate_sub_node = function (_a) {
  var $node = _a.$node,
      state = _a.state,
      sub_state = _a.sub_state;
  state.sub_nodes.push($node);
  state.str = state.str + sub_state.str;
  return state;
};

var on_node_exit = function (_a) {
  var state = _a.state,
      $node = _a.$node,
      depth = _a.depth;
  var $type = $node.$type,
      $classes = $node.$classes,
      $sub = $node.$sub,
      $hints = $node.$hints;
  var $sub_node_count = Object.keys($sub).length; //$type: NodeType, str
  //}: string, $classes: string[], $sub_node_count: number, depth: number): string {

  if ($type === 'br') {
    state.str = '<br/>\n';
    return state;
  }

  if ($type === 'hr') {
    state.str = '\n<hr/>\n';
    return state;
  }

  var result = '';
  var is_inline = false;

  var classes = __spreadArray([], $classes);

  switch ($type) {
    case 'strong':
    case 'em':
      is_inline = true;
      break;

    case 'weak':
      classes.push('o⋄color⁚secondary');
      is_inline = true;
      break;

    case 'inline_fragment':
      //classes.push('o⋄rich-text⋄inline')
      is_inline = true;
      break;

    default:
      break;
  }

  if (!is_inline) result += '\n' + indent(depth);
  var element = NODE_TYPE_TO_HTML_ELEMENT[$type] || $type;

  if (common_1.is_list($node)) {
    classes.push('o⋄rich-text⋄list');

    switch ($hints.bullets_style) {
      case 'none':
        classes.push('o⋄rich-text⋄list--no-bullet');
        break;

      default:
        break;
    }

    if (common_1.is_uuid_list($node)) {
      //console.log(`${LIB} seen uuid list`)
      classes.push('o⋄rich-text⋄list--interactive');
    }

    if (common_1.is_KVP_list($node)) {
      classes.push('o⋄rich-text⋄list--no-bullet'); // TODO rewrite completely

      console.warn(LIB + " TODO KVP");
    }
  }

  result += "<" + element;
  if (classes.length) result += " class=\"" + classes.join(' ') + "\"";
  result += '>' + state.str + ($sub_node_count ? '\n' + indent(depth) : '') + ("</" + element + ">");
  if (common_1.is_link($node)) result = "<a href=\"" + $hints.href + "\" target=\"_blank\">" + result + "</a>"; // for demo only

  if ($hints.uuid) result = "<button class=\"o\u22C4button--inline o\u22C4rich-text\u22C4interactive\" " + $hints.uuid + "\">" + result + "</button>";
  state.str = result;
  return state;
};

var callbacks = {
  on_node_enter: function () {
    return {
      sub_nodes: [],
      str: ''
    };
  },
  on_concatenate_str: function (_a) {
    var state = _a.state,
        str = _a.str;
    state.str += str;
    return state;
  },
  on_concatenate_sub_node: on_concatenate_sub_node,
  on_node_exit: on_node_exit
};
exports.callbacks = callbacks;

function to_html($doc, options) {
  if (options === void 0) {
    options = exports.DEFAULT_OPTIONS;
  }

  return '<div class="o⋄rich-text">\n	' + walk_1.walk($doc, callbacks, options).str + '\n</div>\n';
}

exports.to_html = to_html;
},{"../walk":"H4eg","./common":"Te4g"}],"ojIV":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.key_value = exports.unordered_list = exports.ordered_list = exports.weak = exports.strong = exports.heading = exports.block_fragment = exports.inline_fragment = exports.create = exports.Document = exports.NodeType = void 0;

var consts_1 = require("../consts");

var types_1 = require("../types");

Object.defineProperty(exports, "NodeType", {
  enumerable: true,
  get: function () {
    return types_1.NodeType;
  }
});
Object.defineProperty(exports, "Document", {
  enumerable: true,
  get: function () {
    return types_1.Document;
  }
});

function create($type) {
  var $node = {
    $v: consts_1.SCHEMA_VERSION,
    $type: $type,
    $classes: [],
    $content: '',
    $sub: {},
    $hints: {}
  };
  var builder = {
    addClass: addClass,
    addHints: addHints,
    pushText: pushText,
    pushRawNode: pushRawNode,
    pushNode: pushNode,
    pushInlineFragment: pushInlineFragment,
    pushBlockFragment: pushBlockFragment,
    pushStrong: pushStrong,
    pushWeak: pushWeak,
    pushHeading: pushHeading,
    pushHorizontalRule: pushHorizontalRule,
    pushLineBreak: pushLineBreak,
    pushKeyValue: pushKeyValue,
    done: done
  };
  var sub_id = 0;

  function addClass() {
    var _a;

    var classes = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      classes[_i] = arguments[_i];
    }

    (_a = $node.$classes).push.apply(_a, classes);

    return builder;
  }

  function addHints(hints) {
    $node.$hints = __assign(__assign({}, $node.$hints), hints);
    return builder;
  }

  function pushText(str) {
    $node.$content += str;
    return builder;
  }

  function _buildAndPush(builder, str, options) {
    var _a;

    if (options === void 0) {
      options = {};
    }

    options = __assign({
      classes: []
    }, options);

    var node = (_a = builder.pushText(str)).addClass.apply(_a, options.classes).done();

    delete options.classes;
    return pushNode(node, options);
  } // nothing is added in content
  // useful for
  // 1. lists
  // 2. manual stuff


  function pushRawNode(node, options) {
    var _a;

    if (options === void 0) {
      options = {};
    }

    var id = options.id || ('000' + ++sub_id).slice(-4);
    $node.$sub[id] = node;
    if (options.classes) (_a = $node.$classes).push.apply(_a, options.classes);
    return builder;
  } // node ref is auto added into content


  function pushNode(node, options) {
    if (options === void 0) {
      options = {};
    }

    var id = options.id || ('000' + ++sub_id).slice(-4);
    $node.$content += "{{" + id + "}}";
    return pushRawNode(node, __assign(__assign({}, options), {
      id: id
    }));
  }

  function pushInlineFragment(str, options) {
    return _buildAndPush(inline_fragment(), str, options);
  }

  function pushBlockFragment(str, options) {
    return _buildAndPush(block_fragment(), str, options);
  }

  function pushStrong(str, options) {
    return _buildAndPush(strong(), str, options);
  }

  function pushWeak(str, options) {
    return _buildAndPush(weak(), str, options);
  }

  function pushHeading(str, options) {
    return _buildAndPush(heading(), str, options);
  }

  function pushHorizontalRule() {
    $node.$content += '{{hr}}';
    return builder;
  }

  function pushLineBreak() {
    $node.$content += '{{br}}';
    return builder;
  }

  function pushKeyValue(key, value, options) {
    var _a;

    if (options === void 0) {
      options = {};
    }

    if ($node.$type !== types_1.NodeType.ol && $node.$type !== types_1.NodeType.ul) throw new Error(consts_1.LIB + ": Key/value is intended to be used in a ol/ul only!");
    options = __assign({
      classes: []
    }, options);

    var kv_node = (_a = key_value(key, value)).addClass.apply(_a, options.classes).done();

    delete options.classes;
    return pushRawNode(kv_node, options);
  }

  function done() {
    return $node;
  }

  return builder;
}

exports.create = create;

function inline_fragment() {
  return create(types_1.NodeType.inline_fragment);
}

exports.inline_fragment = inline_fragment;

function block_fragment() {
  return create(types_1.NodeType.block_fragment);
}

exports.block_fragment = block_fragment;

function heading() {
  return create(types_1.NodeType.heading);
}

exports.heading = heading;

function strong() {
  return create(types_1.NodeType.strong);
}

exports.strong = strong;

function weak() {
  return create(types_1.NodeType.weak);
}

exports.weak = weak;

function ordered_list() {
  return create(types_1.NodeType.ol);
}

exports.ordered_list = ordered_list;

function unordered_list() {
  return create(types_1.NodeType.ul);
}

exports.unordered_list = unordered_list;

function key_value(key, value) {
  var key_node = typeof key === 'string' ? inline_fragment().pushText(key).done() : key;
  var value_node = typeof value === 'string' ? inline_fragment().pushText(value).done() : value;
  return inline_fragment().pushNode(key_node, {
    id: 'key'
  }).pushText(': ').pushNode(value_node, {
    id: 'value'
  });
}

exports.key_value = key_value;
},{"../consts":"kCrO","../types":"l9oy"}],"aepI":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Enum = exports.to_html = exports.to_text = exports.to_text_callbacks = exports.to_actions = exports.to_debug = void 0;

var to_debug_1 = require("./renderers/to_debug");

Object.defineProperty(exports, "to_debug", {
  enumerable: true,
  get: function () {
    return to_debug_1.to_debug;
  }
});

var to_actions_1 = require("./renderers/to_actions");

Object.defineProperty(exports, "to_actions", {
  enumerable: true,
  get: function () {
    return to_actions_1.to_actions;
  }
});

var to_text_1 = require("./renderers/to_text");

Object.defineProperty(exports, "to_text_callbacks", {
  enumerable: true,
  get: function () {
    return to_text_1.callbacks;
  }
});
Object.defineProperty(exports, "to_text", {
  enumerable: true,
  get: function () {
    return to_text_1.to_text;
  }
});

var to_html_1 = require("./renderers/to_html");

Object.defineProperty(exports, "to_html", {
  enumerable: true,
  get: function () {
    return to_html_1.to_html;
  }
});

__exportStar(require("./types"), exports);

__exportStar(require("./walk"), exports);

__exportStar(require("./renderers/common"), exports);

__exportStar(require("./utils/builder"), exports); // for convenience of the consumer


var typescript_string_enums_1 = require("typescript-string-enums");

Object.defineProperty(exports, "Enum", {
  enumerable: true,
  get: function () {
    return typescript_string_enums_1.Enum;
  }
});
},{"./renderers/to_debug":"pESK","./renderers/to_actions":"LU4m","./renderers/to_text":"zhCr","./renderers/to_html":"LH9I","./types":"l9oy","./walk":"H4eg","./renderers/common":"Te4g","./utils/builder":"ojIV","typescript-string-enums":"qyCc"}],"eJ4h":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_recap = void 0;

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

function get_recap(u_state) {
  var isNewGame = u_state.revision === 0;

  if (isNewGame) {
    return RichText.inline_fragment().pushText('You are an ').pushStrong('otherworlder').pushText(', an adventurer from another world…{{br}}').pushText('Congratulations, you were chosen to enter the unknown realm of ').pushStrong('Jaema').pushText('!{{br}}').pushText('Maybe were you just more courageous, cunning and curious than your peers?{{br}}').pushText('But for now, let’s go on an adventure, for glory ⚔ and loot 📦 💰 !').done();
  }

  return RichText.block_fragment().pushText('You are ').pushInlineFragment(u_state.avatar.name, {
    id: 'name',
    classes: ['avatar__name']
  }).pushText(', the ').pushInlineFragment(u_state.avatar.klass, {
    id: 'class',
    classes: ['avatar__class']
  }).pushText(' from another world.{{br}}').pushText('You are adventuring in the mysterious world of ').pushStrong('Jaema').pushText('…{{br}}').pushStrong('For glory ⚔  and loot 📦 💰 !').done();
}

exports.get_recap = get_recap;
},{"@offirmo-private/rich-text-format":"aepI"}],"BTrG":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_engagement_message = void 0;

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

var types_1 = require("./types"); ////////////////////////////////////


function get_engagement_message(pe) {
  var key = pe.engagement.key,
      params = pe.params;

  switch (key) {
    case types_1.EngagementKey['just-some-text']:
      return RichText.block_fragment().pushText(params.text).done();

    case types_1.EngagementKey['hello_world--flow']:
    case types_1.EngagementKey['hello_world--aside']:
    case types_1.EngagementKey['hello_world--warning']:
      return RichText.block_fragment().pushText('[TEST] Hello, ').pushInlineFragment(params.name || 'world', {
        id: 'name'
      }).pushText('!').done();

    case types_1.EngagementKey['tip--first_play']:
      return RichText.block_fragment().pushStrong('Tip: ').pushText('Select ').pushStrong('play').pushText(' to start adventuring!').done();

    case types_1.EngagementKey['code_redemption--failed']:
      return RichText.block_fragment().pushStrong('Error: This code is either non-existing or non redeemable at the moment.').done();

    case types_1.EngagementKey['code_redemption--succeeded']:
      return RichText.block_fragment().pushWeak('Code successfully redeemed.').done();

    case types_1.EngagementKey['achievement-unlocked']:
      return RichText.block_fragment().pushStrong('🏆 Achievement unlocked:').pushLineBreak().pushText("\u201C" + params.icon + " " + params.name + "\u201C").done();

    case types_1.EngagementKey['reborn']:
      return RichText.block_fragment().pushStrong('You got reborn').pushLineBreak().pushText('Sorry, I changed the data format 😰.').done();

    default:
      throw new Error("Missing engagement message for \"" + key + "\"! (not implemented?)");
  }
}

exports.get_engagement_message = get_engagement_message;
},{"@offirmo-private/rich-text-format":"aepI","./types":"UrHU"}],"FZDX":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_engagement_message = exports.get_recap = void 0;

__exportStar(require("./types"), exports);

var recap_1 = require("./recap");

Object.defineProperty(exports, "get_recap", {
  enumerable: true,
  get: function () {
    return recap_1.get_recap;
  }
});

var messages_1 = require("./messages");

Object.defineProperty(exports, "get_engagement_message", {
  enumerable: true,
  get: function () {
    return messages_1.get_engagement_message;
  }
});
},{"./types":"UrHU","./recap":"eJ4h","./messages":"BTrG"}],"lgCG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_RootState = exports.is_UTBundle = exports.is_TState = exports.is_UState = exports.is_BaseState = exports.is_time_stamped = exports.is_revisioned = exports.has_versioned_schema = exports.is_WithLastUserInvestmentTimestamp = exports.is_WithTimestamp = exports.is_WithRevision = exports.is_WithSchemaVersion = void 0; /////////////////////////////////////////////////

function is_WithSchemaVersion(s) {
  var _a;

  return Number.isInteger((_a = s) === null || _a === void 0 ? void 0 : _a.schema_version);
}

exports.is_WithSchemaVersion = is_WithSchemaVersion;

function is_WithRevision(s) {
  var _a;

  return Number.isInteger((_a = s) === null || _a === void 0 ? void 0 : _a.revision);
}

exports.is_WithRevision = is_WithRevision;

function is_WithTimestamp(s) {
  var _a;

  return Number.isInteger((_a = s) === null || _a === void 0 ? void 0 : _a.timestamp_ms);
}

exports.is_WithTimestamp = is_WithTimestamp;

function is_WithLastUserInvestmentTimestamp(s) {
  var _a;

  return Number.isInteger((_a = s) === null || _a === void 0 ? void 0 : _a.last_user_investment_tms);
}

exports.is_WithLastUserInvestmentTimestamp = is_WithLastUserInvestmentTimestamp; /////////////////////////////////////////////////

function has_versioned_schema(s) {
  return is_WithSchemaVersion(s) || is_UTBundle(s) || is_RootState(s);
}

exports.has_versioned_schema = has_versioned_schema;

function is_revisioned(s) {
  return is_WithRevision(s) || is_UTBundle(s) || is_RootState(s);
}

exports.is_revisioned = is_revisioned;

function is_time_stamped(s) {
  return is_WithTimestamp(s) || is_UTBundle(s) || is_RootState(s);
}

exports.is_time_stamped = is_time_stamped; /////////////////////////////////////////////////

function is_BaseState(s) {
  return is_WithSchemaVersion(s) && is_WithRevision(s);
}

exports.is_BaseState = is_BaseState;

function is_UState(s) {
  return is_BaseState(s) && !is_WithTimestamp(s);
}

exports.is_UState = is_UState;

function is_TState(s) {
  return is_BaseState(s) && is_WithTimestamp(s);
}

exports.is_TState = is_TState;

function is_UTBundle(s) {
  return Array.isArray(s) && s.length === 2 && is_UState(s[0]) && is_TState(s[1]);
}

exports.is_UTBundle = is_UTBundle;

function is_RootState(s) {
  return is_UState(s === null || s === void 0 ? void 0 : s.u_state) && is_TState(s === null || s === void 0 ? void 0 : s.t_state) && is_WithLastUserInvestmentTimestamp(s);
}

exports.is_RootState = is_RootState;
},{}],"UzCr":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_base_loose = exports.get_last_user_activity_timestamp_loose = exports.get_last_user_activity_timestamp = exports.get_timestamp_loose = exports.get_timestamp = exports.get_revision_loose = exports.get_revision = exports.get_schema_version_loose = exports.get_schema_version = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var type_guards_1 = require("./type-guards"); // "loose" =
// can recover from some legacy states (wrong structure) and will fallback to 0 if not a state (ex. undefined or unrecognized)
// BUT we don't type them as accepting null | undefined | any to better catch errors


function get_schema_version(s) {
  if (type_guards_1.is_WithSchemaVersion(s)) {
    var schema_version = s.schema_version;
    tiny_invariant_1.default(Number.isSafeInteger(schema_version), 'get_schema_version() safeInteger!');
    return schema_version;
  }

  if (type_guards_1.is_UTBundle(s)) {
    tiny_invariant_1.default(get_schema_version(s[0]) === get_schema_version(s[1]), 'get_schema_version() U & T versions should match inside a bundle!');
    return get_schema_version(s[0]);
  }

  if (type_guards_1.is_RootState(s)) {
    tiny_invariant_1.default(get_schema_version(s.u_state) === get_schema_version(s.t_state), 'get_schema_version() U & T versions should match inside a root!');
    return get_schema_version(s.u_state);
  }

  throw new Error('get_schema_version() should have a recognized versioned structure!');
}

exports.get_schema_version = get_schema_version;

function get_schema_version_loose(s) {
  if (type_guards_1.has_versioned_schema(s)) return get_schema_version(s); // specific fallbacks

  if (Array.isArray(s)) {
    var maybe_legacy_bundle = s;

    if (type_guards_1.has_versioned_schema(maybe_legacy_bundle[0])) {
      return get_schema_version(maybe_legacy_bundle[0]);
    }
  }

  if (s && typeof s === 'object') {
    var maybe_legacy_root_state = s;

    if (maybe_legacy_root_state.u_state) {
      return get_schema_version(maybe_legacy_root_state.u_state);
    }
  } // final fallback


  return 0;
}

exports.get_schema_version_loose = get_schema_version_loose;

function get_revision(s) {
  if (type_guards_1.is_WithRevision(s)) {
    var revision = s.revision;
    tiny_invariant_1.default(Number.isSafeInteger(revision), 'get_revision() should be a safeInteger');
    return revision;
  }

  if (type_guards_1.is_UTBundle(s)) {
    return get_revision(s[0]) + get_revision(s[1]);
  }

  if (type_guards_1.is_RootState(s)) {
    return get_revision(s.u_state) + get_revision(s.t_state);
  }

  throw new Error('get_revision() should have a recognized revisioned structure!');
}

exports.get_revision = get_revision;

function get_revision_loose(s) {
  if (type_guards_1.is_revisioned(s)) return get_revision(s); // specific fallbacks:

  if (Array.isArray(s)) {
    var maybe_legacy_bundle = s;

    if (type_guards_1.is_revisioned(maybe_legacy_bundle[0])) {
      return get_revision(maybe_legacy_bundle[0]) + get_revision_loose(maybe_legacy_bundle[1]);
    }
  }

  if (s && typeof s === 'object') {
    var maybe_legacy_root_state = s;

    if (maybe_legacy_root_state.u_state || maybe_legacy_root_state.t_state) {
      return get_revision(maybe_legacy_root_state.u_state) + get_revision_loose(maybe_legacy_root_state.t_state);
    }
  } // final fallback


  return 0;
}

exports.get_revision_loose = get_revision_loose;

function get_timestamp(s) {
  if (type_guards_1.is_WithTimestamp(s)) {
    var timestamp_ms = s.timestamp_ms;
    tiny_invariant_1.default(Number.isSafeInteger(timestamp_ms), 'get_timestamp() safeInteger');
    return timestamp_ms;
  }

  if (type_guards_1.is_UTBundle(s)) {
    return get_timestamp(s[1]);
  }

  if (type_guards_1.is_RootState(s)) {
    return get_timestamp(s.t_state);
  }

  throw new Error('get_timestamp() should have a recognized revisioned structure!');
}

exports.get_timestamp = get_timestamp;

function get_timestamp_loose(s) {
  if (type_guards_1.is_time_stamped(s)) return get_timestamp(s); // specific fallbacks:
  // loose bundles

  if (Array.isArray(s) && type_guards_1.is_time_stamped(s[1])) return get_timestamp(s[1]); // final fallback

  return 0;
}

exports.get_timestamp_loose = get_timestamp_loose;

function get_last_user_activity_timestamp(s) {
  if (type_guards_1.is_WithLastUserInvestmentTimestamp(s)) {
    var last_user_investment_tms = s.last_user_investment_tms;
    tiny_invariant_1.default(Number.isSafeInteger(last_user_investment_tms), 'get_last_user_activity_timestamp() safeInteger');
    return last_user_investment_tms;
  }

  throw new Error('get_last_user_activity_timestamp() should have a recognized activity-stamped structure!');
}

exports.get_last_user_activity_timestamp = get_last_user_activity_timestamp;

function get_last_user_activity_timestamp_loose(s) {
  if (type_guards_1.is_WithLastUserInvestmentTimestamp(s)) return get_last_user_activity_timestamp(s); // final fallback

  return 0;
}

exports.get_last_user_activity_timestamp_loose = get_last_user_activity_timestamp_loose; // TODO review name

function get_base_loose(s) {
  if (s === null) return null;
  if (s === undefined) return undefined;
  if (typeof s !== 'object') return "[not a state! " + typeof s + "]";
  return {
    schema_version: get_schema_version_loose(s),
    revision: get_revision_loose(s),
    last_user_investment_tms: get_last_user_activity_timestamp_loose(s),
    timestamp_ms: get_timestamp_loose(s)
  };
}

exports.get_base_loose = get_base_loose;
},{"tiny-invariant":"VYmh","./type-guards":"lgCG"}],"qpJp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fluid_select = void 0;

var selectors_1 = require("./selectors");

function fluid_select(stateA) {
  var schema_version__A = selectors_1.get_schema_version_loose(stateA);
  return {
    // separation of concerns
    // comparing schema versions is not the same as comparing "effort/investment"
    has_same_schema_version_than: function (stateB) {
      var schema_version__B = selectors_1.get_schema_version_loose(stateB);
      return schema_version__A === schema_version__B;
    },
    has_higher_or_equal_schema_version_than: function (stateB) {
      var schema_version__B = selectors_1.get_schema_version_loose(stateB);
      return schema_version__A >= schema_version__B;
    },
    has_higher_schema_version_than: function (stateB) {
      var schema_version__B = selectors_1.get_schema_version_loose(stateB);
      return schema_version__A > schema_version__B;
    },
    // has actual difference, not just timestamp
    has_valuable_difference_with: function (stateB) {
      //const schema_version__B = get_schema_version_loose(stateB)
      //assert(schema_version__A === schema_version__B, `has_valuable_difference_with() expects same schema versions`)
      var revision__A = selectors_1.get_revision_loose(stateA);
      var revision__B = selectors_1.get_revision_loose(stateB);
      return revision__A !== revision__B; // no order here
    },
    has_higher_investment_than: function (stateB) {
      // NO!
      // We don't compare schema versions straight away
      // if the user used an outdated+offline client for a while (high revision)
      // we may rather want an outdated-but-migratable format
      //assert(schema_version__A === schema_version__B, `has_higher_investment_than() expects same schema versions`)
      var revision__A = selectors_1.get_revision_loose(stateA);
      var revision__B = selectors_1.get_revision_loose(stateB);
      if (revision__A !== revision__B) return revision__A > revision__B; // same revision, may be a fork...

      var activity_tms__A = selectors_1.get_last_user_activity_timestamp_loose(stateA);
      var activity_tms__B = selectors_1.get_last_user_activity_timestamp_loose(stateB);
      if (activity_tms__A !== activity_tms__B) return activity_tms__A > activity_tms__B; // no change in the semantic INVESTMENT fields
      // we fallback to the other semantic fields

      var schema_version__B = selectors_1.get_schema_version_loose(stateB);
      if (schema_version__A !== schema_version__B) return schema_version__A > schema_version__B; // no change in any of the semantic fields
      // that should mean that they are equal, so we can return true or false.
      // BUT it could also be non-semantic states (no revision, schema version, etc.)
      // meaning that we can't really tell if it's higher investment.
      // safer to assume there is an investment!

      return true;
    },
    get_debug_infos_about_comparison_with: function (stateB, nickname__a, nickname__b) {
      var _a;

      if (nickname__a === void 0) {
        nickname__a = 'A';
      }

      if (nickname__b === void 0) {
        nickname__b = 'B';
      }

      return _a = {}, _a[nickname__a] = selectors_1.get_base_loose(stateA), _a[nickname__b] = selectors_1.get_base_loose(stateB), _a;
    }
  };
}

exports.fluid_select = fluid_select;
},{"./selectors":"UzCr"}],"THnX":[function(require,module,exports) {

},{}],"stVk":[function(require,module,exports) {
var define;
var global = arguments[3];
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('./empty')) : typeof define === 'function' && define.amd ? define(['exports', './empty'], factory) : factory(global.jsondiffpatch = {}, global.chalk);
})(this, function (exports, chalk) {
  'use strict';

  chalk = chalk && chalk.hasOwnProperty('default') ? chalk['default'] : chalk;

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  var classCallCheck = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  var createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var get = function get(object, property, receiver) {
    if (object === null) object = Function.prototype;
    var desc = Object.getOwnPropertyDescriptor(object, property);

    if (desc === undefined) {
      var parent = Object.getPrototypeOf(object);

      if (parent === null) {
        return undefined;
      } else {
        return get(parent, property, receiver);
      }
    } else if ("value" in desc) {
      return desc.value;
    } else {
      var getter = desc.get;

      if (getter === undefined) {
        return undefined;
      }

      return getter.call(receiver);
    }
  };

  var inherits = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };

  var possibleConstructorReturn = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  };

  var slicedToArray = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();

  var toConsumableArray = function (arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    } else {
      return Array.from(arr);
    }
  };

  var Processor = function () {
    function Processor(options) {
      classCallCheck(this, Processor);
      this.selfOptions = options || {};
      this.pipes = {};
    }

    createClass(Processor, [{
      key: 'options',
      value: function options(_options) {
        if (_options) {
          this.selfOptions = _options;
        }

        return this.selfOptions;
      }
    }, {
      key: 'pipe',
      value: function pipe(name, pipeArg) {
        var pipe = pipeArg;

        if (typeof name === 'string') {
          if (typeof pipe === 'undefined') {
            return this.pipes[name];
          } else {
            this.pipes[name] = pipe;
          }
        }

        if (name && name.name) {
          pipe = name;

          if (pipe.processor === this) {
            return pipe;
          }

          this.pipes[pipe.name] = pipe;
        }

        pipe.processor = this;
        return pipe;
      }
    }, {
      key: 'process',
      value: function process(input, pipe) {
        var context = input;
        context.options = this.options();
        var nextPipe = pipe || input.pipe || 'default';
        var lastPipe = void 0;
        var lastContext = void 0;

        while (nextPipe) {
          if (typeof context.nextAfterChildren !== 'undefined') {
            // children processed and coming back to parent
            context.next = context.nextAfterChildren;
            context.nextAfterChildren = null;
          }

          if (typeof nextPipe === 'string') {
            nextPipe = this.pipe(nextPipe);
          }

          nextPipe.process(context);
          lastContext = context;
          lastPipe = nextPipe;
          nextPipe = null;

          if (context) {
            if (context.next) {
              context = context.next;
              nextPipe = lastContext.nextPipe || context.pipe || lastPipe;
            }
          }
        }

        return context.hasResult ? context.result : undefined;
      }
    }]);
    return Processor;
  }();

  var Pipe = function () {
    function Pipe(name) {
      classCallCheck(this, Pipe);
      this.name = name;
      this.filters = [];
    }

    createClass(Pipe, [{
      key: 'process',
      value: function process(input) {
        if (!this.processor) {
          throw new Error('add this pipe to a processor before using it');
        }

        var debug = this.debug;
        var length = this.filters.length;
        var context = input;

        for (var index = 0; index < length; index++) {
          var filter = this.filters[index];

          if (debug) {
            this.log('filter: ' + filter.filterName);
          }

          filter(context);

          if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' && context.exiting) {
            context.exiting = false;
            break;
          }
        }

        if (!context.next && this.resultCheck) {
          this.resultCheck(context);
        }
      }
    }, {
      key: 'log',
      value: function log(msg) {
        console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);
      }
    }, {
      key: 'append',
      value: function append() {
        var _filters;

        (_filters = this.filters).push.apply(_filters, arguments);

        return this;
      }
    }, {
      key: 'prepend',
      value: function prepend() {
        var _filters2;

        (_filters2 = this.filters).unshift.apply(_filters2, arguments);

        return this;
      }
    }, {
      key: 'indexOf',
      value: function indexOf(filterName) {
        if (!filterName) {
          throw new Error('a filter name is required');
        }

        for (var index = 0; index < this.filters.length; index++) {
          var filter = this.filters[index];

          if (filter.filterName === filterName) {
            return index;
          }
        }

        throw new Error('filter not found: ' + filterName);
      }
    }, {
      key: 'list',
      value: function list() {
        return this.filters.map(function (f) {
          return f.filterName;
        });
      }
    }, {
      key: 'after',
      value: function after(filterName) {
        var index = this.indexOf(filterName);
        var params = Array.prototype.slice.call(arguments, 1);

        if (!params.length) {
          throw new Error('a filter is required');
        }

        params.unshift(index + 1, 0);
        Array.prototype.splice.apply(this.filters, params);
        return this;
      }
    }, {
      key: 'before',
      value: function before(filterName) {
        var index = this.indexOf(filterName);
        var params = Array.prototype.slice.call(arguments, 1);

        if (!params.length) {
          throw new Error('a filter is required');
        }

        params.unshift(index, 0);
        Array.prototype.splice.apply(this.filters, params);
        return this;
      }
    }, {
      key: 'replace',
      value: function replace(filterName) {
        var index = this.indexOf(filterName);
        var params = Array.prototype.slice.call(arguments, 1);

        if (!params.length) {
          throw new Error('a filter is required');
        }

        params.unshift(index, 1);
        Array.prototype.splice.apply(this.filters, params);
        return this;
      }
    }, {
      key: 'remove',
      value: function remove(filterName) {
        var index = this.indexOf(filterName);
        this.filters.splice(index, 1);
        return this;
      }
    }, {
      key: 'clear',
      value: function clear() {
        this.filters.length = 0;
        return this;
      }
    }, {
      key: 'shouldHaveResult',
      value: function shouldHaveResult(should) {
        if (should === false) {
          this.resultCheck = null;
          return;
        }

        if (this.resultCheck) {
          return;
        }

        var pipe = this;

        this.resultCheck = function (context) {
          if (!context.hasResult) {
            console.log(context);
            var error = new Error(pipe.name + ' failed');
            error.noResult = true;
            throw error;
          }
        };

        return this;
      }
    }]);
    return Pipe;
  }();

  var Context = function () {
    function Context() {
      classCallCheck(this, Context);
    }

    createClass(Context, [{
      key: 'setResult',
      value: function setResult(result) {
        this.result = result;
        this.hasResult = true;
        return this;
      }
    }, {
      key: 'exit',
      value: function exit() {
        this.exiting = true;
        return this;
      }
    }, {
      key: 'switchTo',
      value: function switchTo(next, pipe) {
        if (typeof next === 'string' || next instanceof Pipe) {
          this.nextPipe = next;
        } else {
          this.next = next;

          if (pipe) {
            this.nextPipe = pipe;
          }
        }

        return this;
      }
    }, {
      key: 'push',
      value: function push(child, name) {
        child.parent = this;

        if (typeof name !== 'undefined') {
          child.childName = name;
        }

        child.root = this.root || this;
        child.options = child.options || this.options;

        if (!this.children) {
          this.children = [child];
          this.nextAfterChildren = this.next || null;
          this.next = child;
        } else {
          this.children[this.children.length - 1].next = child;
          this.children.push(child);
        }

        child.next = this;
        return this;
      }
    }]);
    return Context;
  }();

  var isArray = typeof Array.isArray === 'function' ? Array.isArray : function (a) {
    return a instanceof Array;
  };

  function cloneRegExp(re) {
    var regexMatch = /^\/(.*)\/([gimyu]*)$/.exec(re.toString());
    return new RegExp(regexMatch[1], regexMatch[2]);
  }

  function clone(arg) {
    if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) !== 'object') {
      return arg;
    }

    if (arg === null) {
      return null;
    }

    if (isArray(arg)) {
      return arg.map(clone);
    }

    if (arg instanceof Date) {
      return new Date(arg.getTime());
    }

    if (arg instanceof RegExp) {
      return cloneRegExp(arg);
    }

    var cloned = {};

    for (var name in arg) {
      if (Object.prototype.hasOwnProperty.call(arg, name)) {
        cloned[name] = clone(arg[name]);
      }
    }

    return cloned;
  }

  var DiffContext = function (_Context) {
    inherits(DiffContext, _Context);

    function DiffContext(left, right) {
      classCallCheck(this, DiffContext);

      var _this = possibleConstructorReturn(this, (DiffContext.__proto__ || Object.getPrototypeOf(DiffContext)).call(this));

      _this.left = left;
      _this.right = right;
      _this.pipe = 'diff';
      return _this;
    }

    createClass(DiffContext, [{
      key: 'setResult',
      value: function setResult(result) {
        if (this.options.cloneDiffValues && (typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {
          var clone$$1 = typeof this.options.cloneDiffValues === 'function' ? this.options.cloneDiffValues : clone;

          if (_typeof(result[0]) === 'object') {
            result[0] = clone$$1(result[0]);
          }

          if (_typeof(result[1]) === 'object') {
            result[1] = clone$$1(result[1]);
          }
        }

        return Context.prototype.setResult.apply(this, arguments);
      }
    }]);
    return DiffContext;
  }(Context);

  var PatchContext = function (_Context) {
    inherits(PatchContext, _Context);

    function PatchContext(left, delta) {
      classCallCheck(this, PatchContext);

      var _this = possibleConstructorReturn(this, (PatchContext.__proto__ || Object.getPrototypeOf(PatchContext)).call(this));

      _this.left = left;
      _this.delta = delta;
      _this.pipe = 'patch';
      return _this;
    }

    return PatchContext;
  }(Context);

  var ReverseContext = function (_Context) {
    inherits(ReverseContext, _Context);

    function ReverseContext(delta) {
      classCallCheck(this, ReverseContext);

      var _this = possibleConstructorReturn(this, (ReverseContext.__proto__ || Object.getPrototypeOf(ReverseContext)).call(this));

      _this.delta = delta;
      _this.pipe = 'reverse';
      return _this;
    }

    return ReverseContext;
  }(Context);

  var isArray$1 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {
    return a instanceof Array;
  };

  var diffFilter = function trivialMatchesDiffFilter(context) {
    if (context.left === context.right) {
      context.setResult(undefined).exit();
      return;
    }

    if (typeof context.left === 'undefined') {
      if (typeof context.right === 'function') {
        throw new Error('functions are not supported');
      }

      context.setResult([context.right]).exit();
      return;
    }

    if (typeof context.right === 'undefined') {
      context.setResult([context.left, 0, 0]).exit();
      return;
    }

    if (typeof context.left === 'function' || typeof context.right === 'function') {
      throw new Error('functions are not supported');
    }

    context.leftType = context.left === null ? 'null' : _typeof(context.left);
    context.rightType = context.right === null ? 'null' : _typeof(context.right);

    if (context.leftType !== context.rightType) {
      context.setResult([context.left, context.right]).exit();
      return;
    }

    if (context.leftType === 'boolean' || context.leftType === 'number') {
      context.setResult([context.left, context.right]).exit();
      return;
    }

    if (context.leftType === 'object') {
      context.leftIsArray = isArray$1(context.left);
    }

    if (context.rightType === 'object') {
      context.rightIsArray = isArray$1(context.right);
    }

    if (context.leftIsArray !== context.rightIsArray) {
      context.setResult([context.left, context.right]).exit();
      return;
    }

    if (context.left instanceof RegExp) {
      if (context.right instanceof RegExp) {
        context.setResult([context.left.toString(), context.right.toString()]).exit();
      } else {
        context.setResult([context.left, context.right]).exit();
      }
    }
  };

  diffFilter.filterName = 'trivial';

  var patchFilter = function trivialMatchesPatchFilter(context) {
    if (typeof context.delta === 'undefined') {
      context.setResult(context.left).exit();
      return;
    }

    context.nested = !isArray$1(context.delta);

    if (context.nested) {
      return;
    }

    if (context.delta.length === 1) {
      context.setResult(context.delta[0]).exit();
      return;
    }

    if (context.delta.length === 2) {
      if (context.left instanceof RegExp) {
        var regexArgs = /^\/(.*)\/([gimyu]+)$/.exec(context.delta[1]);

        if (regexArgs) {
          context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();
          return;
        }
      }

      context.setResult(context.delta[1]).exit();
      return;
    }

    if (context.delta.length === 3 && context.delta[2] === 0) {
      context.setResult(undefined).exit();
    }
  };

  patchFilter.filterName = 'trivial';

  var reverseFilter = function trivialReferseFilter(context) {
    if (typeof context.delta === 'undefined') {
      context.setResult(context.delta).exit();
      return;
    }

    context.nested = !isArray$1(context.delta);

    if (context.nested) {
      return;
    }

    if (context.delta.length === 1) {
      context.setResult([context.delta[0], 0, 0]).exit();
      return;
    }

    if (context.delta.length === 2) {
      context.setResult([context.delta[1], context.delta[0]]).exit();
      return;
    }

    if (context.delta.length === 3 && context.delta[2] === 0) {
      context.setResult([context.delta[0]]).exit();
    }
  };

  reverseFilter.filterName = 'trivial';

  function collectChildrenDiffFilter(context) {
    if (!context || !context.children) {
      return;
    }

    var length = context.children.length;
    var child = void 0;
    var result = context.result;

    for (var index = 0; index < length; index++) {
      child = context.children[index];

      if (typeof child.result === 'undefined') {
        continue;
      }

      result = result || {};
      result[child.childName] = child.result;
    }

    if (result && context.leftIsArray) {
      result._t = 'a';
    }

    context.setResult(result).exit();
  }

  collectChildrenDiffFilter.filterName = 'collectChildren';

  function objectsDiffFilter(context) {
    if (context.leftIsArray || context.leftType !== 'object') {
      return;
    }

    var name = void 0;
    var child = void 0;
    var propertyFilter = context.options.propertyFilter;

    for (name in context.left) {
      if (!Object.prototype.hasOwnProperty.call(context.left, name)) {
        continue;
      }

      if (propertyFilter && !propertyFilter(name, context)) {
        continue;
      }

      child = new DiffContext(context.left[name], context.right[name]);
      context.push(child, name);
    }

    for (name in context.right) {
      if (!Object.prototype.hasOwnProperty.call(context.right, name)) {
        continue;
      }

      if (propertyFilter && !propertyFilter(name, context)) {
        continue;
      }

      if (typeof context.left[name] === 'undefined') {
        child = new DiffContext(undefined, context.right[name]);
        context.push(child, name);
      }
    }

    if (!context.children || context.children.length === 0) {
      context.setResult(undefined).exit();
      return;
    }

    context.exit();
  }

  objectsDiffFilter.filterName = 'objects';

  var patchFilter$1 = function nestedPatchFilter(context) {
    if (!context.nested) {
      return;
    }

    if (context.delta._t) {
      return;
    }

    var name = void 0;
    var child = void 0;

    for (name in context.delta) {
      child = new PatchContext(context.left[name], context.delta[name]);
      context.push(child, name);
    }

    context.exit();
  };

  patchFilter$1.filterName = 'objects';

  var collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {
    if (!context || !context.children) {
      return;
    }

    if (context.delta._t) {
      return;
    }

    var length = context.children.length;
    var child = void 0;

    for (var index = 0; index < length; index++) {
      child = context.children[index];

      if (Object.prototype.hasOwnProperty.call(context.left, child.childName) && child.result === undefined) {
        delete context.left[child.childName];
      } else if (context.left[child.childName] !== child.result) {
        context.left[child.childName] = child.result;
      }
    }

    context.setResult(context.left).exit();
  };

  collectChildrenPatchFilter.filterName = 'collectChildren';

  var reverseFilter$1 = function nestedReverseFilter(context) {
    if (!context.nested) {
      return;
    }

    if (context.delta._t) {
      return;
    }

    var name = void 0;
    var child = void 0;

    for (name in context.delta) {
      child = new ReverseContext(context.delta[name]);
      context.push(child, name);
    }

    context.exit();
  };

  reverseFilter$1.filterName = 'objects';

  function collectChildrenReverseFilter(context) {
    if (!context || !context.children) {
      return;
    }

    if (context.delta._t) {
      return;
    }

    var length = context.children.length;
    var child = void 0;
    var delta = {};

    for (var index = 0; index < length; index++) {
      child = context.children[index];

      if (delta[child.childName] !== child.result) {
        delta[child.childName] = child.result;
      }
    }

    context.setResult(delta).exit();
  }

  collectChildrenReverseFilter.filterName = 'collectChildren';
  /*
  
  LCS implementation that supports arrays or strings
  
  reference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem
  
  */

  var defaultMatch = function defaultMatch(array1, array2, index1, index2) {
    return array1[index1] === array2[index2];
  };

  var lengthMatrix = function lengthMatrix(array1, array2, match, context) {
    var len1 = array1.length;
    var len2 = array2.length;
    var x = void 0,
        y = void 0; // initialize empty matrix of len1+1 x len2+1

    var matrix = [len1 + 1];

    for (x = 0; x < len1 + 1; x++) {
      matrix[x] = [len2 + 1];

      for (y = 0; y < len2 + 1; y++) {
        matrix[x][y] = 0;
      }
    }

    matrix.match = match; // save sequence lengths for each coordinate

    for (x = 1; x < len1 + 1; x++) {
      for (y = 1; y < len2 + 1; y++) {
        if (match(array1, array2, x - 1, y - 1, context)) {
          matrix[x][y] = matrix[x - 1][y - 1] + 1;
        } else {
          matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);
        }
      }
    }

    return matrix;
  };

  var backtrack = function backtrack(matrix, array1, array2, context) {
    var index1 = array1.length;
    var index2 = array2.length;
    var subsequence = {
      sequence: [],
      indices1: [],
      indices2: []
    };

    while (index1 !== 0 && index2 !== 0) {
      var sameLetter = matrix.match(array1, array2, index1 - 1, index2 - 1, context);

      if (sameLetter) {
        subsequence.sequence.unshift(array1[index1 - 1]);
        subsequence.indices1.unshift(index1 - 1);
        subsequence.indices2.unshift(index2 - 1);
        --index1;
        --index2;
      } else {
        var valueAtMatrixAbove = matrix[index1][index2 - 1];
        var valueAtMatrixLeft = matrix[index1 - 1][index2];

        if (valueAtMatrixAbove > valueAtMatrixLeft) {
          --index2;
        } else {
          --index1;
        }
      }
    }

    return subsequence;
  };

  var get$1 = function get(array1, array2, match, context) {
    var innerContext = context || {};
    var matrix = lengthMatrix(array1, array2, match || defaultMatch, innerContext);
    var result = backtrack(matrix, array1, array2, innerContext);

    if (typeof array1 === 'string' && typeof array2 === 'string') {
      result.sequence = result.sequence.join('');
    }

    return result;
  };

  var lcs = {
    get: get$1
  };
  var ARRAY_MOVE = 3;
  var isArray$2 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {
    return a instanceof Array;
  };
  var arrayIndexOf = typeof Array.prototype.indexOf === 'function' ? function (array, item) {
    return array.indexOf(item);
  } : function (array, item) {
    var length = array.length;

    for (var i = 0; i < length; i++) {
      if (array[i] === item) {
        return i;
      }
    }

    return -1;
  };

  function arraysHaveMatchByRef(array1, array2, len1, len2) {
    for (var index1 = 0; index1 < len1; index1++) {
      var val1 = array1[index1];

      for (var index2 = 0; index2 < len2; index2++) {
        var val2 = array2[index2];

        if (index1 !== index2 && val1 === val2) {
          return true;
        }
      }
    }
  }

  function matchItems(array1, array2, index1, index2, context) {
    var value1 = array1[index1];
    var value2 = array2[index2];

    if (value1 === value2) {
      return true;
    }

    if ((typeof value1 === 'undefined' ? 'undefined' : _typeof(value1)) !== 'object' || (typeof value2 === 'undefined' ? 'undefined' : _typeof(value2)) !== 'object') {
      return false;
    }

    var objectHash = context.objectHash;

    if (!objectHash) {
      // no way to match objects was provided, try match by position
      return context.matchByPosition && index1 === index2;
    }

    var hash1 = void 0;
    var hash2 = void 0;

    if (typeof index1 === 'number') {
      context.hashCache1 = context.hashCache1 || [];
      hash1 = context.hashCache1[index1];

      if (typeof hash1 === 'undefined') {
        context.hashCache1[index1] = hash1 = objectHash(value1, index1);
      }
    } else {
      hash1 = objectHash(value1);
    }

    if (typeof hash1 === 'undefined') {
      return false;
    }

    if (typeof index2 === 'number') {
      context.hashCache2 = context.hashCache2 || [];
      hash2 = context.hashCache2[index2];

      if (typeof hash2 === 'undefined') {
        context.hashCache2[index2] = hash2 = objectHash(value2, index2);
      }
    } else {
      hash2 = objectHash(value2);
    }

    if (typeof hash2 === 'undefined') {
      return false;
    }

    return hash1 === hash2;
  }

  var diffFilter$1 = function arraysDiffFilter(context) {
    if (!context.leftIsArray) {
      return;
    }

    var matchContext = {
      objectHash: context.options && context.options.objectHash,
      matchByPosition: context.options && context.options.matchByPosition
    };
    var commonHead = 0;
    var commonTail = 0;
    var index = void 0;
    var index1 = void 0;
    var index2 = void 0;
    var array1 = context.left;
    var array2 = context.right;
    var len1 = array1.length;
    var len2 = array2.length;
    var child = void 0;

    if (len1 > 0 && len2 > 0 && !matchContext.objectHash && typeof matchContext.matchByPosition !== 'boolean') {
      matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);
    } // separate common head


    while (commonHead < len1 && commonHead < len2 && matchItems(array1, array2, commonHead, commonHead, matchContext)) {
      index = commonHead;
      child = new DiffContext(context.left[index], context.right[index]);
      context.push(child, index);
      commonHead++;
    } // separate common tail


    while (commonTail + commonHead < len1 && commonTail + commonHead < len2 && matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {
      index1 = len1 - 1 - commonTail;
      index2 = len2 - 1 - commonTail;
      child = new DiffContext(context.left[index1], context.right[index2]);
      context.push(child, index2);
      commonTail++;
    }

    var result = void 0;

    if (commonHead + commonTail === len1) {
      if (len1 === len2) {
        // arrays are identical
        context.setResult(undefined).exit();
        return;
      } // trivial case, a block (1 or more consecutive items) was added


      result = result || {
        _t: 'a'
      };

      for (index = commonHead; index < len2 - commonTail; index++) {
        result[index] = [array2[index]];
      }

      context.setResult(result).exit();
      return;
    }

    if (commonHead + commonTail === len2) {
      // trivial case, a block (1 or more consecutive items) was removed
      result = result || {
        _t: 'a'
      };

      for (index = commonHead; index < len1 - commonTail; index++) {
        result['_' + index] = [array1[index], 0, 0];
      }

      context.setResult(result).exit();
      return;
    } // reset hash cache


    delete matchContext.hashCache1;
    delete matchContext.hashCache2; // diff is not trivial, find the LCS (Longest Common Subsequence)

    var trimmed1 = array1.slice(commonHead, len1 - commonTail);
    var trimmed2 = array2.slice(commonHead, len2 - commonTail);
    var seq = lcs.get(trimmed1, trimmed2, matchItems, matchContext);
    var removedItems = [];
    result = result || {
      _t: 'a'
    };

    for (index = commonHead; index < len1 - commonTail; index++) {
      if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {
        // removed
        result['_' + index] = [array1[index], 0, 0];
        removedItems.push(index);
      }
    }

    var detectMove = true;

    if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {
      detectMove = false;
    }

    var includeValueOnMove = false;

    if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {
      includeValueOnMove = true;
    }

    var removedItemsLength = removedItems.length;

    for (index = commonHead; index < len2 - commonTail; index++) {
      var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);

      if (indexOnArray2 < 0) {
        // added, try to match with a removed item and register as position move
        var isMove = false;

        if (detectMove && removedItemsLength > 0) {
          for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {
            index1 = removedItems[removeItemIndex1];

            if (matchItems(trimmed1, trimmed2, index1 - commonHead, index - commonHead, matchContext)) {
              // store position move as: [originalValue, newPosition, ARRAY_MOVE]
              result['_' + index1].splice(1, 2, index, ARRAY_MOVE);

              if (!includeValueOnMove) {
                // don't include moved value on diff, to save bytes
                result['_' + index1][0] = '';
              }

              index2 = index;
              child = new DiffContext(context.left[index1], context.right[index2]);
              context.push(child, index2);
              removedItems.splice(removeItemIndex1, 1);
              isMove = true;
              break;
            }
          }
        }

        if (!isMove) {
          // added
          result[index] = [array2[index]];
        }
      } else {
        // match, do inner diff
        index1 = seq.indices1[indexOnArray2] + commonHead;
        index2 = seq.indices2[indexOnArray2] + commonHead;
        child = new DiffContext(context.left[index1], context.right[index2]);
        context.push(child, index2);
      }
    }

    context.setResult(result).exit();
  };

  diffFilter$1.filterName = 'arrays';
  var compare = {
    numerically: function numerically(a, b) {
      return a - b;
    },
    numericallyBy: function numericallyBy(name) {
      return function (a, b) {
        return a[name] - b[name];
      };
    }
  };

  var patchFilter$2 = function nestedPatchFilter(context) {
    if (!context.nested) {
      return;
    }

    if (context.delta._t !== 'a') {
      return;
    }

    var index = void 0;
    var index1 = void 0;
    var delta = context.delta;
    var array = context.left; // first, separate removals, insertions and modifications

    var toRemove = [];
    var toInsert = [];
    var toModify = [];

    for (index in delta) {
      if (index !== '_t') {
        if (index[0] === '_') {
          // removed item from original array
          if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {
            toRemove.push(parseInt(index.slice(1), 10));
          } else {
            throw new Error('only removal or move can be applied at original array indices,' + (' invalid diff type: ' + delta[index][2]));
          }
        } else {
          if (delta[index].length === 1) {
            // added item at new array
            toInsert.push({
              index: parseInt(index, 10),
              value: delta[index][0]
            });
          } else {
            // modified item at new array
            toModify.push({
              index: parseInt(index, 10),
              delta: delta[index]
            });
          }
        }
      }
    } // remove items, in reverse order to avoid sawing our own floor


    toRemove = toRemove.sort(compare.numerically);

    for (index = toRemove.length - 1; index >= 0; index--) {
      index1 = toRemove[index];
      var indexDiff = delta['_' + index1];
      var removedValue = array.splice(index1, 1)[0];

      if (indexDiff[2] === ARRAY_MOVE) {
        // reinsert later
        toInsert.push({
          index: indexDiff[1],
          value: removedValue
        });
      }
    } // insert items, in reverse order to avoid moving our own floor


    toInsert = toInsert.sort(compare.numericallyBy('index'));
    var toInsertLength = toInsert.length;

    for (index = 0; index < toInsertLength; index++) {
      var insertion = toInsert[index];
      array.splice(insertion.index, 0, insertion.value);
    } // apply modifications


    var toModifyLength = toModify.length;
    var child = void 0;

    if (toModifyLength > 0) {
      for (index = 0; index < toModifyLength; index++) {
        var modification = toModify[index];
        child = new PatchContext(context.left[modification.index], modification.delta);
        context.push(child, modification.index);
      }
    }

    if (!context.children) {
      context.setResult(context.left).exit();
      return;
    }

    context.exit();
  };

  patchFilter$2.filterName = 'arrays';

  var collectChildrenPatchFilter$1 = function collectChildrenPatchFilter(context) {
    if (!context || !context.children) {
      return;
    }

    if (context.delta._t !== 'a') {
      return;
    }

    var length = context.children.length;
    var child = void 0;

    for (var index = 0; index < length; index++) {
      child = context.children[index];
      context.left[child.childName] = child.result;
    }

    context.setResult(context.left).exit();
  };

  collectChildrenPatchFilter$1.filterName = 'arraysCollectChildren';

  var reverseFilter$2 = function arraysReverseFilter(context) {
    if (!context.nested) {
      if (context.delta[2] === ARRAY_MOVE) {
        context.newName = '_' + context.delta[1];
        context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();
      }

      return;
    }

    if (context.delta._t !== 'a') {
      return;
    }

    var name = void 0;
    var child = void 0;

    for (name in context.delta) {
      if (name === '_t') {
        continue;
      }

      child = new ReverseContext(context.delta[name]);
      context.push(child, name);
    }

    context.exit();
  };

  reverseFilter$2.filterName = 'arrays';

  var reverseArrayDeltaIndex = function reverseArrayDeltaIndex(delta, index, itemDelta) {
    if (typeof index === 'string' && index[0] === '_') {
      return parseInt(index.substr(1), 10);
    } else if (isArray$2(itemDelta) && itemDelta[2] === 0) {
      return '_' + index;
    }

    var reverseIndex = +index;

    for (var deltaIndex in delta) {
      var deltaItem = delta[deltaIndex];

      if (isArray$2(deltaItem)) {
        if (deltaItem[2] === ARRAY_MOVE) {
          var moveFromIndex = parseInt(deltaIndex.substr(1), 10);
          var moveToIndex = deltaItem[1];

          if (moveToIndex === +index) {
            return moveFromIndex;
          }

          if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {
            reverseIndex++;
          } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {
            reverseIndex--;
          }
        } else if (deltaItem[2] === 0) {
          var deleteIndex = parseInt(deltaIndex.substr(1), 10);

          if (deleteIndex <= reverseIndex) {
            reverseIndex++;
          }
        } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {
          reverseIndex--;
        }
      }
    }

    return reverseIndex;
  };

  function collectChildrenReverseFilter$1(context) {
    if (!context || !context.children) {
      return;
    }

    if (context.delta._t !== 'a') {
      return;
    }

    var length = context.children.length;
    var child = void 0;
    var delta = {
      _t: 'a'
    };

    for (var index = 0; index < length; index++) {
      child = context.children[index];
      var name = child.newName;

      if (typeof name === 'undefined') {
        name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);
      }

      if (delta[name] !== child.result) {
        delta[name] = child.result;
      }
    }

    context.setResult(delta).exit();
  }

  collectChildrenReverseFilter$1.filterName = 'arraysCollectChildren';

  var diffFilter$2 = function datesDiffFilter(context) {
    if (context.left instanceof Date) {
      if (context.right instanceof Date) {
        if (context.left.getTime() !== context.right.getTime()) {
          context.setResult([context.left, context.right]);
        } else {
          context.setResult(undefined);
        }
      } else {
        context.setResult([context.left, context.right]);
      }

      context.exit();
    } else if (context.right instanceof Date) {
      context.setResult([context.left, context.right]).exit();
    }
  };

  diffFilter$2.filterName = 'dates';

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var diffMatchPatch = createCommonjsModule(function (module) {
    /**
     * Diff Match and Patch
     * Copyright 2018 The diff-match-patch Authors.
     * https://github.com/google/diff-match-patch
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * @fileoverview Computes the difference between two texts to create a patch.
     * Applies the patch onto another text, allowing for errors.
     * @author fraser@google.com (Neil Fraser)
     */

    /**
     * Class containing the diff, match and patch methods.
     * @constructor
     */
    function diff_match_patch() {
      // Defaults.
      // Redefine these in your program to override the defaults.
      // Number of seconds to map a diff before giving up (0 for infinity).
      this.Diff_Timeout = 1.0; // Cost of an empty edit operation in terms of edit characters.

      this.Diff_EditCost = 4; // At what point is no match declared (0.0 = perfection, 1.0 = very loose).

      this.Match_Threshold = 0.5; // How far to search for a match (0 = exact location, 1000+ = broad match).
      // A match this many characters away from the expected location will add
      // 1.0 to the score (0.0 is a perfect match).

      this.Match_Distance = 1000; // When deleting a large block of text (over ~64 characters), how close do
      // the contents have to be to match the expected contents. (0.0 = perfection,
      // 1.0 = very loose).  Note that Match_Threshold controls how closely the
      // end points of a delete need to match.

      this.Patch_DeleteThreshold = 0.5; // Chunk size for context length.

      this.Patch_Margin = 4; // The number of bits in an int.

      this.Match_MaxBits = 32;
    } //  DIFF FUNCTIONS

    /**
     * The data structure representing a diff is an array of tuples:
     * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
     * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
     */


    var DIFF_DELETE = -1;
    var DIFF_INSERT = 1;
    var DIFF_EQUAL = 0;
    /** @typedef {{0: number, 1: string}} */

    diff_match_patch.prototype.diff_main = function (text1, text2, opt_checklines, opt_deadline) {
      // Set a deadline by which time the diff must be complete.
      if (typeof opt_deadline == 'undefined') {
        if (this.Diff_Timeout <= 0) {
          opt_deadline = Number.MAX_VALUE;
        } else {
          opt_deadline = new Date().getTime() + this.Diff_Timeout * 1000;
        }
      }

      var deadline = opt_deadline; // Check for null inputs.

      if (text1 == null || text2 == null) {
        throw new Error('Null input. (diff_main)');
      } // Check for equality (speedup).


      if (text1 == text2) {
        if (text1) {
          return [[DIFF_EQUAL, text1]];
        }

        return [];
      }

      if (typeof opt_checklines == 'undefined') {
        opt_checklines = true;
      }

      var checklines = opt_checklines; // Trim off common prefix (speedup).

      var commonlength = this.diff_commonPrefix(text1, text2);
      var commonprefix = text1.substring(0, commonlength);
      text1 = text1.substring(commonlength);
      text2 = text2.substring(commonlength); // Trim off common suffix (speedup).

      commonlength = this.diff_commonSuffix(text1, text2);
      var commonsuffix = text1.substring(text1.length - commonlength);
      text1 = text1.substring(0, text1.length - commonlength);
      text2 = text2.substring(0, text2.length - commonlength); // Compute the diff on the middle block.

      var diffs = this.diff_compute_(text1, text2, checklines, deadline); // Restore the prefix and suffix.

      if (commonprefix) {
        diffs.unshift([DIFF_EQUAL, commonprefix]);
      }

      if (commonsuffix) {
        diffs.push([DIFF_EQUAL, commonsuffix]);
      }

      this.diff_cleanupMerge(diffs);
      return diffs;
    };
    /**
     * Find the differences between two texts.  Assumes that the texts do not
     * have any common prefix or suffix.
     * @param {string} text1 Old string to be diffed.
     * @param {string} text2 New string to be diffed.
     * @param {boolean} checklines Speedup flag.  If false, then don't run a
     *     line-level diff first to identify the changed areas.
     *     If true, then run a faster, slightly less optimal diff.
     * @param {number} deadline Time when the diff should be complete by.
     * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.
     * @private
     */


    diff_match_patch.prototype.diff_compute_ = function (text1, text2, checklines, deadline) {
      var diffs;

      if (!text1) {
        // Just add some text (speedup).
        return [[DIFF_INSERT, text2]];
      }

      if (!text2) {
        // Just delete some text (speedup).
        return [[DIFF_DELETE, text1]];
      }

      var longtext = text1.length > text2.length ? text1 : text2;
      var shorttext = text1.length > text2.length ? text2 : text1;
      var i = longtext.indexOf(shorttext);

      if (i != -1) {
        // Shorter text is inside the longer text (speedup).
        diffs = [[DIFF_INSERT, longtext.substring(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.substring(i + shorttext.length)]]; // Swap insertions for deletions if diff is reversed.

        if (text1.length > text2.length) {
          diffs[0][0] = diffs[2][0] = DIFF_DELETE;
        }

        return diffs;
      }

      if (shorttext.length == 1) {
        // Single character string.
        // After the previous speedup, the character can't be an equality.
        return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
      } // Check to see if the problem can be split in two.


      var hm = this.diff_halfMatch_(text1, text2);

      if (hm) {
        // A half-match was found, sort out the return data.
        var text1_a = hm[0];
        var text1_b = hm[1];
        var text2_a = hm[2];
        var text2_b = hm[3];
        var mid_common = hm[4]; // Send both pairs off for separate processing.

        var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);
        var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline); // Merge the results.

        return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
      }

      if (checklines && text1.length > 100 && text2.length > 100) {
        return this.diff_lineMode_(text1, text2, deadline);
      }

      return this.diff_bisect_(text1, text2, deadline);
    };
    /**
     * Do a quick line-level diff on both strings, then rediff the parts for
     * greater accuracy.
     * This speedup can produce non-minimal diffs.
     * @param {string} text1 Old string to be diffed.
     * @param {string} text2 New string to be diffed.
     * @param {number} deadline Time when the diff should be complete by.
     * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.
     * @private
     */


    diff_match_patch.prototype.diff_lineMode_ = function (text1, text2, deadline) {
      // Scan the text on a line-by-line basis first.
      var a = this.diff_linesToChars_(text1, text2);
      text1 = a.chars1;
      text2 = a.chars2;
      var linearray = a.lineArray;
      var diffs = this.diff_main(text1, text2, false, deadline); // Convert the diff back to original text.

      this.diff_charsToLines_(diffs, linearray); // Eliminate freak matches (e.g. blank lines)

      this.diff_cleanupSemantic(diffs); // Rediff any replacement blocks, this time character-by-character.
      // Add a dummy entry at the end.

      diffs.push([DIFF_EQUAL, '']);
      var pointer = 0;
      var count_delete = 0;
      var count_insert = 0;
      var text_delete = '';
      var text_insert = '';

      while (pointer < diffs.length) {
        switch (diffs[pointer][0]) {
          case DIFF_INSERT:
            count_insert++;
            text_insert += diffs[pointer][1];
            break;

          case DIFF_DELETE:
            count_delete++;
            text_delete += diffs[pointer][1];
            break;

          case DIFF_EQUAL:
            // Upon reaching an equality, check for prior redundancies.
            if (count_delete >= 1 && count_insert >= 1) {
              // Delete the offending records and add the merged ones.
              diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert);
              pointer = pointer - count_delete - count_insert;
              var a = this.diff_main(text_delete, text_insert, false, deadline);

              for (var j = a.length - 1; j >= 0; j--) {
                diffs.splice(pointer, 0, a[j]);
              }

              pointer = pointer + a.length;
            }

            count_insert = 0;
            count_delete = 0;
            text_delete = '';
            text_insert = '';
            break;
        }

        pointer++;
      }

      diffs.pop(); // Remove the dummy entry at the end.

      return diffs;
    };
    /**
     * Find the 'middle snake' of a diff, split the problem in two
     * and return the recursively constructed diff.
     * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
     * @param {string} text1 Old string to be diffed.
     * @param {string} text2 New string to be diffed.
     * @param {number} deadline Time at which to bail if not yet complete.
     * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.
     * @private
     */


    diff_match_patch.prototype.diff_bisect_ = function (text1, text2, deadline) {
      // Cache the text lengths to prevent multiple calls.
      var text1_length = text1.length;
      var text2_length = text2.length;
      var max_d = Math.ceil((text1_length + text2_length) / 2);
      var v_offset = max_d;
      var v_length = 2 * max_d;
      var v1 = new Array(v_length);
      var v2 = new Array(v_length); // Setting all elements to -1 is faster in Chrome & Firefox than mixing
      // integers and undefined.

      for (var x = 0; x < v_length; x++) {
        v1[x] = -1;
        v2[x] = -1;
      }

      v1[v_offset + 1] = 0;
      v2[v_offset + 1] = 0;
      var delta = text1_length - text2_length; // If the total number of characters is odd, then the front path will collide
      // with the reverse path.

      var front = delta % 2 != 0; // Offsets for start and end of k loop.
      // Prevents mapping of space beyond the grid.

      var k1start = 0;
      var k1end = 0;
      var k2start = 0;
      var k2end = 0;

      for (var d = 0; d < max_d; d++) {
        // Bail out if deadline is reached.
        if (new Date().getTime() > deadline) {
          break;
        } // Walk the front path one step.


        for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
          var k1_offset = v_offset + k1;
          var x1;

          if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {
            x1 = v1[k1_offset + 1];
          } else {
            x1 = v1[k1_offset - 1] + 1;
          }

          var y1 = x1 - k1;

          while (x1 < text1_length && y1 < text2_length && text1.charAt(x1) == text2.charAt(y1)) {
            x1++;
            y1++;
          }

          v1[k1_offset] = x1;

          if (x1 > text1_length) {
            // Ran off the right of the graph.
            k1end += 2;
          } else if (y1 > text2_length) {
            // Ran off the bottom of the graph.
            k1start += 2;
          } else if (front) {
            var k2_offset = v_offset + delta - k1;

            if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
              // Mirror x2 onto top-left coordinate system.
              var x2 = text1_length - v2[k2_offset];

              if (x1 >= x2) {
                // Overlap detected.
                return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);
              }
            }
          }
        } // Walk the reverse path one step.


        for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
          var k2_offset = v_offset + k2;
          var x2;

          if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {
            x2 = v2[k2_offset + 1];
          } else {
            x2 = v2[k2_offset - 1] + 1;
          }

          var y2 = x2 - k2;

          while (x2 < text1_length && y2 < text2_length && text1.charAt(text1_length - x2 - 1) == text2.charAt(text2_length - y2 - 1)) {
            x2++;
            y2++;
          }

          v2[k2_offset] = x2;

          if (x2 > text1_length) {
            // Ran off the left of the graph.
            k2end += 2;
          } else if (y2 > text2_length) {
            // Ran off the top of the graph.
            k2start += 2;
          } else if (!front) {
            var k1_offset = v_offset + delta - k2;

            if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
              var x1 = v1[k1_offset];
              var y1 = v_offset + x1 - k1_offset; // Mirror x2 onto top-left coordinate system.

              x2 = text1_length - x2;

              if (x1 >= x2) {
                // Overlap detected.
                return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);
              }
            }
          }
        }
      } // Diff took too long and hit the deadline or
      // number of diffs equals number of characters, no commonality at all.


      return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
    };
    /**
     * Given the location of the 'middle snake', split the diff in two parts
     * and recurse.
     * @param {string} text1 Old string to be diffed.
     * @param {string} text2 New string to be diffed.
     * @param {number} x Index of split point in text1.
     * @param {number} y Index of split point in text2.
     * @param {number} deadline Time at which to bail if not yet complete.
     * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.
     * @private
     */


    diff_match_patch.prototype.diff_bisectSplit_ = function (text1, text2, x, y, deadline) {
      var text1a = text1.substring(0, x);
      var text2a = text2.substring(0, y);
      var text1b = text1.substring(x);
      var text2b = text2.substring(y); // Compute both diffs serially.

      var diffs = this.diff_main(text1a, text2a, false, deadline);
      var diffsb = this.diff_main(text1b, text2b, false, deadline);
      return diffs.concat(diffsb);
    };
    /**
     * Split two texts into an array of strings.  Reduce the texts to a string of
     * hashes where each Unicode character represents one line.
     * @param {string} text1 First string.
     * @param {string} text2 Second string.
     * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}
     *     An object containing the encoded text1, the encoded text2 and
     *     the array of unique strings.
     *     The zeroth element of the array of unique strings is intentionally blank.
     * @private
     */


    diff_match_patch.prototype.diff_linesToChars_ = function (text1, text2) {
      var lineArray = []; // e.g. lineArray[4] == 'Hello\n'

      var lineHash = {}; // e.g. lineHash['Hello\n'] == 4
      // '\x00' is a valid character, but various debuggers don't like it.
      // So we'll insert a junk entry to avoid generating a null character.

      lineArray[0] = '';
      /**
       * Split a text into an array of strings.  Reduce the texts to a string of
       * hashes where each Unicode character represents one line.
       * Modifies linearray and linehash through being a closure.
       * @param {string} text String to encode.
       * @return {string} Encoded string.
       * @private
       */

      function diff_linesToCharsMunge_(text) {
        var chars = ''; // Walk the text, pulling out a substring for each line.
        // text.split('\n') would would temporarily double our memory footprint.
        // Modifying text would create many large strings to garbage collect.

        var lineStart = 0;
        var lineEnd = -1; // Keeping our own length variable is faster than looking it up.

        var lineArrayLength = lineArray.length;

        while (lineEnd < text.length - 1) {
          lineEnd = text.indexOf('\n', lineStart);

          if (lineEnd == -1) {
            lineEnd = text.length - 1;
          }

          var line = text.substring(lineStart, lineEnd + 1);
          lineStart = lineEnd + 1;

          if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== undefined) {
            chars += String.fromCharCode(lineHash[line]);
          } else {
            chars += String.fromCharCode(lineArrayLength);
            lineHash[line] = lineArrayLength;
            lineArray[lineArrayLength++] = line;
          }
        }

        return chars;
      }

      var chars1 = diff_linesToCharsMunge_(text1);
      var chars2 = diff_linesToCharsMunge_(text2);
      return {
        chars1: chars1,
        chars2: chars2,
        lineArray: lineArray
      };
    };
    /**
     * Rehydrate the text in a diff from a string of line hashes to real lines of
     * text.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     * @param {!Array.<string>} lineArray Array of unique strings.
     * @private
     */


    diff_match_patch.prototype.diff_charsToLines_ = function (diffs, lineArray) {
      for (var x = 0; x < diffs.length; x++) {
        var chars = diffs[x][1];
        var text = [];

        for (var y = 0; y < chars.length; y++) {
          text[y] = lineArray[chars.charCodeAt(y)];
        }

        diffs[x][1] = text.join('');
      }
    };
    /**
     * Determine the common prefix of two strings.
     * @param {string} text1 First string.
     * @param {string} text2 Second string.
     * @return {number} The number of characters common to the start of each
     *     string.
     */


    diff_match_patch.prototype.diff_commonPrefix = function (text1, text2) {
      // Quick check for common null cases.
      if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
        return 0;
      } // Binary search.
      // Performance analysis: http://neil.fraser.name/news/2007/10/09/


      var pointermin = 0;
      var pointermax = Math.min(text1.length, text2.length);
      var pointermid = pointermax;
      var pointerstart = 0;

      while (pointermin < pointermid) {
        if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {
          pointermin = pointermid;
          pointerstart = pointermin;
        } else {
          pointermax = pointermid;
        }

        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
      }

      return pointermid;
    };
    /**
     * Determine the common suffix of two strings.
     * @param {string} text1 First string.
     * @param {string} text2 Second string.
     * @return {number} The number of characters common to the end of each string.
     */


    diff_match_patch.prototype.diff_commonSuffix = function (text1, text2) {
      // Quick check for common null cases.
      if (!text1 || !text2 || text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
        return 0;
      } // Binary search.
      // Performance analysis: http://neil.fraser.name/news/2007/10/09/


      var pointermin = 0;
      var pointermax = Math.min(text1.length, text2.length);
      var pointermid = pointermax;
      var pointerend = 0;

      while (pointermin < pointermid) {
        if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {
          pointermin = pointermid;
          pointerend = pointermin;
        } else {
          pointermax = pointermid;
        }

        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
      }

      return pointermid;
    };
    /**
     * Determine if the suffix of one string is the prefix of another.
     * @param {string} text1 First string.
     * @param {string} text2 Second string.
     * @return {number} The number of characters common to the end of the first
     *     string and the start of the second string.
     * @private
     */


    diff_match_patch.prototype.diff_commonOverlap_ = function (text1, text2) {
      // Cache the text lengths to prevent multiple calls.
      var text1_length = text1.length;
      var text2_length = text2.length; // Eliminate the null case.

      if (text1_length == 0 || text2_length == 0) {
        return 0;
      } // Truncate the longer string.


      if (text1_length > text2_length) {
        text1 = text1.substring(text1_length - text2_length);
      } else if (text1_length < text2_length) {
        text2 = text2.substring(0, text1_length);
      }

      var text_length = Math.min(text1_length, text2_length); // Quick check for the worst case.

      if (text1 == text2) {
        return text_length;
      } // Start by looking for a single character match
      // and increase length until no match is found.
      // Performance analysis: http://neil.fraser.name/news/2010/11/04/


      var best = 0;
      var length = 1;

      while (true) {
        var pattern = text1.substring(text_length - length);
        var found = text2.indexOf(pattern);

        if (found == -1) {
          return best;
        }

        length += found;

        if (found == 0 || text1.substring(text_length - length) == text2.substring(0, length)) {
          best = length;
          length++;
        }
      }
    };
    /**
     * Do the two texts share a substring which is at least half the length of the
     * longer text?
     * This speedup can produce non-minimal diffs.
     * @param {string} text1 First string.
     * @param {string} text2 Second string.
     * @return {Array.<string>} Five element Array, containing the prefix of
     *     text1, the suffix of text1, the prefix of text2, the suffix of
     *     text2 and the common middle.  Or null if there was no match.
     * @private
     */


    diff_match_patch.prototype.diff_halfMatch_ = function (text1, text2) {
      if (this.Diff_Timeout <= 0) {
        // Don't risk returning a non-optimal diff if we have unlimited time.
        return null;
      }

      var longtext = text1.length > text2.length ? text1 : text2;
      var shorttext = text1.length > text2.length ? text2 : text1;

      if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
        return null; // Pointless.
      }

      var dmp = this; // 'this' becomes 'window' in a closure.

      /**
       * Does a substring of shorttext exist within longtext such that the substring
       * is at least half the length of longtext?
       * Closure, but does not reference any external variables.
       * @param {string} longtext Longer string.
       * @param {string} shorttext Shorter string.
       * @param {number} i Start index of quarter length substring within longtext.
       * @return {Array.<string>} Five element Array, containing the prefix of
       *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
       *     of shorttext and the common middle.  Or null if there was no match.
       * @private
       */

      function diff_halfMatchI_(longtext, shorttext, i) {
        // Start with a 1/4 length substring at position i as a seed.
        var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));
        var j = -1;
        var best_common = '';
        var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;

        while ((j = shorttext.indexOf(seed, j + 1)) != -1) {
          var prefixLength = dmp.diff_commonPrefix(longtext.substring(i), shorttext.substring(j));
          var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i), shorttext.substring(0, j));

          if (best_common.length < suffixLength + prefixLength) {
            best_common = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);
            best_longtext_a = longtext.substring(0, i - suffixLength);
            best_longtext_b = longtext.substring(i + prefixLength);
            best_shorttext_a = shorttext.substring(0, j - suffixLength);
            best_shorttext_b = shorttext.substring(j + prefixLength);
          }
        }

        if (best_common.length * 2 >= longtext.length) {
          return [best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b, best_common];
        } else {
          return null;
        }
      } // First check if the second quarter is the seed for a half-match.


      var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4)); // Check again based on the third quarter.

      var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));
      var hm;

      if (!hm1 && !hm2) {
        return null;
      } else if (!hm2) {
        hm = hm1;
      } else if (!hm1) {
        hm = hm2;
      } else {
        // Both matched.  Select the longest.
        hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
      } // A half-match was found, sort out the return data.


      var text1_a, text1_b, text2_a, text2_b;

      if (text1.length > text2.length) {
        text1_a = hm[0];
        text1_b = hm[1];
        text2_a = hm[2];
        text2_b = hm[3];
      } else {
        text2_a = hm[0];
        text2_b = hm[1];
        text1_a = hm[2];
        text1_b = hm[3];
      }

      var mid_common = hm[4];
      return [text1_a, text1_b, text2_a, text2_b, mid_common];
    };
    /**
     * Reduce the number of edits by eliminating semantically trivial equalities.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     */


    diff_match_patch.prototype.diff_cleanupSemantic = function (diffs) {
      var changes = false;
      var equalities = []; // Stack of indices where equalities are found.

      var equalitiesLength = 0; // Keeping our own length var is faster in JS.

      /** @type {?string} */

      var lastequality = null; // Always equal to diffs[equalities[equalitiesLength - 1]][1]

      var pointer = 0; // Index of current position.
      // Number of characters that changed prior to the equality.

      var length_insertions1 = 0;
      var length_deletions1 = 0; // Number of characters that changed after the equality.

      var length_insertions2 = 0;
      var length_deletions2 = 0;

      while (pointer < diffs.length) {
        if (diffs[pointer][0] == DIFF_EQUAL) {
          // Equality found.
          equalities[equalitiesLength++] = pointer;
          length_insertions1 = length_insertions2;
          length_deletions1 = length_deletions2;
          length_insertions2 = 0;
          length_deletions2 = 0;
          lastequality = diffs[pointer][1];
        } else {
          // An insertion or deletion.
          if (diffs[pointer][0] == DIFF_INSERT) {
            length_insertions2 += diffs[pointer][1].length;
          } else {
            length_deletions2 += diffs[pointer][1].length;
          } // Eliminate an equality that is smaller or equal to the edits on both
          // sides of it.


          if (lastequality && lastequality.length <= Math.max(length_insertions1, length_deletions1) && lastequality.length <= Math.max(length_insertions2, length_deletions2)) {
            // Duplicate record.
            diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastequality]); // Change second copy to insert.

            diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT; // Throw away the equality we just deleted.

            equalitiesLength--; // Throw away the previous equality (it needs to be reevaluated).

            equalitiesLength--;
            pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;
            length_insertions1 = 0; // Reset the counters.

            length_deletions1 = 0;
            length_insertions2 = 0;
            length_deletions2 = 0;
            lastequality = null;
            changes = true;
          }
        }

        pointer++;
      } // Normalize the diff.


      if (changes) {
        this.diff_cleanupMerge(diffs);
      }

      this.diff_cleanupSemanticLossless(diffs); // Find any overlaps between deletions and insertions.
      // e.g: <del>abcxxx</del><ins>xxxdef</ins>
      //   -> <del>abc</del>xxx<ins>def</ins>
      // e.g: <del>xxxabc</del><ins>defxxx</ins>
      //   -> <ins>def</ins>xxx<del>abc</del>
      // Only extract an overlap if it is as big as the edit ahead or behind it.

      pointer = 1;

      while (pointer < diffs.length) {
        if (diffs[pointer - 1][0] == DIFF_DELETE && diffs[pointer][0] == DIFF_INSERT) {
          var deletion = diffs[pointer - 1][1];
          var insertion = diffs[pointer][1];
          var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);
          var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);

          if (overlap_length1 >= overlap_length2) {
            if (overlap_length1 >= deletion.length / 2 || overlap_length1 >= insertion.length / 2) {
              // Overlap found.  Insert an equality and trim the surrounding edits.
              diffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);
              diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlap_length1);
              diffs[pointer + 1][1] = insertion.substring(overlap_length1);
              pointer++;
            }
          } else {
            if (overlap_length2 >= deletion.length / 2 || overlap_length2 >= insertion.length / 2) {
              // Reverse overlap found.
              // Insert an equality and swap and trim the surrounding edits.
              diffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);
              diffs[pointer - 1][0] = DIFF_INSERT;
              diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlap_length2);
              diffs[pointer + 1][0] = DIFF_DELETE;
              diffs[pointer + 1][1] = deletion.substring(overlap_length2);
              pointer++;
            }
          }

          pointer++;
        }

        pointer++;
      }
    };
    /**
     * Look for single edits surrounded on both sides by equalities
     * which can be shifted sideways to align the edit to a word boundary.
     * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     */


    diff_match_patch.prototype.diff_cleanupSemanticLossless = function (diffs) {
      /**
       * Given two strings, compute a score representing whether the internal
       * boundary falls on logical boundaries.
       * Scores range from 6 (best) to 0 (worst).
       * Closure, but does not reference any external variables.
       * @param {string} one First string.
       * @param {string} two Second string.
       * @return {number} The score.
       * @private
       */
      function diff_cleanupSemanticScore_(one, two) {
        if (!one || !two) {
          // Edges are the best.
          return 6;
        } // Each port of this function behaves slightly differently due to
        // subtle differences in each language's definition of things like
        // 'whitespace'.  Since this function's purpose is largely cosmetic,
        // the choice has been made to use each language's native features
        // rather than force total conformity.


        var char1 = one.charAt(one.length - 1);
        var char2 = two.charAt(0);
        var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);
        var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);
        var whitespace1 = nonAlphaNumeric1 && char1.match(diff_match_patch.whitespaceRegex_);
        var whitespace2 = nonAlphaNumeric2 && char2.match(diff_match_patch.whitespaceRegex_);
        var lineBreak1 = whitespace1 && char1.match(diff_match_patch.linebreakRegex_);
        var lineBreak2 = whitespace2 && char2.match(diff_match_patch.linebreakRegex_);
        var blankLine1 = lineBreak1 && one.match(diff_match_patch.blanklineEndRegex_);
        var blankLine2 = lineBreak2 && two.match(diff_match_patch.blanklineStartRegex_);

        if (blankLine1 || blankLine2) {
          // Five points for blank lines.
          return 5;
        } else if (lineBreak1 || lineBreak2) {
          // Four points for line breaks.
          return 4;
        } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {
          // Three points for end of sentences.
          return 3;
        } else if (whitespace1 || whitespace2) {
          // Two points for whitespace.
          return 2;
        } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {
          // One point for non-alphanumeric.
          return 1;
        }

        return 0;
      }

      var pointer = 1; // Intentionally ignore the first and last element (don't need checking).

      while (pointer < diffs.length - 1) {
        if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {
          // This is a single edit surrounded by equalities.
          var equality1 = diffs[pointer - 1][1];
          var edit = diffs[pointer][1];
          var equality2 = diffs[pointer + 1][1]; // First, shift the edit as far left as possible.

          var commonOffset = this.diff_commonSuffix(equality1, edit);

          if (commonOffset) {
            var commonString = edit.substring(edit.length - commonOffset);
            equality1 = equality1.substring(0, equality1.length - commonOffset);
            edit = commonString + edit.substring(0, edit.length - commonOffset);
            equality2 = commonString + equality2;
          } // Second, step character by character right, looking for the best fit.


          var bestEquality1 = equality1;
          var bestEdit = edit;
          var bestEquality2 = equality2;
          var bestScore = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);

          while (edit.charAt(0) === equality2.charAt(0)) {
            equality1 += edit.charAt(0);
            edit = edit.substring(1) + equality2.charAt(0);
            equality2 = equality2.substring(1);
            var score = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2); // The >= encourages trailing rather than leading whitespace on edits.

            if (score >= bestScore) {
              bestScore = score;
              bestEquality1 = equality1;
              bestEdit = edit;
              bestEquality2 = equality2;
            }
          }

          if (diffs[pointer - 1][1] != bestEquality1) {
            // We have an improvement, save it back to the diff.
            if (bestEquality1) {
              diffs[pointer - 1][1] = bestEquality1;
            } else {
              diffs.splice(pointer - 1, 1);
              pointer--;
            }

            diffs[pointer][1] = bestEdit;

            if (bestEquality2) {
              diffs[pointer + 1][1] = bestEquality2;
            } else {
              diffs.splice(pointer + 1, 1);
              pointer--;
            }
          }
        }

        pointer++;
      }
    }; // Define some regex patterns for matching boundaries.


    diff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;
    diff_match_patch.whitespaceRegex_ = /\s/;
    diff_match_patch.linebreakRegex_ = /[\r\n]/;
    diff_match_patch.blanklineEndRegex_ = /\n\r?\n$/;
    diff_match_patch.blanklineStartRegex_ = /^\r?\n\r?\n/;
    /**
     * Reduce the number of edits by eliminating operationally trivial equalities.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     */

    diff_match_patch.prototype.diff_cleanupEfficiency = function (diffs) {
      var changes = false;
      var equalities = []; // Stack of indices where equalities are found.

      var equalitiesLength = 0; // Keeping our own length var is faster in JS.

      /** @type {?string} */

      var lastequality = null; // Always equal to diffs[equalities[equalitiesLength - 1]][1]

      var pointer = 0; // Index of current position.
      // Is there an insertion operation before the last equality.

      var pre_ins = false; // Is there a deletion operation before the last equality.

      var pre_del = false; // Is there an insertion operation after the last equality.

      var post_ins = false; // Is there a deletion operation after the last equality.

      var post_del = false;

      while (pointer < diffs.length) {
        if (diffs[pointer][0] == DIFF_EQUAL) {
          // Equality found.
          if (diffs[pointer][1].length < this.Diff_EditCost && (post_ins || post_del)) {
            // Candidate found.
            equalities[equalitiesLength++] = pointer;
            pre_ins = post_ins;
            pre_del = post_del;
            lastequality = diffs[pointer][1];
          } else {
            // Not a candidate, and can never become one.
            equalitiesLength = 0;
            lastequality = null;
          }

          post_ins = post_del = false;
        } else {
          // An insertion or deletion.
          if (diffs[pointer][0] == DIFF_DELETE) {
            post_del = true;
          } else {
            post_ins = true;
          }
          /*
           * Five types to be split:
           * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>
           * <ins>A</ins>X<ins>C</ins><del>D</del>
           * <ins>A</ins><del>B</del>X<ins>C</ins>
           * <ins>A</del>X<ins>C</ins><del>D</del>
           * <ins>A</ins><del>B</del>X<del>C</del>
           */


          if (lastequality && (pre_ins && pre_del && post_ins && post_del || lastequality.length < this.Diff_EditCost / 2 && pre_ins + pre_del + post_ins + post_del == 3)) {
            // Duplicate record.
            diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastequality]); // Change second copy to insert.

            diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;
            equalitiesLength--; // Throw away the equality we just deleted;

            lastequality = null;

            if (pre_ins && pre_del) {
              // No changes made which could affect previous entry, keep going.
              post_ins = post_del = true;
              equalitiesLength = 0;
            } else {
              equalitiesLength--; // Throw away the previous equality.

              pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;
              post_ins = post_del = false;
            }

            changes = true;
          }
        }

        pointer++;
      }

      if (changes) {
        this.diff_cleanupMerge(diffs);
      }
    };
    /**
     * Reorder and merge like edit sections.  Merge equalities.
     * Any edit section can move as long as it doesn't cross an equality.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     */


    diff_match_patch.prototype.diff_cleanupMerge = function (diffs) {
      diffs.push([DIFF_EQUAL, '']); // Add a dummy entry at the end.

      var pointer = 0;
      var count_delete = 0;
      var count_insert = 0;
      var text_delete = '';
      var text_insert = '';
      var commonlength;

      while (pointer < diffs.length) {
        switch (diffs[pointer][0]) {
          case DIFF_INSERT:
            count_insert++;
            text_insert += diffs[pointer][1];
            pointer++;
            break;

          case DIFF_DELETE:
            count_delete++;
            text_delete += diffs[pointer][1];
            pointer++;
            break;

          case DIFF_EQUAL:
            // Upon reaching an equality, check for prior redundancies.
            if (count_delete + count_insert > 1) {
              if (count_delete !== 0 && count_insert !== 0) {
                // Factor out any common prefixies.
                commonlength = this.diff_commonPrefix(text_insert, text_delete);

                if (commonlength !== 0) {
                  if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] == DIFF_EQUAL) {
                    diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);
                  } else {
                    diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);
                    pointer++;
                  }

                  text_insert = text_insert.substring(commonlength);
                  text_delete = text_delete.substring(commonlength);
                } // Factor out any common suffixies.


                commonlength = this.diff_commonSuffix(text_insert, text_delete);

                if (commonlength !== 0) {
                  diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];
                  text_insert = text_insert.substring(0, text_insert.length - commonlength);
                  text_delete = text_delete.substring(0, text_delete.length - commonlength);
                }
              } // Delete the offending records and add the merged ones.


              if (count_delete === 0) {
                diffs.splice(pointer - count_insert, count_delete + count_insert, [DIFF_INSERT, text_insert]);
              } else if (count_insert === 0) {
                diffs.splice(pointer - count_delete, count_delete + count_insert, [DIFF_DELETE, text_delete]);
              } else {
                diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);
              }

              pointer = pointer - count_delete - count_insert + (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
            } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
              // Merge this equality with the previous one.
              diffs[pointer - 1][1] += diffs[pointer][1];
              diffs.splice(pointer, 1);
            } else {
              pointer++;
            }

            count_insert = 0;
            count_delete = 0;
            text_delete = '';
            text_insert = '';
            break;
        }
      }

      if (diffs[diffs.length - 1][1] === '') {
        diffs.pop(); // Remove the dummy entry at the end.
      } // Second pass: look for single edits surrounded on both sides by equalities
      // which can be shifted sideways to eliminate an equality.
      // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC


      var changes = false;
      pointer = 1; // Intentionally ignore the first and last element (don't need checking).

      while (pointer < diffs.length - 1) {
        if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {
          // This is a single edit surrounded by equalities.
          if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
            // Shift the edit over the previous equality.
            diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);
            diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
            diffs.splice(pointer - 1, 1);
            changes = true;
          } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {
            // Shift the edit over the next equality.
            diffs[pointer - 1][1] += diffs[pointer + 1][1];
            diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];
            diffs.splice(pointer + 1, 1);
            changes = true;
          }
        }

        pointer++;
      } // If shifts were made, the diff needs reordering and another shift sweep.


      if (changes) {
        this.diff_cleanupMerge(diffs);
      }
    };
    /**
     * loc is a location in text1, compute and return the equivalent location in
     * text2.
     * e.g. 'The cat' vs 'The big cat', 1->1, 5->8
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     * @param {number} loc Location within text1.
     * @return {number} Location within text2.
     */


    diff_match_patch.prototype.diff_xIndex = function (diffs, loc) {
      var chars1 = 0;
      var chars2 = 0;
      var last_chars1 = 0;
      var last_chars2 = 0;
      var x;

      for (x = 0; x < diffs.length; x++) {
        if (diffs[x][0] !== DIFF_INSERT) {
          // Equality or deletion.
          chars1 += diffs[x][1].length;
        }

        if (diffs[x][0] !== DIFF_DELETE) {
          // Equality or insertion.
          chars2 += diffs[x][1].length;
        }

        if (chars1 > loc) {
          // Overshot the location.
          break;
        }

        last_chars1 = chars1;
        last_chars2 = chars2;
      } // Was the location was deleted?


      if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {
        return last_chars2;
      } // Add the remaining character length.


      return last_chars2 + (loc - last_chars1);
    };
    /**
     * Convert a diff array into a pretty HTML report.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     * @return {string} HTML representation.
     */


    diff_match_patch.prototype.diff_prettyHtml = function (diffs) {
      var html = [];
      var pattern_amp = /&/g;
      var pattern_lt = /</g;
      var pattern_gt = />/g;
      var pattern_para = /\n/g;

      for (var x = 0; x < diffs.length; x++) {
        var op = diffs[x][0]; // Operation (insert, delete, equal)

        var data = diffs[x][1]; // Text of change.

        var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;').replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');

        switch (op) {
          case DIFF_INSERT:
            html[x] = '<ins style="background:#e6ffe6;">' + text + '</ins>';
            break;

          case DIFF_DELETE:
            html[x] = '<del style="background:#ffe6e6;">' + text + '</del>';
            break;

          case DIFF_EQUAL:
            html[x] = '<span>' + text + '</span>';
            break;
        }
      }

      return html.join('');
    };
    /**
     * Compute and return the source text (all equalities and deletions).
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     * @return {string} Source text.
     */


    diff_match_patch.prototype.diff_text1 = function (diffs) {
      var text = [];

      for (var x = 0; x < diffs.length; x++) {
        if (diffs[x][0] !== DIFF_INSERT) {
          text[x] = diffs[x][1];
        }
      }

      return text.join('');
    };
    /**
     * Compute and return the destination text (all equalities and insertions).
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     * @return {string} Destination text.
     */


    diff_match_patch.prototype.diff_text2 = function (diffs) {
      var text = [];

      for (var x = 0; x < diffs.length; x++) {
        if (diffs[x][0] !== DIFF_DELETE) {
          text[x] = diffs[x][1];
        }
      }

      return text.join('');
    };
    /**
     * Compute the Levenshtein distance; the number of inserted, deleted or
     * substituted characters.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     * @return {number} Number of changes.
     */


    diff_match_patch.prototype.diff_levenshtein = function (diffs) {
      var levenshtein = 0;
      var insertions = 0;
      var deletions = 0;

      for (var x = 0; x < diffs.length; x++) {
        var op = diffs[x][0];
        var data = diffs[x][1];

        switch (op) {
          case DIFF_INSERT:
            insertions += data.length;
            break;

          case DIFF_DELETE:
            deletions += data.length;
            break;

          case DIFF_EQUAL:
            // A deletion and an insertion is one substitution.
            levenshtein += Math.max(insertions, deletions);
            insertions = 0;
            deletions = 0;
            break;
        }
      }

      levenshtein += Math.max(insertions, deletions);
      return levenshtein;
    };
    /**
     * Crush the diff into an encoded string which describes the operations
     * required to transform text1 into text2.
     * E.g. =3\t-2\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.
     * Operations are tab-separated.  Inserted text is escaped using %xx notation.
     * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.
     * @return {string} Delta text.
     */


    diff_match_patch.prototype.diff_toDelta = function (diffs) {
      var text = [];

      for (var x = 0; x < diffs.length; x++) {
        switch (diffs[x][0]) {
          case DIFF_INSERT:
            text[x] = '+' + encodeURI(diffs[x][1]);
            break;

          case DIFF_DELETE:
            text[x] = '-' + diffs[x][1].length;
            break;

          case DIFF_EQUAL:
            text[x] = '=' + diffs[x][1].length;
            break;
        }
      }

      return text.join('\t').replace(/%20/g, ' ');
    };
    /**
     * Given the original text1, and an encoded string which describes the
     * operations required to transform text1 into text2, compute the full diff.
     * @param {string} text1 Source string for the diff.
     * @param {string} delta Delta text.
     * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.
     * @throws {!Error} If invalid input.
     */


    diff_match_patch.prototype.diff_fromDelta = function (text1, delta) {
      var diffs = [];
      var diffsLength = 0; // Keeping our own length var is faster in JS.

      var pointer = 0; // Cursor in text1

      var tokens = delta.split(/\t/g);

      for (var x = 0; x < tokens.length; x++) {
        // Each token begins with a one character parameter which specifies the
        // operation of this token (delete, insert, equality).
        var param = tokens[x].substring(1);

        switch (tokens[x].charAt(0)) {
          case '+':
            try {
              diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];
            } catch (ex) {
              // Malformed URI sequence.
              throw new Error('Illegal escape in diff_fromDelta: ' + param);
            }

            break;

          case '-': // Fall through.

          case '=':
            var n = parseInt(param, 10);

            if (isNaN(n) || n < 0) {
              throw new Error('Invalid number in diff_fromDelta: ' + param);
            }

            var text = text1.substring(pointer, pointer += n);

            if (tokens[x].charAt(0) == '=') {
              diffs[diffsLength++] = [DIFF_EQUAL, text];
            } else {
              diffs[diffsLength++] = [DIFF_DELETE, text];
            }

            break;

          default:
            // Blank tokens are ok (from a trailing \t).
            // Anything else is an error.
            if (tokens[x]) {
              throw new Error('Invalid diff operation in diff_fromDelta: ' + tokens[x]);
            }

        }
      }

      if (pointer != text1.length) {
        throw new Error('Delta length (' + pointer + ') does not equal source text length (' + text1.length + ').');
      }

      return diffs;
    }; //  MATCH FUNCTIONS

    /**
     * Locate the best instance of 'pattern' in 'text' near 'loc'.
     * @param {string} text The text to search.
     * @param {string} pattern The pattern to search for.
     * @param {number} loc The location to search around.
     * @return {number} Best match index or -1.
     */


    diff_match_patch.prototype.match_main = function (text, pattern, loc) {
      // Check for null inputs.
      if (text == null || pattern == null || loc == null) {
        throw new Error('Null input. (match_main)');
      }

      loc = Math.max(0, Math.min(loc, text.length));

      if (text == pattern) {
        // Shortcut (potentially not guaranteed by the algorithm)
        return 0;
      } else if (!text.length) {
        // Nothing to match.
        return -1;
      } else if (text.substring(loc, loc + pattern.length) == pattern) {
        // Perfect match at the perfect spot!  (Includes case of null pattern)
        return loc;
      } else {
        // Do a fuzzy compare.
        return this.match_bitap_(text, pattern, loc);
      }
    };
    /**
     * Locate the best instance of 'pattern' in 'text' near 'loc' using the
     * Bitap algorithm.
     * @param {string} text The text to search.
     * @param {string} pattern The pattern to search for.
     * @param {number} loc The location to search around.
     * @return {number} Best match index or -1.
     * @private
     */


    diff_match_patch.prototype.match_bitap_ = function (text, pattern, loc) {
      if (pattern.length > this.Match_MaxBits) {
        throw new Error('Pattern too long for this browser.');
      } // Initialise the alphabet.


      var s = this.match_alphabet_(pattern);
      var dmp = this; // 'this' becomes 'window' in a closure.

      /**
       * Compute and return the score for a match with e errors and x location.
       * Accesses loc and pattern through being a closure.
       * @param {number} e Number of errors in match.
       * @param {number} x Location of match.
       * @return {number} Overall score for match (0.0 = good, 1.0 = bad).
       * @private
       */

      function match_bitapScore_(e, x) {
        var accuracy = e / pattern.length;
        var proximity = Math.abs(loc - x);

        if (!dmp.Match_Distance) {
          // Dodge divide by zero error.
          return proximity ? 1.0 : accuracy;
        }

        return accuracy + proximity / dmp.Match_Distance;
      } // Highest score beyond which we give up.


      var score_threshold = this.Match_Threshold; // Is there a nearby exact match? (speedup)

      var best_loc = text.indexOf(pattern, loc);

      if (best_loc != -1) {
        score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold); // What about in the other direction? (speedup)

        best_loc = text.lastIndexOf(pattern, loc + pattern.length);

        if (best_loc != -1) {
          score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);
        }
      } // Initialise the bit arrays.


      var matchmask = 1 << pattern.length - 1;
      best_loc = -1;
      var bin_min, bin_mid;
      var bin_max = pattern.length + text.length;
      var last_rd;

      for (var d = 0; d < pattern.length; d++) {
        // Scan for the best match; each iteration allows for one more error.
        // Run a binary search to determine how far from 'loc' we can stray at this
        // error level.
        bin_min = 0;
        bin_mid = bin_max;

        while (bin_min < bin_mid) {
          if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {
            bin_min = bin_mid;
          } else {
            bin_max = bin_mid;
          }

          bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);
        } // Use the result from this iteration as the maximum for the next.


        bin_max = bin_mid;
        var start = Math.max(1, loc - bin_mid + 1);
        var finish = Math.min(loc + bin_mid, text.length) + pattern.length;
        var rd = Array(finish + 2);
        rd[finish + 1] = (1 << d) - 1;

        for (var j = finish; j >= start; j--) {
          // The alphabet (s) is a sparse hash, so the following line generates
          // warnings.
          var charMatch = s[text.charAt(j - 1)];

          if (d === 0) {
            // First pass: exact match.
            rd[j] = (rd[j + 1] << 1 | 1) & charMatch;
          } else {
            // Subsequent passes: fuzzy match.
            rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((last_rd[j + 1] | last_rd[j]) << 1 | 1) | last_rd[j + 1];
          }

          if (rd[j] & matchmask) {
            var score = match_bitapScore_(d, j - 1); // This match will almost certainly be better than any existing match.
            // But check anyway.

            if (score <= score_threshold) {
              // Told you so.
              score_threshold = score;
              best_loc = j - 1;

              if (best_loc > loc) {
                // When passing loc, don't exceed our current distance from loc.
                start = Math.max(1, 2 * loc - best_loc);
              } else {
                // Already passed loc, downhill from here on in.
                break;
              }
            }
          }
        } // No hope for a (better) match at greater error levels.


        if (match_bitapScore_(d + 1, loc) > score_threshold) {
          break;
        }

        last_rd = rd;
      }

      return best_loc;
    };
    /**
     * Initialise the alphabet for the Bitap algorithm.
     * @param {string} pattern The text to encode.
     * @return {!Object} Hash of character locations.
     * @private
     */


    diff_match_patch.prototype.match_alphabet_ = function (pattern) {
      var s = {};

      for (var i = 0; i < pattern.length; i++) {
        s[pattern.charAt(i)] = 0;
      }

      for (var i = 0; i < pattern.length; i++) {
        s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;
      }

      return s;
    }; //  PATCH FUNCTIONS

    /**
     * Increase the context until it is unique,
     * but don't let the pattern expand beyond Match_MaxBits.
     * @param {!diff_match_patch.patch_obj} patch The patch to grow.
     * @param {string} text Source text.
     * @private
     */


    diff_match_patch.prototype.patch_addContext_ = function (patch, text) {
      if (text.length == 0) {
        return;
      }

      var pattern = text.substring(patch.start2, patch.start2 + patch.length1);
      var padding = 0; // Look for the first and last matches of pattern in text.  If two different
      // matches are found, increase the pattern length.

      while (text.indexOf(pattern) != text.lastIndexOf(pattern) && pattern.length < this.Match_MaxBits - this.Patch_Margin - this.Patch_Margin) {
        padding += this.Patch_Margin;
        pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);
      } // Add one chunk for good luck.


      padding += this.Patch_Margin; // Add the prefix.

      var prefix = text.substring(patch.start2 - padding, patch.start2);

      if (prefix) {
        patch.diffs.unshift([DIFF_EQUAL, prefix]);
      } // Add the suffix.


      var suffix = text.substring(patch.start2 + patch.length1, patch.start2 + patch.length1 + padding);

      if (suffix) {
        patch.diffs.push([DIFF_EQUAL, suffix]);
      } // Roll back the start points.


      patch.start1 -= prefix.length;
      patch.start2 -= prefix.length; // Extend the lengths.

      patch.length1 += prefix.length + suffix.length;
      patch.length2 += prefix.length + suffix.length;
    };
    /**
     * Compute a list of patches to turn text1 into text2.
     * Use diffs if provided, otherwise compute it ourselves.
     * There are four ways to call this function, depending on what data is
     * available to the caller:
     * Method 1:
     * a = text1, b = text2
     * Method 2:
     * a = diffs
     * Method 3 (optimal):
     * a = text1, b = diffs
     * Method 4 (deprecated, use method 3):
     * a = text1, b = text2, c = diffs
     *
     * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or
     * Array of diff tuples for text1 to text2 (method 2).
     * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or
     * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).
     * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples
     * for text1 to text2 (method 4) or undefined (methods 1,2,3).
     * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.
     */


    diff_match_patch.prototype.patch_make = function (a, opt_b, opt_c) {
      var text1, diffs;

      if (typeof a == 'string' && typeof opt_b == 'string' && typeof opt_c == 'undefined') {
        // Method 1: text1, text2
        // Compute diffs from text1 and text2.
        text1 =
        /** @type {string} */
        a;
        diffs = this.diff_main(text1,
        /** @type {string} */
        opt_b, true);

        if (diffs.length > 2) {
          this.diff_cleanupSemantic(diffs);
          this.diff_cleanupEfficiency(diffs);
        }
      } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' && typeof opt_c == 'undefined') {
        // Method 2: diffs
        // Compute text1 from diffs.
        diffs =
        /** @type {!Array.<!diff_match_patch.Diff>} */
        a;
        text1 = this.diff_text1(diffs);
      } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' && typeof opt_c == 'undefined') {
        // Method 3: text1, diffs
        text1 =
        /** @type {string} */
        a;
        diffs =
        /** @type {!Array.<!diff_match_patch.Diff>} */
        opt_b;
      } else if (typeof a == 'string' && typeof opt_b == 'string' && opt_c && typeof opt_c == 'object') {
        // Method 4: text1, text2, diffs
        // text2 is not used.
        text1 =
        /** @type {string} */
        a;
        diffs =
        /** @type {!Array.<!diff_match_patch.Diff>} */
        opt_c;
      } else {
        throw new Error('Unknown call format to patch_make.');
      }

      if (diffs.length === 0) {
        return []; // Get rid of the null case.
      }

      var patches = [];
      var patch = new diff_match_patch.patch_obj();
      var patchDiffLength = 0; // Keeping our own length var is faster in JS.

      var char_count1 = 0; // Number of characters into the text1 string.

      var char_count2 = 0; // Number of characters into the text2 string.
      // Start with text1 (prepatch_text) and apply the diffs until we arrive at
      // text2 (postpatch_text).  We recreate the patches one by one to determine
      // context info.

      var prepatch_text = text1;
      var postpatch_text = text1;

      for (var x = 0; x < diffs.length; x++) {
        var diff_type = diffs[x][0];
        var diff_text = diffs[x][1];

        if (!patchDiffLength && diff_type !== DIFF_EQUAL) {
          // A new patch starts here.
          patch.start1 = char_count1;
          patch.start2 = char_count2;
        }

        switch (diff_type) {
          case DIFF_INSERT:
            patch.diffs[patchDiffLength++] = diffs[x];
            patch.length2 += diff_text.length;
            postpatch_text = postpatch_text.substring(0, char_count2) + diff_text + postpatch_text.substring(char_count2);
            break;

          case DIFF_DELETE:
            patch.length1 += diff_text.length;
            patch.diffs[patchDiffLength++] = diffs[x];
            postpatch_text = postpatch_text.substring(0, char_count2) + postpatch_text.substring(char_count2 + diff_text.length);
            break;

          case DIFF_EQUAL:
            if (diff_text.length <= 2 * this.Patch_Margin && patchDiffLength && diffs.length != x + 1) {
              // Small equality inside a patch.
              patch.diffs[patchDiffLength++] = diffs[x];
              patch.length1 += diff_text.length;
              patch.length2 += diff_text.length;
            } else if (diff_text.length >= 2 * this.Patch_Margin) {
              // Time for a new patch.
              if (patchDiffLength) {
                this.patch_addContext_(patch, prepatch_text);
                patches.push(patch);
                patch = new diff_match_patch.patch_obj();
                patchDiffLength = 0; // Unlike Unidiff, our patch lists have a rolling context.
                // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff
                // Update prepatch text & pos to reflect the application of the
                // just completed patch.

                prepatch_text = postpatch_text;
                char_count1 = char_count2;
              }
            }

            break;
        } // Update the current character count.


        if (diff_type !== DIFF_INSERT) {
          char_count1 += diff_text.length;
        }

        if (diff_type !== DIFF_DELETE) {
          char_count2 += diff_text.length;
        }
      } // Pick up the leftover patch if not empty.


      if (patchDiffLength) {
        this.patch_addContext_(patch, prepatch_text);
        patches.push(patch);
      }

      return patches;
    };
    /**
     * Given an array of patches, return another array that is identical.
     * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.
     * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.
     */


    diff_match_patch.prototype.patch_deepCopy = function (patches) {
      // Making deep copies is hard in JavaScript.
      var patchesCopy = [];

      for (var x = 0; x < patches.length; x++) {
        var patch = patches[x];
        var patchCopy = new diff_match_patch.patch_obj();
        patchCopy.diffs = [];

        for (var y = 0; y < patch.diffs.length; y++) {
          patchCopy.diffs[y] = patch.diffs[y].slice();
        }

        patchCopy.start1 = patch.start1;
        patchCopy.start2 = patch.start2;
        patchCopy.length1 = patch.length1;
        patchCopy.length2 = patch.length2;
        patchesCopy[x] = patchCopy;
      }

      return patchesCopy;
    };
    /**
     * Merge a set of patches onto the text.  Return a patched text, as well
     * as a list of true/false values indicating which patches were applied.
     * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.
     * @param {string} text Old text.
     * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the
     *      new text and an array of boolean values.
     */


    diff_match_patch.prototype.patch_apply = function (patches, text) {
      if (patches.length == 0) {
        return [text, []];
      } // Deep copy the patches so that no changes are made to originals.


      patches = this.patch_deepCopy(patches);
      var nullPadding = this.patch_addPadding(patches);
      text = nullPadding + text + nullPadding;
      this.patch_splitMax(patches); // delta keeps track of the offset between the expected and actual location
      // of the previous patch.  If there are patches expected at positions 10 and
      // 20, but the first patch was found at 12, delta is 2 and the second patch
      // has an effective expected position of 22.

      var delta = 0;
      var results = [];

      for (var x = 0; x < patches.length; x++) {
        var expected_loc = patches[x].start2 + delta;
        var text1 = this.diff_text1(patches[x].diffs);
        var start_loc;
        var end_loc = -1;

        if (text1.length > this.Match_MaxBits) {
          // patch_splitMax will only provide an oversized pattern in the case of
          // a monster delete.
          start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits), expected_loc);

          if (start_loc != -1) {
            end_loc = this.match_main(text, text1.substring(text1.length - this.Match_MaxBits), expected_loc + text1.length - this.Match_MaxBits);

            if (end_loc == -1 || start_loc >= end_loc) {
              // Can't find valid trailing context.  Drop this patch.
              start_loc = -1;
            }
          }
        } else {
          start_loc = this.match_main(text, text1, expected_loc);
        }

        if (start_loc == -1) {
          // No match found.  :(
          results[x] = false; // Subtract the delta for this failed patch from subsequent patches.

          delta -= patches[x].length2 - patches[x].length1;
        } else {
          // Found a match.  :)
          results[x] = true;
          delta = start_loc - expected_loc;
          var text2;

          if (end_loc == -1) {
            text2 = text.substring(start_loc, start_loc + text1.length);
          } else {
            text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);
          }

          if (text1 == text2) {
            // Perfect match, just shove the replacement text in.
            text = text.substring(0, start_loc) + this.diff_text2(patches[x].diffs) + text.substring(start_loc + text1.length);
          } else {
            // Imperfect match.  Run a diff to get a framework of equivalent
            // indices.
            var diffs = this.diff_main(text1, text2, false);

            if (text1.length > this.Match_MaxBits && this.diff_levenshtein(diffs) / text1.length > this.Patch_DeleteThreshold) {
              // The end points match, but the content is unacceptably bad.
              results[x] = false;
            } else {
              this.diff_cleanupSemanticLossless(diffs);
              var index1 = 0;
              var index2;

              for (var y = 0; y < patches[x].diffs.length; y++) {
                var mod = patches[x].diffs[y];

                if (mod[0] !== DIFF_EQUAL) {
                  index2 = this.diff_xIndex(diffs, index1);
                }

                if (mod[0] === DIFF_INSERT) {
                  // Insertion
                  text = text.substring(0, start_loc + index2) + mod[1] + text.substring(start_loc + index2);
                } else if (mod[0] === DIFF_DELETE) {
                  // Deletion
                  text = text.substring(0, start_loc + index2) + text.substring(start_loc + this.diff_xIndex(diffs, index1 + mod[1].length));
                }

                if (mod[0] !== DIFF_DELETE) {
                  index1 += mod[1].length;
                }
              }
            }
          }
        }
      } // Strip the padding off.


      text = text.substring(nullPadding.length, text.length - nullPadding.length);
      return [text, results];
    };
    /**
     * Add some padding on text start and end so that edges can match something.
     * Intended to be called only from within patch_apply.
     * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.
     * @return {string} The padding string added to each side.
     */


    diff_match_patch.prototype.patch_addPadding = function (patches) {
      var paddingLength = this.Patch_Margin;
      var nullPadding = '';

      for (var x = 1; x <= paddingLength; x++) {
        nullPadding += String.fromCharCode(x);
      } // Bump all the patches forward.


      for (var x = 0; x < patches.length; x++) {
        patches[x].start1 += paddingLength;
        patches[x].start2 += paddingLength;
      } // Add some padding on start of first diff.


      var patch = patches[0];
      var diffs = patch.diffs;

      if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {
        // Add nullPadding equality.
        diffs.unshift([DIFF_EQUAL, nullPadding]);
        patch.start1 -= paddingLength; // Should be 0.

        patch.start2 -= paddingLength; // Should be 0.

        patch.length1 += paddingLength;
        patch.length2 += paddingLength;
      } else if (paddingLength > diffs[0][1].length) {
        // Grow first equality.
        var extraLength = paddingLength - diffs[0][1].length;
        diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];
        patch.start1 -= extraLength;
        patch.start2 -= extraLength;
        patch.length1 += extraLength;
        patch.length2 += extraLength;
      } // Add some padding on end of last diff.


      patch = patches[patches.length - 1];
      diffs = patch.diffs;

      if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {
        // Add nullPadding equality.
        diffs.push([DIFF_EQUAL, nullPadding]);
        patch.length1 += paddingLength;
        patch.length2 += paddingLength;
      } else if (paddingLength > diffs[diffs.length - 1][1].length) {
        // Grow last equality.
        var extraLength = paddingLength - diffs[diffs.length - 1][1].length;
        diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);
        patch.length1 += extraLength;
        patch.length2 += extraLength;
      }

      return nullPadding;
    };
    /**
     * Look through the patches and break up any which are longer than the maximum
     * limit of the match algorithm.
     * Intended to be called only from within patch_apply.
     * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.
     */


    diff_match_patch.prototype.patch_splitMax = function (patches) {
      var patch_size = this.Match_MaxBits;

      for (var x = 0; x < patches.length; x++) {
        if (patches[x].length1 <= patch_size) {
          continue;
        }

        var bigpatch = patches[x]; // Remove the big old patch.

        patches.splice(x--, 1);
        var start1 = bigpatch.start1;
        var start2 = bigpatch.start2;
        var precontext = '';

        while (bigpatch.diffs.length !== 0) {
          // Create one of several smaller patches.
          var patch = new diff_match_patch.patch_obj();
          var empty = true;
          patch.start1 = start1 - precontext.length;
          patch.start2 = start2 - precontext.length;

          if (precontext !== '') {
            patch.length1 = patch.length2 = precontext.length;
            patch.diffs.push([DIFF_EQUAL, precontext]);
          }

          while (bigpatch.diffs.length !== 0 && patch.length1 < patch_size - this.Patch_Margin) {
            var diff_type = bigpatch.diffs[0][0];
            var diff_text = bigpatch.diffs[0][1];

            if (diff_type === DIFF_INSERT) {
              // Insertions are harmless.
              patch.length2 += diff_text.length;
              start2 += diff_text.length;
              patch.diffs.push(bigpatch.diffs.shift());
              empty = false;
            } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 && patch.diffs[0][0] == DIFF_EQUAL && diff_text.length > 2 * patch_size) {
              // This is a large deletion.  Let it pass in one chunk.
              patch.length1 += diff_text.length;
              start1 += diff_text.length;
              empty = false;
              patch.diffs.push([diff_type, diff_text]);
              bigpatch.diffs.shift();
            } else {
              // Deletion or equality.  Only take as much as we can stomach.
              diff_text = diff_text.substring(0, patch_size - patch.length1 - this.Patch_Margin);
              patch.length1 += diff_text.length;
              start1 += diff_text.length;

              if (diff_type === DIFF_EQUAL) {
                patch.length2 += diff_text.length;
                start2 += diff_text.length;
              } else {
                empty = false;
              }

              patch.diffs.push([diff_type, diff_text]);

              if (diff_text == bigpatch.diffs[0][1]) {
                bigpatch.diffs.shift();
              } else {
                bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diff_text.length);
              }
            }
          } // Compute the head context for the next patch.


          precontext = this.diff_text2(patch.diffs);
          precontext = precontext.substring(precontext.length - this.Patch_Margin); // Append the end context for this patch.

          var postcontext = this.diff_text1(bigpatch.diffs).substring(0, this.Patch_Margin);

          if (postcontext !== '') {
            patch.length1 += postcontext.length;
            patch.length2 += postcontext.length;

            if (patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {
              patch.diffs[patch.diffs.length - 1][1] += postcontext;
            } else {
              patch.diffs.push([DIFF_EQUAL, postcontext]);
            }
          }

          if (!empty) {
            patches.splice(++x, 0, patch);
          }
        }
      }
    };
    /**
     * Take a list of patches and return a textual representation.
     * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.
     * @return {string} Text representation of patches.
     */


    diff_match_patch.prototype.patch_toText = function (patches) {
      var text = [];

      for (var x = 0; x < patches.length; x++) {
        text[x] = patches[x];
      }

      return text.join('');
    };
    /**
     * Parse a textual representation of patches and return a list of Patch objects.
     * @param {string} textline Text representation of patches.
     * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.
     * @throws {!Error} If invalid input.
     */


    diff_match_patch.prototype.patch_fromText = function (textline) {
      var patches = [];

      if (!textline) {
        return patches;
      }

      var text = textline.split('\n');
      var textPointer = 0;
      var patchHeader = /^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/;

      while (textPointer < text.length) {
        var m = text[textPointer].match(patchHeader);

        if (!m) {
          throw new Error('Invalid patch string: ' + text[textPointer]);
        }

        var patch = new diff_match_patch.patch_obj();
        patches.push(patch);
        patch.start1 = parseInt(m[1], 10);

        if (m[2] === '') {
          patch.start1--;
          patch.length1 = 1;
        } else if (m[2] == '0') {
          patch.length1 = 0;
        } else {
          patch.start1--;
          patch.length1 = parseInt(m[2], 10);
        }

        patch.start2 = parseInt(m[3], 10);

        if (m[4] === '') {
          patch.start2--;
          patch.length2 = 1;
        } else if (m[4] == '0') {
          patch.length2 = 0;
        } else {
          patch.start2--;
          patch.length2 = parseInt(m[4], 10);
        }

        textPointer++;

        while (textPointer < text.length) {
          var sign = text[textPointer].charAt(0);

          try {
            var line = decodeURI(text[textPointer].substring(1));
          } catch (ex) {
            // Malformed URI sequence.
            throw new Error('Illegal escape in patch_fromText: ' + line);
          }

          if (sign == '-') {
            // Deletion.
            patch.diffs.push([DIFF_DELETE, line]);
          } else if (sign == '+') {
            // Insertion.
            patch.diffs.push([DIFF_INSERT, line]);
          } else if (sign == ' ') {
            // Minor equality.
            patch.diffs.push([DIFF_EQUAL, line]);
          } else if (sign == '@') {
            // Start of next patch.
            break;
          } else if (sign === '') {// Blank line?  Whatever.
          } else {
            // WTF?
            throw new Error('Invalid patch mode "' + sign + '" in: ' + line);
          }

          textPointer++;
        }
      }

      return patches;
    };
    /**
     * Class representing one patch operation.
     * @constructor
     */


    diff_match_patch.patch_obj = function () {
      /** @type {!Array.<!diff_match_patch.Diff>} */
      this.diffs = [];
      /** @type {?number} */

      this.start1 = null;
      /** @type {?number} */

      this.start2 = null;
      /** @type {number} */

      this.length1 = 0;
      /** @type {number} */

      this.length2 = 0;
    };
    /**
     * Emmulate GNU diff's format.
     * Header: @@ -382,8 +481,9 @@
     * Indicies are printed as 1-based, not 0-based.
     * @return {string} The GNU diff string.
     */


    diff_match_patch.patch_obj.prototype.toString = function () {
      var coords1, coords2;

      if (this.length1 === 0) {
        coords1 = this.start1 + ',0';
      } else if (this.length1 == 1) {
        coords1 = this.start1 + 1;
      } else {
        coords1 = this.start1 + 1 + ',' + this.length1;
      }

      if (this.length2 === 0) {
        coords2 = this.start2 + ',0';
      } else if (this.length2 == 1) {
        coords2 = this.start2 + 1;
      } else {
        coords2 = this.start2 + 1 + ',' + this.length2;
      }

      var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\n'];
      var op; // Escape the body of the patch with %xx notation.

      for (var x = 0; x < this.diffs.length; x++) {
        switch (this.diffs[x][0]) {
          case DIFF_INSERT:
            op = '+';
            break;

          case DIFF_DELETE:
            op = '-';
            break;

          case DIFF_EQUAL:
            op = ' ';
            break;
        }

        text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\n';
      }

      return text.join('').replace(/%20/g, ' ');
    }; // The following export code was added by @ForbesLindesay


    module.exports = diff_match_patch;
    module.exports['diff_match_patch'] = diff_match_patch;
    module.exports['DIFF_DELETE'] = DIFF_DELETE;
    module.exports['DIFF_INSERT'] = DIFF_INSERT;
    module.exports['DIFF_EQUAL'] = DIFF_EQUAL;
  });
  /* global diff_match_patch */

  var TEXT_DIFF = 2;
  var DEFAULT_MIN_LENGTH = 60;
  var cachedDiffPatch = null;

  var getDiffMatchPatch = function getDiffMatchPatch(required) {
    /* jshint camelcase: false */
    if (!cachedDiffPatch) {
      var instance = void 0;
      /* eslint-disable camelcase, new-cap */

      if (typeof diff_match_patch !== 'undefined') {
        // already loaded, probably a browser
        instance = typeof diff_match_patch === 'function' ? new diff_match_patch() : new diff_match_patch.diff_match_patch();
      } else if (diffMatchPatch) {
        try {
          instance = diffMatchPatch && new diffMatchPatch();
        } catch (err) {
          instance = null;
        }
      }
      /* eslint-enable camelcase, new-cap */


      if (!instance) {
        if (!required) {
          return null;
        }

        var error = new Error('text diff_match_patch library not found'); // eslint-disable-next-line camelcase

        error.diff_match_patch_not_found = true;
        throw error;
      }

      cachedDiffPatch = {
        diff: function diff(txt1, txt2) {
          return instance.patch_toText(instance.patch_make(txt1, txt2));
        },
        patch: function patch(txt1, _patch) {
          var results = instance.patch_apply(instance.patch_fromText(_patch), txt1);

          for (var i = 0; i < results[1].length; i++) {
            if (!results[1][i]) {
              var _error = new Error('text patch failed');

              _error.textPatchFailed = true;
            }
          }

          return results[0];
        }
      };
    }

    return cachedDiffPatch;
  };

  var diffFilter$3 = function textsDiffFilter(context) {
    if (context.leftType !== 'string') {
      return;
    }

    var minLength = context.options && context.options.textDiff && context.options.textDiff.minLength || DEFAULT_MIN_LENGTH;

    if (context.left.length < minLength || context.right.length < minLength) {
      context.setResult([context.left, context.right]).exit();
      return;
    } // large text, try to use a text-diff algorithm


    var diffMatchPatch$$1 = getDiffMatchPatch();

    if (!diffMatchPatch$$1) {
      // diff-match-patch library not available,
      // fallback to regular string replace
      context.setResult([context.left, context.right]).exit();
      return;
    }

    var diff = diffMatchPatch$$1.diff;
    context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();
  };

  diffFilter$3.filterName = 'texts';

  var patchFilter$3 = function textsPatchFilter(context) {
    if (context.nested) {
      return;
    }

    if (context.delta[2] !== TEXT_DIFF) {
      return;
    } // text-diff, use a text-patch algorithm


    var patch = getDiffMatchPatch(true).patch;
    context.setResult(patch(context.left, context.delta[0])).exit();
  };

  patchFilter$3.filterName = 'texts';

  var textDeltaReverse = function textDeltaReverse(delta) {
    var i = void 0;
    var l = void 0;
    var lines = void 0;
    var line = void 0;
    var lineTmp = void 0;
    var header = null;
    var headerRegex = /^@@ +-(\d+),(\d+) +\+(\d+),(\d+) +@@$/;
    var lineHeader = void 0;
    lines = delta.split('\n');

    for (i = 0, l = lines.length; i < l; i++) {
      line = lines[i];
      var lineStart = line.slice(0, 1);

      if (lineStart === '@') {
        header = headerRegex.exec(line);
        lineHeader = i; // fix header

        lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';
      } else if (lineStart === '+') {
        lines[i] = '-' + lines[i].slice(1);

        if (lines[i - 1].slice(0, 1) === '+') {
          // swap lines to keep default order (-+)
          lineTmp = lines[i];
          lines[i] = lines[i - 1];
          lines[i - 1] = lineTmp;
        }
      } else if (lineStart === '-') {
        lines[i] = '+' + lines[i].slice(1);
      }
    }

    return lines.join('\n');
  };

  var reverseFilter$3 = function textsReverseFilter(context) {
    if (context.nested) {
      return;
    }

    if (context.delta[2] !== TEXT_DIFF) {
      return;
    } // text-diff, use a text-diff algorithm


    context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();
  };

  reverseFilter$3.filterName = 'texts';

  var DiffPatcher = function () {
    function DiffPatcher(options) {
      classCallCheck(this, DiffPatcher);
      this.processor = new Processor(options);
      this.processor.pipe(new Pipe('diff').append(collectChildrenDiffFilter, diffFilter, diffFilter$2, diffFilter$3, objectsDiffFilter, diffFilter$1).shouldHaveResult());
      this.processor.pipe(new Pipe('patch').append(collectChildrenPatchFilter, collectChildrenPatchFilter$1, patchFilter, patchFilter$3, patchFilter$1, patchFilter$2).shouldHaveResult());
      this.processor.pipe(new Pipe('reverse').append(collectChildrenReverseFilter, collectChildrenReverseFilter$1, reverseFilter, reverseFilter$3, reverseFilter$1, reverseFilter$2).shouldHaveResult());
    }

    createClass(DiffPatcher, [{
      key: 'options',
      value: function options() {
        var _processor;

        return (_processor = this.processor).options.apply(_processor, arguments);
      }
    }, {
      key: 'diff',
      value: function diff(left, right) {
        return this.processor.process(new DiffContext(left, right));
      }
    }, {
      key: 'patch',
      value: function patch(left, delta) {
        return this.processor.process(new PatchContext(left, delta));
      }
    }, {
      key: 'reverse',
      value: function reverse(delta) {
        return this.processor.process(new ReverseContext(delta));
      }
    }, {
      key: 'unpatch',
      value: function unpatch(right, delta) {
        return this.patch(right, this.reverse(delta));
      }
    }, {
      key: 'clone',
      value: function clone$$1(value) {
        return clone(value);
      }
    }]);
    return DiffPatcher;
  }();

  var isArray$3 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {
    return a instanceof Array;
  };
  var getObjectKeys = typeof Object.keys === 'function' ? function (obj) {
    return Object.keys(obj);
  } : function (obj) {
    var names = [];

    for (var property in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, property)) {
        names.push(property);
      }
    }

    return names;
  };

  var trimUnderscore = function trimUnderscore(str) {
    if (str.substr(0, 1) === '_') {
      return str.slice(1);
    }

    return str;
  };

  var arrayKeyToSortNumber = function arrayKeyToSortNumber(key) {
    if (key === '_t') {
      return -1;
    } else {
      if (key.substr(0, 1) === '_') {
        return parseInt(key.slice(1), 10);
      } else {
        return parseInt(key, 10) + 0.1;
      }
    }
  };

  var arrayKeyComparer = function arrayKeyComparer(key1, key2) {
    return arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);
  };

  var BaseFormatter = function () {
    function BaseFormatter() {
      classCallCheck(this, BaseFormatter);
    }

    createClass(BaseFormatter, [{
      key: 'format',
      value: function format(delta, left) {
        var context = {};
        this.prepareContext(context);
        this.recurse(context, delta, left);
        return this.finalize(context);
      }
    }, {
      key: 'prepareContext',
      value: function prepareContext(context) {
        context.buffer = [];

        context.out = function () {
          var _buffer;

          (_buffer = this.buffer).push.apply(_buffer, arguments);
        };
      }
    }, {
      key: 'typeFormattterNotFound',
      value: function typeFormattterNotFound(context, deltaType) {
        throw new Error('cannot format delta type: ' + deltaType);
      }
    }, {
      key: 'typeFormattterErrorFormatter',
      value: function typeFormattterErrorFormatter(context, err) {
        return err.toString();
      }
    }, {
      key: 'finalize',
      value: function finalize(_ref) {
        var buffer = _ref.buffer;

        if (isArray$3(buffer)) {
          return buffer.join('');
        }
      }
    }, {
      key: 'recurse',
      value: function recurse(context, delta, left, key, leftKey, movedFrom, isLast) {
        var useMoveOriginHere = delta && movedFrom;
        var leftValue = useMoveOriginHere ? movedFrom.value : left;

        if (typeof delta === 'undefined' && typeof key === 'undefined') {
          return undefined;
        }

        var type = this.getDeltaType(delta, movedFrom);
        var nodeType = type === 'node' ? delta._t === 'a' ? 'array' : 'object' : '';

        if (typeof key !== 'undefined') {
          this.nodeBegin(context, key, leftKey, type, nodeType, isLast);
        } else {
          this.rootBegin(context, type, nodeType);
        }

        var typeFormattter = void 0;

        try {
          typeFormattter = this['format_' + type] || this.typeFormattterNotFound(context, type);
          typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);
        } catch (err) {
          this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);

          if (typeof console !== 'undefined' && console.error) {
            console.error(err.stack);
          }
        }

        if (typeof key !== 'undefined') {
          this.nodeEnd(context, key, leftKey, type, nodeType, isLast);
        } else {
          this.rootEnd(context, type, nodeType);
        }
      }
    }, {
      key: 'formatDeltaChildren',
      value: function formatDeltaChildren(context, delta, left) {
        var self = this;
        this.forEachDeltaKey(delta, left, function (key, leftKey, movedFrom, isLast) {
          self.recurse(context, delta[key], left ? left[leftKey] : undefined, key, leftKey, movedFrom, isLast);
        });
      }
    }, {
      key: 'forEachDeltaKey',
      value: function forEachDeltaKey(delta, left, fn) {
        var keys = getObjectKeys(delta);
        var arrayKeys = delta._t === 'a';
        var moveDestinations = {};
        var name = void 0;

        if (typeof left !== 'undefined') {
          for (name in left) {
            if (Object.prototype.hasOwnProperty.call(left, name)) {
              if (typeof delta[name] === 'undefined' && (!arrayKeys || typeof delta['_' + name] === 'undefined')) {
                keys.push(name);
              }
            }
          }
        } // look for move destinations


        for (name in delta) {
          if (Object.prototype.hasOwnProperty.call(delta, name)) {
            var value = delta[name];

            if (isArray$3(value) && value[2] === 3) {
              moveDestinations[value[1].toString()] = {
                key: name,
                value: left && left[parseInt(name.substr(1))]
              };

              if (this.includeMoveDestinations !== false) {
                if (typeof left === 'undefined' && typeof delta[value[1]] === 'undefined') {
                  keys.push(value[1].toString());
                }
              }
            }
          }
        }

        if (arrayKeys) {
          keys.sort(arrayKeyComparer);
        } else {
          keys.sort();
        }

        for (var index = 0, length = keys.length; index < length; index++) {
          var key = keys[index];

          if (arrayKeys && key === '_t') {
            continue;
          }

          var leftKey = arrayKeys ? typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10) : key;
          var isLast = index === length - 1;
          fn(key, leftKey, moveDestinations[leftKey], isLast);
        }
      }
    }, {
      key: 'getDeltaType',
      value: function getDeltaType(delta, movedFrom) {
        if (typeof delta === 'undefined') {
          if (typeof movedFrom !== 'undefined') {
            return 'movedestination';
          }

          return 'unchanged';
        }

        if (isArray$3(delta)) {
          if (delta.length === 1) {
            return 'added';
          }

          if (delta.length === 2) {
            return 'modified';
          }

          if (delta.length === 3 && delta[2] === 0) {
            return 'deleted';
          }

          if (delta.length === 3 && delta[2] === 2) {
            return 'textdiff';
          }

          if (delta.length === 3 && delta[2] === 3) {
            return 'moved';
          }
        } else if ((typeof delta === 'undefined' ? 'undefined' : _typeof(delta)) === 'object') {
          return 'node';
        }

        return 'unknown';
      }
    }, {
      key: 'parseTextDiff',
      value: function parseTextDiff(value) {
        var output = [];
        var lines = value.split('\n@@ ');

        for (var i = 0, l = lines.length; i < l; i++) {
          var line = lines[i];
          var lineOutput = {
            pieces: []
          };
          var location = /^(?:@@ )?[-+]?(\d+),(\d+)/.exec(line).slice(1);
          lineOutput.location = {
            line: location[0],
            chr: location[1]
          };
          var pieces = line.split('\n').slice(1);

          for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {
            var piece = pieces[pieceIndex];

            if (!piece.length) {
              continue;
            }

            var pieceOutput = {
              type: 'context'
            };

            if (piece.substr(0, 1) === '+') {
              pieceOutput.type = 'added';
            } else if (piece.substr(0, 1) === '-') {
              pieceOutput.type = 'deleted';
            }

            pieceOutput.text = piece.slice(1);
            lineOutput.pieces.push(pieceOutput);
          }

          output.push(lineOutput);
        }

        return output;
      }
    }]);
    return BaseFormatter;
  }();

  var base = Object.freeze({
    default: BaseFormatter
  });

  var HtmlFormatter = function (_BaseFormatter) {
    inherits(HtmlFormatter, _BaseFormatter);

    function HtmlFormatter() {
      classCallCheck(this, HtmlFormatter);
      return possibleConstructorReturn(this, (HtmlFormatter.__proto__ || Object.getPrototypeOf(HtmlFormatter)).apply(this, arguments));
    }

    createClass(HtmlFormatter, [{
      key: 'typeFormattterErrorFormatter',
      value: function typeFormattterErrorFormatter(context, err) {
        context.out('<pre class="jsondiffpatch-error">' + err + '</pre>');
      }
    }, {
      key: 'formatValue',
      value: function formatValue(context, value) {
        context.out('<pre>' + htmlEscape(JSON.stringify(value, null, 2)) + '</pre>');
      }
    }, {
      key: 'formatTextDiffString',
      value: function formatTextDiffString(context, value) {
        var lines = this.parseTextDiff(value);
        context.out('<ul class="jsondiffpatch-textdiff">');

        for (var i = 0, l = lines.length; i < l; i++) {
          var line = lines[i];
          context.out('<li><div class="jsondiffpatch-textdiff-location">' + ('<span class="jsondiffpatch-textdiff-line-number">' + line.location.line + '</span><span class="jsondiffpatch-textdiff-char">' + line.location.chr + '</span></div><div class="jsondiffpatch-textdiff-line">'));
          var pieces = line.pieces;

          for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {
            /* global decodeURI */
            var piece = pieces[pieceIndex];
            context.out('<span class="jsondiffpatch-textdiff-' + piece.type + '">' + htmlEscape(decodeURI(piece.text)) + '</span>');
          }

          context.out('</div></li>');
        }

        context.out('</ul>');
      }
    }, {
      key: 'rootBegin',
      value: function rootBegin(context, type, nodeType) {
        var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');
        context.out('<div class="jsondiffpatch-delta ' + nodeClass + '">');
      }
    }, {
      key: 'rootEnd',
      value: function rootEnd(context) {
        context.out('</div>' + (context.hasArrows ? '<script type="text/javascript">setTimeout(' + (adjustArrows.toString() + ',10);</script>') : ''));
      }
    }, {
      key: 'nodeBegin',
      value: function nodeBegin(context, key, leftKey, type, nodeType) {
        var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');
        context.out('<li class="' + nodeClass + '" data-key="' + leftKey + '">' + ('<div class="jsondiffpatch-property-name">' + leftKey + '</div>'));
      }
    }, {
      key: 'nodeEnd',
      value: function nodeEnd(context) {
        context.out('</li>');
      }
      /* jshint camelcase: false */

      /* eslint-disable camelcase */

    }, {
      key: 'format_unchanged',
      value: function format_unchanged(context, delta, left) {
        if (typeof left === 'undefined') {
          return;
        }

        context.out('<div class="jsondiffpatch-value">');
        this.formatValue(context, left);
        context.out('</div>');
      }
    }, {
      key: 'format_movedestination',
      value: function format_movedestination(context, delta, left) {
        if (typeof left === 'undefined') {
          return;
        }

        context.out('<div class="jsondiffpatch-value">');
        this.formatValue(context, left);
        context.out('</div>');
      }
    }, {
      key: 'format_node',
      value: function format_node(context, delta, left) {
        // recurse
        var nodeType = delta._t === 'a' ? 'array' : 'object';
        context.out('<ul class="jsondiffpatch-node jsondiffpatch-node-type-' + nodeType + '">');
        this.formatDeltaChildren(context, delta, left);
        context.out('</ul>');
      }
    }, {
      key: 'format_added',
      value: function format_added(context, delta) {
        context.out('<div class="jsondiffpatch-value">');
        this.formatValue(context, delta[0]);
        context.out('</div>');
      }
    }, {
      key: 'format_modified',
      value: function format_modified(context, delta) {
        context.out('<div class="jsondiffpatch-value jsondiffpatch-left-value">');
        this.formatValue(context, delta[0]);
        context.out('</div>' + '<div class="jsondiffpatch-value jsondiffpatch-right-value">');
        this.formatValue(context, delta[1]);
        context.out('</div>');
      }
    }, {
      key: 'format_deleted',
      value: function format_deleted(context, delta) {
        context.out('<div class="jsondiffpatch-value">');
        this.formatValue(context, delta[0]);
        context.out('</div>');
      }
    }, {
      key: 'format_moved',
      value: function format_moved(context, delta) {
        context.out('<div class="jsondiffpatch-value">');
        this.formatValue(context, delta[0]);
        context.out('</div><div class="jsondiffpatch-moved-destination">' + delta[1] + '</div>'); // draw an SVG arrow from here to move destination

        context.out(
        /* jshint multistr: true */
        '<div class="jsondiffpatch-arrow" ' + 'style="position: relative; left: -34px;">\n          <svg width="30" height="60" ' + 'style="position: absolute; display: none;">\n          <defs>\n              <marker id="markerArrow" markerWidth="8" markerHeight="8"\n                 refx="2" refy="4"\n                     orient="auto" markerUnits="userSpaceOnUse">\n                  <path d="M1,1 L1,7 L7,4 L1,1" style="fill: #339;" />\n              </marker>\n          </defs>\n          <path d="M30,0 Q-10,25 26,50"\n            style="stroke: #88f; stroke-width: 2px; fill: none; ' + 'stroke-opacity: 0.5; marker-end: url(#markerArrow);"\n          ></path>\n          </svg>\n      </div>');
        context.hasArrows = true;
      }
    }, {
      key: 'format_textdiff',
      value: function format_textdiff(context, delta) {
        context.out('<div class="jsondiffpatch-value">');
        this.formatTextDiffString(context, delta[0]);
        context.out('</div>');
      }
    }]);
    return HtmlFormatter;
  }(BaseFormatter);

  function htmlEscape(text) {
    var html = text;
    var replacements = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/'/g, '&apos;'], [/"/g, '&quot;']];

    for (var i = 0; i < replacements.length; i++) {
      html = html.replace(replacements[i][0], replacements[i][1]);
    }

    return html;
  }

  var adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg) {
    var node = nodeArg || document;

    var getElementText = function getElementText(_ref) {
      var textContent = _ref.textContent,
          innerText = _ref.innerText;
      return textContent || innerText;
    };

    var eachByQuery = function eachByQuery(el, query, fn) {
      var elems = el.querySelectorAll(query);

      for (var i = 0, l = elems.length; i < l; i++) {
        fn(elems[i]);
      }
    };

    var eachChildren = function eachChildren(_ref2, fn) {
      var children = _ref2.children;

      for (var i = 0, l = children.length; i < l; i++) {
        fn(children[i], i);
      }
    };

    eachByQuery(node, '.jsondiffpatch-arrow', function (_ref3) {
      var parentNode = _ref3.parentNode,
          children = _ref3.children,
          style = _ref3.style;
      var arrowParent = parentNode;
      var svg = children[0];
      var path = svg.children[1];
      svg.style.display = 'none';
      var destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));
      var container = arrowParent.parentNode;
      var destinationElem = void 0;
      eachChildren(container, function (child) {
        if (child.getAttribute('data-key') === destination) {
          destinationElem = child;
        }
      });

      if (!destinationElem) {
        return;
      }

      try {
        var distance = destinationElem.offsetTop - arrowParent.offsetTop;
        svg.setAttribute('height', Math.abs(distance) + 6);
        style.top = -8 + (distance > 0 ? 0 : distance) + 'px';
        var curve = distance > 0 ? 'M30,0 Q-10,' + Math.round(distance / 2) + ' 26,' + (distance - 4) : 'M30,' + -distance + ' Q-10,' + Math.round(-distance / 2) + ' 26,4';
        path.setAttribute('d', curve);
        svg.style.display = '';
      } catch (err) {}
    });
  };
  /* jshint camelcase: true */

  /* eslint-enable camelcase */


  var showUnchanged = function showUnchanged(show, node, delay) {
    var el = node || document.body;
    var prefix = 'jsondiffpatch-unchanged-';
    var classes = {
      showing: prefix + 'showing',
      hiding: prefix + 'hiding',
      visible: prefix + 'visible',
      hidden: prefix + 'hidden'
    };
    var list = el.classList;

    if (!list) {
      return;
    }

    if (!delay) {
      list.remove(classes.showing);
      list.remove(classes.hiding);
      list.remove(classes.visible);
      list.remove(classes.hidden);

      if (show === false) {
        list.add(classes.hidden);
      }

      return;
    }

    if (show === false) {
      list.remove(classes.showing);
      list.add(classes.visible);
      setTimeout(function () {
        list.add(classes.hiding);
      }, 10);
    } else {
      list.remove(classes.hiding);
      list.add(classes.showing);
      list.remove(classes.hidden);
    }

    var intervalId = setInterval(function () {
      adjustArrows(el);
    }, 100);
    setTimeout(function () {
      list.remove(classes.showing);
      list.remove(classes.hiding);

      if (show === false) {
        list.add(classes.hidden);
        list.remove(classes.visible);
      } else {
        list.add(classes.visible);
        list.remove(classes.hidden);
      }

      setTimeout(function () {
        list.remove(classes.visible);
        clearInterval(intervalId);
      }, delay + 400);
    }, delay);
  };

  var hideUnchanged = function hideUnchanged(node, delay) {
    return showUnchanged(false, node, delay);
  };

  var defaultInstance = void 0;

  function format(delta, left) {
    if (!defaultInstance) {
      defaultInstance = new HtmlFormatter();
    }

    return defaultInstance.format(delta, left);
  }

  var html = Object.freeze({
    showUnchanged: showUnchanged,
    hideUnchanged: hideUnchanged,
    default: HtmlFormatter,
    format: format
  });

  var AnnotatedFormatter = function (_BaseFormatter) {
    inherits(AnnotatedFormatter, _BaseFormatter);

    function AnnotatedFormatter() {
      classCallCheck(this, AnnotatedFormatter);

      var _this = possibleConstructorReturn(this, (AnnotatedFormatter.__proto__ || Object.getPrototypeOf(AnnotatedFormatter)).call(this));

      _this.includeMoveDestinations = false;
      return _this;
    }

    createClass(AnnotatedFormatter, [{
      key: 'prepareContext',
      value: function prepareContext(context) {
        get(AnnotatedFormatter.prototype.__proto__ || Object.getPrototypeOf(AnnotatedFormatter.prototype), 'prepareContext', this).call(this, context);

        context.indent = function (levels) {
          this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);
          this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');
        };

        context.row = function (json, htmlNote) {
          context.out('<tr><td style="white-space: nowrap;">' + '<pre class="jsondiffpatch-annotated-indent"' + ' style="display: inline-block">');
          context.out(context.indentPad);
          context.out('</pre><pre style="display: inline-block">');
          context.out(json);
          context.out('</pre></td><td class="jsondiffpatch-delta-note"><div>');
          context.out(htmlNote);
          context.out('</div></td></tr>');
        };
      }
    }, {
      key: 'typeFormattterErrorFormatter',
      value: function typeFormattterErrorFormatter(context, err) {
        context.row('', '<pre class="jsondiffpatch-error">' + err + '</pre>');
      }
    }, {
      key: 'formatTextDiffString',
      value: function formatTextDiffString(context, value) {
        var lines = this.parseTextDiff(value);
        context.out('<ul class="jsondiffpatch-textdiff">');

        for (var i = 0, l = lines.length; i < l; i++) {
          var line = lines[i];
          context.out('<li><div class="jsondiffpatch-textdiff-location">' + ('<span class="jsondiffpatch-textdiff-line-number">' + line.location.line + '</span><span class="jsondiffpatch-textdiff-char">' + line.location.chr + '</span></div><div class="jsondiffpatch-textdiff-line">'));
          var pieces = line.pieces;

          for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {
            var piece = pieces[pieceIndex];
            context.out('<span class="jsondiffpatch-textdiff-' + piece.type + '">' + piece.text + '</span>');
          }

          context.out('</div></li>');
        }

        context.out('</ul>');
      }
    }, {
      key: 'rootBegin',
      value: function rootBegin(context, type, nodeType) {
        context.out('<table class="jsondiffpatch-annotated-delta">');

        if (type === 'node') {
          context.row('{');
          context.indent();
        }

        if (nodeType === 'array') {
          context.row('"_t": "a",', 'Array delta (member names indicate array indices)');
        }
      }
    }, {
      key: 'rootEnd',
      value: function rootEnd(context, type) {
        if (type === 'node') {
          context.indent(-1);
          context.row('}');
        }

        context.out('</table>');
      }
    }, {
      key: 'nodeBegin',
      value: function nodeBegin(context, key, leftKey, type, nodeType) {
        context.row('&quot;' + key + '&quot;: {');

        if (type === 'node') {
          context.indent();
        }

        if (nodeType === 'array') {
          context.row('"_t": "a",', 'Array delta (member names indicate array indices)');
        }
      }
    }, {
      key: 'nodeEnd',
      value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {
        if (type === 'node') {
          context.indent(-1);
        }

        context.row('}' + (isLast ? '' : ','));
      }
      /* jshint camelcase: false */

      /* eslint-disable camelcase */

    }, {
      key: 'format_unchanged',
      value: function format_unchanged() {}
    }, {
      key: 'format_movedestination',
      value: function format_movedestination() {}
    }, {
      key: 'format_node',
      value: function format_node(context, delta, left) {
        // recurse
        this.formatDeltaChildren(context, delta, left);
      }
    }]);
    return AnnotatedFormatter;
  }(BaseFormatter);
  /* eslint-enable camelcase */


  var wrapPropertyName = function wrapPropertyName(name) {
    return '<pre style="display:inline-block">&quot;' + name + '&quot;</pre>';
  };

  var deltaAnnotations = {
    added: function added(delta, left, key, leftKey) {
      var formatLegend = ' <pre>([newValue])</pre>';

      if (typeof leftKey === 'undefined') {
        return 'new value' + formatLegend;
      }

      if (typeof leftKey === 'number') {
        return 'insert at index ' + leftKey + formatLegend;
      }

      return 'add property ' + wrapPropertyName(leftKey) + formatLegend;
    },
    modified: function modified(delta, left, key, leftKey) {
      var formatLegend = ' <pre>([previousValue, newValue])</pre>';

      if (typeof leftKey === 'undefined') {
        return 'modify value' + formatLegend;
      }

      if (typeof leftKey === 'number') {
        return 'modify at index ' + leftKey + formatLegend;
      }

      return 'modify property ' + wrapPropertyName(leftKey) + formatLegend;
    },
    deleted: function deleted(delta, left, key, leftKey) {
      var formatLegend = ' <pre>([previousValue, 0, 0])</pre>';

      if (typeof leftKey === 'undefined') {
        return 'delete value' + formatLegend;
      }

      if (typeof leftKey === 'number') {
        return 'remove index ' + leftKey + formatLegend;
      }

      return 'delete property ' + wrapPropertyName(leftKey) + formatLegend;
    },
    moved: function moved(delta, left, key, leftKey) {
      return 'move from <span title="(position to remove at original state)">' + ('index ' + leftKey + '</span> to <span title="(position to insert at final') + (' state)">index ' + delta[1] + '</span>');
    },
    textdiff: function textdiff(delta, left, key, leftKey) {
      var location = typeof leftKey === 'undefined' ? '' : typeof leftKey === 'number' ? ' at index ' + leftKey : ' at property ' + wrapPropertyName(leftKey);
      return 'text diff' + location + ', format is <a href="https://code.google.com/' + 'p/google-diff-match-patch/wiki/Unidiff">a variation of Unidiff</a>';
    }
  };

  var formatAnyChange = function formatAnyChange(context, delta) {
    var deltaType = this.getDeltaType(delta);
    var annotator = deltaAnnotations[deltaType];
    var htmlNote = annotator && annotator.apply(annotator, Array.prototype.slice.call(arguments, 1));
    var json = JSON.stringify(delta, null, 2);

    if (deltaType === 'textdiff') {
      // split text diffs lines
      json = json.split('\\n').join('\\n"+\n   "');
    }

    context.indent();
    context.row(json, htmlNote);
    context.indent(-1);
  };
  /* eslint-disable camelcase */


  AnnotatedFormatter.prototype.format_added = formatAnyChange;
  AnnotatedFormatter.prototype.format_modified = formatAnyChange;
  AnnotatedFormatter.prototype.format_deleted = formatAnyChange;
  AnnotatedFormatter.prototype.format_moved = formatAnyChange;
  AnnotatedFormatter.prototype.format_textdiff = formatAnyChange;
  var defaultInstance$1 = void 0;

  function format$1(delta, left) {
    if (!defaultInstance$1) {
      defaultInstance$1 = new AnnotatedFormatter();
    }

    return defaultInstance$1.format(delta, left);
  }

  var annotated = Object.freeze({
    default: AnnotatedFormatter,
    format: format$1
  });
  var OPERATIONS = {
    add: 'add',
    remove: 'remove',
    replace: 'replace',
    move: 'move'
  };

  var JSONFormatter = function (_BaseFormatter) {
    inherits(JSONFormatter, _BaseFormatter);

    function JSONFormatter() {
      classCallCheck(this, JSONFormatter);

      var _this = possibleConstructorReturn(this, (JSONFormatter.__proto__ || Object.getPrototypeOf(JSONFormatter)).call(this));

      _this.includeMoveDestinations = true;
      return _this;
    }

    createClass(JSONFormatter, [{
      key: 'prepareContext',
      value: function prepareContext(context) {
        get(JSONFormatter.prototype.__proto__ || Object.getPrototypeOf(JSONFormatter.prototype), 'prepareContext', this).call(this, context);
        context.result = [];
        context.path = [];

        context.pushCurrentOp = function (obj) {
          var op = obj.op,
              value = obj.value;
          var val = {
            op: op,
            path: this.currentPath()
          };

          if (typeof value !== 'undefined') {
            val.value = value;
          }

          this.result.push(val);
        };

        context.pushMoveOp = function (to) {
          var from = this.currentPath();
          this.result.push({
            op: OPERATIONS.move,
            from: from,
            path: this.toPath(to)
          });
        };

        context.currentPath = function () {
          return '/' + this.path.join('/');
        };

        context.toPath = function (toPath) {
          var to = this.path.slice();
          to[to.length - 1] = toPath;
          return '/' + to.join('/');
        };
      }
    }, {
      key: 'typeFormattterErrorFormatter',
      value: function typeFormattterErrorFormatter(context, err) {
        context.out('[ERROR] ' + err);
      }
    }, {
      key: 'rootBegin',
      value: function rootBegin() {}
    }, {
      key: 'rootEnd',
      value: function rootEnd() {}
    }, {
      key: 'nodeBegin',
      value: function nodeBegin(_ref, key, leftKey) {
        var path = _ref.path;
        path.push(leftKey);
      }
    }, {
      key: 'nodeEnd',
      value: function nodeEnd(_ref2) {
        var path = _ref2.path;
        path.pop();
      }
      /* jshint camelcase: false */

      /* eslint-disable camelcase */

    }, {
      key: 'format_unchanged',
      value: function format_unchanged() {}
    }, {
      key: 'format_movedestination',
      value: function format_movedestination() {}
    }, {
      key: 'format_node',
      value: function format_node(context, delta, left) {
        this.formatDeltaChildren(context, delta, left);
      }
    }, {
      key: 'format_added',
      value: function format_added(context, delta) {
        context.pushCurrentOp({
          op: OPERATIONS.add,
          value: delta[0]
        });
      }
    }, {
      key: 'format_modified',
      value: function format_modified(context, delta) {
        context.pushCurrentOp({
          op: OPERATIONS.replace,
          value: delta[1]
        });
      }
    }, {
      key: 'format_deleted',
      value: function format_deleted(context) {
        context.pushCurrentOp({
          op: OPERATIONS.remove
        });
      }
    }, {
      key: 'format_moved',
      value: function format_moved(context, delta) {
        var to = delta[1];
        context.pushMoveOp(to);
      }
    }, {
      key: 'format_textdiff',
      value: function format_textdiff() {
        throw new Error('Not implemented');
      }
    }, {
      key: 'format',
      value: function format(delta, left) {
        var context = {};
        this.prepareContext(context);
        this.recurse(context, delta, left);
        return context.result;
      }
    }]);
    return JSONFormatter;
  }(BaseFormatter);

  var last = function last(arr) {
    return arr[arr.length - 1];
  };

  var sortBy = function sortBy(arr, pred) {
    arr.sort(pred);
    return arr;
  };

  var compareByIndexDesc = function compareByIndexDesc(indexA, indexB) {
    var lastA = parseInt(indexA, 10);
    var lastB = parseInt(indexB, 10);

    if (!(isNaN(lastA) || isNaN(lastB))) {
      return lastB - lastA;
    } else {
      return 0;
    }
  };

  var opsByDescendingOrder = function opsByDescendingOrder(removeOps) {
    return sortBy(removeOps, function (a, b) {
      var splitA = a.path.split('/');
      var splitB = b.path.split('/');

      if (splitA.length !== splitB.length) {
        return splitA.length - splitB.length;
      } else {
        return compareByIndexDesc(last(splitA), last(splitB));
      }
    });
  };

  var partitionOps = function partitionOps(arr, fns) {
    var initArr = Array(fns.length + 1).fill().map(function () {
      return [];
    });
    return arr.map(function (item) {
      var position = fns.map(function (fn) {
        return fn(item);
      }).indexOf(true);

      if (position < 0) {
        position = fns.length;
      }

      return {
        item: item,
        position: position
      };
    }).reduce(function (acc, item) {
      acc[item.position].push(item.item);
      return acc;
    }, initArr);
  };

  var isMoveOp = function isMoveOp(_ref3) {
    var op = _ref3.op;
    return op === 'move';
  };

  var isRemoveOp = function isRemoveOp(_ref4) {
    var op = _ref4.op;
    return op === 'remove';
  };

  var reorderOps = function reorderOps(diff) {
    var _partitionOps = partitionOps(diff, [isMoveOp, isRemoveOp]),
        _partitionOps2 = slicedToArray(_partitionOps, 3),
        moveOps = _partitionOps2[0],
        removedOps = _partitionOps2[1],
        restOps = _partitionOps2[2];

    var removeOpsReverse = opsByDescendingOrder(removedOps);
    return [].concat(toConsumableArray(removeOpsReverse), toConsumableArray(moveOps), toConsumableArray(restOps));
  };

  var defaultInstance$2 = void 0;

  var format$2 = function format(delta, left) {
    if (!defaultInstance$2) {
      defaultInstance$2 = new JSONFormatter();
    }

    return reorderOps(defaultInstance$2.format(delta, left));
  };

  var log = function log(delta, left) {
    console.log(format$2(delta, left));
  };

  var jsonpatch = Object.freeze({
    default: JSONFormatter,
    partitionOps: partitionOps,
    format: format$2,
    log: log
  });

  function chalkColor(name) {
    return chalk && chalk[name] || function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return args;
    };
  }

  var colors = {
    added: chalkColor('green'),
    deleted: chalkColor('red'),
    movedestination: chalkColor('gray'),
    moved: chalkColor('yellow'),
    unchanged: chalkColor('gray'),
    error: chalkColor('white.bgRed'),
    textDiffLine: chalkColor('gray')
  };

  var ConsoleFormatter = function (_BaseFormatter) {
    inherits(ConsoleFormatter, _BaseFormatter);

    function ConsoleFormatter() {
      classCallCheck(this, ConsoleFormatter);

      var _this = possibleConstructorReturn(this, (ConsoleFormatter.__proto__ || Object.getPrototypeOf(ConsoleFormatter)).call(this));

      _this.includeMoveDestinations = false;
      return _this;
    }

    createClass(ConsoleFormatter, [{
      key: 'prepareContext',
      value: function prepareContext(context) {
        get(ConsoleFormatter.prototype.__proto__ || Object.getPrototypeOf(ConsoleFormatter.prototype), 'prepareContext', this).call(this, context);

        context.indent = function (levels) {
          this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);
          this.indentPad = new Array(this.indentLevel + 1).join('  ');
          this.outLine();
        };

        context.outLine = function () {
          this.buffer.push('\n' + (this.indentPad || ''));
        };

        context.out = function () {
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }

          for (var i = 0, l = args.length; i < l; i++) {
            var lines = args[i].split('\n');
            var text = lines.join('\n' + (this.indentPad || ''));

            if (this.color && this.color[0]) {
              text = this.color[0](text);
            }

            this.buffer.push(text);
          }
        };

        context.pushColor = function (color) {
          this.color = this.color || [];
          this.color.unshift(color);
        };

        context.popColor = function () {
          this.color = this.color || [];
          this.color.shift();
        };
      }
    }, {
      key: 'typeFormattterErrorFormatter',
      value: function typeFormattterErrorFormatter(context, err) {
        context.pushColor(colors.error);
        context.out('[ERROR]' + err);
        context.popColor();
      }
    }, {
      key: 'formatValue',
      value: function formatValue(context, value) {
        context.out(JSON.stringify(value, null, 2));
      }
    }, {
      key: 'formatTextDiffString',
      value: function formatTextDiffString(context, value) {
        var lines = this.parseTextDiff(value);
        context.indent();

        for (var i = 0, l = lines.length; i < l; i++) {
          var line = lines[i];
          context.pushColor(colors.textDiffLine);
          context.out(line.location.line + ',' + line.location.chr + ' ');
          context.popColor();
          var pieces = line.pieces;

          for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {
            var piece = pieces[pieceIndex];
            context.pushColor(colors[piece.type]);
            context.out(piece.text);
            context.popColor();
          }

          if (i < l - 1) {
            context.outLine();
          }
        }

        context.indent(-1);
      }
    }, {
      key: 'rootBegin',
      value: function rootBegin(context, type, nodeType) {
        context.pushColor(colors[type]);

        if (type === 'node') {
          context.out(nodeType === 'array' ? '[' : '{');
          context.indent();
        }
      }
    }, {
      key: 'rootEnd',
      value: function rootEnd(context, type, nodeType) {
        if (type === 'node') {
          context.indent(-1);
          context.out(nodeType === 'array' ? ']' : '}');
        }

        context.popColor();
      }
    }, {
      key: 'nodeBegin',
      value: function nodeBegin(context, key, leftKey, type, nodeType) {
        context.pushColor(colors[type]);
        context.out(leftKey + ': ');

        if (type === 'node') {
          context.out(nodeType === 'array' ? '[' : '{');
          context.indent();
        }
      }
    }, {
      key: 'nodeEnd',
      value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {
        if (type === 'node') {
          context.indent(-1);
          context.out(nodeType === 'array' ? ']' : '}' + (isLast ? '' : ','));
        }

        if (!isLast) {
          context.outLine();
        }

        context.popColor();
      }
      /* jshint camelcase: false */

      /* eslint-disable camelcase */

    }, {
      key: 'format_unchanged',
      value: function format_unchanged(context, delta, left) {
        if (typeof left === 'undefined') {
          return;
        }

        this.formatValue(context, left);
      }
    }, {
      key: 'format_movedestination',
      value: function format_movedestination(context, delta, left) {
        if (typeof left === 'undefined') {
          return;
        }

        this.formatValue(context, left);
      }
    }, {
      key: 'format_node',
      value: function format_node(context, delta, left) {
        // recurse
        this.formatDeltaChildren(context, delta, left);
      }
    }, {
      key: 'format_added',
      value: function format_added(context, delta) {
        this.formatValue(context, delta[0]);
      }
    }, {
      key: 'format_modified',
      value: function format_modified(context, delta) {
        context.pushColor(colors.deleted);
        this.formatValue(context, delta[0]);
        context.popColor();
        context.out(' => ');
        context.pushColor(colors.added);
        this.formatValue(context, delta[1]);
        context.popColor();
      }
    }, {
      key: 'format_deleted',
      value: function format_deleted(context, delta) {
        this.formatValue(context, delta[0]);
      }
    }, {
      key: 'format_moved',
      value: function format_moved(context, delta) {
        context.out('==> ' + delta[1]);
      }
    }, {
      key: 'format_textdiff',
      value: function format_textdiff(context, delta) {
        this.formatTextDiffString(context, delta[0]);
      }
    }]);
    return ConsoleFormatter;
  }(BaseFormatter);

  var defaultInstance$3 = void 0;

  var format$3 = function format(delta, left) {
    if (!defaultInstance$3) {
      defaultInstance$3 = new ConsoleFormatter();
    }

    return defaultInstance$3.format(delta, left);
  };

  function log$1(delta, left) {
    console.log(format$3(delta, left));
  }

  var console$1 = Object.freeze({
    default: ConsoleFormatter,
    format: format$3,
    log: log$1
  });
  var index = Object.freeze({
    base: base,
    html: html,
    annotated: annotated,
    jsonpatch: jsonpatch,
    console: console$1
  }); // use as 2nd parameter for JSON.parse to revive Date instances

  function dateReviver(key, value) {
    var parts = void 0;

    if (typeof value === 'string') {
      // eslint-disable-next-line max-len
      parts = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(?:\.(\d*))?(Z|([+-])(\d{2}):(\d{2}))$/.exec(value);

      if (parts) {
        return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));
      }
    }

    return value;
  }

  function create(options) {
    return new DiffPatcher(options);
  }

  var defaultInstance$4 = void 0;

  function diff() {
    if (!defaultInstance$4) {
      defaultInstance$4 = new DiffPatcher();
    }

    return defaultInstance$4.diff.apply(defaultInstance$4, arguments);
  }

  function patch() {
    if (!defaultInstance$4) {
      defaultInstance$4 = new DiffPatcher();
    }

    return defaultInstance$4.patch.apply(defaultInstance$4, arguments);
  }

  function unpatch() {
    if (!defaultInstance$4) {
      defaultInstance$4 = new DiffPatcher();
    }

    return defaultInstance$4.unpatch.apply(defaultInstance$4, arguments);
  }

  function reverse() {
    if (!defaultInstance$4) {
      defaultInstance$4 = new DiffPatcher();
    }

    return defaultInstance$4.reverse.apply(defaultInstance$4, arguments);
  }

  function clone$1() {
    if (!defaultInstance$4) {
      defaultInstance$4 = new DiffPatcher();
    }

    return defaultInstance$4.clone.apply(defaultInstance$4, arguments);
  }

  exports.DiffPatcher = DiffPatcher;
  exports.formatters = index;
  exports.console = console$1;
  exports.create = create;
  exports.dateReviver = dateReviver;
  exports.diff = diff;
  exports.patch = patch;
  exports.unpatch = unpatch;
  exports.reverse = reverse;
  exports.clone = clone$1;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
});
},{"./empty":"THnX"}],"WcpC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dequal = dequal;
var has = Object.prototype.hasOwnProperty;

function find(iter, tar, key) {
  for (key of iter.keys()) {
    if (dequal(key, tar)) return key;
  }
}

function dequal(foo, bar) {
  var ctor, len, tmp;
  if (foo === bar) return true;

  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {
    if (ctor === Date) return foo.getTime() === bar.getTime();
    if (ctor === RegExp) return foo.toString() === bar.toString();

    if (ctor === Array) {
      if ((len = foo.length) === bar.length) {
        while (len-- && dequal(foo[len], bar[len]));
      }

      return len === -1;
    }

    if (ctor === Set) {
      if (foo.size !== bar.size) {
        return false;
      }

      for (len of foo) {
        tmp = len;

        if (tmp && typeof tmp === 'object') {
          tmp = find(bar, tmp);
          if (!tmp) return false;
        }

        if (!bar.has(tmp)) return false;
      }

      return true;
    }

    if (ctor === Map) {
      if (foo.size !== bar.size) {
        return false;
      }

      for (len of foo) {
        tmp = len[0];

        if (tmp && typeof tmp === 'object') {
          tmp = find(bar, tmp);
          if (!tmp) return false;
        }

        if (!dequal(len[1], bar.get(tmp))) {
          return false;
        }
      }

      return true;
    }

    if (ctor === ArrayBuffer) {
      foo = new Uint8Array(foo);
      bar = new Uint8Array(bar);
    } else if (ctor === DataView) {
      if ((len = foo.byteLength) === bar.byteLength) {
        while (len-- && foo.getInt8(len) === bar.getInt8(len));
      }

      return len === -1;
    }

    if (ArrayBuffer.isView(foo)) {
      if ((len = foo.byteLength) === bar.byteLength) {
        while (len-- && foo[len] === bar[len]);
      }

      return len === -1;
    }

    if (!ctor || typeof foo === 'object') {
      len = 0;

      for (ctor in foo) {
        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;
        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;
      }

      return Object.keys(bar).length === len;
    }
  }

  return foo !== foo && bar !== bar;
}
},{}],"axP9":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNCLEAR_compare = exports.UNCLEAR_get_difference = exports.UNCLEAR_get_difference__full = exports.get_json_difference = exports.s_max = exports.SemanticDifference = exports.is_deep_equal = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var typescript_string_enums_1 = require("typescript-string-enums");

var memoize_one_1 = __importDefault(require("memoize-one"));

var jsondiffpatch = require('jsondiffpatch');

var type_guards_1 = require("./type-guards");

var selectors_1 = require("./selectors"); ////////////////////////////////////


var dequal_1 = require("dequal");

Object.defineProperty(exports, "is_deep_equal", {
  enumerable: true,
  get: function () {
    return dequal_1.dequal;
  }
}); // tslint:disable-next-line: variable-name

exports.SemanticDifference = typescript_string_enums_1.Enum('none', 'time', // time of last meaningful activity, not T-State. Important to discriminate forks.
'minor', 'major');

function s_max(a, b) {
  if (a === exports.SemanticDifference.major || b === exports.SemanticDifference.major) return exports.SemanticDifference.major;
  if (a === exports.SemanticDifference.minor || b === exports.SemanticDifference.minor) return exports.SemanticDifference.minor;
  if (a === exports.SemanticDifference.time || b === exports.SemanticDifference.time) return exports.SemanticDifference.time;
  return exports.SemanticDifference.none;
}

exports.s_max = s_max; // used only in tests AFAIK

var _get_advanced_json_differ = memoize_one_1.default(function () {
  var advanced_json_differ = jsondiffpatch.create({
    // method used to match objects when diffing arrays
    // by default === operator is used
    objectHash: function (obj) {
      return JSON.stringify(obj);
    }
  });
  return advanced_json_differ;
});

function get_json_difference(a, b) {
  return _get_advanced_json_differ().diff(a, b);
}

exports.get_json_difference = get_json_difference; // TODO improve unclear semantics

function UNCLEAR_get_difference__full(a, b) {
  //console.log('compare()', { a, b })
  // quick
  if (a === b) return {
    type: exports.SemanticDifference.none,
    direction: 0
  };
  var exists__a = !!a;
  var exists__b = !!b;
  if (exists__a !== exists__b) return {
    type: exports.SemanticDifference.minor,
    direction: (exists__a ? 1 : 0) - (exists__b ? 1 : 0)
  };
  var schema_version__a = selectors_1.get_schema_version_loose(a);
  var schema_version__b = selectors_1.get_schema_version_loose(b);
  if (schema_version__a !== schema_version__b) return {
    type: exports.SemanticDifference.major,
    direction: schema_version__a - schema_version__b
  };
  var is_root__a = type_guards_1.is_RootState(a);
  var is_root__b = type_guards_1.is_RootState(b);
  if (is_root__a !== is_root__b) return {
    type: exports.SemanticDifference.major,
    direction: (is_root__a ? 1 : 0) - (is_root__b ? 1 : 0)
  };
  /* TODO is it needed? revision should work on a state
  if (is_root__a) {
      const u_state_rev__a = get_revision_loose(a.u_state)
      const u_state_rev__b = get_revision_loose(b.u_state)
      if (u_state_rev__a !== u_state_rev__b)
          return u_state_rev__a - u_state_rev__b
       const t_state_rev__a = get_revision_loose(a.t_state)
      const t_state_rev__b = get_revision_loose(b.t_state)
      if (t_state_rev__a !== t_state_rev__b)
          return t_state_rev__a - t_state_rev__b
  }*/

  if (is_root__a && a.ⵙapp_id && b.ⵙapp_id) {
    tiny_invariant_1.default(a.ⵙapp_id === b.ⵙapp_id, "UNCLEAR_get_difference() states should be in the same universe!");
  }

  var revision__a = selectors_1.get_revision_loose(a);
  var revision__b = selectors_1.get_revision_loose(b);
  if (revision__a !== revision__b) return {
    type: exports.SemanticDifference.minor,
    direction: revision__a - revision__b
  };
  var activity_tms__a = selectors_1.get_last_user_activity_timestamp_loose(a);
  var activity_tms__b = selectors_1.get_last_user_activity_timestamp_loose(b);
  if (activity_tms__a !== activity_tms__b) return {
    type: exports.SemanticDifference.minor,
    direction: activity_tms__a - activity_tms__b
  }; // last resort if state is/has a T_state

  var t_tms__a = selectors_1.get_timestamp_loose(a);
  var t_tms__b = selectors_1.get_timestamp_loose(b);
  if (t_tms__a !== t_tms__b) return {
    type: exports.SemanticDifference.time,
    direction: t_tms__a - t_tms__b
  };

  if ([schema_version__a, revision__a, activity_tms__a, t_tms__a].join(',') === '0,0,0,0') {
    // compared stuff are not semantic states
    return {
      type: exports.SemanticDifference.minor,
      direction: t_tms__a - t_tms__b
    };
  }

  return {
    type: exports.SemanticDifference.none,
    direction: 0
  };
}

exports.UNCLEAR_get_difference__full = UNCLEAR_get_difference__full;

function UNCLEAR_get_difference(a, b) {
  return UNCLEAR_get_difference__full(a, b).type;
}

exports.UNCLEAR_get_difference = UNCLEAR_get_difference;

function UNCLEAR_compare(a, b) {
  return UNCLEAR_get_difference__full(a, b).direction;
}

exports.UNCLEAR_compare = UNCLEAR_compare;
},{"tiny-invariant":"VYmh","typescript-string-enums":"qyCc","memoize-one":"lvkj","jsondiffpatch":"stVk","./type-guards":"lgCG","./selectors":"UzCr","dequal":"WcpC"}],"TRTF":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generic_migrate_to_latest = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var type_guards_1 = require("./type-guards");

var selectors_1 = require("./selectors");

var LIBS = {};
var get_state_summary = selectors_1.get_base_loose; ////////////////////////////////////////////////////////////////////////////////////

function generic_migrate_to_latest(_a) {
  var SEC = _a.SEC,
      LIB = _a.LIB,
      SCHEMA_VERSION = _a.SCHEMA_VERSION,
      legacy_state = _a.legacy_state,
      hints = _a.hints,
      sub_states_migrate_to_latest = _a.sub_states_migrate_to_latest,
      // no default to force thinking
  _b = _a.cleanup,
      // no default to force thinking
  cleanup = _b === void 0 ? function (SEC, state, hints) {
    return state;
  } : _b,
      pipeline = _a.pipeline;
  return SEC.xTry('migrate_to_latest', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    var existing_version = selectors_1.get_schema_version_loose(legacy_state);
    console.groupCollapsed("migration of schema " + LIB + " from v" + existing_version + " to v" + SCHEMA_VERSION);
    var RSEC = SEC;
    RSEC.setLogicalStack({
      module: LIB
    });
    RSEC.setAnalyticsAndErrorDetails({
      version_from: existing_version,
      version_to: SCHEMA_VERSION
    });
    if (existing_version > SCHEMA_VERSION) throw new Error('Your data is from a more recent version of this lib. Please update!');
    var state = legacy_state; // for starter, may actually be true

    if (existing_version < SCHEMA_VERSION) {
      logger.info("attempting to migrate schema of " + LIB + " from v" + existing_version + " to v" + SCHEMA_VERSION + "\u2026");
      RSEC.fireAnalyticsEvent('schema_migration.began');

      function previous(index, SEC, legacy_state, hints) {
        var migrate_step = pipeline[index];
        var current_step_name = index >= pipeline.length ? 'not-found' : (migrate_step === null || migrate_step === void 0 ? void 0 : migrate_step.name) || 'unknown';
        return RSEC.xTry('migration step:' + current_step_name, function (_a) {
          var SEC = _a.SEC;

          if (index >= pipeline.length) {
            throw new Error("No known migration for updating a v" + selectors_1.get_schema_version_loose(legacy_state) + "!");
          }

          tiny_invariant_1.default(typeof migrate_step === 'function', 'migrate step should be a function!');
          var legacy_schema_version = selectors_1.get_schema_version_loose(legacy_state); //_last_SEC = SEC
          //console.log('_last_SEC now =', SEC.getLogicalStack(), '\n', SEC.getShortLogicalStack())

          logger.trace("[" + LIB + "] \u2B46 invoking migration pipeline step " + (pipeline.length - index) + "/" + pipeline.length + " \"" + current_step_name + "\"\u2026", get_state_summary(legacy_state));
          var state = migrate_step(SEC, legacy_state, hints, previous.bind(null, index + 1), legacy_schema_version, LIBS);
          tiny_invariant_1.default(!!state, 'migration step should return something');
          logger.trace("[" + LIB + "] \u2B45 returned from migration pipeline step " + (pipeline.length - index) + "/" + pipeline.length + " \"" + current_step_name + "\".", get_state_summary(state)); //_check_response(SEC, index, 'out')

          return state;
        });
      } // launch the chain


      try {
        state = previous(0, RSEC, state, hints);
      } catch (err) {
        logger.error("failed to migrate schema of " + LIB + " from v" + existing_version + " to v" + SCHEMA_VERSION + "!");
        RSEC.fireAnalyticsEvent('schema_migration.failed');
        throw err;
      }

      logger.info(LIB + ": schema migration successful.", get_state_summary(state));
      RSEC.fireAnalyticsEvent('schema_migration.ended');
    } // migrate sub-reducers if any...


    if (type_guards_1.is_UTBundle(state)) {
      state = _migrate_sub_states__bundle(SEC, state, sub_states_migrate_to_latest, hints);
    } else if (type_guards_1.is_RootState(state)) {
      state = _migrate_sub_states__root(SEC, state, sub_states_migrate_to_latest, hints);
    } else if (type_guards_1.is_BaseState(state)) {
      state = _migrate_sub_states__base(SEC, state, sub_states_migrate_to_latest, hints);
    } else {
      tiny_invariant_1.default(false, 'should be a recognized AnyOffirmoState!');
    }

    state = cleanup(SEC, state, hints);
    console.groupEnd();
    return state;
  });
}

exports.generic_migrate_to_latest = generic_migrate_to_latest;

function _migrate_sub_states__bundle(SEC, state, sub_states_migrate_to_latest, hints) {
  var has_change = false;
  var u_state = state[0],
      t_state = state[1];
  var unmigrated_sub_states = new Set(__spreadArray([], Object.keys(sub_states_migrate_to_latest)));
  var sub_states_found = new Set();
  var sub_u_states_found = new Set();
  var sub_t_states_found = new Set(); // using base state in case of a legacy state

  for (var key in u_state) {
    if (type_guards_1.has_versioned_schema(u_state[key])) {
      sub_states_found.add(key);
      sub_u_states_found.add(key);
    }
  }

  for (var key in t_state) {
    if (type_guards_1.has_versioned_schema(t_state[key])) {
      sub_states_found.add(key);
      sub_t_states_found.add(key);
    }
  }
  /*
  console.log({
      sub_states_found,
      sub_u_states_found,
      sub_t_states_found,
  })
  */


  var sub_states_migrated = new Set();
  sub_states_found.forEach(function (key) {
    var _a, _b;

    var migrate_sub_to_latest = sub_states_migrate_to_latest[key];
    if (!migrate_sub_to_latest) throw new Error("Found sub-state \"" + key + "\" but no migration fn was provided!");
    var sub_hints = hints[key];
    var previous_sub_ustate = u_state[key];
    var previous_sub_tstate = t_state[key];
    var new_sub_ustate = previous_sub_ustate;
    var new_sub_tstate = previous_sub_tstate;
    SEC.xTry("migration of sub-state \"" + key + "\"", function (_a) {
      var _b;

      var SEC = _a.SEC,
          logger = _a.logger;

      if (sub_u_states_found.has(key) && sub_t_states_found.has(key)) {
        // combo
        var legacy_sub_state = [previous_sub_ustate, previous_sub_tstate];
        logger.trace("\u2B46 invoking migration fn of bundled sub-state \"" + key + "\"\u2026", get_state_summary(legacy_sub_state));
        _b = migrate_sub_to_latest(SEC, legacy_sub_state, sub_hints), new_sub_ustate = _b[0], new_sub_tstate = _b[1];
      } else if (sub_u_states_found.has(key)) {
        logger.trace("\u2B46 invoking migration fn of sub-UState \"" + key + "\"\u2026", get_state_summary(previous_sub_ustate));
        new_sub_ustate = migrate_sub_to_latest(SEC, previous_sub_ustate, sub_hints);
      } else if (sub_t_states_found.has(key)) {
        logger.trace("\u2B46 invoking migration fn of sub-TState \"" + key + "\"\u2026", get_state_summary(previous_sub_tstate));
        new_sub_tstate = migrate_sub_to_latest(SEC, previous_sub_tstate, sub_hints);
      } else {
        throw new Error("Expected sub-state \"" + key + "\" was not found!");
      }

      logger.trace("\u2B45 returned from migration fn of sub-*state \"" + key + "\".");
    });

    if (previous_sub_ustate && new_sub_ustate !== previous_sub_ustate) {
      has_change = true;
      u_state = __assign(__assign({}, u_state), (_a = {}, _a[key] = new_sub_ustate, _a));
    }

    if (previous_sub_tstate && new_sub_tstate !== previous_sub_tstate) {
      has_change = true;
      t_state = __assign(__assign({}, t_state), (_b = {}, _b[key] = new_sub_tstate, _b));
    }

    sub_states_migrated.add(key);
    unmigrated_sub_states.delete(key);
  });
  if (unmigrated_sub_states.size) throw new Error("Specified sub-states not found! " + Array.from(unmigrated_sub_states).join(','));
  if (!has_change) return state;
  return [u_state, t_state];
}

function _migrate_sub_states__root(SEC, state, sub_states_migrate_to_latest, hints) {
  var _a = state,
      previous_u_state = _a.u_state,
      previous_t_state = _a.t_state;
  var previous_state_as_bundle = [previous_u_state, previous_t_state];

  var migrated_bundle = _migrate_sub_states__bundle(SEC, previous_state_as_bundle, sub_states_migrate_to_latest, hints);

  if (migrated_bundle === previous_state_as_bundle) return state;
  return __assign(__assign({}, state), {
    u_state: migrated_bundle[0],
    t_state: migrated_bundle[1]
  });
}

function _migrate_sub_states__base(SEC, state, sub_states_migrate_to_latest, hints) {
  //let has_change = false
  var legacy_state = state;

  for (var key in sub_states_migrate_to_latest) {
    if (type_guards_1.has_versioned_schema(legacy_state[key])) {
      throw new Error('_migrate_sub_states__base() NIMP!');
    }
  }

  return state;
}
},{"tiny-invariant":"VYmh","./type-guards":"lgCG","./selectors":"UzCr"}],"WbB7":[function(require,module,exports) {
/**
 * This allows you to work with object hierarchies that have been frozen
 * with Object.freeze().  "get" operations can use the normal JS syntax,
 * but operations that modify the data will have to return partial copies of
 * the structure. The portions of the structure that did not change will
 * === their previous values.
 *
 * Inspired by clojure/mori and Immutable.js
 */
'use strict';

const i = exports;

const identity = coll => coll; // we only care about objects or arrays for now


const weCareAbout = val => val !== null && (Array.isArray(val) || // This will skip objects created with `new Foo()`
// and objects created with `Object.create(proto)`
// The benefit is ignoring DOM elements and event emitters,
// which are often circular.
isObjectLike(val));

const isObjectLike = val => typeof val === 'object' && (val.constructor === Object || val.constructor == null) && (Object.getPrototypeOf(val) === Object.prototype || Object.getPrototypeOf(val) === null);

const forKeys = (obj, iter) => {
  let idx, keys;

  if (Array.isArray(obj)) {
    idx = obj.length;

    while (idx--) {
      iter(idx);
    }

    return;
  }

  keys = Object.keys(obj);
  idx = keys.length;

  while (idx--) {
    iter(keys[idx]);
  }
};

const cloneObj = obj => {
  const newObj = obj.constructor == null ? Object.create(null) : {};
  const keys = Object.keys(obj);
  let idx = keys.length;
  let key;

  while (idx--) {
    key = keys[idx];
    newObj[key] = obj[key];
  }

  return newObj;
};

const clone = coll => {
  if (Array.isArray(coll)) {
    return coll.slice();
  } else {
    return cloneObj(coll);
  }
};

const freezeIfNeeded = "production" === 'production' ? identity : coll => {
  if (weCareAbout(coll) && !Object.isFrozen(coll)) {
    return baseFreeze(coll);
  }

  return coll;
};

const _freeze = "production" === 'production' ? identity : coll => {
  if (typeof coll === 'object') {
    return Object.freeze(coll);
  } else {
    return coll;
  }
};

const prevNodes = [];

const baseFreeze = coll => {
  if (prevNodes.some(val => val === coll)) {
    throw new Error('object has a reference cycle');
  }

  prevNodes.push(coll);
  forKeys(coll, key => {
    const prop = coll[key];

    if (weCareAbout(prop)) {
      baseFreeze(prop);
    }
  });
  prevNodes.pop();
  Object.freeze(coll);
  return coll;
};
/**
 * recrursively freeze an object and all its child objects
 * @param  {Object|Array} coll
 * @return {Object|Array}
 */


exports.freeze = "production" === 'production' ? identity : baseFreeze;
/**
 * recursively un-freeze an object, by cloning frozen collections
 * @param  {[type]} coll [description]
 * @return {[type]}      [description]
 */

exports.thaw = function thaw(coll) {
  if (!weCareAbout(coll) || !Object.isFrozen(coll)) return coll;
  const newColl = Array.isArray(coll) ? new Array(coll.length) : {};
  forKeys(coll, key => {
    newColl[key] = thaw(coll[key]);
  });
  return newColl;
};
/**
 * set a value on an object or array
 * @param  {Object|Array}  coll
 * @param  {String|Number} key   Key or index
 * @param  {Object}        value
 * @return {Object|Array}        new object hierarchy with modifications
 */


exports.assoc = function assoc(coll, key, value) {
  if (coll[key] === value) {
    return _freeze(coll);
  }

  const newObj = clone(coll);
  newObj[key] = freezeIfNeeded(value);
  return _freeze(newObj);
};

exports.set = exports.assoc;
/**
 * un-set a value on an object or array
 * @param  {Object|Array}  coll
 * @param  {String|Number} key  Key or Index
 * @return {Object|Array}       New object or array
 */

exports.dissoc = function dissoc(coll, key) {
  const newObj = clone(coll);
  delete newObj[key];
  return _freeze(newObj);
};

exports.unset = exports.dissoc;
/**
 * set a value deep in a hierarchical structure
 * @param  {Object|Array} coll
 * @param  {Array}        path    A list of keys to traverse
 * @param  {Object}       value
 * @return {Object|Array}       new object hierarchy with modifications
 */

exports.assocIn = function assocIn(coll, path, value) {
  const key0 = path[0];

  if (path.length === 1) {
    // simplest case is a 1-element array.  Just a simple assoc.
    return i.assoc(coll, key0, value);
  } else {
    // break the problem down.  Assoc this object with the first key
    // and the result of assocIn with the rest of the keys
    return i.assoc(coll, key0, assocIn(coll[key0] || {}, path.slice(1), value));
  }
};

exports.setIn = exports.assocIn;
/**
 * un-set a value on an object or array
 * @param  {Object|Array}  coll
 * @param  {Array} path  A list of keys to traverse
 * @return {Object|Array}       New object or array
 */

exports.dissocIn = function dissocIn(coll, path) {
  const key0 = path[0];

  if (!coll.hasOwnProperty(key0)) {
    return coll;
  }

  if (path.length === 1) {
    // simplest case is a 1-element array.  Just a simple dissoc.
    return i.dissoc(coll, key0);
  } else {
    // break the problem down.  Assoc this object with the first key
    // and the result of dissocIn with the rest of the keys
    return i.assoc(coll, key0, dissocIn(coll[key0], path.slice(1)));
  }
};

exports.unsetIn = exports.dissocIn;
/**
 * get an object from a hierachy based on an array of keys
 * @param  {Object|Array} coll
 * @param  {Array}        path    list of keys
 * @return {Object}       value, or undefined
 */

function baseGet(coll, path) {
  return (path || []).reduce((curr, key) => {
    if (!curr) {
      return;
    }

    return curr[key];
  }, coll);
}

exports.getIn = baseGet;
/**
 * Update a value in a hierarchy
 * @param  {Object|Array}   coll
 * @param  {Array}          path     list of keys
 * @param  {Function} callback The existing value with be passed to this.
 *                             Return the new value to set
 * @return {Object|Array}      new object hierarchy with modifications
 */

exports.updateIn = function updateIn(coll, path, callback) {
  const existingVal = baseGet(coll, path);
  return i.assocIn(coll, path, callback(existingVal));
}; // generate wrappers for the mutative array methods


['push', 'unshift', 'pop', 'shift', 'reverse', 'sort'].forEach(methodName => {
  exports[methodName] = function (arr, val) {
    const newArr = [...arr];
    newArr[methodName](freezeIfNeeded(val));
    return _freeze(newArr);
  };

  exports[methodName].displayName = 'icepick.' + methodName;
}); // splice is special because it is variadic

exports.splice = function splice(arr, ..._args) {
  const newArr = [...arr];

  const args = _args.map(freezeIfNeeded);

  newArr.splice.apply(newArr, args);
  return _freeze(newArr);
}; // slice is non-mutative


exports.slice = function slice(arr, arg1, arg2) {
  const newArr = arr.slice(arg1, arg2);
  return _freeze(newArr);
};

['map', 'filter'].forEach(methodName => {
  exports[methodName] = function (fn, arr) {
    const newArr = arr[methodName](fn);
    return _freeze(newArr);
  };

  exports[methodName].displayName = 'icepick.' + methodName;
});

exports.extend = exports.assign = function assign(obj, ...objs) {
  const newObj = objs.reduce(singleAssign, obj);
  return _freeze(newObj);
};

function singleAssign(obj1, obj2) {
  return Object.keys(obj2).reduce((obj, key) => {
    return i.assoc(obj, key, obj2[key]);
  }, obj1);
}

exports.merge = merge;

function merge(target, source, resolver) {
  if (target == null || source == null) {
    return target;
  }

  return Object.keys(source).reduce((obj, key) => {
    const sourceVal = source[key];
    const targetVal = obj[key];
    const resolvedSourceVal = resolver ? resolver(targetVal, sourceVal, key) : sourceVal;

    if (weCareAbout(sourceVal) && weCareAbout(targetVal)) {
      // if they are both frozen and reference equal, assume they are deep equal
      if (resolvedSourceVal === targetVal && ("production" === 'production' || Object.isFrozen(resolvedSourceVal) && Object.isFrozen(targetVal))) {
        return obj;
      }

      if (Array.isArray(sourceVal)) {
        return i.assoc(obj, key, resolvedSourceVal);
      } // recursively merge pairs of objects


      return assocIfDifferent(obj, key, merge(targetVal, resolvedSourceVal, resolver));
    } // primitive values, stuff with prototypes


    return assocIfDifferent(obj, key, resolvedSourceVal);
  }, target);
}

function assocIfDifferent(target, key, value) {
  if (target[key] === value) {
    return target;
  }

  return i.assoc(target, key, value);
}

const chainProto = {
  value: function value() {
    return this.val;
  },
  thru: function thru(fn) {
    this.val = freezeIfNeeded(fn(this.val));
    return this;
  }
};
Object.keys(exports).forEach(methodName => {
  if (methodName.match(/^(map|filter)$/)) {
    chainProto[methodName] = function (fn) {
      this.val = exports[methodName](fn, this.val);
      return this;
    };

    return;
  }

  chainProto[methodName] = function (...args) {
    this.val = exports[methodName](this.val, ...args);
    return this;
  };
});

exports.chain = function chain(val) {
  const wrapped = Object.create(chainProto);
  wrapped.val = val;
  return wrapped;
}; // for testing


if ("production" !== 'development' && "production" !== 'production') {
  exports._weCareAbout = weCareAbout;
}
},{}],"ZFN1":[function(require,module,exports) {
"use strict"; /////////////////////
// better than Readonly<>

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"puWC":[function(require,module,exports) {
"use strict"; /////////////////////
// pb. error TS7053: Element implicitly has an 'any' type because expression of type '3' can't be used to index type 'Number'.

Object.defineProperty(exports, "__esModule", {
  value: true
}); /////////////////////
},{}],"I09G":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
}); /////////////////////
},{}],"dIqy":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./immutable"), exports);

__exportStar(require("./json"), exports);

__exportStar(require("./misc"), exports);

__exportStar(require("./storage"), exports);
},{"./immutable":"ZFN1","./json":"puWC","./misc":"I09G","./storage":"I09G"}],"xg5H":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.are_ustate_revision_requirements_met = exports.complete_or_cancel_eager_mutation_propagating_possible_child_mutation = exports.get_mutable_copy = exports.ImmutabilityEnforcer = exports.Immutable = exports.enforce_immutability = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var icepick_1 = __importDefault(require("icepick"));

var type_guards_1 = require("./type-guards");

var selectors_1 = require("./selectors");

var enforce_immutability = function (state) {
  return icepick_1.default.freeze(state);
};

exports.enforce_immutability = enforce_immutability; //const enforce_immutability: ImmutabilityEnforcer = (state: T): Immutable<T> => state
//const enforce_immutability: ImmutabilityEnforcer = <T>(state: T): Immutable<T> => deep_freeze<T>(state)

var ts_types_1 = require("@offirmo-private/ts-types"); // for convenience


Object.defineProperty(exports, "Immutable", {
  enumerable: true,
  get: function () {
    return ts_types_1.Immutable;
  }
});
Object.defineProperty(exports, "ImmutabilityEnforcer", {
  enumerable: true,
  get: function () {
    return ts_types_1.ImmutabilityEnforcer;
  }
});

function get_mutable_copy(state) {
  return icepick_1.default.thaw(state);
}

exports.get_mutable_copy = get_mutable_copy; // Use this in case of reducing a child state while unsure whether this child state has changed or not.
// - the best case is to return 'previous' = no mutation
// - if a child state's revision increased, increase ours and keep the mutation
// - it's possible that an "update to now" was invoked, it's ok to ignore that if that's the only change
// - this fn will intentionally NOT go deeper than 1st level, each state is responsible for itself!
// - this fn will intentionally NOT handle time changes, this should be done separately at the end! (separate update_to_now call)

function complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous, current, updated, debug_id) {
  if (updated === void 0) {
    updated = previous;
  }

  if (debug_id === void 0) {
    debug_id = 'unknown src';
  }

  var PREFIX = "CoCEMPPCM(" + debug_id + ")";
  tiny_invariant_1.default(previous, PREFIX + ": should have previous");
  /*if (!previous)
      return current*/

  if (current === previous) return previous;
  if (current === updated) return previous;

  if (type_guards_1.is_UTBundle(current)) {
    // this is a more advanced state
    tiny_invariant_1.default(type_guards_1.is_UTBundle(previous), PREFIX + ": previous also has bundle data structure!");
    tiny_invariant_1.default(type_guards_1.is_UTBundle(updated), PREFIX + ": updated also has bundle data structure!");
    var final_u_state = complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous[0], current[0], updated === null || updated === void 0 ? void 0 : updated[0]);
    var final_t_state = complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous[1], current[1], updated === null || updated === void 0 ? void 0 : updated[1]);
    if (final_u_state === previous[0] && final_t_state === previous[1]) return previous;
    if (final_u_state === updated[0] && final_t_state === updated[1]) return previous;
    return exports.enforce_immutability([final_u_state, final_t_state]);
  } else if (type_guards_1.is_RootState(current)) {
    // this is a more advanced state
    tiny_invariant_1.default(type_guards_1.is_RootState(previous), PREFIX + ": previous also has root data structure!");
    tiny_invariant_1.default(type_guards_1.is_RootState(updated), PREFIX + ": updated also has root data structure!");
    var final_u_state = complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous.u_state, current.u_state, updated.u_state, debug_id + '.u_state');
    var final_t_state = complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous.t_state, current.t_state, updated.t_state, debug_id + '.t_state');
    if (final_u_state === previous.u_state && final_t_state === previous.t_state) return previous;
    if (final_u_state === updated.u_state && final_t_state === updated.t_state) return previous;
    return exports.enforce_immutability(__assign(__assign({}, current), {
      u_state: final_u_state,
      t_state: final_t_state
    }));
  } //let is_t_state = is_TState(current)


  tiny_invariant_1.default(type_guards_1.is_UState(current) || type_guards_1.is_TState(current), PREFIX + ": current has U/TState data structure!"); // unneeded except for helping TS type inference

  tiny_invariant_1.default(type_guards_1.is_UState(previous) && type_guards_1.is_UState(updated) && type_guards_1.is_UState(current) || type_guards_1.is_TState(previous) && type_guards_1.is_TState(updated) && type_guards_1.is_TState(current), PREFIX + ": current+previous+updated have the same U/TState data structure!");
  tiny_invariant_1.default(previous.revision === updated.revision, PREFIX + ": previous & updated should have the same revision");
  tiny_invariant_1.default(current.revision >= previous.revision, PREFIX + ": current >= previous revision");
  if (current.revision !== previous.revision) throw new Error(PREFIX + ": revision already incremented! This call is not needed since you\u2019re sure there was a change!");
  var typed_previous = previous;
  var typed_updated = updated;
  var typed_current = current;
  var has_child_revision_increment = false; //let has_non_child_key_change = false
  //let has_timestamp_change: boolean | undefined = undefined

  for (var k in typed_current) {
    var previous_has_revision = type_guards_1.is_WithRevision(typed_updated[k]);
    var current_has_revision = type_guards_1.is_WithRevision(typed_current[k]);
    tiny_invariant_1.default(previous_has_revision === current_has_revision, PREFIX + "/" + k + ": revisioning should be coherent!");

    if (!current_has_revision) {
      //let has_change = typed_updated[k] !== typed_current[k]
      //has_non_child_key_change ||= has_change
      tiny_invariant_1.default(typed_updated[k] === typed_current[k], PREFIX + "/" + k + ": manual change on Base/UState non-child key seen! This call is not needed since you\u2019re sure there was a change!");
    }

    var previous_revision = selectors_1.get_revision_loose(typed_previous[k]);
    var updated_revision = selectors_1.get_revision_loose(typed_updated[k]);
    tiny_invariant_1.default(previous_revision === updated_revision, PREFIX + "/" + k + ": previous & updated child should have the same revision");
    var current_revision = selectors_1.get_revision_loose(typed_current[k]);

    if (current_revision !== updated_revision) {
      if (current_revision !== updated_revision + 1) {// NO! It may be normal for a sub to have been stimulated more than once,
        // ex. gained 3 achievements
        //throw new Error(...)
      }

      has_child_revision_increment = true;
      break;
    }
  }

  if (!has_child_revision_increment) return previous;
  return exports.enforce_immutability(__assign(__assign({}, current), {
    revision: selectors_1.get_revision(current) + 1
  }));
}

exports.complete_or_cancel_eager_mutation_propagating_possible_child_mutation = complete_or_cancel_eager_mutation_propagating_possible_child_mutation; // check if the state is still in the revision we expect
// ex. for an action, check it's still valid, ex. object already sold?

function are_ustate_revision_requirements_met(state, requirements) {
  if (requirements === void 0) {
    requirements = {};
  }

  for (var k in requirements) {
    tiny_invariant_1.default(state.u_state[k], "are_ustate_revision_requirements_met(): sub state not found: \"" + k + "\"!");
    var current_revision = state.u_state[k].revision;
    tiny_invariant_1.default(Number.isInteger(current_revision), "are_ustate_revision_requirements_met(): sub state has no/invalid revision: \"" + k + "\"!");
    if (current_revision !== requirements[k]) return false;
  }

  return true;
}

exports.are_ustate_revision_requirements_met = are_ustate_revision_requirements_met;
},{"tiny-invariant":"VYmh","icepick":"WbB7","./type-guards":"lgCG","./selectors":"UzCr","@offirmo-private/ts-types":"dIqy"}],"PmVE":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./type-guards"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./selectors--fluid"), exports);

__exportStar(require("./comparators"), exports);

__exportStar(require("./migration"), exports);

__exportStar(require("./utils"), exports);
},{"./types":"MKE5","./type-guards":"lgCG","./selectors":"UzCr","./selectors--fluid":"qpJp","./comparators":"axP9","./migration":"TRTF","./utils":"xg5H"}],"OBx0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WeaponPartType = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var WeaponPartType = typescript_string_enums_1.Enum('base', 'qualifier1', 'qualifier2');
exports.WeaponPartType = WeaponPartType; /////////////////////
},{"typescript-string-enums":"qyCc"}],"KGKM":[function(require,module,exports) {
"use strict"; ////////////////////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MAX_ENHANCEMENT_LEVEL = exports.MIN_ENHANCEMENT_LEVEL = exports.LIB = void 0;
var LIB = '@oh-my-rpg/logic-weapons';
exports.LIB = LIB; //const SCHEMA_VERSION: number = 2

var MIN_ENHANCEMENT_LEVEL = 0;
exports.MIN_ENHANCEMENT_LEVEL = MIN_ENHANCEMENT_LEVEL;
var MAX_ENHANCEMENT_LEVEL = 8;
exports.MAX_ENHANCEMENT_LEVEL = MAX_ENHANCEMENT_LEVEL; ////////////////////////////////////
},{}],"DYkz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InventorySlot = exports.ItemQuality = exports.ElementType = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////
// An element is everything which can be interacted with and/or has a rich tooltip
// ex. item, place, achievement, title...


var ElementType = typescript_string_enums_1.Enum('item', 'achievement_snapshot');
exports.ElementType = ElementType; /////////////////////

var ItemQuality = typescript_string_enums_1.Enum('common', 'uncommon', 'rare', 'epic', 'legendary', 'artifact');
exports.ItemQuality = ItemQuality;
var InventorySlot = typescript_string_enums_1.Enum('weapon', 'armor', 'none');
exports.InventorySlot = InventorySlot; /////////////////////
},{"typescript-string-enums":"qyCc"}],"zmCL":[function(require,module,exports) {
"use strict"; /////////////////////

var _a, _b;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MAX_LEVEL = exports.MIN_LEVEL = exports.ITEM_SLOTS_TO_INT = exports.ITEM_SLOTS = exports.ITEM_QUALITIES_TO_INT = exports.ITEM_QUALITIES = exports.LIB = exports.PRODUCT = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var types_1 = require("./types"); ///////


exports.PRODUCT = '@tbrpg';
exports.LIB = '@tbrpg/definitions'; ///////

exports.ITEM_QUALITIES = typescript_string_enums_1.Enum.keys(types_1.ItemQuality); // useful for ex. for sorting

exports.ITEM_QUALITIES_TO_INT = (_a = {}, _a[types_1.ItemQuality.common] = 6, _a[types_1.ItemQuality.uncommon] = 5, _a[types_1.ItemQuality.rare] = 4, _a[types_1.ItemQuality.epic] = 3, _a[types_1.ItemQuality.legendary] = 2, _a[types_1.ItemQuality.artifact] = 1, _a); ///////

exports.ITEM_SLOTS = typescript_string_enums_1.Enum.keys(types_1.InventorySlot).filter(function (s) {
  return s !== types_1.InventorySlot.none;
}); // useful for ex. for sorting

exports.ITEM_SLOTS_TO_INT = (_b = {}, _b[types_1.InventorySlot.weapon] = 1, _b[types_1.InventorySlot.armor] = 2, _b); ///////

exports.MIN_LEVEL = 1;
exports.MAX_LEVEL = 9999; /////////////////////
},{"typescript-string-enums":"qyCc","./types":"DYkz"}],"kRAK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.urlAlphabet = void 0;
// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped
// optimize the gzip compression for this alphabet.
let urlAlphabet = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';
exports.urlAlphabet = urlAlphabet;
},{}],"o1OJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "urlAlphabet", {
  enumerable: true,
  get: function () {
    return _index.urlAlphabet;
  }
});
exports.random = exports.customRandom = exports.customAlphabet = exports.nanoid = void 0;

var _index = require("./url-alphabet/index.js");

// This file replaces `index.js` in bundlers like webpack or Rollup,
// according to `browser` config in `package.json`.
if ("production" !== 'production') {
  // All bundlers will remove this block in the production bundle.
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative' && typeof crypto === 'undefined') {
    throw new Error('React Native does not have a built-in secure random generator. ' + 'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' + 'For secure IDs, import `react-native-get-random-values` ' + 'before Nano ID.');
  }

  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {
    throw new Error('Import file with `if (!window.crypto) window.crypto = window.msCrypto`' + ' before importing Nano ID to fix IE 11 support');
  }

  if (typeof crypto === 'undefined') {
    throw new Error('Your browser does not have secure random generator. ' + 'If you don’t need unpredictable IDs, you can use nanoid/non-secure.');
  }
}

let random = bytes => crypto.getRandomValues(new Uint8Array(bytes));

exports.random = random;

let customRandom = (alphabet, size, getRandom) => {
  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes
  // values closer to the alphabet size. The bitmask calculates the closest
  // `2^31 - 1` number, which exceeds the alphabet size.
  // For example, the bitmask for the alphabet size 30 is 31 (00011111).
  // `Math.clz32` is not used, because it is not available in browsers.
  let mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1; // Though, the bitmask solution is not perfect since the bytes exceeding
  // the alphabet size are refused. Therefore, to reliably generate the ID,
  // the random bytes redundancy has to be satisfied.
  // Note: every hardware random generator call is performance expensive,
  // because the system call for entropy collection takes a lot of time.
  // So, to avoid additional system calls, extra bytes are requested in advance.
  // Next, a step determines how many random bytes to generate.
  // The number of random bytes gets decided upon the ID size, mask,
  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance
  // according to benchmarks).
  // `-~f => Math.ceil(f)` if f is a float
  // `-~i => i + 1` if i is an integer

  let step = -~(1.6 * mask * size / alphabet.length);
  return () => {
    let id = '';

    while (true) {
      let bytes = getRandom(step); // A compact alternative for `for (var i = 0; i < step; i++)`.

      let j = step;

      while (j--) {
        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.
        id += alphabet[bytes[j] & mask] || '';
        if (id.length === size) return id;
      }
    }
  };
};

exports.customRandom = customRandom;

let customAlphabet = (alphabet, size) => customRandom(alphabet, size, random);

exports.customAlphabet = customAlphabet;

let nanoid = (size = 21) => {
  let id = '';
  let bytes = crypto.getRandomValues(new Uint8Array(size)); // A compact alternative for `for (var i = 0; i < step; i++)`.

  while (size--) {
    // It is incorrect to use bytes exceeding the alphabet size.
    // The following mask reduces the random byte in the 0-255 value
    // range to the 0-63 value range. Therefore, adding hacks, such
    // as empty string fallback or magic numbers, is unneccessary because
    // the bitmask trims bytes down to the alphabet size.
    let byte = bytes[size] & 63;

    if (byte < 36) {
      // `0-9a-z`
      id += byte.toString(36);
    } else if (byte < 62) {
      // `A-Z`
      id += (byte - 26).toString(36).toUpperCase();
    } else if (byte < 63) {
      id += '_';
    } else {
      id += '-';
    }
  }

  return id;
};

exports.nanoid = nanoid;
},{"./url-alphabet/index.js":"kRAK"}],"ZxbG":[function(require,module,exports) {
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],"xduo":[function(require,module,exports) {
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],"MPXn":[function(require,module,exports) {
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],"S1uF":[function(require,module,exports) {

var global = arguments[3];
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

},{"base64-js":"ZxbG","ieee754":"xduo","isarray":"MPXn","buffer":"S1uF"}],"TBA4":[function(require,module,exports) {

/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":"S1uF"}],"sVXi":[function(require,module,exports) {

var global = arguments[3];
var process = require("process");
'use strict'

// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

  var bytes = Buffer.allocUnsafe(size)

  if (size > 0) {  // getRandomValues fails on IE if size == 0
    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
      for (var generated = 0; generated < size; generated += MAX_BYTES) {
        // buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
      }
    } else {
      crypto.getRandomValues(bytes)
    }
  }

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

},{"safe-buffer":"TBA4","process":"r7L2"}],"eDTo":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],"ta4y":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;

if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};

function EventEmitter() {
  EventEmitter.init.call(this);
}

module.exports = EventEmitter;
module.exports.once = once; // Backwards-compat with node 0.10.x

EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.

var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function () {
    return defaultMaxListeners;
  },
  set: function (arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }

    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}; // Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.


EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }

  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];

  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);

  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

  if (doError) {
    var er;
    if (args.length > 0) er = args[0];

    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    } // At least give some kind of context to the user


    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];
  if (handler === undefined) return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);

    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;

  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object

      events = target._events;
    }

    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    } // Check for listener leak


    m = _getMaxListeners(target);

    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true; // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax

      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  checkListener(listener);
  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
}; // Emits a 'removeListener' event if and only if the listener was removed.


EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;
  checkListener(listener);
  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;

  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;

    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }

    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }

  return this;
};

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this; // not listening for removeListener, no need to emit

  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }

    return this;
  } // emit removeListener for all listeners on all events


  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;

    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }

    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }

  listeners = events[type];

  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }

  return this;
};

function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;

function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);

  for (var i = 0; i < n; ++i) copy[i] = arr[i];

  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) list[index] = list[index + 1];

  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);

  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }

  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }

      resolve([].slice.call(arguments));
    }

    ;
    eventTargetAgnosticAddListener(emitter, name, resolver, {
      once: true
    });

    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, {
        once: true
      });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }

      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}
},{}],"r1gt":[function(require,module,exports) {
module.exports = require('events').EventEmitter;
},{"events":"ta4y"}],"uGvY":[function(require,module,exports) {

'use strict';

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports = /*#__PURE__*/function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":"S1uF","util":"THnX"}],"RUe1":[function(require,module,exports) {
var process = require("process");
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
},{"process":"r7L2"}],"oMzp":[function(require,module,exports) {
'use strict';

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError = /*#__PURE__*/function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;
},{}],"xHpI":[function(require,module,exports) {
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":"oMzp"}],"ipk3":[function(require,module,exports) {
var global = arguments[3];

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

},{}],"Jgpn":[function(require,module,exports) {

var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
},{"util-deprecate":"ipk3","./internal/streams/stream":"r1gt","buffer":"S1uF","./internal/streams/destroy":"RUe1","./internal/streams/state":"xHpI","../errors":"oMzp","inherits":"eDTo","./_stream_duplex":"wdkA","process":"r7L2"}],"wdkA":[function(require,module,exports) {
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
},{"./_stream_readable":"zOgr","./_stream_writable":"Jgpn","inherits":"eDTo","process":"r7L2"}],"d6Kv":[function(require,module,exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":"TBA4"}],"TC1i":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":"oMzp"}],"Xeov":[function(require,module,exports) {
var process = require("process");
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this; // if we have detected an error in the meanwhile
    // reject straight away


    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this; // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to


  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
},{"./end-of-stream":"TC1i","process":"r7L2"}],"bZgn":[function(require,module,exports) {
module.exports = function () {
  throw new Error('Readable.from is not available in the browser');
};
},{}],"zOgr":[function(require,module,exports) {

var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
},{"events":"ta4y","./internal/streams/stream":"r1gt","buffer":"S1uF","util":"THnX","./internal/streams/buffer_list":"uGvY","./internal/streams/destroy":"RUe1","./internal/streams/state":"xHpI","../errors":"oMzp","inherits":"eDTo","./_stream_duplex":"wdkA","string_decoder/":"d6Kv","./internal/streams/async_iterator":"Xeov","./internal/streams/from":"bZgn","process":"r7L2"}],"GZKI":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":"oMzp","./_stream_duplex":"wdkA","inherits":"eDTo"}],"dmX2":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":"GZKI","inherits":"eDTo"}],"TE9o":[function(require,module,exports) {
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":"oMzp","./end-of-stream":"TC1i"}],"orOM":[function(require,module,exports) {
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
exports.finished = require('./lib/internal/streams/end-of-stream.js');
exports.pipeline = require('./lib/internal/streams/pipeline.js');
},{"./lib/_stream_readable.js":"zOgr","./lib/_stream_writable.js":"Jgpn","./lib/_stream_duplex.js":"wdkA","./lib/_stream_transform.js":"GZKI","./lib/_stream_passthrough.js":"dmX2","./lib/internal/streams/end-of-stream.js":"TC1i","./lib/internal/streams/pipeline.js":"TE9o"}],"iQE8":[function(require,module,exports) {

'use strict';

var Buffer = require('safe-buffer').Buffer;

var Transform = require('readable-stream').Transform;

var inherits = require('inherits');

function throwIfNotStringOrBuffer(val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer');
  }
}

function HashBase(blockSize) {
  Transform.call(this);
  this._block = Buffer.allocUnsafe(blockSize);
  this._blockSize = blockSize;
  this._blockOffset = 0;
  this._length = [0, 0, 0, 0];
  this._finalized = false;
}

inherits(HashBase, Transform);

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null;

  try {
    this.update(chunk, encoding);
  } catch (err) {
    error = err;
  }

  callback(error);
};

HashBase.prototype._flush = function (callback) {
  var error = null;

  try {
    this.push(this.digest());
  } catch (err) {
    error = err;
  }

  callback(error);
};

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data');
  if (this._finalized) throw new Error('Digest already called');
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding); // consume data

  var block = this._block;
  var offset = 0;

  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++];

    this._update();

    this._blockOffset = 0;
  }

  while (offset < data.length) block[this._blockOffset++] = data[offset++]; // update length


  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry;
    carry = this._length[j] / 0x0100000000 | 0;
    if (carry > 0) this._length[j] -= 0x0100000000 * carry;
  }

  return this;
};

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented');
};

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called');
  this._finalized = true;

  var digest = this._digest();

  if (encoding !== undefined) digest = digest.toString(encoding); // reset state

  this._block.fill(0);

  this._blockOffset = 0;

  for (var i = 0; i < 4; ++i) this._length[i] = 0;

  return digest;
};

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented');
};

module.exports = HashBase;
},{"safe-buffer":"TBA4","readable-stream":"orOM","inherits":"eDTo"}],"PGlp":[function(require,module,exports) {

'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')
var Buffer = require('safe-buffer').Buffer

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.allocUnsafe(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

},{"inherits":"eDTo","hash-base":"iQE8","safe-buffer":"TBA4"}],"ohST":[function(require,module,exports) {

'use strict'
var Buffer = require('buffer').Buffer
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

},{"buffer":"S1uF","inherits":"eDTo","hash-base":"iQE8"}],"Rrji":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":"TBA4"}],"tdOC":[function(require,module,exports) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"inherits":"eDTo","./hash":"Rrji","safe-buffer":"TBA4"}],"Pmds":[function(require,module,exports) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"inherits":"eDTo","./hash":"Rrji","safe-buffer":"TBA4"}],"OywE":[function(require,module,exports) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"inherits":"eDTo","./hash":"Rrji","safe-buffer":"TBA4"}],"NAeR":[function(require,module,exports) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"inherits":"eDTo","./sha256":"OywE","./hash":"Rrji","safe-buffer":"TBA4"}],"MqNB":[function(require,module,exports) {

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"inherits":"eDTo","./hash":"Rrji","safe-buffer":"TBA4"}],"C2sQ":[function(require,module,exports) {

var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"inherits":"eDTo","./sha512":"MqNB","./hash":"Rrji","safe-buffer":"TBA4"}],"F31p":[function(require,module,exports) {
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":"tdOC","./sha1":"Pmds","./sha224":"NAeR","./sha256":"OywE","./sha384":"C2sQ","./sha512":"MqNB"}],"vUt0":[function(require,module,exports) {
var process = require("process");
'use strict';

if (typeof process === 'undefined' ||
    !process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


},{"process":"r7L2"}],"qPBI":[function(require,module,exports) {
module.exports = require('events').EventEmitter;

},{"events":"ta4y"}],"DNcD":[function(require,module,exports) {

/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":"S1uF"}],"ozQX":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

},{"buffer":"S1uF"}],"Z9yl":[function(require,module,exports) {

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
var util = require('util');

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}
},{"safe-buffer":"DNcD","util":"THnX"}],"sCw2":[function(require,module,exports) {
'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":"vUt0"}],"R08z":[function(require,module,exports) {
var process = require("process");

var global = arguments[3];
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';
/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/


module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var asyncWrite = !true && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/

var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var util = Object.create(require('core-util-is'));
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/


var Buffer = require('safe-buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/


var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  var isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm; // cast to ints.

  this.highWaterMark = Math.floor(this.highWaterMark); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.

  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end'); // TODO: defer error events consistently everywhere, not just the cb

  stream.emit('error', er);
  pna.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }

  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }

  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;
  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      stream.emit('error', err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }

  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
},{"process-nextick-args":"vUt0","core-util-is":"ozQX","inherits":"eDTo","util-deprecate":"ipk3","./internal/streams/stream":"qPBI","safe-buffer":"DNcD","./internal/streams/destroy":"sCw2","./_stream_duplex":"ELng","process":"r7L2"}],"ELng":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = Object.create(require('core-util-is'));
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};
},{"process-nextick-args":"vUt0","core-util-is":"ozQX","inherits":"eDTo","./_stream_readable":"Vi6R","./_stream_writable":"R08z"}],"Ixwc":[function(require,module,exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":"DNcD"}],"Vi6R":[function(require,module,exports) {

var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = Object.create(require('core-util-is'));
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
},{"process-nextick-args":"vUt0","isarray":"MPXn","events":"ta4y","./internal/streams/stream":"qPBI","safe-buffer":"DNcD","core-util-is":"ozQX","inherits":"eDTo","util":"THnX","./internal/streams/BufferList":"Z9yl","./internal/streams/destroy":"sCw2","./_stream_duplex":"ELng","string_decoder/":"Ixwc","process":"r7L2"}],"NOP1":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = Object.create(require('core-util-is'));
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":"ELng","core-util-is":"ozQX","inherits":"eDTo"}],"bJ6J":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = Object.create(require('core-util-is'));
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":"NOP1","core-util-is":"ozQX","inherits":"eDTo"}],"CIu4":[function(require,module,exports) {
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_readable.js":"Vi6R","./lib/_stream_writable.js":"R08z","./lib/_stream_duplex.js":"ELng","./lib/_stream_transform.js":"NOP1","./lib/_stream_passthrough.js":"bJ6J"}],"arav":[function(require,module,exports) {
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":"R08z"}],"NdbM":[function(require,module,exports) {
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":"ELng"}],"y0N0":[function(require,module,exports) {
module.exports = require('./readable').Transform

},{"./readable":"CIu4"}],"Hkkq":[function(require,module,exports) {
module.exports = require('./readable').PassThrough

},{"./readable":"CIu4"}],"hb2Y":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":"ta4y","inherits":"eDTo","readable-stream/readable.js":"CIu4","readable-stream/writable.js":"arav","readable-stream/duplex.js":"NdbM","readable-stream/transform.js":"y0N0","readable-stream/passthrough.js":"Hkkq"}],"VqTS":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"safe-buffer":"TBA4","stream":"hb2Y","string_decoder":"d6Kv","inherits":"eDTo"}],"rr2W":[function(require,module,exports) {
'use strict'
var inherits = require('inherits')
var MD5 = require('md5.js')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Base = require('cipher-base')

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}

},{"inherits":"eDTo","md5.js":"PGlp","ripemd160":"ohST","sha.js":"F31p","cipher-base":"VqTS"}],"IaNE":[function(require,module,exports) {

'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"inherits":"eDTo","safe-buffer":"TBA4","cipher-base":"VqTS"}],"YTsK":[function(require,module,exports) {
var MD5 = require('md5.js')

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}

},{"md5.js":"PGlp"}],"H6KV":[function(require,module,exports) {

'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"inherits":"eDTo","./legacy":"IaNE","cipher-base":"VqTS","safe-buffer":"TBA4","create-hash/md5":"YTsK","ripemd160":"ohST","sha.js":"F31p"}],"CsD0":[function(require,module,exports) {
module.exports = {
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}
;
},{}],"RlUu":[function(require,module,exports) {
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":"CsD0"}],"xFBm":[function(require,module,exports) {
var MAX_ALLOC = Math.pow(2, 30) - 1; // default in iojs

module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number');
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations');
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number');
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {
    /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length');
  }
};
},{}],"EYTn":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
var defaultEncoding;
/* istanbul ignore next */

if (global.process && global.process.browser) {
  defaultEncoding = 'utf-8';
} else if (global.process && global.process.version) {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10);
  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary';
} else {
  defaultEncoding = 'utf-8';
}

module.exports = defaultEncoding;
},{"process":"r7L2"}],"KZl6":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer;

module.exports = function (thing, encoding, name) {
  if (Buffer.isBuffer(thing)) {
    return thing;
  } else if (typeof thing === 'string') {
    return Buffer.from(thing, encoding);
  } else if (ArrayBuffer.isView(thing)) {
    return Buffer.from(thing.buffer);
  } else {
    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView');
  }
};
},{"safe-buffer":"TBA4"}],"F5Lu":[function(require,module,exports) {

var md5 = require('create-hash/md5');

var RIPEMD160 = require('ripemd160');

var sha = require('sha.js');

var Buffer = require('safe-buffer').Buffer;

var checkParameters = require('./precondition');

var defaultEncoding = require('./default-encoding');

var toBuffer = require('./to-buffer');

var ZEROS = Buffer.alloc(128);
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
};

function Hmac(alg, key, saltLen) {
  var hash = getDigest(alg);
  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;

  if (key.length > blocksize) {
    key = hash(key);
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize);
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36;
    opad[i] = key[i] ^ 0x5C;
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);
  ipad.copy(ipad1, 0, 0, blocksize);
  this.ipad1 = ipad1;
  this.ipad2 = ipad;
  this.opad = opad;
  this.alg = alg;
  this.blocksize = blocksize;
  this.hash = hash;
  this.size = sizes[alg];
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize);
  var h = this.hash(ipad);
  h.copy(this.opad, this.blocksize);
  return this.hash(this.opad);
};

function getDigest(alg) {
  function shaFunc(data) {
    return sha(alg).update(data).digest();
  }

  function rmd160Func(data) {
    return new RIPEMD160().update(data).digest();
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func;
  if (alg === 'md5') return md5;
  return shaFunc;
}

function pbkdf2(password, salt, iterations, keylen, digest) {
  checkParameters(iterations, keylen);
  password = toBuffer(password, defaultEncoding, 'Password');
  salt = toBuffer(salt, defaultEncoding, 'Salt');
  digest = digest || 'sha1';
  var hmac = new Hmac(digest, password, salt.length);
  var DK = Buffer.allocUnsafe(keylen);
  var block1 = Buffer.allocUnsafe(salt.length + 4);
  salt.copy(block1, 0, 0, salt.length);
  var destPos = 0;
  var hLen = sizes[digest];
  var l = Math.ceil(keylen / hLen);

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length);
    var T = hmac.run(block1, hmac.ipad1);
    var U = T;

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2);

      for (var k = 0; k < hLen; k++) T[k] ^= U[k];
    }

    T.copy(DK, destPos);
    destPos += hLen;
  }

  return DK;
}

module.exports = pbkdf2;
},{"create-hash/md5":"YTsK","ripemd160":"ohST","sha.js":"F31p","safe-buffer":"TBA4","./precondition":"xFBm","./default-encoding":"EYTn","./to-buffer":"KZl6"}],"tJdn":[function(require,module,exports) {

var global = arguments[3];
var Buffer = require('safe-buffer').Buffer;

var checkParameters = require('./precondition');

var defaultEncoding = require('./default-encoding');

var sync = require('./sync');

var toBuffer = require('./to-buffer');

var ZERO_BUF;
var subtle = global.crypto && global.crypto.subtle;
var toBrowser = {
  sha: 'SHA-1',
  'sha-1': 'SHA-1',
  sha1: 'SHA-1',
  sha256: 'SHA-256',
  'sha-256': 'SHA-256',
  sha384: 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  sha512: 'SHA-512'
};
var checks = [];

function checkNative(algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false);
  }

  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false);
  }

  if (checks[algo] !== undefined) {
    return checks[algo];
  }

  ZERO_BUF = ZERO_BUF || Buffer.alloc(8);
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function () {
    return true;
  }).catch(function () {
    return false;
  });
  checks[algo] = prom;
  return prom;
}

var nextTick;

function getNextTick() {
  if (nextTick) {
    return nextTick;
  }

  if (global.process && global.process.nextTick) {
    nextTick = global.process.nextTick;
  } else if (global.queueMicrotask) {
    nextTick = global.queueMicrotask;
  } else if (global.setImmediate) {
    nextTick = global.setImmediate;
  } else {
    nextTick = global.setTimeout;
  }

  return nextTick;
}

function browserPbkdf2(password, salt, iterations, length, algo) {
  return subtle.importKey('raw', password, {
    name: 'PBKDF2'
  }, false, ['deriveBits']).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3);
  }).then(function (res) {
    return Buffer.from(res);
  });
}

function resolvePromise(promise, callback) {
  promise.then(function (out) {
    getNextTick()(function () {
      callback(null, out);
    });
  }, function (e) {
    getNextTick()(function () {
      callback(e);
    });
  });
}

module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest;
    digest = undefined;
  }

  digest = digest || 'sha1';
  var algo = toBrowser[digest.toLowerCase()];

  if (!algo || typeof global.Promise !== 'function') {
    getNextTick()(function () {
      var out;

      try {
        out = sync(password, salt, iterations, keylen, digest);
      } catch (e) {
        return callback(e);
      }

      callback(null, out);
    });
    return;
  }

  checkParameters(iterations, keylen);
  password = toBuffer(password, defaultEncoding, 'Password');
  salt = toBuffer(salt, defaultEncoding, 'Salt');
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2');
  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo);
    return sync(password, salt, iterations, keylen, digest);
  }), callback);
};
},{"safe-buffer":"TBA4","./precondition":"xFBm","./default-encoding":"EYTn","./sync":"F5Lu","./to-buffer":"KZl6"}],"fCXZ":[function(require,module,exports) {
exports.pbkdf2 = require('./lib/async');
exports.pbkdf2Sync = require('./lib/sync');
},{"./lib/async":"tJdn","./lib/sync":"F5Lu"}],"AzRd":[function(require,module,exports) {
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],"nPIO":[function(require,module,exports) {
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],"C50U":[function(require,module,exports) {
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":"nPIO"}],"q1pT":[function(require,module,exports) {
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var utils = require('./utils');
var Cipher = require('./cipher');

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"minimalistic-assert":"nPIO","inherits":"eDTo","./utils":"AzRd","./cipher":"C50U"}],"dTT2":[function(require,module,exports) {
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"minimalistic-assert":"nPIO","inherits":"eDTo"}],"L0Vs":[function(require,module,exports) {
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var Cipher = require('./cipher');
var DES = require('./des');

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"minimalistic-assert":"nPIO","inherits":"eDTo","./cipher":"C50U","./des":"q1pT"}],"msB4":[function(require,module,exports) {
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/utils":"AzRd","./des/cipher":"C50U","./des/des":"q1pT","./des/cbc":"dTT2","./des/ede":"L0Vs"}],"Bb2Z":[function(require,module,exports) {

var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}

},{"cipher-base":"VqTS","des.js":"msB4","inherits":"eDTo","safe-buffer":"TBA4"}],"Pm0C":[function(require,module,exports) {
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],"XX1D":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

},{"buffer":"S1uF"}],"nk5T":[function(require,module,exports) {
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":"XX1D"}],"mqdz":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"safe-buffer":"TBA4","buffer-xor":"XX1D"}],"HNqa":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":"TBA4"}],"kEZw":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":"TBA4"}],"u2p4":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"buffer-xor":"XX1D","buffer":"S1uF"}],"LSdv":[function(require,module,exports) {
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],"eHLY":[function(require,module,exports) {

var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"buffer-xor":"XX1D","safe-buffer":"TBA4","../incr32":"LSdv"}],"ROgM":[function(require,module,exports) {
module.exports = {
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}
;
},{}],"KVfU":[function(require,module,exports) {
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./ecb":"Pm0C","./cbc":"nk5T","./cfb":"mqdz","./cfb8":"HNqa","./cfb1":"kEZw","./ofb":"u2p4","./ctr":"eHLY","./list.json":"ROgM"}],"yFx7":[function(require,module,exports) {

// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":"TBA4"}],"xybl":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":"TBA4"}],"Ytco":[function(require,module,exports) {

var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":"yFx7","safe-buffer":"TBA4","cipher-base":"VqTS","inherits":"eDTo","./ghash":"xybl","buffer-xor":"XX1D","./incr32":"LSdv"}],"UoW9":[function(require,module,exports) {

var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":"yFx7","safe-buffer":"TBA4","cipher-base":"VqTS","inherits":"eDTo"}],"d16N":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"safe-buffer":"TBA4","md5.js":"PGlp"}],"gAw1":[function(require,module,exports) {

var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./modes":"KVfU","./authCipher":"Ytco","safe-buffer":"TBA4","./streamCipher":"UoW9","cipher-base":"VqTS","./aes":"yFx7","evp_bytestokey":"d16N","inherits":"eDTo"}],"ZEuj":[function(require,module,exports) {

var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./authCipher":"Ytco","safe-buffer":"TBA4","./modes":"KVfU","./streamCipher":"UoW9","cipher-base":"VqTS","./aes":"yFx7","evp_bytestokey":"d16N","inherits":"eDTo"}],"iz4d":[function(require,module,exports) {
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./encrypter":"gAw1","./decrypter":"ZEuj","./modes/list.json":"ROgM"}],"f8fE":[function(require,module,exports) {
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],"EpYe":[function(require,module,exports) {
var DES = require('browserify-des')
var aes = require('browserify-aes/browser')
var aesModes = require('browserify-aes/modes')
var desModes = require('browserify-des/modes')
var ebtk = require('evp_bytestokey')

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-des":"Bb2Z","browserify-aes/browser":"iz4d","browserify-aes/modes":"KVfU","browserify-des/modes":"f8fE","evp_bytestokey":"d16N"}],"RNlP":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = require('buffer').Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":"THnX"}],"VVa7":[function(require,module,exports) {
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":"THnX"}],"hGnK":[function(require,module,exports) {
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":"RNlP","brorand":"VVa7"}],"yJXb":[function(require,module,exports) {
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"randombytes":"sVXi","bn.js":"RNlP","miller-rabin":"hGnK"}],"IuIS":[function(require,module,exports) {
module.exports = {
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
};
},{}],"D78Q":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

},{"bn.js":"RNlP","miller-rabin":"hGnK","./generatePrime":"yJXb","randombytes":"sVXi","buffer":"S1uF"}],"tEBT":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

},{"./lib/generatePrime":"yJXb","./lib/primes.json":"IuIS","./lib/dh":"D78Q","buffer":"S1uF"}],"ILI2":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var BN = require('bn.js')
var randomBytes = require('randombytes')

function blind (priv) {
  var r = getr(priv)
  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()
  return { blinder: blinder, unblinder: r.invm(priv.modulus) }
}

function getr (priv) {
  var len = priv.modulus.byteLength()
  var r
  do {
    r = new BN(randomBytes(len))
  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))
  return r
}

function crt (msg, priv) {
  var blinds = blind(priv)
  var len = priv.modulus.byteLength()
  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)
  var c1 = blinded.toRed(BN.mont(priv.prime1))
  var c2 = blinded.toRed(BN.mont(priv.prime2))
  var qinv = priv.coefficient
  var p = priv.prime1
  var q = priv.prime2
  var m1 = c1.redPow(priv.exponent1).fromRed()
  var m2 = c2.redPow(priv.exponent2).fromRed()
  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)
  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)
}
crt.getr = getr

module.exports = crt

},{"bn.js":"RNlP","randombytes":"sVXi","buffer":"S1uF"}],"x1p3":[function(require,module,exports) {
module.exports = {
  "name": "elliptic",
  "version": "6.5.4",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "files": [
    "lib"
  ],
  "scripts": {
    "lint": "eslint lib test",
    "lint:fix": "npm run lint -- --fix",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "test": "npm run lint && npm run unit",
    "version": "grunt dist && git add dist/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:indutny/elliptic"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": "Fedor Indutny <fedor@indutny.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "brfs": "^2.0.2",
    "coveralls": "^3.1.0",
    "eslint": "^7.6.0",
    "grunt": "^1.2.1",
    "grunt-browserify": "^5.3.0",
    "grunt-cli": "^1.3.2",
    "grunt-contrib-connect": "^3.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^5.0.0",
    "grunt-mocha-istanbul": "^5.0.2",
    "grunt-saucelabs": "^9.0.1",
    "istanbul": "^0.4.5",
    "mocha": "^8.0.1"
  },
  "dependencies": {
    "bn.js": "^4.11.9",
    "brorand": "^1.1.0",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.1",
    "inherits": "^2.0.4",
    "minimalistic-assert": "^1.0.1",
    "minimalistic-crypto-utils": "^1.0.1"
  }
}
;
},{}],"A0BQ":[function(require,module,exports) {
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],"EY2C":[function(require,module,exports) {
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":"RNlP","minimalistic-assert":"nPIO","minimalistic-crypto-utils":"A0BQ"}],"p15X":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"bn.js":"RNlP","../utils":"EY2C"}],"CS3N":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../utils":"EY2C","bn.js":"RNlP","inherits":"eDTo","./base":"p15X"}],"oPtz":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var utils = require('../utils');

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"bn.js":"RNlP","inherits":"eDTo","./base":"p15X","../utils":"EY2C"}],"ftLD":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../utils":"EY2C","bn.js":"RNlP","inherits":"eDTo","./base":"p15X"}],"HZLf":[function(require,module,exports) {
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":"p15X","./short":"CS3N","./mont":"oPtz","./edwards":"ftLD"}],"FL7L":[function(require,module,exports) {
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"minimalistic-assert":"nPIO","inherits":"eDTo"}],"ff7a":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":"FL7L","minimalistic-assert":"nPIO"}],"qEP6":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":"FL7L"}],"cdi3":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../utils":"FL7L","../common":"ff7a","./common":"qEP6"}],"bGt1":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../utils":"FL7L","../common":"ff7a","./common":"qEP6","minimalistic-assert":"nPIO"}],"k8fl":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":"FL7L","./256":"bGt1"}],"VJb4":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../utils":"FL7L","../common":"ff7a","minimalistic-assert":"nPIO"}],"Boqn":[function(require,module,exports) {
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":"FL7L","./512":"VJb4"}],"BmRW":[function(require,module,exports) {
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":"cdi3","./sha/224":"k8fl","./sha/256":"bGt1","./sha/384":"Boqn","./sha/512":"VJb4"}],"SsAt":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./utils":"FL7L","./common":"ff7a"}],"hUob":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":"FL7L","minimalistic-assert":"nPIO"}],"YE1V":[function(require,module,exports) {
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/utils":"FL7L","./hash/common":"ff7a","./hash/sha":"BmRW","./hash/ripemd":"SsAt","./hash/hmac":"hUob"}],"X8xU":[function(require,module,exports) {
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
      ],
    ],
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
      ],
    ],
  },
};

},{}],"EYXP":[function(require,module,exports) {
'use strict';

var curves = exports;

var hash = require('hash.js');
var curve = require('./curve');
var utils = require('./utils');

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});

},{"hash.js":"YE1V","./curve":"HZLf","./utils":"EY2C","./precomputed/secp256k1":"X8xU"}],"rNhj":[function(require,module,exports) {
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":"YE1V","minimalistic-crypto-utils":"A0BQ","minimalistic-assert":"nPIO"}],"hXyr":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"bn.js":"RNlP","../utils":"EY2C"}],"RzAb":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');

var utils = require('../utils');
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"bn.js":"RNlP","../utils":"EY2C"}],"sTWT":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var utils = require('../utils');
var curves = require('../curves');
var rand = require('brorand');
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(Object.prototype.hasOwnProperty.call(curves, options),
      'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (;;) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"bn.js":"RNlP","hmac-drbg":"rNhj","../utils":"EY2C","../curves":"EYXP","brorand":"VVa7","./key":"hXyr","./signature":"RzAb"}],"PAY0":[function(require,module,exports) {
'use strict';

var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../utils":"EY2C"}],"IvaI":[function(require,module,exports) {
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength),
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"bn.js":"RNlP","../utils":"EY2C"}],"NVf1":[function(require,module,exports) {
'use strict';

var hash = require('hash.js');
var curves = require('../curves');
var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
    .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"hash.js":"YE1V","../curves":"EYXP","../utils":"EY2C","./key":"PAY0","./signature":"IvaI"}],"NLIU":[function(require,module,exports) {
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":"x1p3","./elliptic/utils":"EY2C","brorand":"VVa7","./elliptic/curve":"HZLf","./elliptic/curves":"EYXP","./elliptic/ec":"sTWT","./elliptic/eddsa":"NVf1"}],"wzU4":[function(require,module,exports) {

var process = require("process");
/* eslint-disable node/no-deprecated-api */

'use strict'

var buffer = require('buffer')
var Buffer = buffer.Buffer

var safer = {}

var key

for (key in buffer) {
  if (!buffer.hasOwnProperty(key)) continue
  if (key === 'SlowBuffer' || key === 'Buffer') continue
  safer[key] = buffer[key]
}

var Safer = safer.Buffer = {}
for (key in Buffer) {
  if (!Buffer.hasOwnProperty(key)) continue
  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue
  Safer[key] = Buffer[key]
}

safer.Buffer.prototype = Buffer.prototype

if (!Safer.from || Safer.from === Uint8Array.from) {
  Safer.from = function (value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)
    }
    if (value && typeof value.length === 'undefined') {
      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)
    }
    return Buffer(value, encodingOrOffset, length)
  }
}

if (!Safer.alloc) {
  Safer.alloc = function (size, fill, encoding) {
    if (typeof size !== 'number') {
      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)
    }
    if (size < 0 || size >= 2 * (1 << 30)) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"')
    }
    var buf = Buffer(size)
    if (!fill || fill.length === 0) {
      buf.fill(0)
    } else if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
    return buf
  }
}

if (!safer.kStringMaxLength) {
  try {
    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength
  } catch (e) {
    // we can't determine kStringMaxLength in environments where process.binding
    // is unsupported, so let's not set it
  }
}

if (!safer.constants) {
  safer.constants = {
    MAX_LENGTH: safer.kMaxLength
  }
  if (safer.kStringMaxLength) {
    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength
  }
}

module.exports = safer

},{"buffer":"S1uF","process":"r7L2"}],"NcWY":[function(require,module,exports) {
'use strict';

const inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  const state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  const state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  const state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  const state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  const state = this._reporterState;

  const prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  const state = this._reporterState;

  const now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  let err;
  const state = this._reporterState;

  const inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  const state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
}
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":"eDTo"}],"mGFs":[function(require,module,exports) {

'use strict';

const inherits = require('inherits');
const Reporter = require('../base/reporter').Reporter;
const Buffer = require('safer-buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
  if (data instanceof DecoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    Buffer.isBuffer(data.base) &&
    data.constructor.name === 'DecoderBuffer' &&
    typeof data.offset === 'number' &&
    typeof data.length === 'number' &&
    typeof data.save === 'function' &&
    typeof data.restore === 'function' &&
    typeof data.isEmpty === 'function' &&
    typeof data.readUInt8 === 'function' &&
    typeof data.skip === 'function' &&
    typeof data.raw === 'function';

  return isCompatible;
};

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  const res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
};

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  const res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
};

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
};

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!EncoderBuffer.isEncoderBuffer(item))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
  if (data instanceof EncoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    data.constructor.name === 'EncoderBuffer' &&
    typeof data.length === 'number' &&
    typeof data.join === 'function';

  return isCompatible;
};

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = Buffer.alloc(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"inherits":"eDTo","../base/reporter":"NcWY","safer-buffer":"wzU4"}],"Dfa4":[function(require,module,exports) {
'use strict';

const Reporter = require('../base/reporter').Reporter;
const EncoderBuffer = require('../base/buffer').EncoderBuffer;
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const assert = require('minimalistic-assert');

// Supported tags
const tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
const methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
const overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent, name) {
  const state = {};
  this._baseState = state;

  state.name = name;
  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

const stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  const state = this._baseState;
  const cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  const res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  const state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      const clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  const state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  const state = this._baseState;

  // Filter children and args
  const children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      const res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        const value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    const state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    const state = this._baseState;
    const args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  const state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  const state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  const state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  const state = this._baseState;
  const args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  const state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  const state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  const state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  const state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  let result = state['default'];
  let present = true;

  let prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    let tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      const save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  let prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      const explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    const start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      let save;
      if (state.any)
        save = input.save();
      const body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any) {
      // no-op
    } else if (state.choice === null) {
      result = this._decodeGeneric(state.tag, input, options);
    } else {
      result = this._decodeChoice(input, options);
    }

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      const data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
        ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  const state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
      ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  const state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  const state = this._baseState;
  let result = null;
  let match = false;

  Object.keys(state.choice).some(function(key) {
    const save = input.save();
    const node = state.choice[key];
    try {
      const value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  const state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  const result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  let result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default'];
    else
      return;
  }

  // Encode children first
  let content = null;
  let primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      const prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      const res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      const child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        const state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  if (!state.any && state.choice === null) {
    const tag = state.implicit !== null ? state.implicit : state.tag;
    const cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  const state = this._baseState;

  const node = state.choice[data.type];
  if (!node) {
    assert(
      false,
      data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  const state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
};

},{"../base/reporter":"NcWY","../base/buffer":"mGFs","minimalistic-assert":"nPIO"}],"VOsa":[function(require,module,exports) {
'use strict';

// Helper
function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
}

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = reverse(exports.tag);

},{}],"OWOo":[function(require,module,exports) {

'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
  primitive,
  cls,
  content) {
  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    const header = Buffer.alloc(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  let lenOctets = 1;
  for (let i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  const header = Buffer.alloc(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    const buf = Buffer.alloc(str.length * 2);
    for (let i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s.]+/g);
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  let size = 0;
  for (let i = 0; i < id.length; i++) {
    let ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  const objid = Buffer.alloc(size);
  let offset = objid.length - 1;
  for (let i = id.length - 1; i >= 0; i--) {
    let ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  let str;
  const date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getUTCFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getUTCFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    const numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = Buffer.from(numArray);
  }

  if (Buffer.isBuffer(num)) {
    let size = num.length;
    if (num.length === 0)
      size++;

    const out = Buffer.alloc(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0;
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  let size = 1;
  for (let i = num; i >= 0x100; i >>= 8)
    size++;

  const out = new Array(size);
  for (let i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(Buffer.from(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  const state = this._baseState;
  let i;
  if (state['default'] === null)
    return false;

  const data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  let res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"inherits":"eDTo","safer-buffer":"wzU4","../base/node":"Dfa4","../constants/der":"VOsa"}],"mAHl":[function(require,module,exports) {
'use strict';

const inherits = require('inherits');

const DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  const buf = DEREncoder.prototype.encode.call(this, data);

  const p = buf.toString('base64');
  const out = [ '-----BEGIN ' + options.label + '-----' ];
  for (let i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"inherits":"eDTo","./der":"OWOo"}],"rtRE":[function(require,module,exports) {
'use strict';

const encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":"OWOo","./pem":"mAHl"}],"AfPz":[function(require,module,exports) {
'use strict';

const inherits = require('inherits');

const bignum = require('bn.js');
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!DecoderBuffer.isDecoderBuffer(data)) {
    data = new DecoderBuffer(data, options);
  }

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  const state = buffer.save();
  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  const decodedTag = derDecodeTag(buffer,
    'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  let len = derDecodeLen(buffer,
    decodedTag.primitive,
    'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  const state = buffer.save();
  const res = this._skipUntilEnd(
    buffer,
    'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  for (;;) {
    const tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    const len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    let res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len);
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
  options) {
  const result = [];
  while (!buffer.isEmpty()) {
    const possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    const res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    const unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    const raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    let str = '';
    for (let i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    const numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    const printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  let result;
  const identifiers = [];
  let ident = 0;
  let subident = 0;
  while (!buffer.isEmpty()) {
    subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  const first = (identifiers[0] / 40) | 0;
  const second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    let tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  const str = buffer.raw().toString();

  let year;
  let mon;
  let day;
  let hour;
  let min;
  let sec;
  if (tag === 'gentime') {
    year = str.slice(0, 4) | 0;
    mon = str.slice(4, 6) | 0;
    day = str.slice(6, 8) | 0;
    hour = str.slice(8, 10) | 0;
    min = str.slice(10, 12) | 0;
    sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    year = str.slice(0, 2) | 0;
    mon = str.slice(2, 4) | 0;
    day = str.slice(4, 6) | 0;
    hour = str.slice(6, 8) | 0;
    min = str.slice(8, 10) | 0;
    sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull() {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  const res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  const raw = buffer.raw();
  let res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  let tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  const cls = der.tagClass[tag >> 6];
  const primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    let oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  const tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  let len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  const num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (let i = 0; i < num; i++) {
    len <<= 8;
    const j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"inherits":"eDTo","bn.js":"RNlP","../base/buffer":"mGFs","../base/node":"Dfa4","../constants/der":"VOsa"}],"tD8R":[function(require,module,exports) {

'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;

const DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  const lines = data.toString().split(/[\r\n]+/g);

  const label = options.label.toUpperCase();

  const re = /^-----(BEGIN|END) ([^-]+)-----$/;
  let start = -1;
  let end = -1;
  for (let i = 0; i < lines.length; i++) {
    const match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  const base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9+/=]+/gi, '');

  const input = Buffer.from(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"inherits":"eDTo","safer-buffer":"wzU4","./der":"AfPz"}],"HDf9":[function(require,module,exports) {
'use strict';

const decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":"AfPz","./pem":"tD8R"}],"ZSOZ":[function(require,module,exports) {
'use strict';

const encoders = require('./encoders');
const decoders = require('./decoders');
const inherits = require('inherits');

const api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
}

Entity.prototype._createNamed = function createNamed(Base) {
  const name = this.name;

  function Generated(entity) {
    this._initNamed(entity, name);
  }
  inherits(Generated, Base);
  Generated.prototype._initNamed = function _initNamed(entity, name) {
    Base.call(this, entity, name);
  };

  return new Generated(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"./encoders":"rtRE","./decoders":"HDf9","inherits":"eDTo"}],"yRYt":[function(require,module,exports) {
'use strict';

const base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./reporter":"NcWY","./buffer":"mGFs","./node":"Dfa4"}],"c6NC":[function(require,module,exports) {
'use strict';

const constants = exports;

// Helper
constants._reverse = function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":"VOsa"}],"ygBO":[function(require,module,exports) {
'use strict';

const asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"bn.js":"RNlP","./asn1/api":"ZSOZ","./asn1/base":"yRYt","./asn1/constants":"c6NC","./asn1/decoders":"HDf9","./asn1/encoders":"rtRE"}],"IEgv":[function(require,module,exports) {
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional(),
    this.key('curve').objid().optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int().optional(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":"ygBO"}],"uifX":[function(require,module,exports) {
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"asn1.js":"ygBO","./certificate":"IEgv"}],"WKwe":[function(require,module,exports) {
module.exports = {"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
};
},{}],"Od9T":[function(require,module,exports) {

// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
var Buffer = require('safe-buffer').Buffer
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = Buffer.from(match[2], 'hex')
    var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

},{"evp_bytestokey":"d16N","browserify-aes":"iz4d","safe-buffer":"TBA4"}],"hhcG":[function(require,module,exports) {

var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
var Buffer = require('safe-buffer').Buffer
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

},{"./asn1":"uifX","./aesid.json":"WKwe","./fixProc":"Od9T","browserify-aes":"iz4d","pbkdf2":"fCXZ","safe-buffer":"TBA4"}],"kRTX":[function(require,module,exports) {
module.exports = {
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}
;
},{}],"rLPx":[function(require,module,exports) {

// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [0, 1]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return Buffer.from(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r)
  if (s[0] & 0x80) s = [0].concat(s)

  var total = r.length + s.length + 4
  var res = [0x30, total, 0x02, r.length]
  res = res.concat(r, [0x02, s.length], s)
  return Buffer.from(res)
}

function getKey (x, q, hash, algo) {
  x = Buffer.from(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - x.length)
    x = Buffer.concat([zeros, x])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = Buffer.alloc(hlen)
  v.fill(1)
  var k = Buffer.alloc(hlen)
  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = Buffer.from(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - out.length)
    out = Buffer.concat([zeros, out])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = Buffer.alloc(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([t, kv.v])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

},{"safe-buffer":"TBA4","create-hmac":"H6KV","browserify-rsa":"ILI2","elliptic":"NLIU","bn.js":"RNlP","parse-asn1":"hhcG","./curves.json":"kRTX"}],"YYiQ":[function(require,module,exports) {

// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [1]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = Buffer.from(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = Buffer.from(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

},{"safe-buffer":"TBA4","bn.js":"RNlP","elliptic":"NLIU","parse-asn1":"hhcG","./curves.json":"kRTX"}],"HgJE":[function(require,module,exports) {

var Buffer = require('safe-buffer').Buffer
var createHash = require('create-hash')
var stream = require('readable-stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = Buffer.from(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

},{"safe-buffer":"TBA4","create-hash":"rr2W","readable-stream":"CIu4","inherits":"eDTo","./sign":"rLPx","./verify":"YYiQ","./algorithms.json":"CsD0"}],"XDWb":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var elliptic = require('elliptic')
var BN = require('bn.js')

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

},{"elliptic":"NLIU","bn.js":"RNlP","buffer":"S1uF"}],"lWcI":[function(require,module,exports) {

var createHash = require('create-hash')
var Buffer = require('safe-buffer').Buffer

module.exports = function (seed, len) {
  var t = Buffer.alloc(0)
  var i = 0
  var c
  while (t.length < len) {
    c = i2ops(i++)
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
  }
  return t.slice(0, len)
}

function i2ops (c) {
  var out = Buffer.allocUnsafe(4)
  out.writeUInt32BE(c, 0)
  return out
}

},{"create-hash":"rr2W","safe-buffer":"TBA4"}],"fAJq":[function(require,module,exports) {
module.exports = function xor (a, b) {
  var len = a.length
  var i = -1
  while (++i < len) {
    a[i] ^= b[i]
  }
  return a
}

},{}],"t7tu":[function(require,module,exports) {

var BN = require('bn.js')
var Buffer = require('safe-buffer').Buffer

function withPublic (paddedMsg, key) {
  return Buffer.from(paddedMsg
    .toRed(BN.mont(key.modulus))
    .redPow(new BN(key.publicExponent))
    .fromRed()
    .toArray())
}

module.exports = withPublic

},{"bn.js":"RNlP","safe-buffer":"TBA4"}],"hc22":[function(require,module,exports) {

var parseKeys = require('parse-asn1')
var randomBytes = require('randombytes')
var createHash = require('create-hash')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var withPublic = require('./withPublic')
var crt = require('browserify-rsa')
var Buffer = require('safe-buffer').Buffer

module.exports = function publicEncrypt (publicKey, msg, reverse) {
  var padding
  if (publicKey.padding) {
    padding = publicKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }
  var key = parseKeys(publicKey)
  var paddedMsg
  if (padding === 4) {
    paddedMsg = oaep(key, msg)
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    paddedMsg = new BN(msg)
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus')
    }
  } else {
    throw new Error('unknown padding')
  }
  if (reverse) {
    return crt(paddedMsg, key)
  } else {
    return withPublic(paddedMsg, key)
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var mLen = msg.length
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  var hLen2 = 2 * hLen
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long')
  }
  var ps = Buffer.alloc(k - mLen - hLen2 - 2)
  var dblen = k - hLen - 1
  var seed = randomBytes(hLen)
  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
  var maskedSeed = xor(seed, mgf(maskedDb, hLen))
  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
}
function pkcs1 (key, msg, reverse) {
  var mLen = msg.length
  var k = key.modulus.byteLength()
  if (mLen > k - 11) {
    throw new Error('message too long')
  }
  var ps
  if (reverse) {
    ps = Buffer.alloc(k - mLen - 3, 0xff)
  } else {
    ps = nonZero(k - mLen - 3)
  }
  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
}
function nonZero (len) {
  var out = Buffer.allocUnsafe(len)
  var i = 0
  var cache = randomBytes(len * 2)
  var cur = 0
  var num
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len * 2)
      cur = 0
    }
    num = cache[cur++]
    if (num) {
      out[i++] = num
    }
  }
  return out
}

},{"parse-asn1":"hhcG","randombytes":"sVXi","create-hash":"rr2W","./mgf":"lWcI","./xor":"fAJq","bn.js":"RNlP","./withPublic":"t7tu","browserify-rsa":"ILI2","safe-buffer":"TBA4"}],"N6kq":[function(require,module,exports) {

var parseKeys = require('parse-asn1')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var crt = require('browserify-rsa')
var createHash = require('create-hash')
var withPublic = require('./withPublic')
var Buffer = require('safe-buffer').Buffer

module.exports = function privateDecrypt (privateKey, enc, reverse) {
  var padding
  if (privateKey.padding) {
    padding = privateKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }

  var key = parseKeys(privateKey)
  var k = key.modulus.byteLength()
  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error')
  }
  var msg
  if (reverse) {
    msg = withPublic(new BN(enc), key)
  } else {
    msg = crt(enc, key)
  }
  var zBuffer = Buffer.alloc(k - msg.length)
  msg = Buffer.concat([zBuffer, msg], k)
  if (padding === 4) {
    return oaep(key, msg)
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    return msg
  } else {
    throw new Error('unknown padding')
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  if (msg[0] !== 0) {
    throw new Error('decryption error')
  }
  var maskedSeed = msg.slice(1, hLen + 1)
  var maskedDb = msg.slice(hLen + 1)
  var seed = xor(maskedSeed, mgf(maskedDb, hLen))
  var db = xor(maskedDb, mgf(seed, k - hLen - 1))
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error')
  }
  var i = hLen
  while (db[i] === 0) {
    i++
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error')
  }
  return db.slice(i)
}

function pkcs1 (key, msg, reverse) {
  var p1 = msg.slice(0, 2)
  var i = 2
  var status = 0
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++
      break
    }
  }
  var ps = msg.slice(2, i - 1)

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
    status++
  }
  if (ps.length < 8) {
    status++
  }
  if (status) {
    throw new Error('decryption error')
  }
  return msg.slice(i)
}
function compare (a, b) {
  a = Buffer.from(a)
  b = Buffer.from(b)
  var dif = 0
  var len = a.length
  if (a.length !== b.length) {
    dif++
    len = Math.min(a.length, b.length)
  }
  var i = -1
  while (++i < len) {
    dif += (a[i] ^ b[i])
  }
  return dif
}

},{"parse-asn1":"hhcG","./mgf":"lWcI","./xor":"fAJq","bn.js":"RNlP","browserify-rsa":"ILI2","create-hash":"rr2W","./withPublic":"t7tu","safe-buffer":"TBA4"}],"MLZQ":[function(require,module,exports) {
exports.publicEncrypt = require('./publicEncrypt')
exports.privateDecrypt = require('./privateDecrypt')

exports.privateEncrypt = function privateEncrypt (key, buf) {
  return exports.publicEncrypt(key, buf, true)
}

exports.publicDecrypt = function publicDecrypt (key, buf) {
  return exports.privateDecrypt(key, buf, true)
}

},{"./publicEncrypt":"hc22","./privateDecrypt":"N6kq"}],"nHqJ":[function(require,module,exports) {

var global = arguments[3];
var process = require("process");
'use strict';

function oldBrowser() {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11');
}

var safeBuffer = require('safe-buffer');

var randombytes = require('randombytes');

var Buffer = safeBuffer.Buffer;
var kBufferMaxLength = safeBuffer.kMaxLength;
var crypto = global.crypto || global.msCrypto;
var kMaxUint32 = Math.pow(2, 32) - 1;

function assertOffset(offset, length) {
  if (typeof offset !== 'number' || offset !== offset) {
    // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number');
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32');
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range');
  }
}

function assertSize(size, offset, length) {
  if (typeof size !== 'number' || size !== size) {
    // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number');
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32');
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small');
  }
}

if (crypto && crypto.getRandomValues || !true) {
  exports.randomFill = randomFill;
  exports.randomFillSync = randomFillSync;
} else {
  exports.randomFill = oldBrowser;
  exports.randomFillSync = oldBrowser;
}

function randomFill(buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
  }

  if (typeof offset === 'function') {
    cb = offset;
    offset = 0;
    size = buf.length;
  } else if (typeof size === 'function') {
    cb = size;
    size = buf.length - offset;
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function');
  }

  assertOffset(offset, buf.length);
  assertSize(size, offset, buf.length);
  return actualFill(buf, offset, size, cb);
}

function actualFill(buf, offset, size, cb) {
  if (true) {
    var ourBuf = buf.buffer;
    var uint = new Uint8Array(ourBuf, offset, size);
    crypto.getRandomValues(uint);

    if (cb) {
      process.nextTick(function () {
        cb(null, buf);
      });
      return;
    }

    return buf;
  }

  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err);
      }

      bytes.copy(buf, offset);
      cb(null, buf);
    });
    return;
  }

  var bytes = randombytes(size);
  bytes.copy(buf, offset);
  return buf;
}

function randomFillSync(buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0;
  }

  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
  }

  assertOffset(offset, buf.length);
  if (size === undefined) size = buf.length - offset;
  assertSize(size, offset, buf.length);
  return actualFill(buf, offset, size);
}
},{"safe-buffer":"TBA4","randombytes":"sVXi","process":"r7L2"}],"IlkM":[function(require,module,exports) {
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"randombytes":"sVXi","create-hash":"rr2W","create-hmac":"H6KV","browserify-sign/algos":"RlUu","pbkdf2":"fCXZ","browserify-cipher":"EpYe","diffie-hellman":"tEBT","browserify-sign":"HgJE","create-ecdh":"XDWb","public-encrypt":"MLZQ","randomfill":"nHqJ"}],"OV1n":[function(require,module,exports) {
var define;
/*jshint eqnull:true*/
(function (root) {
  "use strict";

  var GLOBAL_KEY = "Random";

  var imul = (typeof Math.imul !== "function" || Math.imul(0xffffffff, 5) !== -5 ?
    function (a, b) {
      var ah = (a >>> 16) & 0xffff;
      var al = a & 0xffff;
      var bh = (b >>> 16) & 0xffff;
      var bl = b & 0xffff;
      // the shift by 0 fixes the sign on the high part
      // the final |0 converts the unsigned value into a signed value
      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;
    } :
    Math.imul);

  var stringRepeat = (typeof String.prototype.repeat === "function" && "x".repeat(3) === "xxx" ?
    function (x, y) {
      return x.repeat(y);
    } : function (pattern, count) {
      var result = "";
      while (count > 0) {
        if (count & 1) {
          result += pattern;
        }
        count >>= 1;
        pattern += pattern;
      }
      return result;
    });

  function Random(engine) {
    if (!(this instanceof Random)) {
      return new Random(engine);
    }

    if (engine == null) {
      engine = Random.engines.nativeMath;
    } else if (typeof engine !== "function") {
      throw new TypeError("Expected engine to be a function, got " + typeof engine);
    }
    this.engine = engine;
  }
  var proto = Random.prototype;

  Random.engines = {
    nativeMath: function () {
      return (Math.random() * 0x100000000) | 0;
    },
    mt19937: (function (Int32Array) {
      // http://en.wikipedia.org/wiki/Mersenne_twister
      function refreshData(data) {
        var k = 0;
        var tmp = 0;
        for (;
          (k | 0) < 227; k = (k + 1) | 0) {
          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);
          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);
        }

        for (;
          (k | 0) < 623; k = (k + 1) | 0) {
          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);
          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);
        }

        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);
        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);
      }

      function temper(value) {
        value ^= value >>> 11;
        value ^= (value << 7) & 0x9d2c5680;
        value ^= (value << 15) & 0xefc60000;
        return value ^ (value >>> 18);
      }

      function seedWithArray(data, source) {
        var i = 1;
        var j = 0;
        var sourceLength = source.length;
        var k = Math.max(sourceLength, 624) | 0;
        var previous = data[0] | 0;
        for (;
          (k | 0) > 0; --k) {
          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;
          i = (i + 1) | 0;
          ++j;
          if ((i | 0) > 623) {
            data[0] = data[623];
            i = 1;
          }
          if (j >= sourceLength) {
            j = 0;
          }
        }
        for (k = 623;
          (k | 0) > 0; --k) {
          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;
          i = (i + 1) | 0;
          if ((i | 0) > 623) {
            data[0] = data[623];
            i = 1;
          }
        }
        data[0] = 0x80000000;
      }

      function mt19937() {
        var data = new Int32Array(624);
        var index = 0;
        var uses = 0;

        function next() {
          if ((index | 0) >= 624) {
            refreshData(data);
            index = 0;
          }

          var value = data[index];
          index = (index + 1) | 0;
          uses += 1;
          return temper(value) | 0;
        }
        next.getUseCount = function() {
          return uses;
        };
        next.discard = function (count) {
          uses += count;
          if ((index | 0) >= 624) {
            refreshData(data);
            index = 0;
          }
          while ((count - index) > 624) {
            count -= 624 - index;
            refreshData(data);
            index = 0;
          }
          index = (index + count) | 0;
          return next;
        };
        next.seed = function (initial) {
          var previous = 0;
          data[0] = previous = initial | 0;

          for (var i = 1; i < 624; i = (i + 1) | 0) {
            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;
          }
          index = 624;
          uses = 0;
          return next;
        };
        next.seedWithArray = function (source) {
          next.seed(0x012bd6aa);
          seedWithArray(data, source);
          return next;
        };
        next.autoSeed = function () {
          return next.seedWithArray(Random.generateEntropyArray());
        };
        return next;
      }

      return mt19937;
    }(typeof Int32Array === "function" ? Int32Array : Array)),
    browserCrypto: (typeof crypto !== "undefined" && typeof crypto.getRandomValues === "function" && (typeof Int32Array === "function" || typeof Int32Array === "object")) ? (function () {
      var data = null;
      var index = 128;

      return function () {
        if (index >= 128) {
          if (data === null) {
            data = new Int32Array(128);
          }
          crypto.getRandomValues(data);
          index = 0;
        }

        return data[index++] | 0;
      };
    }()) : (typeof require === "function" && typeof require('crypto').randomBytes === "function") ? function () {
        var crypto = require('crypto');
        var bytes = crypto.randomBytes(4);
        return bytes.readInt32BE(0);
      } : null
  };
  Random.generateEntropyArray = function () {
    var array = [];
    var engine = Random.engines.nativeMath;
    for (var i = 0; i < 16; ++i) {
      array[i] = engine() | 0;
    }
    array.push(new Date().getTime() | 0);
    return array;
  };

  function returnValue(value) {
    return function () {
      return value;
    };
  }

  // [-0x80000000, 0x7fffffff]
  Random.int32 = function (engine) {
    return engine() | 0;
  };
  proto.int32 = function () {
    return Random.int32(this.engine);
  };

  // [0, 0xffffffff]
  Random.uint32 = function (engine) {
    return engine() >>> 0;
  };
  proto.uint32 = function () {
    return Random.uint32(this.engine);
  };

  // [0, 0x1fffffffffffff]
  Random.uint53 = function (engine) {
    var high = engine() & 0x1fffff;
    var low = engine() >>> 0;
    return (high * 0x100000000) + low;
  };
  proto.uint53 = function () {
    return Random.uint53(this.engine);
  };

  // [0, 0x20000000000000]
  Random.uint53Full = function (engine) {
    while (true) {
      var high = engine() | 0;
      if (high & 0x200000) {
        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {
          return 0x20000000000000;
        }
      } else {
        var low = engine() >>> 0;
        return ((high & 0x1fffff) * 0x100000000) + low;
      }
    }
  };
  proto.uint53Full = function () {
    return Random.uint53Full(this.engine);
  };

  // [-0x20000000000000, 0x1fffffffffffff]
  Random.int53 = function (engine) {
    var high = engine() | 0;
    var low = engine() >>> 0;
    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);
  };
  proto.int53 = function () {
    return Random.int53(this.engine);
  };

  // [-0x20000000000000, 0x20000000000000]
  Random.int53Full = function (engine) {
    while (true) {
      var high = engine() | 0;
      if (high & 0x400000) {
        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {
          return 0x20000000000000;
        }
      } else {
        var low = engine() >>> 0;
        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);
      }
    }
  };
  proto.int53Full = function () {
    return Random.int53Full(this.engine);
  };

  function add(generate, addend) {
    if (addend === 0) {
      return generate;
    } else {
      return function (engine) {
        return generate(engine) + addend;
      };
    }
  }

  Random.integer = (function () {
    function isPowerOfTwoMinusOne(value) {
      return ((value + 1) & value) === 0;
    }

    function bitmask(masking) {
      return function (engine) {
        return engine() & masking;
      };
    }

    function downscaleToLoopCheckedRange(range) {
      var extendedRange = range + 1;
      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);
      return function (engine) {
        var value = 0;
        do {
          value = engine() >>> 0;
        } while (value >= maximum);
        return value % extendedRange;
      };
    }

    function downscaleToRange(range) {
      if (isPowerOfTwoMinusOne(range)) {
        return bitmask(range);
      } else {
        return downscaleToLoopCheckedRange(range);
      }
    }

    function isEvenlyDivisibleByMaxInt32(value) {
      return (value | 0) === 0;
    }

    function upscaleWithHighMasking(masking) {
      return function (engine) {
        var high = engine() & masking;
        var low = engine() >>> 0;
        return (high * 0x100000000) + low;
      };
    }

    function upscaleToLoopCheckedRange(extendedRange) {
      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);
      return function (engine) {
        var ret = 0;
        do {
          var high = engine() & 0x1fffff;
          var low = engine() >>> 0;
          ret = (high * 0x100000000) + low;
        } while (ret >= maximum);
        return ret % extendedRange;
      };
    }

    function upscaleWithinU53(range) {
      var extendedRange = range + 1;
      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {
        var highRange = ((extendedRange / 0x100000000) | 0) - 1;
        if (isPowerOfTwoMinusOne(highRange)) {
          return upscaleWithHighMasking(highRange);
        }
      }
      return upscaleToLoopCheckedRange(extendedRange);
    }

    function upscaleWithinI53AndLoopCheck(min, max) {
      return function (engine) {
        var ret = 0;
        do {
          var high = engine() | 0;
          var low = engine() >>> 0;
          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);
        } while (ret < min || ret > max);
        return ret;
      };
    }

    return function (min, max) {
      min = Math.floor(min);
      max = Math.floor(max);
      if (min < -0x20000000000000 || !isFinite(min)) {
        throw new RangeError("Expected min to be at least " + (-0x20000000000000));
      } else if (max > 0x20000000000000 || !isFinite(max)) {
        throw new RangeError("Expected max to be at most " + 0x20000000000000);
      }

      var range = max - min;
      if (range <= 0 || !isFinite(range)) {
        return returnValue(min);
      } else if (range === 0xffffffff) {
        if (min === 0) {
          return Random.uint32;
        } else {
          return add(Random.int32, min + 0x80000000);
        }
      } else if (range < 0xffffffff) {
        return add(downscaleToRange(range), min);
      } else if (range === 0x1fffffffffffff) {
        return add(Random.uint53, min);
      } else if (range < 0x1fffffffffffff) {
        return add(upscaleWithinU53(range), min);
      } else if (max - 1 - min === 0x1fffffffffffff) {
        return add(Random.uint53Full, min);
      } else if (min === -0x20000000000000 && max === 0x20000000000000) {
        return Random.int53Full;
      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {
        return Random.int53;
      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {
        return add(Random.int53, 1);
      } else if (max === 0x20000000000000) {
        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);
      } else {
        return upscaleWithinI53AndLoopCheck(min, max);
      }
    };
  }());
  proto.integer = function (min, max) {
    return Random.integer(min, max)(this.engine);
  };

  // [0, 1] (floating point)
  Random.realZeroToOneInclusive = function (engine) {
    return Random.uint53Full(engine) / 0x20000000000000;
  };
  proto.realZeroToOneInclusive = function () {
    return Random.realZeroToOneInclusive(this.engine);
  };

  // [0, 1) (floating point)
  Random.realZeroToOneExclusive = function (engine) {
    return Random.uint53(engine) / 0x20000000000000;
  };
  proto.realZeroToOneExclusive = function () {
    return Random.realZeroToOneExclusive(this.engine);
  };

  Random.real = (function () {
    function multiply(generate, multiplier) {
      if (multiplier === 1) {
        return generate;
      } else if (multiplier === 0) {
        return function () {
          return 0;
        };
      } else {
        return function (engine) {
          return generate(engine) * multiplier;
        };
      }
    }

    return function (left, right, inclusive) {
      if (!isFinite(left)) {
        throw new RangeError("Expected left to be a finite number");
      } else if (!isFinite(right)) {
        throw new RangeError("Expected right to be a finite number");
      }
      return add(
        multiply(
          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,
          right - left),
        left);
    };
  }());
  proto.real = function (min, max, inclusive) {
    return Random.real(min, max, inclusive)(this.engine);
  };

  Random.bool = (function () {
    function isLeastBitTrue(engine) {
      return (engine() & 1) === 1;
    }

    function lessThan(generate, value) {
      return function (engine) {
        return generate(engine) < value;
      };
    }

    function probability(percentage) {
      if (percentage <= 0) {
        return returnValue(false);
      } else if (percentage >= 1) {
        return returnValue(true);
      } else {
        var scaled = percentage * 0x100000000;
        if (scaled % 1 === 0) {
          return lessThan(Random.int32, (scaled - 0x80000000) | 0);
        } else {
          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));
        }
      }
    }

    return function (numerator, denominator) {
      if (denominator == null) {
        if (numerator == null) {
          return isLeastBitTrue;
        }
        return probability(numerator);
      } else {
        if (numerator <= 0) {
          return returnValue(false);
        } else if (numerator >= denominator) {
          return returnValue(true);
        }
        return lessThan(Random.integer(0, denominator - 1), numerator);
      }
    };
  }());
  proto.bool = function (numerator, denominator) {
    return Random.bool(numerator, denominator)(this.engine);
  };

  function toInteger(value) {
    var number = +value;
    if (number < 0) {
      return Math.ceil(number);
    } else {
      return Math.floor(number);
    }
  }

  function convertSliceArgument(value, length) {
    if (value < 0) {
      return Math.max(value + length, 0);
    } else {
      return Math.min(value, length);
    }
  }
  Random.pick = function (engine, array, begin, end) {
    var length = array.length;
    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);
    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);
    if (start >= finish) {
      return void 0;
    }
    var distribution = Random.integer(start, finish - 1);
    return array[distribution(engine)];
  };
  proto.pick = function (array, begin, end) {
    return Random.pick(this.engine, array, begin, end);
  };

  function returnUndefined() {
    return void 0;
  }
  var slice = Array.prototype.slice;
  Random.picker = function (array, begin, end) {
    var clone = slice.call(array, begin, end);
    if (!clone.length) {
      return returnUndefined;
    }
    var distribution = Random.integer(0, clone.length - 1);
    return function (engine) {
      return clone[distribution(engine)];
    };
  };

  Random.shuffle = function (engine, array, downTo) {
    var length = array.length;
    if (length) {
      if (downTo == null) {
        downTo = 0;
      }
      for (var i = (length - 1) >>> 0; i > downTo; --i) {
        var distribution = Random.integer(0, i);
        var j = distribution(engine);
        if (i !== j) {
          var tmp = array[i];
          array[i] = array[j];
          array[j] = tmp;
        }
      }
    }
    return array;
  };
  proto.shuffle = function (array) {
    return Random.shuffle(this.engine, array);
  };

  Random.sample = function (engine, population, sampleSize) {
    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {
      throw new RangeError("Expected sampleSize to be within 0 and the length of the population");
    }

    if (sampleSize === 0) {
      return [];
    }

    var clone = slice.call(population);
    var length = clone.length;
    if (length === sampleSize) {
      return Random.shuffle(engine, clone, 0);
    }
    var tailLength = length - sampleSize;
    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);
  };
  proto.sample = function (population, sampleSize) {
    return Random.sample(this.engine, population, sampleSize);
  };

  Random.die = function (sideCount) {
    return Random.integer(1, sideCount);
  };
  proto.die = function (sideCount) {
    return Random.die(sideCount)(this.engine);
  };

  Random.dice = function (sideCount, dieCount) {
    var distribution = Random.die(sideCount);
    return function (engine) {
      var result = [];
      result.length = dieCount;
      for (var i = 0; i < dieCount; ++i) {
        result[i] = distribution(engine);
      }
      return result;
    };
  };
  proto.dice = function (sideCount, dieCount) {
    return Random.dice(sideCount, dieCount)(this.engine);
  };

  // http://en.wikipedia.org/wiki/Universally_unique_identifier
  Random.uuid4 = (function () {
    function zeroPad(string, zeroCount) {
      return stringRepeat("0", zeroCount - string.length) + string;
    }

    return function (engine) {
      var a = engine() >>> 0;
      var b = engine() | 0;
      var c = engine() | 0;
      var d = engine() >>> 0;

      return (
        zeroPad(a.toString(16), 8) +
        "-" +
        zeroPad((b & 0xffff).toString(16), 4) +
        "-" +
        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +
        "-" +
        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +
        "-" +
        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +
        zeroPad(d.toString(16), 8));
    };
  }());
  proto.uuid4 = function () {
    return Random.uuid4(this.engine);
  };

  Random.string = (function () {
    // has 2**x chars, for faster uniform distribution
    var DEFAULT_STRING_POOL = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-";

    return function (pool) {
      if (pool == null) {
        pool = DEFAULT_STRING_POOL;
      }

      var length = pool.length;
      if (!length) {
        throw new Error("Expected pool not to be an empty string");
      }

      var distribution = Random.integer(0, length - 1);
      return function (engine, length) {
        var result = "";
        for (var i = 0; i < length; ++i) {
          var j = distribution(engine);
          result += pool.charAt(j);
        }
        return result;
      };
    };
  }());
  proto.string = function (length, pool) {
    return Random.string(pool)(this.engine, length);
  };

  Random.hex = (function () {
    var LOWER_HEX_POOL = "0123456789abcdef";
    var lowerHex = Random.string(LOWER_HEX_POOL);
    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());

    return function (upper) {
      if (upper) {
        return upperHex;
      } else {
        return lowerHex;
      }
    };
  }());
  proto.hex = function (length, upper) {
    return Random.hex(upper)(this.engine, length);
  };

  Random.date = function (start, end) {
    if (!(start instanceof Date)) {
      throw new TypeError("Expected start to be a Date, got " + typeof start);
    } else if (!(end instanceof Date)) {
      throw new TypeError("Expected end to be a Date, got " + typeof end);
    }
    var distribution = Random.integer(start.getTime(), end.getTime());
    return function (engine) {
      return new Date(distribution(engine));
    };
  };
  proto.date = function (start, end) {
    return Random.date(start, end)(this.engine);
  };

  if (typeof define === "function" && define.amd) {
    define(function () {
      return {
        Random: Random
      };
    });
  } else if (typeof module !== "undefined" && typeof require === "function") {
    module.exports = {
      Random: Random
    };
  } else {
    (function () {
      var oldGlobal = root[GLOBAL_KEY];
      Random.noConflict = function () {
        root[GLOBAL_KEY] = oldGlobal;
        return this;
      };
    }());
    root[GLOBAL_KEY] = Random;
  }
}(this));

},{"crypto":"IlkM"}],"xdiG":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generate_uuid = exports.UUID_LENGTH = void 0;

var nanoid_1 = require("nanoid");

var random_1 = require("@offirmo/random"); ///////


var UUID_RADIX = 'uu1';
var NANOID_LENGTH_FOR_1BTH_COLLISION_CHANCES = 21; // according to the doc

var UUID_LENGTH = UUID_RADIX.length + NANOID_LENGTH_FOR_1BTH_COLLISION_CHANCES;
exports.UUID_LENGTH = UUID_LENGTH;

function generate_uuid(_a) {
  var _b = _a === void 0 ? {} : _a,
      _c = _b.length,
      length = _c === void 0 ? NANOID_LENGTH_FOR_1BTH_COLLISION_CHANCES : _c,
      rng = _b.rng;

  return UUID_RADIX + (rng ? nanoid_1.customRandom(nanoid_1.urlAlphabet, length, function (size) {
    //const result: number[] = []
    var gen = random_1.Random.integer(0, 255); //for (let i = 0; i < size; i++) result.push(gen(rng!))

    return new Uint8Array(size).map(function () {
      return gen(rng);
    });
  })() : nanoid_1.nanoid(length));
}

exports.generate_uuid = generate_uuid; /////////////////////
},{"nanoid":"o1OJ","@offirmo/random":"OV1n"}],"zO3E":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xxx_test_unrandomize_element = void 0;

function xxx_test_unrandomize_element(x, hint) {
  return __assign(__assign({}, x), {
    uuid: hint || 'uu1~test~test~test~test~'
  });
}

exports.xxx_test_unrandomize_element = xxx_test_unrandomize_element;
},{}],"Im4b":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./generate"), exports);

__exportStar(require("./utils"), exports);
},{"./types":"MKE5","./generate":"xdiG","./utils":"zO3E"}],"YxKH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create_element_base = void 0;

var uuid_1 = require("@offirmo-private/uuid");

function create_element_base(element_type, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var uuid = hints.uuid || uuid_1.generate_uuid();
  return {
    uuid: uuid,
    element_type: element_type
  };
}

exports.create_element_base = create_element_base;
},{"@offirmo-private/uuid":"Im4b"}],"UZfh":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compare_items_by_quality = exports.compare_items_by_slot = exports.create_item_base = void 0;

var types_1 = require("./types");

var consts_1 = require("./consts");

var element_1 = require("./element");

function create_item_base(slot, quality) {
  if (quality === void 0) {
    quality = types_1.ItemQuality.common;
  }

  return __assign(__assign({}, element_1.create_element_base(types_1.ElementType.item)), {
    slot: slot,
    quality: quality
  });
}

exports.create_item_base = create_item_base;

function compare_items_by_slot(a, b) {
  var rank_a = consts_1.ITEM_SLOTS_TO_INT[a.slot];
  if (!Number.isInteger(rank_a)) throw new Error('compare items by slots: unhandled slot! (A)');
  var rank_b = consts_1.ITEM_SLOTS_TO_INT[b.slot];
  if (!Number.isInteger(rank_b)) throw new Error('compare items by slots: unhandled slot! (B)');
  return rank_a - rank_b;
}

exports.compare_items_by_slot = compare_items_by_slot;

function compare_items_by_quality(a, b) {
  var rank_a = consts_1.ITEM_QUALITIES_TO_INT[a.quality];
  if (!Number.isInteger(rank_a)) throw new Error('compare items by quality: unhandled quality! (A)');
  var rank_b = consts_1.ITEM_QUALITIES_TO_INT[b.quality];
  if (!Number.isInteger(rank_b)) throw new Error('compare items by quality: unhandled quality! (B)');
  return rank_a - rank_b;
}

exports.compare_items_by_quality = compare_items_by_quality;
},{"./types":"DYkz","./consts":"zmCL","./element":"YxKH"}],"U7fa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorate_SEC = void 0;

var consts_1 = require("./consts"); /////////////////////


function decorate_SEC(SEC) {
  /*SEC.injectDependencies({
      enforce_immutability, // TODO remove
  })*/
  SEC.setAnalyticsAndErrorDetails({
    product: consts_1.PRODUCT // TODO LIB?
    // TODO add more details

  });
  return SEC; // for chaining
}

exports.decorate_SEC = decorate_SEC;
},{"./consts":"zmCL"}],"wv3c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createLogger = exports.LoggerCreationParams = exports.Logger = void 0;

var practical_logger_types_1 = require("@offirmo/practical-logger-types");

Object.defineProperty(exports, "Logger", {
  enumerable: true,
  get: function () {
    return practical_logger_types_1.Logger;
  }
});
Object.defineProperty(exports, "LoggerCreationParams", {
  enumerable: true,
  get: function () {
    return practical_logger_types_1.LoggerCreationParams;
  }
});

function NOP() {}

var NOP_LOGGER = {
  setLevel: NOP,
  getLevel: function () {
    return 'silly';
  },
  addCommonDetails: NOP,
  fatal: NOP,
  emerg: NOP,
  alert: NOP,
  crit: NOP,
  error: NOP,
  warning: NOP,
  warn: NOP,
  notice: NOP,
  info: NOP,
  verbose: NOP,
  log: NOP,
  debug: NOP,
  trace: NOP,
  silly: NOP,
  group: NOP,
  groupCollapsed: NOP,
  groupEnd: NOP
};

function createLogger(_) {
  return NOP_LOGGER;
}

exports.createLogger = createLogger;
},{"@offirmo/practical-logger-types":"Qoo0"}],"YaPT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var practical_logger_minimal_noop_1 = require("@offirmo/practical-logger-minimal-noop");

function create() {
  //console.trace('[UDA--placeholder installing…]')
  function NOP() {}

  var NOP_LOGGER = practical_logger_minimal_noop_1.createLogger();
  return {
    getLogger: function () {
      return NOP_LOGGER;
    },
    overrideHook: function (k, v) {
      return v;
    },
    exposeInternal: NOP,
    addDebugCommand: NOP
  };
}

exports.default = create;
},{"@offirmo/practical-logger-minimal-noop":"wv3c"}],"sw2i":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createV1 = exports.globalThis = exports.addDebugCommand = exports.overrideHook = exports.exposeInternal = exports.getLogger = void 0;

var globalthis_ponyfill_1 = require("@offirmo/globalthis-ponyfill");

var v1_1 = __importDefault(require("./v1"));

exports.createV1 = v1_1.default;
var globalThis = globalthis_ponyfill_1.getGlobalThis();
exports.globalThis = globalThis; // ensure the root is present

globalThis._debug = globalThis._debug || {}; // install globally if no other implementation already present

globalThis._debug.v1 = globalThis._debug.v1 || v1_1.default(); // expose the installed implementation

var instance = globalThis._debug.v1;
var getLogger = instance.getLogger,
    exposeInternal = instance.exposeInternal,
    overrideHook = instance.overrideHook,
    addDebugCommand = instance.addDebugCommand;
exports.getLogger = getLogger;
exports.exposeInternal = exposeInternal;
exports.overrideHook = overrideHook;
exports.addDebugCommand = addDebugCommand; // types & sub-types, for convenience

__exportStar(require("@offirmo/universal-debug-api-interface"), exports);
},{"@offirmo/globalthis-ponyfill":"ehj8","./v1":"YaPT","@offirmo/universal-debug-api-interface":"ftHY"}],"Bvgu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_logger = void 0;

var universal_debug_api_placeholder_1 = require("@offirmo/universal-debug-api-placeholder");

var consts_1 = require("./consts");

function get_logger() {
  return universal_debug_api_placeholder_1.getLogger({
    name: consts_1.PRODUCT
  });
}

exports.get_logger = get_logger;
},{"@offirmo/universal-debug-api-placeholder":"sw2i","./consts":"zmCL"}],"PTCd":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xxx_test_unrandomize_element = void 0;

__exportStar(require("./types"), exports);

__exportStar(require("./consts"), exports);

__exportStar(require("./element"), exports);

__exportStar(require("./item"), exports);

__exportStar(require("./root_sec"), exports);

__exportStar(require("./logger"), exports);

var uuid_1 = require("@offirmo-private/uuid"); // for convenience


Object.defineProperty(exports, "xxx_test_unrandomize_element", {
  enumerable: true,
  get: function () {
    return uuid_1.xxx_test_unrandomize_element;
  }
});
},{"./types":"DYkz","./consts":"zmCL","./element":"YxKH","./item":"UZfh","./root_sec":"U7fa","./logger":"Bvgu","@offirmo-private/uuid":"Im4b"}],"brZ8":[function(require,module,exports) {
"use strict"; /////////////////////

var _a, _b;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_at_max_enhancement = exports.matches = exports.get_ultimate_medium_damage = exports.get_medium_damage = exports.get_damage_interval = exports.BASE_STRENGTH_INTERVAL_BY_QUALITY = exports.OVERALL_STRENGTH_INTERVAL_BY_QUALITY = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var definitions_1 = require("@tbrpg/definitions");

var consts_1 = require("./consts"); /////////////////////
// see spreadsheet for calculation


var ENHANCEMENT_MULTIPLIER = 0.1;
var MAX_POSSIBLE_ENHANCEMENT_RATIO = 1 + consts_1.MAX_ENHANCEMENT_LEVEL * ENHANCEMENT_MULTIPLIER;
var OVERALL_STRENGTH_INTERVAL_BY_QUALITY = (_a = {}, _a[definitions_1.ItemQuality.common] = [1, 999], _a[definitions_1.ItemQuality.uncommon] = [1000, 2999], _a[definitions_1.ItemQuality.rare] = [3500, 9999], _a[definitions_1.ItemQuality.epic] = [11000, 29999], _a[definitions_1.ItemQuality.legendary] = [35000, 99999], _a[definitions_1.ItemQuality.artifact] = [35000, 99999], _a);
exports.OVERALL_STRENGTH_INTERVAL_BY_QUALITY = OVERALL_STRENGTH_INTERVAL_BY_QUALITY;
if (Object.keys(OVERALL_STRENGTH_INTERVAL_BY_QUALITY).length !== typescript_string_enums_1.Enum.keys(definitions_1.ItemQuality).length) throw new Error(consts_1.LIB + " overall - outdated code!");
var SPREAD_PCT_BY_QUALITY = (_b = {}, _b[definitions_1.ItemQuality.common] = 0.10, _b[definitions_1.ItemQuality.uncommon] = 0.09, _b[definitions_1.ItemQuality.rare] = 0.08, _b[definitions_1.ItemQuality.epic] = 0.07, _b[definitions_1.ItemQuality.legendary] = 0.05, _b[definitions_1.ItemQuality.artifact] = 0.05, _b);
if (Object.keys(SPREAD_PCT_BY_QUALITY).length !== typescript_string_enums_1.Enum.keys(definitions_1.ItemQuality).length) throw new Error(consts_1.LIB + " spread - outdated code!");
var TEMP_BASE_STRENGTH_INTERVAL_BY_QUALITY = {};
Object.keys(OVERALL_STRENGTH_INTERVAL_BY_QUALITY).forEach(function (k) {
  var quality = k;
  var _a = OVERALL_STRENGTH_INTERVAL_BY_QUALITY[quality],
      overall_min = _a[0],
      overall_max = _a[1];
  var spread_pct = SPREAD_PCT_BY_QUALITY[quality]; //console.log({quality, overall_min, overall_max})

  var base_min = Math.floor(overall_min / (1 - spread_pct) / 1);
  var base_max = Math.ceil(overall_max / (1 + spread_pct) / MAX_POSSIBLE_ENHANCEMENT_RATIO);
  /*console.log({base_min, base_max})
  for(let i = 0; i < 9; ++i) {
      console.log({
          i,
          dmg_min: Math.round(base_min * (1 - spread_pct) * (1 + i * ENHANCEMENT_MULTIPLIER)),
          dmg_max: Math.round(base_max * (1 + spread_pct) * (1 + i * ENHANCEMENT_MULTIPLIER)),
      })
  }*/

  if (base_min >= base_max) throw new Error(consts_1.LIB + ": range assertion failed for \"" + quality + "\"!");
  TEMP_BASE_STRENGTH_INTERVAL_BY_QUALITY[quality] = [base_min, base_max];
});
var BASE_STRENGTH_INTERVAL_BY_QUALITY = TEMP_BASE_STRENGTH_INTERVAL_BY_QUALITY;
exports.BASE_STRENGTH_INTERVAL_BY_QUALITY = BASE_STRENGTH_INTERVAL_BY_QUALITY;

function get_interval(base_strength, quality, enhancement_level) {
  var spread_pct = SPREAD_PCT_BY_QUALITY[quality];
  var enhancement_ratio = 1 + ENHANCEMENT_MULTIPLIER * enhancement_level;
  var _a = OVERALL_STRENGTH_INTERVAL_BY_QUALITY[quality],
      overall_min = _a[0],
      overall_max = _a[1]; // Constrain interval due to rounding.
  // It shouldn't change the numbers a lot.

  var min_strength = Math.max(overall_min, Math.round(base_strength * (1 - spread_pct) * enhancement_ratio));
  var max_strength = Math.min(overall_max, Math.round(base_strength * (1 + spread_pct) * enhancement_ratio));
  return [min_strength, max_strength];
} /////////////////////


function get_damage_interval(weapon) {
  return get_interval(weapon.base_strength, weapon.quality, weapon.enhancement_level);
}

exports.get_damage_interval = get_damage_interval;

function get_medium_damage(weapon) {
  var damage_range = get_damage_interval(weapon);
  return Math.round((damage_range[0] + damage_range[1]) / 2);
}

exports.get_medium_damage = get_medium_damage;

function get_ultimate_medium_damage(weapon) {
  var max_damage_range = get_interval(weapon.base_strength, weapon.quality, consts_1.MAX_ENHANCEMENT_LEVEL);
  return Math.round((max_damage_range[0] + max_damage_range[1]) / 2);
}

exports.get_ultimate_medium_damage = get_ultimate_medium_damage;

function matches(weapon, elements) {
  var matches = true; // so far

  if (!weapon) throw new Error(consts_1.LIB + " matches: can't match nothing!");
  if (elements.slot && elements.slot !== definitions_1.InventorySlot.weapon) throw new Error(consts_1.LIB + " matches: can't match against a non-weapon slot \"" + elements.slot + "\"!");
  if (weapon.slot !== definitions_1.InventorySlot.weapon) return false;
  Object.keys(elements).forEach(function (k) {
    if (!(k in weapon)) throw new Error(consts_1.LIB + " matches: can't match on non-weapon key \"" + k + "\"!");
    if (elements[k] !== weapon[k]) matches = false;
  });
  return matches;
}

exports.matches = matches;

function is_at_max_enhancement(weapon) {
  return weapon.enhancement_level >= consts_1.MAX_ENHANCEMENT_LEVEL;
}

exports.is_at_max_enhancement = is_at_max_enhancement; /////////////////////
},{"typescript-string-enums":"qyCc","@tbrpg/definitions":"PTCd","./consts":"KGKM"}],"L3nM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var messages = {
  weapon: {
    base: {
      axe: 'axe',
      bow: 'bow',
      claw: 'claw',
      dagger: 'dagger',
      grimoire: 'grimoire',
      harp: 'harp',
      knife: 'knife',
      longbow: 'long bow',
      longsword: 'long sword',
      luth: 'luth',
      mace: 'scythe',
      scythe: 'spear',
      spear: 'spear',
      spoon: 'spoon',
      staff: 'staff',
      sword: 'sword',
      wand: 'wand'
    },
    qualifier1: {
      admirable: 'admirable',
      arcanic: 'arcanic',
      bestial: 'bestial',
      bone: 'bone',
      brass: 'brass',
      cardboard: 'cardboard',
      complex: 'complex',
      composite: 'composite',
      consecrated: 'consecrated',
      crafted: 'crafted',
      cruel: 'cruel',
      cunning: 'cunning',
      cursed: 'cursed',
      emerald: 'emerald',
      engraved: 'engraved',
      forbidden: 'forbidden',
      forgotten: 'forgotten',
      ghost: 'ghost',
      golden: 'golden',
      heavy: 'heavy',
      heroic: 'heroic',
      holy: 'holy',
      inflexible: 'inflexible',
      invincible: 'invincible',
      iron: 'iron',
      jade: 'jade',
      light: 'light',
      living: 'living',
      lost: 'lost',
      mechanical: 'mechanical',
      mysterious: 'mysterious',
      old: 'old',
      onyx: 'onyx',
      overrated: 'overrated',
      powerful: 'powerful',
      practical: 'practical',
      proven: 'proven',
      raging: 'raging',
      robust: 'robust',
      sapphire: 'sapphire',
      savage: 'savage',
      silver: 'silver',
      simple: 'simple',
      sinister: 'sinister',
      skeleton: 'skeleton',
      solid: 'solid',
      steel: 'steel',
      strange: 'strange',
      subtile: 'subtle',
      swift: 'swift',
      unwavering: 'unwavering',
      used: 'used',
      whirling: 'whirling',
      wooden: 'wooden'
    },
    qualifier2: {
      adjudicator: 'adjudicator’s',
      ambassador: 'ambassador’s',
      ancients: 'of the ancients',
      apprentice: 'apprentice’s',
      assaulting: 'assaulting',
      beginner: 'beginner’s',
      brave: 'of the brave',
      conqueror: 'conqueror’s',
      cruel_tyrant: 'cruel tyrant’s',
      defender: 'defender’s',
      destructor: 'destructor’s',
      dwarven: 'dwarven',
      elite: 'elite',
      elven: 'elven',
      executioner: 'executioner’s',
      expert: 'expert',
      explorer: 'explorer’s',
      gladiator: 'gladiator’s',
      goddess: 'of the goddess',
      guard: 'guard’s',
      hunter: 'hunter’s',
      judgement: 'of judgement',
      king: 'king’s',
      mediator: 'mediator’s',
      mercenary: 'mercenary’s',
      militia: 'militia’s',
      nightmare: 'nightmare’s',
      noble: 'noble’s',
      noob: 'of the noob',
      pilgrim: 'pilgrim’s',
      pioneer: 'pioneer’s',
      pirate: 'pirate’s',
      profane: 'profane’s',
      ranger: 'ranger’s',
      sorcerer: 'sorcerer’s',
      tormentor: 'tormentor’s',
      training: 'training',
      traveler: 'traveler’s',
      twink: 'of the twink',
      tyrant: 'tyrant’s',
      upholder: 'upholder’s',
      warfield: 'warfield’s',
      warfield_king: 'warfield king’s',
      warrior: 'warrior’s',
      wise: 'of the wise',
      woodsman: 'woodsman’s'
    }
  }
};
exports.default = messages;
},{}],"Yi26":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ENTRIES = void 0; // TODO tests!!

var ENTRIES = [{
  type: 'base',
  hid: 'axe'
}, {
  type: 'base',
  hid: 'bow'
}, {
  type: 'base',
  hid: 'claw'
}, {
  type: 'base',
  hid: 'dagger'
}, {
  type: 'base',
  hid: 'grimoire'
}, {
  type: 'base',
  hid: 'harp'
}, {
  type: 'base',
  hid: 'knife'
}, {
  type: 'base',
  hid: 'longbow'
}, {
  type: 'base',
  hid: 'longsword'
}, {
  type: 'base',
  hid: 'luth'
}, {
  type: 'base',
  hid: 'mace'
}, {
  type: 'base',
  hid: 'scythe'
}, {
  type: 'base',
  hid: 'spear'
}, {
  type: 'base',
  hid: 'spoon'
}, {
  type: 'base',
  hid: 'staff'
}, {
  type: 'base',
  hid: 'sword'
}, {
  type: 'base',
  hid: 'wand'
}, {
  type: 'qualifier1',
  hid: 'admirable'
}, {
  type: 'qualifier1',
  hid: 'arcanic'
}, {
  type: 'qualifier1',
  hid: 'bestial'
}, {
  type: 'qualifier1',
  hid: 'bone'
}, {
  type: 'qualifier1',
  hid: 'brass'
}, {
  type: 'qualifier1',
  hid: 'cardboard'
}, {
  type: 'qualifier1',
  hid: 'complex'
}, {
  type: 'qualifier1',
  hid: 'composite'
}, {
  type: 'qualifier1',
  hid: 'consecrated'
}, {
  type: 'qualifier1',
  hid: 'crafted'
}, {
  type: 'qualifier1',
  hid: 'cruel'
}, {
  type: 'qualifier1',
  hid: 'cunning'
}, {
  type: 'qualifier1',
  hid: 'cursed'
}, {
  type: 'qualifier1',
  hid: 'emerald'
}, {
  type: 'qualifier1',
  hid: 'engraved'
}, {
  type: 'qualifier1',
  hid: 'forbidden'
}, {
  type: 'qualifier1',
  hid: 'forgotten'
}, {
  type: 'qualifier1',
  hid: 'ghost'
}, {
  type: 'qualifier1',
  hid: 'golden'
}, {
  type: 'qualifier1',
  hid: 'heavy'
}, {
  type: 'qualifier1',
  hid: 'heroic'
}, {
  type: 'qualifier1',
  hid: 'holy'
}, {
  type: 'qualifier1',
  hid: 'inflexible'
}, {
  type: 'qualifier1',
  hid: 'invincible'
}, {
  type: 'qualifier1',
  hid: 'iron'
}, {
  type: 'qualifier1',
  hid: 'jade'
}, {
  type: 'qualifier1',
  hid: 'light'
}, {
  type: 'qualifier1',
  hid: 'living'
}, {
  type: 'qualifier1',
  hid: 'lost'
}, {
  type: 'qualifier1',
  hid: 'mechanical'
}, {
  type: 'qualifier1',
  hid: 'mysterious'
}, {
  type: 'qualifier1',
  hid: 'old'
}, {
  type: 'qualifier1',
  hid: 'onyx'
}, {
  type: 'qualifier1',
  hid: 'overrated'
}, {
  type: 'qualifier1',
  hid: 'powerful'
}, {
  type: 'qualifier1',
  hid: 'practical'
}, {
  type: 'qualifier1',
  hid: 'proven'
}, {
  type: 'qualifier1',
  hid: 'raging'
}, {
  type: 'qualifier1',
  hid: 'robust'
}, {
  type: 'qualifier1',
  hid: 'sapphire'
}, {
  type: 'qualifier1',
  hid: 'savage'
}, {
  type: 'qualifier1',
  hid: 'silver'
}, {
  type: 'qualifier1',
  hid: 'simple'
}, {
  type: 'qualifier1',
  hid: 'sinister'
}, {
  type: 'qualifier1',
  hid: 'skeleton'
}, {
  type: 'qualifier1',
  hid: 'solid'
}, {
  type: 'qualifier1',
  hid: 'steel'
}, {
  type: 'qualifier1',
  hid: 'strange'
}, {
  type: 'qualifier1',
  hid: 'subtile'
}, {
  type: 'qualifier1',
  hid: 'swift'
}, {
  type: 'qualifier1',
  hid: 'unwavering'
}, {
  type: 'qualifier1',
  hid: 'used'
}, {
  type: 'qualifier1',
  hid: 'whirling'
}, {
  type: 'qualifier1',
  hid: 'wooden'
}, {
  type: 'qualifier2',
  hid: 'adjudicator'
}, {
  type: 'qualifier2',
  hid: 'ambassador'
}, {
  type: 'qualifier2',
  hid: 'ancients'
}, {
  type: 'qualifier2',
  hid: 'apprentice'
}, {
  type: 'qualifier2',
  hid: 'assaulting'
}, {
  type: 'qualifier2',
  hid: 'beginner'
}, {
  type: 'qualifier2',
  hid: 'brave'
}, {
  type: 'qualifier2',
  hid: 'conqueror'
}, {
  type: 'qualifier2',
  hid: 'cruel_tyrant'
}, {
  type: 'qualifier2',
  hid: 'defender'
}, {
  type: 'qualifier2',
  hid: 'destructor'
}, {
  type: 'qualifier2',
  hid: 'dwarven'
}, {
  type: 'qualifier2',
  hid: 'elite'
}, {
  type: 'qualifier2',
  hid: 'elven'
}, {
  type: 'qualifier2',
  hid: 'executioner'
}, {
  type: 'qualifier2',
  hid: 'expert'
}, {
  type: 'qualifier2',
  hid: 'explorer'
}, {
  type: 'qualifier2',
  hid: 'gladiator'
}, {
  type: 'qualifier2',
  hid: 'goddess'
}, {
  type: 'qualifier2',
  hid: 'guard'
}, {
  type: 'qualifier2',
  hid: 'hunter'
}, {
  type: 'qualifier2',
  hid: 'judgement'
}, {
  type: 'qualifier2',
  hid: 'king'
}, {
  type: 'qualifier2',
  hid: 'mediator'
}, {
  type: 'qualifier2',
  hid: 'mercenary'
}, {
  type: 'qualifier2',
  hid: 'militia'
}, {
  type: 'qualifier2',
  hid: 'nightmare'
}, {
  type: 'qualifier2',
  hid: 'noble'
}, {
  type: 'qualifier2',
  hid: 'noob'
}, {
  type: 'qualifier2',
  hid: 'pilgrim'
}, {
  type: 'qualifier2',
  hid: 'pioneer'
}, {
  type: 'qualifier2',
  hid: 'pirate'
}, {
  type: 'qualifier2',
  hid: 'profane'
}, {
  type: 'qualifier2',
  hid: 'ranger'
}, {
  type: 'qualifier2',
  hid: 'sorcerer'
}, {
  type: 'qualifier2',
  hid: 'tormentor'
}, {
  type: 'qualifier2',
  hid: 'training'
}, {
  type: 'qualifier2',
  hid: 'traveler'
}, {
  type: 'qualifier2',
  hid: 'twink'
}, {
  type: 'qualifier2',
  hid: 'tyrant'
}, {
  type: 'qualifier2',
  hid: 'upholder'
}, {
  type: 'qualifier2',
  hid: 'warfield_king'
}, {
  type: 'qualifier2',
  hid: 'warfield'
}, {
  type: 'qualifier2',
  hid: 'warrior'
}, {
  type: 'qualifier2',
  hid: 'wise'
}, {
  type: 'qualifier2',
  hid: 'woodsman'
}];
exports.ENTRIES = ENTRIES;
},{}],"H6tG":[function(require,module,exports) {
"use strict"; /////////////////////

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WEAPON_QUALIFIERS2 = exports.WEAPON_QUALIFIERS1 = exports.WEAPON_BASES = exports.i18n_messages = void 0;

var types_1 = require("../types");

var i18n_en_1 = __importDefault(require("./i18n_en"));

var entries_1 = require("./entries"); /////////////////////


var i18n_messages = {
  en: i18n_en_1.default
};
exports.i18n_messages = i18n_messages; /////////////////////

var WEAPON_BASES = entries_1.ENTRIES.filter(function (armor_component) {
  return armor_component.type === types_1.WeaponPartType.base;
});
exports.WEAPON_BASES = WEAPON_BASES;
var WEAPON_QUALIFIERS1 = entries_1.ENTRIES.filter(function (armor_component) {
  return armor_component.type === types_1.WeaponPartType.qualifier1;
});
exports.WEAPON_QUALIFIERS1 = WEAPON_QUALIFIERS1;
var WEAPON_QUALIFIERS2 = entries_1.ENTRIES.filter(function (armor_component) {
  return armor_component.type === types_1.WeaponPartType.qualifier2;
});
exports.WEAPON_QUALIFIERS2 = WEAPON_QUALIFIERS2;
},{"../types":"OBx0","./i18n_en":"L3nM","./entries":"Yi26"}],"VELl":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i18n_messages = exports.enhance = exports.create = void 0;

var definitions_1 = require("@tbrpg/definitions");

var random_1 = require("@offirmo/random");

var data_1 = require("./data");

Object.defineProperty(exports, "i18n_messages", {
  enumerable: true,
  get: function () {
    return data_1.i18n_messages;
  }
});

var consts_1 = require("./consts");

var selectors_1 = require("./selectors"); /////////////////////


function pick_random_quality(rng) {
  // see armor for numbers
  var p = random_1.Random.integer(1, 1000)(rng);
  if (p <= 300) return definitions_1.ItemQuality.common;
  p -= 300;
  if (p <= 300) return definitions_1.ItemQuality.uncommon;
  p -= 300;
  if (p <= 250) return definitions_1.ItemQuality.rare;
  p -= 250;
  if (p <= 120) return definitions_1.ItemQuality.epic;
  return definitions_1.ItemQuality.legendary;
}

function pick_random_base(rng) {
  return random_1.Random.pick(rng, data_1.WEAPON_BASES).hid;
}

function pick_random_qualifier1(rng) {
  return random_1.Random.pick(rng, data_1.WEAPON_QUALIFIERS1).hid;
}

function pick_random_qualifier2(rng) {
  return random_1.Random.pick(rng, data_1.WEAPON_QUALIFIERS2).hid;
}

function pick_random_base_strength(rng, quality) {
  return random_1.Random.integer.apply(random_1.Random, selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[quality])(rng);
} /////////////////////


function create(rng, hints) {
  // TODO add a check for hints to be in existing components
  if (hints === void 0) {
    hints = {};
  }

  var base = definitions_1.create_item_base(definitions_1.InventorySlot.weapon, hints.quality || pick_random_quality(rng));

  var temp = __assign(__assign({}, base), {
    base_hid: hints.base_hid || pick_random_base(rng),
    qualifier1_hid: hints.qualifier1_hid || pick_random_qualifier1(rng),
    qualifier2_hid: hints.qualifier2_hid || pick_random_qualifier2(rng),
    base_strength: hints.base_strength || pick_random_base_strength(rng, base.quality),
    enhancement_level: hints.enhancement_level || consts_1.MIN_ENHANCEMENT_LEVEL
  });

  if (temp.base_strength < selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[temp.quality][0]) throw new Error(consts_1.LIB + ": create(): base_strength too low for this quality!");
  if (temp.base_strength > selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[temp.quality][1]) throw new Error(consts_1.LIB + ": create(): base_strength too high for this quality!");
  return temp;
}

exports.create = create;

function enhance(weapon) {
  if (weapon.enhancement_level >= consts_1.MAX_ENHANCEMENT_LEVEL) throw new Error('can’t enhance a weapon above the maximal enhancement level!');
  return __assign(__assign({}, weapon), {
    enhancement_level: weapon.enhancement_level + 1
  });
}

exports.enhance = enhance; /////////////////////
},{"@tbrpg/definitions":"PTCd","@offirmo/random":"OV1n","./data":"H6tG","./consts":"KGKM","./selectors":"brZ8"}],"GMuy":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generate_random_demo_weapon = exports.DEMO_WEAPON_2 = exports.DEMO_WEAPON_1 = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var random_1 = require("@offirmo/random");

var definitions_1 = require("@tbrpg/definitions");

var consts_1 = require("./consts");

var data_1 = require("./data");

var selectors_1 = require("./selectors");

var state_1 = require("./state"); /////////////////////


var DEMO_WEAPON_1 = state_utils_1.enforce_immutability({
  uuid: 'uu1~test~demo~weapon~001',
  element_type: definitions_1.ElementType.item,
  slot: definitions_1.InventorySlot.weapon,
  base_hid: data_1.WEAPON_BASES[0].hid,
  qualifier1_hid: data_1.WEAPON_QUALIFIERS1[0].hid,
  qualifier2_hid: data_1.WEAPON_QUALIFIERS2[0].hid,
  quality: definitions_1.ItemQuality.uncommon,
  base_strength: selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[definitions_1.ItemQuality.uncommon][0] + 1,
  enhancement_level: consts_1.MIN_ENHANCEMENT_LEVEL
});
exports.DEMO_WEAPON_1 = DEMO_WEAPON_1;
var DEMO_WEAPON_2 = state_utils_1.enforce_immutability({
  uuid: 'uu1~test~demo~weapon~002',
  element_type: definitions_1.ElementType.item,
  slot: definitions_1.InventorySlot.weapon,
  base_hid: data_1.WEAPON_BASES[1].hid,
  qualifier1_hid: data_1.WEAPON_QUALIFIERS1[1].hid,
  qualifier2_hid: data_1.WEAPON_QUALIFIERS2[1].hid,
  quality: definitions_1.ItemQuality.legendary,
  base_strength: selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[definitions_1.ItemQuality.legendary][1] - 1,
  enhancement_level: consts_1.MAX_ENHANCEMENT_LEVEL
});
exports.DEMO_WEAPON_2 = DEMO_WEAPON_2; // for demo purpose, all attributes having the same probability + also random enhancement level

function generate_random_demo_weapon(rng) {
  rng = rng || random_1.Random.engines.mt19937().autoSeed();
  return state_1.create(rng, {
    enhancement_level: random_1.Random.integer(consts_1.MIN_ENHANCEMENT_LEVEL, consts_1.MAX_ENHANCEMENT_LEVEL)(rng)
  });
}

exports.generate_random_demo_weapon = generate_random_demo_weapon; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","@offirmo/random":"OV1n","@tbrpg/definitions":"PTCd","./consts":"KGKM","./data":"H6tG","./selectors":"brZ8","./state":"VELl"}],"vyKQ":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compare_weapons_by_potential = void 0;

var definitions_1 = require("@tbrpg/definitions");

var selectors_1 = require("./selectors"); /////////////////////
// for sorting


function compare_weapons_by_potential(a, b) {
  var a_dmg = selectors_1.get_ultimate_medium_damage(a);
  var b_dmg = selectors_1.get_ultimate_medium_damage(b);
  if (a_dmg !== b_dmg) return b_dmg - a_dmg; // fallback to other attributes

  return definitions_1.compare_items_by_quality(a, b) || a.uuid.localeCompare(b.uuid);
}

exports.compare_weapons_by_potential = compare_weapons_by_potential; /////////////////////
},{"@tbrpg/definitions":"PTCd","./selectors":"brZ8"}],"qUBn":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./consts"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./compare"), exports);
},{"./types":"OBx0","./consts":"KGKM","./selectors":"brZ8","./state":"VELl","./examples":"GMuy","./compare":"vyKQ"}],"MK7T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MonsterRank = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var MonsterRank = typescript_string_enums_1.Enum('common', 'elite', 'boss');
exports.MonsterRank = MonsterRank; /////////////////////
},{"typescript-string-enums":"qyCc"}],"hqxw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CHARACTERS = void 0;
var CHARACTERS = {
  '01f400': {
    code_point: 128000,
    char: '🐀',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'rat'
    }
  },
  '01f401': {
    code_point: 128001,
    char: '🐁',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'mouse'
    }
  },
  '01f402': {
    code_point: 128002,
    char: '🐂',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'ox'
    }
  },
  '01f403': {
    code_point: 128003,
    char: '🐃',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'water buffalo'
    }
  },
  '01f404': {
    code_point: 128004,
    char: '🐄',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'cow'
    }
  },
  '01f405': {
    code_point: 128005,
    char: '🐅',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'tiger'
    }
  },
  '01f406': {
    code_point: 128006,
    char: '🐆',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'leopard'
    }
  },
  '01f407': {
    code_point: 128007,
    char: '🐇',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'rabbit'
    }
  },
  '01f408': {
    code_point: 128008,
    char: '🐈',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'cat'
    }
  },
  '01f409': {
    code_point: 128009,
    char: '🐉',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'dragon'
    }
  },
  '01f40a': {
    code_point: 128010,
    char: '🐊',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'crocodile'
    }
  },
  '01f40b': {
    code_point: 128011,
    char: '🐋',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'whale'
    }
  },
  '01f40c': {
    code_point: 128012,
    char: '🐌',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'snail'
    }
  },
  '01f40d': {
    code_point: 128013,
    char: '🐍',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'snake'
    }
  },
  '01f40e': {
    code_point: 128014,
    char: '🐎',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'horse'
    }
  },
  '01f40f': {
    code_point: 128015,
    char: '🐏',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'ram'
    }
  },
  '01f410': {
    code_point: 128016,
    char: '🐐',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'goat'
    }
  },
  '01f411': {
    code_point: 128017,
    char: '🐑',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'ewe'
    }
  },
  '01f412': {
    code_point: 128018,
    char: '🐒',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'monkey'
    }
  },
  '01f413': {
    code_point: 128019,
    char: '🐓',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'chicken'
    }
  },
  '01f414': {
    code_point: 128020,
    char: '🐔',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'chicken head'
    }
  },
  '01f415': {
    code_point: 128021,
    char: '🐕',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'dog'
    }
  },
  '01f416': {
    code_point: 128022,
    char: '🐖',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'pig'
    }
  },
  '01f417': {
    code_point: 128023,
    char: '🐗',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'boar'
    }
  },
  '01f418': {
    code_point: 128024,
    char: '🐘',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'elephant'
    }
  },
  '01f419': {
    code_point: 128025,
    char: '🐙',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'octopus'
    }
  },
  '01f41a': {
    code_point: 128026,
    char: '🐚',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'spiral shell'
    }
  },
  '01f41b': {
    code_point: 128027,
    char: '🐛',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'caterpillar'
    }
  },
  '01f41c': {
    code_point: 128028,
    char: '🐜',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'ant'
    }
  },
  '01f41d': {
    code_point: 128029,
    char: '🐝',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'bee'
    }
  },
  '01f41e': {
    code_point: 128030,
    char: '🐞',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'lady beetle'
    }
  },
  '01f41f': {
    code_point: 128031,
    char: '🐟',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'fish'
    }
  },
  '01f420': {
    code_point: 128032,
    char: '🐠',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'tropical fish'
    }
  },
  '01f421': {
    code_point: 128033,
    char: '🐡',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'blowfish'
    }
  },
  '01f422': {
    code_point: 128034,
    char: '🐢',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'turtle'
    }
  },
  '01f423': {
    code_point: 128035,
    char: '🐣',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'hatching chick'
    }
  },
  '01f424': {
    code_point: 128036,
    char: '🐤',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'baby chick'
    }
  },
  '01f425': {
    code_point: 128037,
    char: '🐥',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'baby chick'
    }
  },
  '01f426': {
    code_point: 128038,
    char: '🐦',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'pigeon'
    }
  },
  '01f427': {
    code_point: 128039,
    char: '🐧',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'penguin'
    }
  },
  '01f428': {
    code_point: 128040,
    char: '🐨',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'koala'
    }
  },
  '01f429': {
    code_point: 128041,
    char: '🐩',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'poodle'
    }
  },
  '01f42a': {
    code_point: 128042,
    char: '🐪',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'dromedary'
    }
  },
  '01f42b': {
    code_point: 128043,
    char: '🐫',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'camel'
    }
  },
  '01f42c': {
    code_point: 128044,
    char: '🐬',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'dolphin'
    }
  },
  '01f42d': {
    code_point: 128045,
    char: '🐭',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'mouse'
    }
  },
  '01f42e': {
    code_point: 128046,
    char: '🐮',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'cow'
    }
  },
  '01f42f': {
    code_point: 128047,
    char: '🐯',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'tiger'
    }
  },
  '01f430': {
    code_point: 128048,
    char: '🐰',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'rabbit'
    }
  },
  '01f431': {
    code_point: 128049,
    char: '🐱',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'cat'
    }
  },
  '01f432': {
    code_point: 128050,
    char: '🐲',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'dragon'
    }
  },
  '01f433': {
    code_point: 128051,
    char: '🐳',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'spouting whale'
    }
  },
  '01f434': {
    code_point: 128052,
    char: '🐴',
    taxonomy: ['animal', 'living'],
    tags: ['emoji'],
    properties: {
      description: 'horse'
    }
  },
  '01f435': {
    code_point: 128053,
    char: '🐵',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'monkey'
    }
  },
  '01f436': {
    code_point: 128054,
    char: '🐶',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'dog'
    }
  },
  '01f437': {
    code_point: 128055,
    char: '🐷',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'pig'
    }
  },
  '01f438': {
    code_point: 128056,
    char: '🐸',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'frog'
    }
  },
  '01f439': {
    code_point: 128057,
    char: '🐹',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'hamster'
    }
  },
  '01f43a': {
    code_point: 128058,
    char: '🐺',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji'],
    properties: {
      description: 'wolf'
    }
  },
  '01f43b': {
    code_point: 128059,
    char: '🐻',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'bear'
    }
  },
  '01f43c': {
    code_point: 128060,
    char: '🐼',
    taxonomy: ['animal', 'living', 'monster', 'face'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'panda'
    }
  },
  '01f43d': {
    code_point: 128061,
    char: '🐽',
    taxonomy: [],
    tags: ['emoji'],
    properties: {
      description: '???'
    }
  },
  '01f43e': {
    code_point: 128062,
    char: '🐾',
    taxonomy: [],
    tags: ['emoji'],
    properties: {
      description: '???'
    }
  },
  '01f43f': {
    code_point: 128063,
    char: '🐿',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'chipmunk'
    }
  },
  '01f5ff': {
    code_point: 128511,
    char: '🗿',
    taxonomy: ['monster'],
    tags: ['emoji'],
    properties: {
      description: 'golem'
    }
  },
  '01f47b': {
    code_point: 128123,
    char: '👻',
    taxonomy: ['monster'],
    tags: ['emoji'],
    properties: {
      description: 'ghost'
    }
  },
  '01f54a': {
    code_point: 128330,
    char: '🕊',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'dove'
    }
  },
  '01f577': {
    code_point: 128375,
    char: '🕷',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'spider'
    }
  },
  '01f980': {
    code_point: 129408,
    char: '🦀',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'crab'
    }
  },
  '01f981': {
    code_point: 129409,
    char: '🦁',
    taxonomy: ['animal', 'living'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'lion'
    }
  },
  '01f982': {
    code_point: 129410,
    char: '🦂',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'scorpion'
    }
  },
  '01f983': {
    code_point: 129411,
    char: '🦃',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'turkey'
    }
  },
  '01f984': {
    code_point: 129412,
    char: '🦄',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji'],
    properties: {
      description: 'unicorn'
    }
  },
  '01f985': {
    code_point: 129413,
    char: '🦅',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'eagle'
    }
  },
  '01f986': {
    code_point: 129414,
    char: '🦆',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'duck'
    }
  },
  '01f987': {
    code_point: 129415,
    char: '🦇',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'bat'
    }
  },
  '01f988': {
    code_point: 129416,
    char: '🦈',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'shark'
    }
  },
  '01f989': {
    code_point: 129417,
    char: '🦉',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'owl'
    }
  },
  '01f98a': {
    code_point: 129418,
    char: '🦊',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'face'],
    properties: {
      description: 'fox'
    }
  },
  '01f98b': {
    code_point: 129419,
    char: '🦋',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'butterfly'
    }
  },
  '01f98c': {
    code_point: 129420,
    char: '🦌',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'deer'
    }
  },
  '01f98d': {
    code_point: 129421,
    char: '🦍',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'gorilla'
    }
  },
  '01f98e': {
    code_point: 129422,
    char: '🦎',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'lizard'
    }
  },
  '01f98f': {
    code_point: 129423,
    char: '🦏',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'rhinoceros'
    }
  },
  '01f990': {
    code_point: 129424,
    char: '🦐',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'shrimp'
    }
  },
  '01f991': {
    code_point: 129425,
    char: '🦑',
    taxonomy: ['animal', 'living', 'monster'],
    tags: ['emoji', 'full'],
    properties: {
      description: 'squid'
    }
  }
};
exports.CHARACTERS = CHARACTERS;
},{}],"jcuk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNICODE_CHARS = exports.UnicodeCharDetails = void 0;

var unicode_1 = require("./unicode");

Object.defineProperty(exports, "UnicodeCharDetails", {
  enumerable: true,
  get: function () {
    return unicode_1.UnicodeCharDetails;
  }
});

var unicode_2 = require("./unicode");

Object.defineProperty(exports, "UNICODE_CHARS", {
  enumerable: true,
  get: function () {
    return unicode_2.CHARACTERS;
  }
});
},{"./unicode":"hqxw"}],"O8Jf":[function(require,module,exports) {
"use strict";

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

var _a;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ENTRIES = void 0;

var unicode_data_1 = require("@offirmo-private/unicode-data");

var EMOJI_ENTRIES = Object.keys(unicode_data_1.UNICODE_CHARS).map(function (key) {
  return unicode_data_1.UNICODE_CHARS[key];
}).filter(function (charDetails) {
  return charDetails.taxonomy.includes('monster');
}).map(function (charDetails) {
  return {
    name: charDetails.properties.description,
    emoji: charDetails.char
  };
});
var EXTRA_ENTRIES = [{
  name: 'drop bear',
  emoji: '🐨'
}, {
  name: 'dahu',
  emoji: '🐐'
}, // https://en.wikipedia.org/wiki/Fearsome_critters
{
  name: 'hoop snake',
  emoji: '🐍'
}, {
  name: 'joint snake',
  emoji: '🐍'
}, {
  name: 'spreading adder',
  emoji: '🐍'
}, {
  name: 'fur-bearing truit',
  emoji: '🐡'
}, {
  name: 'splintercat',
  emoji: '🐡'
}];

var ENTRIES = (_a = []).concat.apply(_a, __spreadArray(__spreadArray([], EMOJI_ENTRIES), EXTRA_ENTRIES));

exports.ENTRIES = ENTRIES;
},{"@offirmo-private/unicode-data":"jcuk"}],"E2fy":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = void 0;

var random_1 = require("@offirmo/random");

var definitions_1 = require("@tbrpg/definitions");

var types_1 = require("./types");

var data_1 = require("./data"); /////////////////////


function pick_random_rank(rng) {
  // on 10 times, 1 boss, 2 elites, 7 common
  return random_1.Random.bool(0.7)(rng) ? types_1.MonsterRank.common : random_1.Random.bool(2 / 3.)(rng) ? types_1.MonsterRank.elite : types_1.MonsterRank.boss;
} /////////////////////


var MONSTER_RELATIVE_LEVEL_SPREAD = 0.1;

function create(rng, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var raw = hints.name ? data_1.ENTRIES.find(function (raw_monster) {
    return raw_monster.name === hints.name;
  }) : random_1.Random.pick(rng, data_1.ENTRIES);
  if (!raw) throw new Error("OMR Monster create: can't find a monster corresponding to hint \"" + hints.name + "\"!");
  var level = -1;
  if (!hints.level) level = random_1.Random.integer(1, definitions_1.MAX_LEVEL)(rng);else {
    // stay close to the given level
    var reference_level = hints.level;
    var variation = Math.round(Math.max(1, reference_level * MONSTER_RELATIVE_LEVEL_SPREAD));
    level = Math.max(1, Math.min(definitions_1.MAX_LEVEL, reference_level + random_1.Random.integer(-variation, variation)(rng)));
  }
  return {
    name: raw.name,
    level: level,
    rank: hints.rank || pick_random_rank(rng),
    possible_emoji: hints.possible_emoji || raw.emoji
  };
}

exports.create = create; /////////////////////
},{"@offirmo/random":"OV1n","@tbrpg/definitions":"PTCd","./types":"MK7T","./data":"O8Jf"}],"O9LR":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generate_random_demo_monster = exports.DEMO_MONSTER_01 = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var random_1 = require("@offirmo/random");

var types_1 = require("./types");

var state_1 = require("./state"); /////////////////////


var DEMO_MONSTER_01 = state_utils_1.enforce_immutability({
  name: 'chicken',
  level: 7,
  rank: types_1.MonsterRank.elite,
  possible_emoji: '🐓'
});
exports.DEMO_MONSTER_01 = DEMO_MONSTER_01; // for demo purpose, all attributes having the same probability + also random enhancement level

function generate_random_demo_monster() {
  var rng = random_1.Random.engines.mt19937().autoSeed();
  return state_1.create(rng);
}

exports.generate_random_demo_monster = generate_random_demo_monster; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","@offirmo/random":"OV1n","./types":"MK7T","./state":"E2fy"}],"iTrv":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./examples"), exports);
},{"./types":"MK7T","./state":"E2fy","./examples":"O9LR"}],"D6Ng":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CharacterClass = exports.CharacterAttribute = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var CharacterAttribute = typescript_string_enums_1.Enum( // We replicate the attributes from the original game
// However it's hard to map those to power consistently...
// To improve in a future game!
// trying to map to: might / mind / moxie (from https://www.forgeandfortune.com/)
'level', // any
'strength', // might
'health', // might + any
'wisdom', // mind
'mana', // mind + any
'luck', // moxie + any
'charisma', // moxie
'agility');
exports.CharacterAttribute = CharacterAttribute; // I arbitrarily skip the classes I find uncool / unclear / better fit for a "job"

var CharacterClass = typescript_string_enums_1.Enum( // initial (also Korean game)
'novice', // classic DnD
// https://www.dndbeyond.com/characters/classes
'barbarian', //'bard',
//'cleric',
'druid', 'warrior', // fighter is too generic for my taste
// monk is unclear IMO
'paladin', //'ranger',
'rogue', 'sorcerer', 'warlock', 'wizard', 'darkness hunter', // better than blood
// additionals from WoW
// https://worldofwarcraft.com/en-us/game/classes
'hunter', 'priest', //'shaman',
'death knight', 'mage', // additionals, from GW2
// https://www.guildwars2.com/en/the-game/professions/
'engineer', 'thief', // extra unofficial DnD
// https://en.wikipedia.org/wiki/Character_class_(Dungeons_%26_Dragons)
'assassin', 'illusionist', //'witch',
//'witch doctor',
// extras, sometime from pop culture
'knight', 'pirate', 'ninja', //'spy',
'corsair', 'necromancer', // mangas
'sculptor', 'summoner');
exports.CharacterClass = CharacterClass; /////////////////////
},{"typescript-string-enums":"qyCc"}],"OUEg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var types_1 = require("./types"); /////////////////////
// a full featured, non-trivial demo state
// useful for demos and unit tests


var DEMO_STATE = state_utils_1.enforce_immutability({
  schema_version: 2,
  revision: 42,
  name: 'Perte',
  klass: types_1.CharacterClass.paladin,
  attributes: {
    level: 13,
    health: 12,
    mana: 23,
    strength: 4,
    agility: 5,
    charisma: 6,
    wisdom: 7,
    luck: 8
  }
});
exports.DEMO_STATE = DEMO_STATE;
},{"@offirmo-private/state-utils":"PmVE","./types":"D6Ng"}],"snOs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@tbrpg/state--character';
exports.LIB = LIB;
var SCHEMA_VERSION = 2;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
},{}],"DXkp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("./consts");

function get_lib_SEC(parent) {
  // TODO review memoize / not mutate the parent??
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: 'state-character'
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","./consts":"snOs"}],"cgV6":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.increase_stat = exports.switch_class = exports.rename = exports.create = exports.CHARACTER_CLASSES = exports.CHARACTER_ATTRIBUTES_SORTED = exports.CHARACTER_ATTRIBUTES = exports.DEFAULT_AVATAR_NAME = exports.State = exports.CharacterAttributes = exports.CharacterClass = exports.CharacterAttribute = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var types_1 = require("./types");

Object.defineProperty(exports, "CharacterAttribute", {
  enumerable: true,
  get: function () {
    return types_1.CharacterAttribute;
  }
});
Object.defineProperty(exports, "CharacterClass", {
  enumerable: true,
  get: function () {
    return types_1.CharacterClass;
  }
});
Object.defineProperty(exports, "CharacterAttributes", {
  enumerable: true,
  get: function () {
    return types_1.CharacterAttributes;
  }
});
Object.defineProperty(exports, "State", {
  enumerable: true,
  get: function () {
    return types_1.State;
  }
});

var sec_1 = require("./sec"); /////////////////////


var DEFAULT_AVATAR_NAME = '[new player]';
exports.DEFAULT_AVATAR_NAME = DEFAULT_AVATAR_NAME;
var CHARACTER_ATTRIBUTES = typescript_string_enums_1.Enum.keys(types_1.CharacterAttribute);
exports.CHARACTER_ATTRIBUTES = CHARACTER_ATTRIBUTES;
var CHARACTER_ATTRIBUTES_SORTED = ['level', 'health', 'mana', 'strength', 'agility', 'charisma', 'wisdom', 'luck'];
exports.CHARACTER_ATTRIBUTES_SORTED = CHARACTER_ATTRIBUTES_SORTED;
sec_1.get_lib_SEC().xTry('boot checks', function () {
  if (CHARACTER_ATTRIBUTES.length !== CHARACTER_ATTRIBUTES_SORTED.length) throw new Error(consts_1.LIB + ": CHARACTER_ATTRIBUTES to update!");
});
var CHARACTER_CLASSES = typescript_string_enums_1.Enum.keys(types_1.CharacterClass);
exports.CHARACTER_CLASSES = CHARACTER_CLASSES; ///////

function create(SEC) {
  return sec_1.get_lib_SEC(SEC).xTry('create', function () {
    return state_utils_1.enforce_immutability({
      schema_version: consts_1.SCHEMA_VERSION,
      revision: 0,
      name: DEFAULT_AVATAR_NAME,
      klass: types_1.CharacterClass.novice,
      attributes: {
        level: 1,
        // TODO improve this one day
        health: 1,
        mana: 0,
        strength: 1,
        agility: 1,
        charisma: 1,
        wisdom: 1,
        luck: 1
      }
    });
  });
}

exports.create = create; /////////////////////

function rename(SEC, state, new_name) {
  return sec_1.get_lib_SEC(SEC).xTry('rename', function () {
    // TODO name normalization
    if (!new_name) throw new Error(consts_1.LIB + ": Error while renaming to \"" + new_name + "\": invalid target value!"); // TODO details

    if (new_name === state.name) return state;
    return state_utils_1.enforce_immutability(__assign(__assign({}, state), {
      name: new_name,
      revision: state.revision + 1
    }));
  });
}

exports.rename = rename;

function switch_class(SEC, state, klass) {
  return sec_1.get_lib_SEC(SEC).xTry('switch_class', function () {
    if (klass === state.klass) return state;
    if (!typescript_string_enums_1.Enum.isType(types_1.CharacterClass, klass)) throw new Error(consts_1.LIB + ": \"" + klass + "\" is not a valid class!");
    return state_utils_1.enforce_immutability(__assign(__assign({}, state), {
      klass: klass,
      revision: state.revision + 1
    }));
  });
}

exports.switch_class = switch_class;

function increase_stat(SEC, state, stat, amount) {
  if (amount === void 0) {
    amount = 1;
  }

  return sec_1.get_lib_SEC(SEC).xTry('increase_stat', function () {
    var _a;

    if (amount <= 0) throw new Error(consts_1.LIB + ": Error while increasing stat \"" + stat + "\": invalid amount!"); // TODO details
    // TODO stats caps?

    return state_utils_1.enforce_immutability(__assign(__assign({}, state), {
      attributes: __assign(__assign({}, state.attributes), (_a = {}, _a[stat] = state.attributes[stat] + amount, _a)),
      revision: state.revision + 1
    }));
  });
}

exports.increase_stat = increase_stat; /////////////////////
},{"typescript-string-enums":"qyCc","@offirmo-private/state-utils":"PmVE","./consts":"snOs","./types":"D6Ng","./sec":"DXkp"}],"xpux":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIGRATION_HINTS_FOR_TESTS = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var sec_1 = require("./sec"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


var MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});
exports.MIGRATION_HINTS_FOR_TESTS = MIGRATION_HINTS_FOR_TESTS; /////////////////////

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  return sec_1.get_lib_SEC(SEC).xTry('migrate_to_latest', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    var existing_version = (legacy_state === null || legacy_state === void 0 ? void 0 : legacy_state.schema_version) || 0;
    SEC.setAnalyticsAndErrorDetails({
      version_from: existing_version,
      version_to: consts_1.SCHEMA_VERSION
    });
    if (existing_version > consts_1.SCHEMA_VERSION) throw new Error('Your data is from a more recent version of this lib. Please update!');
    var state = legacy_state; // for starter, may actually be true

    if (existing_version < consts_1.SCHEMA_VERSION) {
      logger.warn(consts_1.LIB + ": attempting to migrate schema from v" + existing_version + " to v" + consts_1.SCHEMA_VERSION + "\u2026");
      SEC.fireAnalyticsEvent('schema_migration.began');

      try {
        state = migrate_to_2(SEC, legacy_state, hints);
      } catch (err) {
        SEC.fireAnalyticsEvent('schema_migration.failed');
        throw err;
      }

      logger.info(consts_1.LIB + ": schema migration successful.");
      SEC.fireAnalyticsEvent('schema_migration.ended');
    } // migrate sub-reducers if any...


    return state;
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

function migrate_to_2(SEC, legacy_state, hints) {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
}
},{"@offirmo-private/state-utils":"PmVE","./consts":"snOs","./sec":"DXkp"}],"oDfL":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"D6Ng","./examples":"OUEg","./state":"cgV6","./migrations":"xpux"}],"ZSqk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Currency = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var Currency = typescript_string_enums_1.Enum('coin', 'token');
exports.Currency = Currency; /////////////////////
},{"typescript-string-enums":"qyCc"}],"f4ZL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@oh-my-rpg/state-wallet';
exports.LIB = LIB;
var SCHEMA_VERSION = 1;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
},{}],"Ec3T":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iterables_currency = exports.get_currency_amount = exports.remove_amount = exports.add_amount = exports.create = exports.ALL_CURRENCIES = void 0;

var consts_1 = require("./consts");

var types_1 = require("./types"); /////////////////////


var ALL_CURRENCIES = [types_1.Currency.coin, types_1.Currency.token];
exports.ALL_CURRENCIES = ALL_CURRENCIES;

function create() {
  return {
    schema_version: consts_1.SCHEMA_VERSION,
    revision: 0,
    coin_count: 0,
    token_count: 0
  };
}

exports.create = create; /////////////////////

function currency_to_state_entry(currency) {
  switch (currency) {
    case types_1.Currency.coin:
    case types_1.Currency.token:
      return currency + "_count";

    default:
      throw new Error("state-wallet: unrecognized currency: \"" + currency);
  }
}

function change_amount_by(state, currency, amount) {
  var _a;

  var state_entry = currency_to_state_entry(currency);
  return __assign(__assign({}, state), (_a = {}, _a[state_entry] = state[state_entry] + amount, _a.revision = state.revision + 1, _a));
} /////////////////////


function add_amount(state, currency, amount) {
  if (amount <= 0) throw new Error('state-wallet: can’t add a <= 0 amount');
  return change_amount_by(state, currency, amount);
}

exports.add_amount = add_amount;

function remove_amount(state, currency, amount) {
  if (amount <= 0) throw new Error('state-wallet: can’t remove a <= 0 amount');
  if (amount > get_currency_amount(state, currency)) throw new Error('state-wallet: can’t remove more than available, no credit !');
  return change_amount_by(state, currency, -amount);
}

exports.remove_amount = remove_amount; /////////////////////

function get_currency_amount(state, currency) {
  return state[currency_to_state_entry(currency)];
}

exports.get_currency_amount = get_currency_amount;

function iterables_currency(state) {
  return __generator(this, function (_a) {
    switch (_a.label) {
      case 0:
        return [5
        /*yield**/
        , __values(ALL_CURRENCIES)];

      case 1:
        _a.sent();

        return [2
        /*return*/
        ];
    }
  });
}

exports.iterables_currency = iterables_currency; /////////////////////
},{"./consts":"f4ZL","./types":"ZSqk"}],"OeNK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils"); /////////////////////
// a full featured, non-trivial demo state
// useful for demos and unit tests


var DEMO_STATE = state_utils_1.enforce_immutability({
  schema_version: 1,
  revision: 42,
  coin_count: 23456,
  token_count: 89
});
exports.DEMO_STATE = DEMO_STATE;
},{"@offirmo-private/state-utils":"PmVE"}],"rWLd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("./consts");

function get_lib_SEC(parent) {
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: 'state-wallet'
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","./consts":"f4ZL"}],"DFP8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIGRATION_HINTS_FOR_TESTS = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var sec_1 = require("./sec"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


var MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});
exports.MIGRATION_HINTS_FOR_TESTS = MIGRATION_HINTS_FOR_TESTS; /////////////////////

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var existing_version = legacy_state && legacy_state.schema_version || 0;
  SEC = sec_1.get_lib_SEC(SEC).setAnalyticsAndErrorDetails({
    version_from: existing_version,
    version_to: consts_1.SCHEMA_VERSION
  });
  return SEC.xTry('migrate_to_latest', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    if (existing_version > consts_1.SCHEMA_VERSION) throw new Error('Your data is from a more recent version of this lib. Please update!');
    var state = legacy_state; // for starter

    if (existing_version < consts_1.SCHEMA_VERSION) {
      logger.warn(consts_1.LIB + ": attempting to migrate schema from v" + existing_version + " to v" + consts_1.SCHEMA_VERSION + ":");
      SEC.fireAnalyticsEvent('schema_migration.began');

      try {
        state = migrate_to_2(SEC, legacy_state, hints);
      } catch (err) {
        SEC.fireAnalyticsEvent('schema_migration.failed');
        throw err;
      }

      logger.info(consts_1.LIB + ": schema migration successful.");
      SEC.fireAnalyticsEvent('schema_migration.ended');
    } // migrate sub-reducers if any...


    return state;
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

function migrate_to_2(SEC, legacy_state, hints) {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
}
},{"@offirmo-private/state-utils":"PmVE","./consts":"f4ZL","./sec":"rWLd"}],"V5wo":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"ZSqk","./state":"Ec3T","./examples":"OeNK","./migrations":"DFP8"}],"OX0r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Item = void 0;

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "Item", {
  enumerable: true,
  get: function () {
    return definitions_1.Item;
  }
}); /////////////////////
},{"@tbrpg/definitions":"PTCd"}],"Rz74":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArmorPartType = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var ArmorPartType = typescript_string_enums_1.Enum('base', 'qualifier1', 'qualifier2');
exports.ArmorPartType = ArmorPartType; /////////////////////
},{"typescript-string-enums":"qyCc"}],"kTX1":[function(require,module,exports) {
"use strict"; ////////////////////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MAX_ENHANCEMENT_LEVEL = exports.MIN_ENHANCEMENT_LEVEL = exports.LIB = void 0;
var LIB = '@oh-my-rpg/logic-armors';
exports.LIB = LIB; //const SCHEMA_VERSION: number = 2

var MIN_ENHANCEMENT_LEVEL = 0;
exports.MIN_ENHANCEMENT_LEVEL = MIN_ENHANCEMENT_LEVEL;
var MAX_ENHANCEMENT_LEVEL = 8;
exports.MAX_ENHANCEMENT_LEVEL = MAX_ENHANCEMENT_LEVEL; ////////////////////////////////////
},{}],"Cxnb":[function(require,module,exports) {
"use strict"; ////////////////////////////////////

var _a, _b;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_at_max_enhancement = exports.matches = exports.get_ultimate_medium_damage_reduction = exports.get_medium_damage_reduction = exports.get_damage_reduction_interval = exports.BASE_STRENGTH_INTERVAL_BY_QUALITY = exports.OVERALL_STRENGTH_INTERVAL_BY_QUALITY = exports.ATTACK_VS_DEFENSE_RATIO = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var definitions_1 = require("@tbrpg/definitions");

var consts_1 = require("./consts"); ////////////////////////////////////


exports.ATTACK_VS_DEFENSE_RATIO = 1.; /////////////////////
// see spreadsheet for calculation

var ENHANCEMENT_MULTIPLIER = 0.1;
var MAX_POSSIBLE_ENHANCEMENT_RATIO = 1 + consts_1.MAX_ENHANCEMENT_LEVEL * ENHANCEMENT_MULTIPLIER;
var OVERALL_STRENGTH_INTERVAL_BY_QUALITY = (_a = {}, _a[definitions_1.ItemQuality.common] = [1 * exports.ATTACK_VS_DEFENSE_RATIO, 999 * exports.ATTACK_VS_DEFENSE_RATIO], _a[definitions_1.ItemQuality.uncommon] = [1000 * exports.ATTACK_VS_DEFENSE_RATIO, 2999 * exports.ATTACK_VS_DEFENSE_RATIO], _a[definitions_1.ItemQuality.rare] = [3500 * exports.ATTACK_VS_DEFENSE_RATIO, 9999 * exports.ATTACK_VS_DEFENSE_RATIO], _a[definitions_1.ItemQuality.epic] = [11000 * exports.ATTACK_VS_DEFENSE_RATIO, 29999 * exports.ATTACK_VS_DEFENSE_RATIO], _a[definitions_1.ItemQuality.legendary] = [35000 * exports.ATTACK_VS_DEFENSE_RATIO, 99999 * exports.ATTACK_VS_DEFENSE_RATIO], _a[definitions_1.ItemQuality.artifact] = [35000 * exports.ATTACK_VS_DEFENSE_RATIO, 99999 * exports.ATTACK_VS_DEFENSE_RATIO], _a);
exports.OVERALL_STRENGTH_INTERVAL_BY_QUALITY = OVERALL_STRENGTH_INTERVAL_BY_QUALITY;
if (Object.keys(OVERALL_STRENGTH_INTERVAL_BY_QUALITY).length !== typescript_string_enums_1.Enum.keys(definitions_1.ItemQuality).length) throw new Error(consts_1.LIB + " overall - outdated code!");
var SPREAD_PCT_BY_QUALITY = (_b = {}, _b[definitions_1.ItemQuality.common] = 0.10, _b[definitions_1.ItemQuality.uncommon] = 0.09, _b[definitions_1.ItemQuality.rare] = 0.08, _b[definitions_1.ItemQuality.epic] = 0.07, _b[definitions_1.ItemQuality.legendary] = 0.05, _b[definitions_1.ItemQuality.artifact] = 0.05, _b);
if (Object.keys(SPREAD_PCT_BY_QUALITY).length !== typescript_string_enums_1.Enum.keys(definitions_1.ItemQuality).length) throw new Error(consts_1.LIB + " spread - outdated code!");
var TEMP_BASE_STRENGTH_INTERVAL_BY_QUALITY = {};
Object.keys(OVERALL_STRENGTH_INTERVAL_BY_QUALITY).forEach(function (k) {
  var quality = k;
  var _a = OVERALL_STRENGTH_INTERVAL_BY_QUALITY[quality],
      overall_min = _a[0],
      overall_max = _a[1];
  var spread_pct = SPREAD_PCT_BY_QUALITY[quality]; //console.log({quality, overall_min, overall_max})

  var base_min = Math.floor(overall_min / (1 - spread_pct) / 1);
  var base_max = Math.ceil(overall_max / (1 + spread_pct) / MAX_POSSIBLE_ENHANCEMENT_RATIO);
  /*console.log({base_min, base_max})
  for(let i = 0; i < 9; ++i) {
      console.log({
          i,
          dmg_min: Math.round(base_min * (1 - spread_pct) * (1 + i * ENHANCEMENT_MULTIPLIER)),
          dmg_max: Math.round(base_max * (1 + spread_pct) * (1 + i * ENHANCEMENT_MULTIPLIER)),
      })
  }*/

  if (base_min >= base_max) throw new Error(consts_1.LIB + ": range assertion failed for \"" + quality + "\"!");
  TEMP_BASE_STRENGTH_INTERVAL_BY_QUALITY[quality] = [base_min, base_max];
});
var BASE_STRENGTH_INTERVAL_BY_QUALITY = TEMP_BASE_STRENGTH_INTERVAL_BY_QUALITY;
exports.BASE_STRENGTH_INTERVAL_BY_QUALITY = BASE_STRENGTH_INTERVAL_BY_QUALITY;

function get_interval(base_strength, quality, enhancement_level) {
  var spread_pct = SPREAD_PCT_BY_QUALITY[quality];
  var enhancement_ratio = 1 + ENHANCEMENT_MULTIPLIER * enhancement_level;
  var _a = OVERALL_STRENGTH_INTERVAL_BY_QUALITY[quality],
      overall_min = _a[0],
      overall_max = _a[1]; // Constrain interval due to rounding.
  // It shouldn't change the numbers a lot.

  var min_strength = Math.max(overall_min, Math.round(base_strength * (1 - spread_pct) * enhancement_ratio));
  var max_strength = Math.min(overall_max, Math.round(base_strength * (1 + spread_pct) * enhancement_ratio));
  return [min_strength, max_strength];
} /////////////////////


function get_damage_reduction_interval(armor) {
  return get_interval(armor.base_strength, armor.quality, armor.enhancement_level);
}

exports.get_damage_reduction_interval = get_damage_reduction_interval;

function get_medium_damage_reduction(armor) {
  var damage_range = get_damage_reduction_interval(armor);
  return Math.round((damage_range[0] + damage_range[1]) / 2);
}

exports.get_medium_damage_reduction = get_medium_damage_reduction;

function get_ultimate_medium_damage_reduction(armor) {
  var max_damage_range = get_interval(armor.base_strength, armor.quality, consts_1.MAX_ENHANCEMENT_LEVEL);
  return Math.round((max_damage_range[0] + max_damage_range[1]) / 2);
}

exports.get_ultimate_medium_damage_reduction = get_ultimate_medium_damage_reduction;

function matches(armor, elements) {
  var matches = true; // so far
  //console.log('matches', { armor, elements })

  if (!armor) throw new Error(consts_1.LIB + " matches: can't match nothing!");
  if (elements.slot && elements.slot !== definitions_1.InventorySlot.armor) throw new Error(consts_1.LIB + " matches: can't match against a non-armor slot \"" + elements.slot + "\"!");
  if (armor.slot !== definitions_1.InventorySlot.armor) throw new Error(consts_1.LIB + " matches: can't match a non-armor slot \"" + elements.slot + "\"!");
  Object.keys(elements).forEach(function (k) {
    if (!(k in armor)) throw new Error(consts_1.LIB + " matches: can't match on non-armor key \"" + k + "\"!");

    if (elements[k] !== armor[k]) {
      matches = false; //console.log('mismatched', { k, a: armor[k], b: elements[k]})
    }
  });
  return matches;
}

exports.matches = matches;

function is_at_max_enhancement(armor) {
  return armor.enhancement_level >= consts_1.MAX_ENHANCEMENT_LEVEL;
}

exports.is_at_max_enhancement = is_at_max_enhancement; /////////////////////
},{"typescript-string-enums":"qyCc","@tbrpg/definitions":"PTCd","./consts":"kTX1"}],"c8CA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var messages = {
  armor: {
    base: {
      'armguards': 'armguards',
      'belt': 'belt',
      'boots': 'boots',
      'bracers': 'bracers',
      'breastplate': 'breastplate',
      'cape': 'cape',
      'cloak': 'cloak',
      'crown': 'crown',
      'gauntlets': 'gauntlets',
      'gloves': 'gloves',
      'greaves': 'greaves',
      'hat': 'hat',
      'helmet': 'helmet',
      'leggings': 'leggings',
      'mantle': 'mantle',
      'pants': 'pants',
      'robe': 'robe',
      'shield': 'shield',
      'shoes': 'shoes',
      'shoulders': 'shoulders',
      'socks': 'socks'
    },
    qualifier1: {
      'admirable': 'admirable',
      'arcanic': 'arcanic',
      'bestial': 'bestial',
      'bone': 'bone',
      'brass': 'brass',
      'cardboard': 'cardboard',
      'complex': 'complex',
      'composite': 'composite',
      'consecrated': 'consecrated',
      'crafted': 'crafted',
      'cruel': 'cruel',
      'cunning': 'cunning',
      'cursed': 'cursed',
      'embroidered': 'embroidered',
      'emerald': 'emerald',
      'engraved': 'engraved',
      'forbidden': 'forbidden',
      'forgotten': 'forgotten',
      'ghost': 'ghost',
      'golden': 'golden',
      'heavy': 'heavy',
      'heroic': 'heroic',
      'holy': 'holy',
      'inflexible': 'inflexible',
      'invincible': 'invincible',
      'iron': 'iron',
      'jade': 'jade',
      'light': 'light',
      'living': 'living',
      'lost': 'lost',
      'mechanical': 'mechanical',
      'mysterious': 'mysterious',
      'old': 'old',
      'onyx': 'onyx',
      'overrated': 'overrated',
      'powerful': 'powerful',
      'practical': 'practical',
      'proven': 'proven',
      'raging': 'raging',
      'robust': 'robust',
      'sapphire': 'sapphire',
      'savage': 'savage',
      'scale': 'scale',
      'silver': 'silver',
      'simple': 'simple',
      'sinister': 'sinister',
      'skeleton': 'skeleton',
      'solid': 'solid',
      'steel': 'steel',
      'strange': 'strange',
      'subtile': 'subtle',
      'swift': 'swift',
      'unwavering': 'unwavering',
      'used': 'used',
      'whirling': 'whirling',
      'wooden': 'wooden',
      'adjudicator': 'adjudicator’s'
    },
    qualifier2: {
      'ambassador': 'ambassador’s',
      'ancients': 'of the ancients',
      'apprentice': 'apprentice’s',
      'assaulting': 'assaulting',
      'beginner': 'beginner’s',
      'brave': 'of the brave',
      'conqueror': 'conqueror’s',
      'cruel_tyrant': 'cruel tyrant’s',
      'defender': 'defender’s',
      'destructor': 'destructor’s',
      'dwarven': 'dwarven',
      'elite': 'elite',
      'elven': 'elven',
      'executioner': 'executioner’s',
      'expert': 'expert',
      'explorer': 'explorer’s',
      'gladiator': 'gladiator’s',
      'goddess': 'of the goddess',
      'guard': 'guard’s',
      'hunter': 'hunter’s',
      'judgement': 'of judgement',
      'king': 'king’s',
      'mediator': 'mediator’s',
      'mercenary': 'mercenary’s',
      'militia': 'militia’s',
      'nightmare': 'nightmare’s',
      'noble': 'noble’s',
      'noob': 'of the noob',
      'pilgrim': 'pilgrim’s',
      'pioneer': 'pioneer’s',
      'pirate': 'pirate’s',
      'profane': 'profane’s',
      'ranger': 'ranger’s',
      'sorcerer': 'sorcerer’s',
      'tormentor': 'tormentor’s',
      'training': 'training',
      'traveler': 'traveler’s',
      'twink': 'of the twink',
      'tyrant': 'tyrant’s',
      'upholder': 'upholder’s',
      'warfield_king': 'warfield king’s',
      'warfield': 'warfield’s',
      'warrior': 'warrior’s',
      'wise': 'of the wise',
      'woodsman': 'woodsman’s'
    }
  }
};
exports.default = messages;
},{}],"bNAJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ENTRIES = void 0;
var ENTRIES = [{
  type: 'base',
  hid: 'armguards'
}, {
  type: 'base',
  hid: 'belt'
}, {
  type: 'base',
  hid: 'boots'
}, {
  type: 'base',
  hid: 'bracers'
}, {
  type: 'base',
  hid: 'breastplate'
}, {
  type: 'base',
  hid: 'cloak'
}, {
  type: 'base',
  hid: 'crown'
}, {
  type: 'base',
  hid: 'gauntlets'
}, {
  type: 'base',
  hid: 'gloves'
}, {
  type: 'base',
  hid: 'greaves'
}, {
  type: 'base',
  hid: 'hat'
}, {
  type: 'base',
  hid: 'helmet'
}, {
  type: 'base',
  hid: 'leggings'
}, {
  type: 'base',
  hid: 'mantle'
}, {
  type: 'base',
  hid: 'pants'
}, {
  type: 'base',
  hid: 'robe'
}, {
  type: 'base',
  hid: 'shield'
}, {
  type: 'base',
  hid: 'shoes'
}, {
  type: 'base',
  hid: 'shoulders'
}, {
  type: 'base',
  hid: 'socks'
}, {
  type: 'qualifier1',
  hid: 'bone'
}, {
  type: 'qualifier1',
  hid: 'brass'
}, {
  type: 'qualifier1',
  hid: 'embroidered'
}, {
  type: 'qualifier1',
  hid: 'cardboard'
}, {
  type: 'qualifier1',
  hid: 'composite'
}, {
  type: 'qualifier1',
  hid: 'consecrated'
}, {
  type: 'qualifier1',
  hid: 'crafted'
}, {
  type: 'qualifier1',
  hid: 'cursed'
}, {
  type: 'qualifier1',
  hid: 'emerald'
}, {
  type: 'qualifier1',
  hid: 'engraved'
}, {
  type: 'qualifier1',
  hid: 'golden'
}, {
  type: 'qualifier1',
  hid: 'heavy'
}, {
  type: 'qualifier1',
  hid: 'holy'
}, {
  type: 'qualifier1',
  hid: 'invincible'
}, {
  type: 'qualifier1',
  hid: 'iron'
}, {
  type: 'qualifier1',
  hid: 'jade'
}, {
  type: 'qualifier1',
  hid: 'light'
}, {
  type: 'qualifier1',
  hid: 'mechanical'
}, {
  type: 'qualifier1',
  hid: 'mysterious'
}, {
  type: 'qualifier1',
  hid: 'old'
}, {
  type: 'qualifier1',
  hid: 'onyx'
}, {
  type: 'qualifier1',
  hid: 'powerful'
}, {
  type: 'qualifier1',
  hid: 'practical'
}, {
  type: 'qualifier1',
  hid: 'proven'
}, {
  type: 'qualifier1',
  hid: 'robust'
}, {
  type: 'qualifier1',
  hid: 'sapphire'
}, {
  type: 'qualifier1',
  hid: 'scale'
}, {
  type: 'qualifier1',
  hid: 'silver'
}, {
  type: 'qualifier1',
  hid: 'simple'
}, {
  type: 'qualifier1',
  hid: 'skeleton'
}, {
  type: 'qualifier1',
  hid: 'solid'
}, {
  type: 'qualifier1',
  hid: 'steel'
}, {
  type: 'qualifier1',
  hid: 'strange'
}, {
  type: 'qualifier1',
  hid: 'subtile'
}, {
  type: 'qualifier1',
  hid: 'swift'
}, {
  type: 'qualifier1',
  hid: 'unwavering'
}, {
  type: 'qualifier1',
  hid: 'used'
}, {
  type: 'qualifier1',
  hid: 'wooden'
}, {
  type: 'qualifier2',
  hid: 'ancients'
}, {
  type: 'qualifier2',
  hid: 'apprentice'
}, {
  type: 'qualifier2',
  hid: 'beginner'
}, {
  type: 'qualifier2',
  hid: 'brave'
}, {
  type: 'qualifier2',
  hid: 'conqueror'
}, {
  type: 'qualifier2',
  hid: 'cruel_tyrant'
}, {
  type: 'qualifier2',
  hid: 'defender'
}, {
  type: 'qualifier2',
  hid: 'destructor'
}, {
  type: 'qualifier2',
  hid: 'dwarven'
}, {
  type: 'qualifier2',
  hid: 'elite'
}, {
  type: 'qualifier2',
  hid: 'elven'
}, {
  type: 'qualifier2',
  hid: 'expert'
}, {
  type: 'qualifier2',
  hid: 'explorer'
}, {
  type: 'qualifier2',
  hid: 'gladiator'
}, {
  type: 'qualifier2',
  hid: 'goddess'
}, {
  type: 'qualifier2',
  hid: 'guard'
}, {
  type: 'qualifier2',
  hid: 'judgement'
}, {
  type: 'qualifier2',
  hid: 'king'
}, {
  type: 'qualifier2',
  hid: 'mediator'
}, {
  type: 'qualifier2',
  hid: 'mercenary'
}, {
  type: 'qualifier2',
  hid: 'militia'
}, {
  type: 'qualifier2',
  hid: 'nightmare'
}, {
  type: 'qualifier2',
  hid: 'noble'
}, {
  type: 'qualifier2',
  hid: 'noob'
}, {
  type: 'qualifier2',
  hid: 'pilgrim'
}, {
  type: 'qualifier2',
  hid: 'pioneer'
}, {
  type: 'qualifier2',
  hid: 'profane'
}, {
  type: 'qualifier2',
  hid: 'sorcerer'
}, {
  type: 'qualifier2',
  hid: 'tormentor'
}, {
  type: 'qualifier2',
  hid: 'training'
}, {
  type: 'qualifier2',
  hid: 'twink'
}, {
  type: 'qualifier2',
  hid: 'tyrant'
}, {
  type: 'qualifier2',
  hid: 'upholder'
}, {
  type: 'qualifier2',
  hid: 'warfield_king'
}, {
  type: 'qualifier2',
  hid: 'warfield'
}, {
  type: 'qualifier2',
  hid: 'warrior'
}, {
  type: 'qualifier2',
  hid: 'wise'
}];
exports.ENTRIES = ENTRIES;
},{}],"g3Fd":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ARMOR_QUALIFIERS2 = exports.ARMOR_QUALIFIERS1 = exports.ARMOR_BASES = exports.i18n_messages = void 0;

var types_1 = require("../types");

var i18n_en_1 = __importDefault(require("./i18n_en"));

var entries_1 = require("./entries"); /////////////////////


var i18n_messages = {
  en: i18n_en_1.default
};
exports.i18n_messages = i18n_messages;
var ARMOR_BASES = entries_1.ENTRIES.filter(function (armor_component) {
  return armor_component.type === types_1.ArmorPartType.base;
});
exports.ARMOR_BASES = ARMOR_BASES;
var ARMOR_QUALIFIERS1 = entries_1.ENTRIES.filter(function (armor_component) {
  return armor_component.type === types_1.ArmorPartType.qualifier1;
});
exports.ARMOR_QUALIFIERS1 = ARMOR_QUALIFIERS1;
var ARMOR_QUALIFIERS2 = entries_1.ENTRIES.filter(function (armor_component) {
  return armor_component.type === types_1.ArmorPartType.qualifier2;
});
exports.ARMOR_QUALIFIERS2 = ARMOR_QUALIFIERS2;
},{"../types":"Rz74","./i18n_en":"c8CA","./entries":"bNAJ"}],"jUcP":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i18n_messages = exports.enhance = exports.create = void 0;

var definitions_1 = require("@tbrpg/definitions");

var random_1 = require("@offirmo/random");

var data_1 = require("./data");

Object.defineProperty(exports, "i18n_messages", {
  enumerable: true,
  get: function () {
    return data_1.i18n_messages;
  }
});

var consts_1 = require("./consts");

var selectors_1 = require("./selectors"); /////////////////////


function pick_random_quality(rng) {
  // old
  // common    =  400/1000
  // uncommon  =  389/1000
  // rare:     =  200/1000
  // epic:     =   10/1000
  // legendary =    1/1000
  // recalculated 2018/12/03
  // we want a legendary drop every 2 month
  // currently computed = 60 drops / 2 month
  // that gives:
  // common    =  300/1000
  // uncommon  =  300/1000
  // rare:     =  250/1000
  // epic:     =  120/1000
  // legendary =   30/1000
  var p = random_1.Random.integer(1, 1000)(rng);
  if (p <= 300) return definitions_1.ItemQuality.common;
  p -= 300;
  if (p <= 300) return definitions_1.ItemQuality.uncommon;
  p -= 300;
  if (p <= 250) return definitions_1.ItemQuality.rare;
  p -= 250;
  if (p <= 120) return definitions_1.ItemQuality.epic;
  return definitions_1.ItemQuality.legendary;
}

function pick_random_base(rng) {
  return random_1.Random.pick(rng, data_1.ARMOR_BASES).hid;
}

function pick_random_qualifier1(rng) {
  return random_1.Random.pick(rng, data_1.ARMOR_QUALIFIERS1).hid;
}

function pick_random_qualifier2(rng) {
  return random_1.Random.pick(rng, data_1.ARMOR_QUALIFIERS2).hid;
}

function pick_random_base_strength(rng, quality) {
  return random_1.Random.integer.apply(random_1.Random, selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[quality])(rng);
} /////////////////////


function create(rng, hints) {
  // TODO add a check for hints to be in existing components
  if (hints === void 0) {
    hints = {};
  }

  var base = definitions_1.create_item_base(definitions_1.InventorySlot.armor, hints.quality || pick_random_quality(rng));

  var temp = __assign(__assign({}, base), {
    base_hid: hints.base_hid || pick_random_base(rng),
    qualifier1_hid: hints.qualifier1_hid || pick_random_qualifier1(rng),
    qualifier2_hid: hints.qualifier2_hid || pick_random_qualifier2(rng),
    base_strength: hints.base_strength || pick_random_base_strength(rng, base.quality),
    enhancement_level: hints.enhancement_level || consts_1.MIN_ENHANCEMENT_LEVEL
  });

  if (temp.base_strength < selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[temp.quality][0]) throw new Error(consts_1.LIB + ": create(): base_strength too low for this quality!");
  if (temp.base_strength > selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[temp.quality][1]) throw new Error(consts_1.LIB + ": create(): base_strength too high for this quality!");
  return temp;
}

exports.create = create;

function enhance(armor) {
  if (armor.enhancement_level >= consts_1.MAX_ENHANCEMENT_LEVEL) throw new Error('can’t enhance a armor above the maximal enhancement level!');
  return __assign(__assign({}, armor), {
    enhancement_level: armor.enhancement_level + 1
  });
}

exports.enhance = enhance; /////////////////////
},{"@tbrpg/definitions":"PTCd","@offirmo/random":"OV1n","./data":"g3Fd","./consts":"kTX1","./selectors":"Cxnb"}],"Oxy6":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generate_random_demo_armor = exports.DEMO_ARMOR_2 = exports.DEMO_ARMOR_1 = void 0;

var random_1 = require("@offirmo/random");

var state_utils_1 = require("@offirmo-private/state-utils");

var definitions_1 = require("@tbrpg/definitions");

var consts_1 = require("./consts");

var data_1 = require("./data");

var selectors_1 = require("./selectors");

var state_1 = require("./state"); /////////////////////


var DEMO_ARMOR_1 = state_utils_1.enforce_immutability({
  uuid: 'uu1~test~demo~armor~0001',
  element_type: definitions_1.ElementType.item,
  slot: definitions_1.InventorySlot.armor,
  base_hid: data_1.ARMOR_BASES[0].hid,
  qualifier1_hid: data_1.ARMOR_QUALIFIERS1[0].hid,
  qualifier2_hid: data_1.ARMOR_QUALIFIERS2[0].hid,
  quality: definitions_1.ItemQuality.uncommon,
  base_strength: selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[definitions_1.ItemQuality.uncommon][0] + 1,
  enhancement_level: consts_1.MIN_ENHANCEMENT_LEVEL
});
exports.DEMO_ARMOR_1 = DEMO_ARMOR_1;
var DEMO_ARMOR_2 = state_utils_1.enforce_immutability({
  uuid: 'uu1~test~demo~armor~0002',
  element_type: definitions_1.ElementType.item,
  slot: definitions_1.InventorySlot.armor,
  base_hid: data_1.ARMOR_BASES[1].hid,
  qualifier1_hid: data_1.ARMOR_QUALIFIERS1[1].hid,
  qualifier2_hid: data_1.ARMOR_QUALIFIERS2[1].hid,
  quality: definitions_1.ItemQuality.legendary,
  base_strength: selectors_1.BASE_STRENGTH_INTERVAL_BY_QUALITY[definitions_1.ItemQuality.legendary][1] - 1,
  enhancement_level: consts_1.MAX_ENHANCEMENT_LEVEL
});
exports.DEMO_ARMOR_2 = DEMO_ARMOR_2; // for demo purpose, all attributes having the same probability + also random enhancement level

function generate_random_demo_armor(rng) {
  rng = rng || random_1.Random.engines.mt19937().autoSeed();
  return state_1.create(rng, {
    enhancement_level: random_1.Random.integer(consts_1.MIN_ENHANCEMENT_LEVEL, consts_1.MAX_ENHANCEMENT_LEVEL)(rng)
  });
}

exports.generate_random_demo_armor = generate_random_demo_armor; /////////////////////
},{"@offirmo/random":"OV1n","@offirmo-private/state-utils":"PmVE","@tbrpg/definitions":"PTCd","./consts":"kTX1","./data":"g3Fd","./selectors":"Cxnb","./state":"jUcP"}],"n5Du":[function(require,module,exports) {
"use strict"; ////////////////////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compare_armors_by_potential = void 0;

var definitions_1 = require("@tbrpg/definitions");

var selectors_1 = require("./selectors"); /////////////////////
// for sorting


function compare_armors_by_potential(a, b) {
  var a_dmg = selectors_1.get_ultimate_medium_damage_reduction(a);
  var b_dmg = selectors_1.get_ultimate_medium_damage_reduction(b);
  if (a_dmg !== b_dmg) return b_dmg - a_dmg; // fallback to other attributes

  return definitions_1.compare_items_by_quality(a, b) || a.uuid.localeCompare(b.uuid);
}

exports.compare_armors_by_potential = compare_armors_by_potential; /////////////////////
},{"@tbrpg/definitions":"PTCd","./selectors":"Cxnb"}],"eV82":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./consts"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./compare"), exports);
},{"./types":"Rz74","./consts":"kTX1","./selectors":"Cxnb","./state":"jUcP","./examples":"Oxy6","./compare":"n5Du"}],"gEUx":[function(require,module,exports) {
"use strict";

var _a;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var definitions_1 = require("@tbrpg/definitions");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var logic_armors_1 = require("@oh-my-rpg/logic-armors"); /////////////////////
// needed to test migrations, both here and in composing parents
// a full featured, non-trivial demo state
// needed for demos


var DEMO_STATE = state_utils_1.enforce_immutability({
  schema_version: 1,
  revision: 42,
  unslotted_capacity: 20,
  slotted: (_a = {}, _a[definitions_1.InventorySlot.armor] = logic_armors_1.DEMO_ARMOR_2, _a[definitions_1.InventorySlot.weapon] = logic_weapons_1.DEMO_WEAPON_1, _a),
  unslotted: [logic_weapons_1.DEMO_WEAPON_2, logic_armors_1.DEMO_ARMOR_1]
});
exports.DEMO_STATE = DEMO_STATE; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","@tbrpg/definitions":"PTCd","@oh-my-rpg/logic-weapons":"qUBn","@oh-my-rpg/logic-armors":"eV82"}],"FEMC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@tbrpg/state--inventory';
exports.LIB = LIB;
var SCHEMA_VERSION = 1;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
},{}],"omcy":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compare_items_by_slot_then_strength = void 0;

var definitions_1 = require("@tbrpg/definitions");

var logic_armors_1 = require("@oh-my-rpg/logic-armors");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var consts_1 = require("./consts"); /////////////////////


function compare_items_by_slot_then_strength(a, b) {
  if (a.slot !== b.slot) return definitions_1.compare_items_by_slot(a, b);

  switch (a.slot) {
    case definitions_1.InventorySlot.armor:
      {
        var sort = logic_armors_1.compare_armors_by_potential(a, b);
        if (!Number.isInteger(sort)) throw new Error(consts_1.LIB + ": compare():  error sorting armors!");
        return sort;
      }

    case definitions_1.InventorySlot.weapon:
      {
        var sort = logic_weapons_1.compare_weapons_by_potential(a, b);
        if (!Number.isInteger(sort)) throw new Error(consts_1.LIB + ": compare():  error sorting weapons!");
        return sort;
      }

    default:
      throw new Error(consts_1.LIB + ": compare(): unhandled item slot \"" + a.slot + "\"!");
  }
}

exports.compare_items_by_slot_then_strength = compare_items_by_slot_then_strength; /////////////////////
},{"@tbrpg/definitions":"PTCd","@oh-my-rpg/logic-armors":"eV82","@oh-my-rpg/logic-weapons":"qUBn","./consts":"FEMC"}],"xjk3":[function(require,module,exports) {
"use strict"; /////////////////////

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __values = this && this.__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iterables_unslotted = exports.get_slotted_weapon = exports.get_slotted_armor = exports.get_item_in_slot = exports.get_item = exports.get_unslotted_item = exports.get_item_count = exports.get_unequipped_item_count = exports.get_equipped_item_count = exports.is_full = void 0;

var definitions_1 = require("@tbrpg/definitions"); /////////////////////


function is_full(state) {
  return state.unslotted.length >= state.unslotted_capacity;
}

exports.is_full = is_full;

function get_equipped_item_count(state) {
  return Object.keys(state.slotted).length;
}

exports.get_equipped_item_count = get_equipped_item_count;

function get_unequipped_item_count(state) {
  return state.unslotted.length;
}

exports.get_unequipped_item_count = get_unequipped_item_count;

function get_item_count(state) {
  return get_equipped_item_count(state) + get_unequipped_item_count(state);
}

exports.get_item_count = get_item_count;

function get_unslotted_item(state, uuid) {
  var item = state.unslotted.find(function (i) {
    return i.uuid === uuid;
  });
  return item ? item : null;
}

exports.get_unslotted_item = get_unslotted_item;

function get_item(state, uuid) {
  var item = get_unslotted_item(state, uuid);
  item = item || Object.values(state.slotted).find(function (i) {
    return !!i && i.uuid === uuid;
  });
  return item ? item : null;
}

exports.get_item = get_item;

function get_item_in_slot(state, slot) {
  return state.slotted[slot] || null;
}

exports.get_item_in_slot = get_item_in_slot;

function get_slotted_armor(state) {
  return state.slotted[definitions_1.InventorySlot.armor] || null;
}

exports.get_slotted_armor = get_slotted_armor;

function get_slotted_weapon(state) {
  return state.slotted[definitions_1.InventorySlot.weapon] || null;
}

exports.get_slotted_weapon = get_slotted_weapon;
/*
function get_typed_item_in_slot(state: Immutable<State>, slot: InventorySlot): State['slotted'][keyof State['slotted']] | null {
    switch(slot) {
        case InventorySlot.armor:
            return state.slotted[InventorySlot.armor] || null
        case InventorySlot.weapon:
            return state.slotted[InventorySlot.weapon] || null
        default:
            return null
    }
}
*/

function iterables_unslotted(state) {
  return __generator(this, function (_a) {
    switch (_a.label) {
      case 0:
        return [5
        /*yield**/
        , __values(state.unslotted)];

      case 1:
        _a.sent();

        return [2
        /*return*/
        ];
    }
  });
}

exports.iterables_unslotted = iterables_unslotted; /////////////////////
},{"@tbrpg/definitions":"PTCd"}],"RHaI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("./consts");

function get_lib_SEC(parent) {
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: 'state-inventory'
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","./consts":"FEMC"}],"h2zQ":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equip_item = exports.remove_item_from_unslotted = exports.add_item = exports.create = exports.InventorySlot = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "InventorySlot", {
  enumerable: true,
  get: function () {
    return definitions_1.InventorySlot;
  }
});

var consts_1 = require("./consts");

var compare_1 = require("./compare");

var selectors_1 = require("./selectors");

var sec_1 = require("./sec"); /////////////////////


function create(SEC) {
  return sec_1.get_lib_SEC(SEC).xTry('rename', function () {
    return state_utils_1.enforce_immutability({
      schema_version: consts_1.SCHEMA_VERSION,
      revision: 0,
      // todo rename equipped / backpack ?
      unslotted_capacity: 20,
      slotted: {},
      unslotted: []
    });
  });
}

exports.create = create; /////////////////////

function _auto_sort(state) {
  return __assign(__assign({}, state), {
    unslotted: __spreadArray([], state.unslotted).sort(compare_1.compare_items_by_slot_then_strength)
  });
}

function _internal_remove_item_from_unslotted(state, uuid) {
  var new_unslotted = state.unslotted.filter(function (i) {
    return i.uuid !== uuid;
  });
  if (new_unslotted.length === state.unslotted.length) throw new Error("state-inventory: can\u2019t remove item #" + uuid + ", not found!"); // removing won't change the sort order, so no need to auto-sort

  return __assign(__assign({}, state), {
    unslotted: new_unslotted
  });
} /////////////////////


function add_item(state, item) {
  if (selectors_1.is_full(state)) throw new Error('state-inventory: can’t add item, inventory is full!');
  return _auto_sort(__assign(__assign({}, state), {
    unslotted: __spreadArray(__spreadArray([], state.unslotted), [item]),
    revision: state.revision + 1
  }));
}

exports.add_item = add_item;

function remove_item_from_unslotted(state, uuid) {
  return _internal_remove_item_from_unslotted(__assign(__assign({}, state), {
    revision: state.revision + 1
  }), uuid);
}

exports.remove_item_from_unslotted = remove_item_from_unslotted;

function equip_item(state, uuid) {
  var _a;

  var item_to_equip = state.unslotted.find(function (i) {
    return i.uuid === uuid;
  });
  if (!item_to_equip) throw new Error("state-inventory: can\u2019t equip item #" + uuid + ", not found!");
  var target_slot = item_to_equip.slot;
  var item_previously_in_slot = selectors_1.get_item_in_slot(state, target_slot); // may be null
  // swap them

  var new_state = __assign(__assign({}, state), {
    slotted: __assign(__assign({}, state.slotted), (_a = {}, _a[target_slot] = item_to_equip, _a)),
    revision: state.revision + 1
  });

  new_state = _internal_remove_item_from_unslotted(new_state, item_to_equip.uuid);

  if (item_previously_in_slot) {
    new_state.unslotted = __spreadArray(__spreadArray([], new_state.unslotted), [item_previously_in_slot]);
  }

  return _auto_sort(new_state);
}

exports.equip_item = equip_item; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","@tbrpg/definitions":"PTCd","./consts":"FEMC","./compare":"omcy","./selectors":"xjk3","./sec":"RHaI"}],"ixAw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIGRATION_HINTS_FOR_TESTS = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var sec_1 = require("./sec"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


var MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});
exports.MIGRATION_HINTS_FOR_TESTS = MIGRATION_HINTS_FOR_TESTS; /////////////////////

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var existing_version = legacy_state && legacy_state.schema_version || 0;
  SEC = sec_1.get_lib_SEC(SEC).setAnalyticsAndErrorDetails({
    version_from: existing_version,
    version_to: consts_1.SCHEMA_VERSION
  });
  return SEC.xTry('migrate_to_latest', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    if (existing_version > consts_1.SCHEMA_VERSION) throw new Error('Your data is from a more recent version of this lib. Please update!');
    var state = legacy_state; // for starter

    if (existing_version < consts_1.SCHEMA_VERSION) {
      logger.warn(consts_1.LIB + ": attempting to migrate schema from v" + existing_version + " to v" + consts_1.SCHEMA_VERSION + ":");
      SEC.fireAnalyticsEvent('schema_migration.began');

      try {
        state = migrate_to_2(SEC, legacy_state, hints);
      } catch (err) {
        SEC.fireAnalyticsEvent('schema_migration.failed');
        throw err;
      }

      logger.info(consts_1.LIB + ": schema migration successful.");
      SEC.fireAnalyticsEvent('schema_migration.ended');
    } // migrate sub-reducers if any...


    return state;
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

function migrate_to_2(SEC, legacy_state, hints) {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
}
},{"@offirmo-private/state-utils":"PmVE","./consts":"FEMC","./sec":"RHaI"}],"pmyL":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./compare"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"OX0r","./examples":"gEUx","./compare":"omcy","./selectors":"xjk3","./state":"h2zQ","./migrations":"ixAw"}],"vXc2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
}); /////////////////////
},{}],"D6sB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils"); /////////////////////
// a full featured, non-trivial demo state
// useful for demos and unit tests


var DEMO_STATE = state_utils_1.enforce_immutability({
  uuid: 'uu1~example~state~PRNG~~',
  schema_version: 3,
  revision: 108,
  seed: 1234,
  use_count: 107,
  recently_encountered_by_id: {
    'item': ['axe', 'sword'],
    'adventures': ['dragon', 'king'],
    'mistery': []
  }
});
exports.DEMO_STATE = DEMO_STATE;
},{"@offirmo-private/state-utils":"PmVE"}],"v4XJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEBUG = exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@oh-my-rpg/state-prng';
exports.LIB = LIB;
var SCHEMA_VERSION = 3;
exports.SCHEMA_VERSION = SCHEMA_VERSION; // TODO move in SEC

var DEBUG = true;
exports.DEBUG = DEBUG;
},{}],"QUPk":[function(require,module,exports) {
"use strict"; /////////////////////

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xxx_internal_reset_prng_cache = exports.get_prng = exports.switch_mode = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var random_1 = require("@offirmo/random");

var definitions_1 = require("@tbrpg/definitions");

var consts_1 = require("./consts"); /////////////////////
// get_prng() is an ideal checkpoint to detect a lot of bugs and misuses.
// We offer several implementations, dev (checking) and prod.
// TODO optimized version? (thanks to uuid)


var mode = 'dev'; // TODO default to prod, later
/////////////////////
// inefficient but simple version

function get_prng_simple(state) {
  var prng = random_1.Random.engines.mt19937().seed(state.seed);
  prng._seed = state.seed;
  prng.discard(state.use_count);
  return prng;
} /////////////////////
// since
// - we MUST use only one, repeatable PRNG
// - we can't store the prng in the state
// - we must configure it once at start
// we use a global cache to not having to recreate the prng each time.
// Also, we control that the usage conforms to those expectations.


var cached_prngs = {};

function xxx_internal_reset_prng_cache() {
  tiny_invariant_1.default(mode === 'dev', consts_1.LIB + ": dev utils require dev mode!");
  cached_prngs = {};
}

exports.xxx_internal_reset_prng_cache = xxx_internal_reset_prng_cache; // WARNING this method has expectations ! (see above)

function get_prng_dev(state) {
  /*console.trace('get PRNG', {
   state,
   cached_prng,
   'cached_prng.getUseCount()': cached_prng.getUseCount(),
  })*/
  var key = state.uuid;
  var cached_prng = cached_prngs[key];

  if (!cached_prng) {
    cached_prngs[key] = get_prng_simple(state);
    return cached_prngs[key];
  }

  if (cached_prng._seed !== state.seed) {
    // ok, a reseed happened, allowed
    cached_prng.seed(state.seed);
    cached_prng._seed = state.seed; // maintain this extra property TODO improve the lib instead

    tiny_invariant_1.default(cached_prng.getUseCount() === 0, 'freshly re-seeded prng');
  }

  if (cached_prng.getUseCount() !== state.use_count) {
    // should never happen, this is the bug what we are after
    var msg = consts_1.LIB + ": get_prng(): unexpected case: mismatching use_count!";
    definitions_1.get_logger().error(msg, {
      cached_use_count: cached_prng.getUseCount(),
      required_use_count: state.use_count
    });
    throw new Error(msg);
  }

  return cached_prng;
} /////////////////////


function get_prng(state) {
  if (mode === 'dev') return get_prng_dev(state);
  return get_prng_simple(state);
}

exports.get_prng = get_prng;

function switch_mode(new_mode) {
  mode = new_mode;
}

exports.switch_mode = switch_mode; /////////////////////
},{"tiny-invariant":"VYmh","@offirmo/random":"OV1n","@tbrpg/definitions":"PTCd","./consts":"v4XJ"}],"rXsg":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.register_recently_used = exports.update_use_count = exports.set_seed = exports.create = exports.DEFAULT_SEED = exports.State = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var uuid_1 = require("@offirmo-private/uuid");

var definitions_1 = require("@tbrpg/definitions");

var consts_1 = require("./consts");

var types_1 = require("./types");

Object.defineProperty(exports, "State", {
  enumerable: true,
  get: function () {
    return types_1.State;
  }
}); /////////////////////

var DEFAULT_SEED = 987;
exports.DEFAULT_SEED = DEFAULT_SEED;

function create(seed) {
  if (seed === void 0) {
    seed = DEFAULT_SEED;
  }

  return {
    schema_version: consts_1.SCHEMA_VERSION,
    uuid: uuid_1.generate_uuid(),
    revision: 0,
    seed: seed,
    use_count: 0,
    recently_encountered_by_id: {}
  };
}

exports.create = create; /////////////////////

function set_seed(state, seed) {
  return __assign(__assign({}, state), {
    seed: seed,
    use_count: 0,
    revision: state.revision + 1
  });
}

exports.set_seed = set_seed;

function update_use_count(state, prng, options) {
  if (options === void 0) {
    options = {};
  }

  tiny_invariant_1.default(prng._seed === state.seed, consts_1.LIB + ": update PRNG state: different seed (different prng?)!");
  var new_use_count = prng.getUseCount();

  if (new_use_count === state.use_count) {
    if (!options.I_swear_I_really_cant_know_whether_the_rng_was_used) {
      var err = new Error("[Warning] " + consts_1.LIB + ": update PRNG state: count hasn't changed = no random was generated! This is most likely a bug, check your code!").stack;
      definitions_1.get_logger().warn('update_use_count no change!', {
        err: err
      });
    }

    return state;
  }

  tiny_invariant_1.default(new_use_count > state.use_count, consts_1.LIB + ": update PRNG state: count is <= previous count, this is unexpected! Check your code!");
  return __assign(__assign({}, state), {
    use_count: new_use_count,
    revision: state.revision + 1
  });
}

exports.update_use_count = update_use_count;

function register_recently_used(state, id, value, max_memory_size) {
  var _a;

  if (max_memory_size === 0) return state;
  var recently_encountered = state.recently_encountered_by_id[id] || [];
  recently_encountered = recently_encountered.concat(value).slice(-max_memory_size);
  return __assign(__assign({}, state), {
    recently_encountered_by_id: __assign(__assign({}, state.recently_encountered_by_id), (_a = {}, _a[id] = recently_encountered, _a)),
    revision: state.revision + 1
  });
}

exports.register_recently_used = register_recently_used; /////////////////////
},{"tiny-invariant":"VYmh","@offirmo-private/uuid":"Im4b","@tbrpg/definitions":"PTCd","./consts":"v4XJ","./types":"vXc2"}],"xYZS":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.regenerate_until_not_recently_encountered = exports.generate_random_seed = void 0;

var random_1 = require("@offirmo/random");

var consts_1 = require("./consts"); /////////////////////
// useful for re-seeding


function generate_random_seed() {
  var rng = random_1.Random.engines.mt19937().autoSeed();
  return random_1.Random.integer(-2147483646, 2147483647)(rng); // doc is unclear about allowed bounds...
}

exports.generate_random_seed = generate_random_seed;

function regenerate_until_not_recently_encountered(_a) {
  var id = _a.id,
      generate = _a.generate,
      state = _a.state,
      max_tries = _a.max_tries;
  var recently_encountered = state.recently_encountered_by_id[id] || []; // Intelligently computes a reasonable max_tries.
  // Best effort, we would need the complete generation range to come up with a proper number.

  max_tries = max_tries || Math.max(10, recently_encountered.length * 10);
  var generated = generate();
  var try_count = 1;

  while (recently_encountered.includes(generated) && try_count < max_tries) {
    generated = generate();
    try_count++;
  }

  if (try_count >= max_tries) {
    console.error(state);
    throw new Error(consts_1.LIB + ": regenerate_until_not_recently_encountered(): failed after maximum tries!");
  }

  return generated;
}

exports.regenerate_until_not_recently_encountered = regenerate_until_not_recently_encountered; /////////////////////
},{"@offirmo/random":"OV1n","./consts":"v4XJ"}],"lf0r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("./consts");

function get_lib_SEC(parent) {
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: 'state-prng'
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","./consts":"v4XJ"}],"APlE":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIGRATION_HINTS_FOR_TESTS = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var uuid_1 = require("@offirmo-private/uuid");

var consts_1 = require("./consts");

var sec_1 = require("./sec"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


var MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});
exports.MIGRATION_HINTS_FOR_TESTS = MIGRATION_HINTS_FOR_TESTS; /////////////////////

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var existing_version = legacy_state && legacy_state.schema_version || 0;
  SEC = sec_1.get_lib_SEC(SEC).setAnalyticsAndErrorDetails({
    version_from: existing_version,
    version_to: consts_1.SCHEMA_VERSION
  });
  return SEC.xTry('migrate_to_latest', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    if (existing_version > consts_1.SCHEMA_VERSION) throw new Error('Your data is from a more recent version of this lib. Please update!');
    var state = legacy_state; // for starter

    if (existing_version < consts_1.SCHEMA_VERSION) {
      logger.warn(consts_1.LIB + ": attempting to migrate schema from v" + existing_version + " to v" + consts_1.SCHEMA_VERSION + ":");
      SEC.fireAnalyticsEvent('schema_migration.began');

      try {
        state = migrate_to_3(SEC, legacy_state, hints);
      } catch (err) {
        SEC.fireAnalyticsEvent('schema_migration.failed');
        throw err;
      }

      logger.info(consts_1.LIB + ": schema migration successful.");
      SEC.fireAnalyticsEvent('schema_migration.ended');
    } // migrate sub-reducers if any...


    return state;
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

function migrate_to_3(SEC, legacy_state, hints) {
  var state = legacy_state.schema_version < 2 ? migrate_to_2(SEC, legacy_state, hints) : legacy_state;
  state = __assign(__assign({}, state), {
    uuid: uuid_1.generate_uuid()
  });
  return state;
}

function migrate_to_2(SEC, legacy_state, hints) {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
}
},{"@offirmo-private/state-utils":"PmVE","@offirmo-private/uuid":"Im4b","./consts":"v4XJ","./sec":"lf0r"}],"rqPL":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./get_prng"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./utils"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"vXc2","./examples":"D6sB","./get_prng":"QUPk","./state":"rXsg","./utils":"xYZS","./migrations":"APlE"}],"WCuv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_T_STATE = exports.DEMO_U_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var timestamps_1 = require("@offirmo-private/timestamps"); /////////////////////
// a full featured, non-trivial demo state
// useful for demos and unit tests


var DEMO_U_STATE = state_utils_1.enforce_immutability({
  schema_version: 4,
  revision: 3,
  max_energy: 7,
  total_energy_consumed_so_far: 3
});
exports.DEMO_U_STATE = DEMO_U_STATE;
var DEMO_T_STATE = state_utils_1.enforce_immutability({
  schema_version: 4,
  revision: 3,
  timestamp_ms: timestamps_1.TEST_TIMESTAMP_MS,
  available_energy: {
    n: 7,
    d: 2
  }
});
exports.DEMO_T_STATE = DEMO_T_STATE;
},{"@offirmo-private/state-utils":"PmVE","@offirmo-private/timestamps":"bMV2"}],"xnfm":[function(require,module,exports) {
var define;
/**
 * @license Fraction.js v4.1.1 23/05/2021
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/


/**
 *
 * This class offers the possibility to calculate fractions.
 * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.
 *
 * Array/Object form
 * [ 0 => <nominator>, 1 => <denominator> ]
 * [ n => <nominator>, d => <denominator> ]
 *
 * Integer form
 * - Single integer value
 *
 * Double form
 * - Single double value
 *
 * String form
 * 123.456 - a simple double
 * 123/456 - a string fraction
 * 123.'456' - a double with repeating decimal places
 * 123.(456) - synonym
 * 123.45'6' - a double with repeating last place
 * 123.45(6) - synonym
 *
 * Example:
 *
 * var f = new Fraction("9.4'31'");
 * f.mul([-4, 3]).div(4.9);
 *
 */

(function(root) {

  "use strict";

  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.
  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.
  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits
  var MAX_CYCLE_LEN = 2000;

  // Parsed data to avoid calling "new" all the time
  var P = {
    "s": 1,
    "n": 0,
    "d": 1
  };

  function createError(name) {

    function errorConstructor() {
      var temp = Error.apply(this, arguments);
      temp['name'] = this['name'] = name;
      this['stack'] = temp['stack'];
      this['message'] = temp['message'];
    }

    /**
     * Error constructor
     *
     * @constructor
     */
    function IntermediateInheritor() { }
    IntermediateInheritor.prototype = Error.prototype;
    errorConstructor.prototype = new IntermediateInheritor();

    return errorConstructor;
  }

  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');
  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');

  function assign(n, s) {

    if (isNaN(n = parseInt(n, 10))) {
      throwInvalidParam();
    }
    return n * s;
  }

  function throwInvalidParam() {
    throw new InvalidParameter();
  }

  function factorize(num) {

    var factors = {};

    var n = num;
    var i = 2;
    var s = 4;

    while (s <= n) {

      while (n % i === 0) {
        n /= i;
        factors[i] = (factors[i] || 0) + 1;
      }
      s += 1 + 2 * i++;
    }

    if (n !== num) {
      if (n > 1)
      factors[n] = (factors[n] || 0) + 1;
    } else {
      factors[num] = (factors[num] || 0) + 1;
    }
    return factors;
  }

  var parse = function(p1, p2) {

    var n = 0, d = 1, s = 1;
    var v = 0, w = 0, x = 0, y = 1, z = 1;

    var A = 0, B = 1;
    var C = 1, D = 1;

    var N = 10000000;
    var M;

    if (p1 === undefined || p1 === null) {
      /* void */
    } else if (p2 !== undefined) {
      n = p1;
      d = p2;
      s = n * d;
    } else
      switch (typeof p1) {

        case "object":
          {
            if ("d" in p1 && "n" in p1) {
              n = p1["n"];
              d = p1["d"];
              if ("s" in p1)
                n *= p1["s"];
            } else if (0 in p1) {
              n = p1[0];
              if (1 in p1)
                d = p1[1];
            } else {
              throwInvalidParam();
            }
            s = n * d;
            break;
          }
        case "number":
          {
            if (p1 < 0) {
              s = p1;
              p1 = -p1;
            }

            if (p1 % 1 === 0) {
              n = p1;
            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow

              if (p1 >= 1) {
                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));
                p1 /= z;
              }

              // Using Farey Sequences
              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/

              while (B <= N && D <= N) {
                M = (A + C) / (B + D);

                if (p1 === M) {
                  if (B + D <= N) {
                    n = A + C;
                    d = B + D;
                  } else if (D > B) {
                    n = C;
                    d = D;
                  } else {
                    n = A;
                    d = B;
                  }
                  break;

                } else {

                  if (p1 > M) {
                    A += C;
                    B += D;
                  } else {
                    C += A;
                    D += B;
                  }

                  if (B > N) {
                    n = C;
                    d = D;
                  } else {
                    n = A;
                    d = B;
                  }
                }
              }
              n *= z;
            } else if (isNaN(p1) || isNaN(p2)) {
              d = n = NaN;
            }
            break;
          }
        case "string":
          {
            B = p1.match(/\d+|./g);

            if (B === null)
              throwInvalidParam();

            if (B[A] === '-') {// Check for minus sign at the beginning
              s = -1;
              A++;
            } else if (B[A] === '+') {// Check for plus sign at the beginning
              A++;
            }

            if (B.length === A + 1) { // Check if it's just a simple number "1234"
              w = assign(B[A++], s);
            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number

              if (B[A] !== '.') { // Handle 0.5 and .5
                v = assign(B[A++], s);
              }
              A++;

              // Check for decimal places
              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === "'" && B[A + 3] === "'") {
                w = assign(B[A], s);
                y = Math.pow(10, B[A].length);
                A++;
              }

              // Check for repeating places
              if (B[A] === '(' && B[A + 2] === ')' || B[A] === "'" && B[A + 2] === "'") {
                x = assign(B[A + 1], s);
                z = Math.pow(10, B[A + 1].length) - 1;
                A += 3;
              }

            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction "123/456" or "123:456"
              w = assign(B[A], s);
              y = assign(B[A + 2], 1);
              A += 3;
            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction "123 1/2"
              v = assign(B[A], s);
              w = assign(B[A + 2], s);
              y = assign(B[A + 4], 1);
              A += 5;
            }

            if (B.length <= A) { // Check for more tokens on the stack
              d = y * z;
              s = /* void */
              n = x + d * v + z * w;
              break;
            }

            /* Fall through on error */
          }
        default:
          throwInvalidParam();
      }

    if (d === 0) {
      throw new DivisionByZero();
    }

    P["s"] = s < 0 ? -1 : 1;
    P["n"] = Math.abs(n);
    P["d"] = Math.abs(d);
  };

  function modpow(b, e, m) {

    var r = 1;
    for (; e > 0; b = (b * b) % m, e >>= 1) {

      if (e & 1) {
        r = (r * b) % m;
      }
    }
    return r;
  }


  function cycleLen(n, d) {

    for (; d % 2 === 0;
      d /= 2) {
    }

    for (; d % 5 === 0;
      d /= 5) {
    }

    if (d === 1) // Catch non-cyclic numbers
      return 0;

    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:
    // 10^(d-1) % d == 1
    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,
    // as we want to translate the numbers to strings.

    var rem = 10 % d;
    var t = 1;

    for (; rem !== 1; t++) {
      rem = rem * 10 % d;

      if (t > MAX_CYCLE_LEN)
        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`
    }
    return t;
  }


  function cycleStart(n, d, len) {

    var rem1 = 1;
    var rem2 = modpow(10, len, d);

    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)
      // Solve 10^s == 10^(s+t) (mod d)

      if (rem1 === rem2)
        return t;

      rem1 = rem1 * 10 % d;
      rem2 = rem2 * 10 % d;
    }
    return 0;
  }

  function gcd(a, b) {

    if (!a)
      return b;
    if (!b)
      return a;

    while (1) {
      a %= b;
      if (!a)
        return b;
      b %= a;
      if (!b)
        return a;
    }
  };

  /**
   * Module constructor
   *
   * @constructor
   * @param {number|Fraction=} a
   * @param {number=} b
   */
  function Fraction(a, b) {

    if (!(this instanceof Fraction)) {
      return new Fraction(a, b);
    }

    parse(a, b);

    if (Fraction['REDUCE']) {
      a = gcd(P["d"], P["n"]); // Abuse a
    } else {
      a = 1;
    }

    this["s"] = P["s"];
    this["n"] = P["n"] / a;
    this["d"] = P["d"] / a;
  }

  /**
   * Boolean global variable to be able to disable automatic reduction of the fraction
   *
   */
  Fraction['REDUCE'] = 1;

  Fraction.prototype = {

    "s": 1,
    "n": 0,
    "d": 1,

    /**
     * Calculates the absolute value
     *
     * Ex: new Fraction(-4).abs() => 4
     **/
    "abs": function() {

      return new Fraction(this["n"], this["d"]);
    },

    /**
     * Inverts the sign of the current fraction
     *
     * Ex: new Fraction(-4).neg() => 4
     **/
    "neg": function() {

      return new Fraction(-this["s"] * this["n"], this["d"]);
    },

    /**
     * Adds two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30
     **/
    "add": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * this["n"] * P["d"] + P["s"] * this["d"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Subtracts two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30
     **/
    "sub": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * this["n"] * P["d"] - P["s"] * this["d"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Multiplies two rational numbers
     *
     * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111
     **/
    "mul": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * P["s"] * this["n"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Divides two rational numbers
     *
     * Ex: new Fraction("-17.(345)").inverse().div(3)
     **/
    "div": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * P["s"] * this["n"] * P["d"],
        this["d"] * P["n"]
      );
    },

    /**
     * Clones the actual object
     *
     * Ex: new Fraction("-17.(345)").clone()
     **/
    "clone": function() {
      return new Fraction(this);
    },

    /**
     * Calculates the modulo of two rational numbers - a more precise fmod
     *
     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)
     **/
    "mod": function(a, b) {

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return new Fraction(NaN);
      }

      if (a === undefined) {
        return new Fraction(this["s"] * this["n"] % this["d"], 1);
      }

      parse(a, b);
      if (0 === P["n"] && 0 === this["d"]) {
        Fraction(0, 0); // Throw DivisionByZero
      }

      /*
       * First silly attempt, kinda slow
       *
       return that["sub"]({
       "n": num["n"] * Math.floor((this.n / this.d) / (num.n / num.d)),
       "d": num["d"],
       "s": this["s"]
       });*/

      /*
       * New attempt: a1 / b1 = a2 / b2 * q + r
       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r
       * => (b2 * a1 % a2 * b1) / (b1 * b2)
       */
      return new Fraction(
        this["s"] * (P["d"] * this["n"]) % (P["n"] * this["d"]),
        P["d"] * this["d"]
      );
    },

    /**
     * Calculates the fractional gcd of two rational numbers
     *
     * Ex: new Fraction(5,8).gcd(3,7) => 1/56
     */
    "gcd": function(a, b) {

      parse(a, b);

      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)

      return new Fraction(gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]), P["d"] * this["d"]);
    },

    /**
     * Calculates the fractional lcm of two rational numbers
     *
     * Ex: new Fraction(5,8).lcm(3,7) => 15
     */
    "lcm": function(a, b) {

      parse(a, b);

      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)

      if (P["n"] === 0 && this["n"] === 0) {
        return new Fraction;
      }
      return new Fraction(P["n"] * this["n"], gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]));
    },

    /**
     * Calculates the ceil of a rational number
     *
     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)
     **/
    "ceil": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.ceil(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Calculates the floor of a rational number
     *
     * Ex: new Fraction('4.(3)').floor() => (4 / 1)
     **/
    "floor": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.floor(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Rounds a rational numbers
     *
     * Ex: new Fraction('4.(3)').round() => (4 / 1)
     **/
    "round": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.round(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Gets the inverse of the fraction, means numerator and denominator are exchanged
     *
     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3
     **/
    "inverse": function() {

      return new Fraction(this["s"] * this["d"], this["n"]);
    },

    /**
     * Calculates the fraction to some rational exponent, if possible
     *
     * Ex: new Fraction(-1,2).pow(-3) => -8
     */
    "pow": function(a, b) {

      parse(a, b);

      // Trivial case when exp is an integer

      if (P['d'] === 1) {

        if (P['s'] < 0) {
          return new Fraction(Math.pow(this['s'] * this["d"], P['n']), Math.pow(this["n"], P['n']));
        } else {
          return new Fraction(Math.pow(this['s'] * this["n"], P['n']), Math.pow(this["d"], P['n']));
        }
      }

      // Negative roots become complex
      //     (-a/b)^(c/d) = x
      // <=> (-1)^(c/d) * (a/b)^(c/d) = x
      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°
      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )
      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.
      if (this['s'] < 0) return null;

      // Now prime factor n and d
      var N = factorize(this['n']);
      var D = factorize(this['d']);

      // Exponentiate and take root for n and d individually
      var n = 1;
      var d = 1;
      for (var k in N) {
        if (k === '1') continue;
        if (k === '0') {
          n = 0;
          break;
        }
        N[k]*= P['n'];

        if (N[k] % P['d'] === 0) {
          N[k]/= P['d'];
        } else return null;
        n*= Math.pow(k, N[k]);
      }

      for (var k in D) {
        if (k === '1') continue;
        D[k]*= P['n'];

        if (D[k] % P['d'] === 0) {
          D[k]/= P['d'];
        } else return null;
        d*= Math.pow(k, D[k]);
      }

      if (P['s'] < 0) {
        return new Fraction(d, n);
      }
      return new Fraction(n, d);
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "equals": function(a, b) {

      parse(a, b);
      return this["s"] * this["n"] * P["d"] === P["s"] * P["n"] * this["d"]; // Same as compare() === 0
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "compare": function(a, b) {

      parse(a, b);
      var t = (this["s"] * this["n"] * P["d"] - P["s"] * P["n"] * this["d"]);
      return (0 < t) - (t < 0);
    },

    "simplify": function(eps) {

      // First naive implementation, needs improvement

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return this;
      }

      var cont = this['abs']()['toContinued']();

      eps = eps || 0.001;

      function rec(a) {
        if (a.length === 1)
          return new Fraction(a[0]);
        return rec(a.slice(1))['inverse']()['add'](a[0]);
      }

      for (var i = 0; i < cont.length; i++) {
        var tmp = rec(cont.slice(0, i + 1));
        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {
          return tmp['mul'](this['s']);
        }
      }
      return this;
    },

    /**
     * Check if two rational numbers are divisible
     *
     * Ex: new Fraction(19.6).divisible(1.5);
     */
    "divisible": function(a, b) {

      parse(a, b);
      return !(!(P["n"] * this["d"]) || ((this["n"] * P["d"]) % (P["n"] * this["d"])));
    },

    /**
     * Returns a decimal representation of the fraction
     *
     * Ex: new Fraction("100.'91823'").valueOf() => 100.91823918239183
     **/
    'valueOf': function() {

      return this["s"] * this["n"] / this["d"];
    },

    /**
     * Returns a string-fraction representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toFraction() => "4 1/3"
     **/
    'toFraction': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str += '-';
      }

      if (d === 1) {
        str += n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str += whole;
          str += " ";
          n %= d;
        }

        str += n;
        str += '/';
        str += d;
      }
      return str;
    },

    /**
     * Returns a latex representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toLatex() => "\frac{4}{3}"
     **/
    'toLatex': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str += '-';
      }

      if (d === 1) {
        str += n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str += whole;
          n %= d;
        }

        str += "\\frac{";
        str += n;
        str += '}{';
        str += d;
        str += '}';
      }
      return str;
    },

    /**
     * Returns an array of continued fraction elements
     *
     * Ex: new Fraction("7/8").toContinued() => [0,1,7]
     */
    'toContinued': function() {

      var t;
      var a = this['n'];
      var b = this['d'];
      var res = [];

      if (isNaN(a) || isNaN(b)) {
        return res;
      }

      do {
        res.push(Math.floor(a / b));
        t = a % b;
        a = b;
        b = t;
      } while (a !== 1);

      return res;
    },

    /**
     * Creates a string representation of a fraction with all digits
     *
     * Ex: new Fraction("100.'91823'").toString() => "100.(91823)"
     **/
    'toString': function(dec) {

      var g;
      var N = this["n"];
      var D = this["d"];

      if (isNaN(N) || isNaN(D)) {
        return "NaN";
      }

      if (!Fraction['REDUCE']) {
        g = gcd(N, D);
        N /= g;
        D /= g;
      }

      dec = dec || 15; // 15 = decimal places when no repetation

      var cycLen = cycleLen(N, D); // Cycle length
      var cycOff = cycleStart(N, D, cycLen); // Cycle start

      var str = this['s'] === -1 ? "-" : "";

      str += N / D | 0;

      N %= D;
      N *= 10;

      if (N)
        str += ".";

      if (cycLen) {

        for (var i = cycOff; i--;) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
        str += "(";
        for (var i = cycLen; i--;) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
        str += ")";
      } else {
        for (var i = dec; N && i--;) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
      }
      return str;
    }
  };

  if (typeof define === "function" && define["amd"]) {
    define([], function() {
      return Fraction;
    });
  } else if (typeof exports === "object") {
    Object.defineProperty(Fraction, "__esModule", { 'value': true });
    Fraction['default'] = Fraction;
    Fraction['Fraction'] = Fraction;
    module['exports'] = Fraction;
  } else {
    root['Fraction'] = Fraction;
  }

})(this);

},{}],"Lo5l":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TICK_MS = exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@oh-my-rpg/state-energy';
exports.LIB = LIB;
var SCHEMA_VERSION = 4;
exports.SCHEMA_VERSION = SCHEMA_VERSION; // roughly the amount of time for a change to be worth a display

var TICK_MS = 500;
exports.TICK_MS = TICK_MS;
},{}],"APBf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.time_to_human = void 0;

function time_to_human(seconds) {
  //console.log(`time_to_human(${seconds})`)
  var human_time_parts = [];
  var s = seconds % 60;
  seconds -= s;
  var m = seconds / 60 % 60;
  seconds -= m * 60;
  var h = seconds / 3600;

  if (h) {
    human_time_parts.push(h + "h");
  }

  if (m) {
    human_time_parts.push(m + "m");
  }

  if (s
  /*&& !(h && m)*/
  ) {
      human_time_parts.push(s + "s");
    }

  return human_time_parts.join(' ');
}

exports.time_to_human = time_to_human;
},{}],"tTAZ":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_available_energy_float = exports.get_human_time_to_next = exports.get_milliseconds_to_next = exports.get_current_energy_refilling_rate_per_ms = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var fraction_js_1 = __importDefault(require("fraction.js"));

var memoize_one_1 = __importDefault(require("memoize-one"));

var definitions_1 = require("@tbrpg/definitions");

var timestamps_1 = require("@offirmo-private/timestamps");

var consts_1 = require("./consts");

var utils_1 = require("./utils"); ////////////////////////////////////


var MIN_RESULT = new fraction_js_1.default(1, 2.1); // must be smaller than .5 for rounding reasons

function get_current_energy_refilling_rate_per_ms(u_state, t_state) {
  if (t_state.timestamp_ms + consts_1.TICK_MS < timestamps_1.get_UTC_timestamp_ms()) {
    definitions_1.get_logger().warn(consts_1.LIB + ".get_current_energy_refilling_rate_per_ms() called on outdated state!");
  } // allow an "onboarding" regeneration rate:
  // where energy regenerates faster at the beginning
  // Formula: https://www.desmos.com/calculator/s1kpakvnjw
  //                                        onboarding_coeff
  // refilling rate = floor(--------------------------------------------- + established_energy_refilling_rate_per_ms)
  //                        (total_energy_refilled_so_far + adjust)^onboarding_power


  var total_energy_consumed_so_far = u_state.total_energy_consumed_so_far;
  var total_energy_refilled_so_far = total_energy_consumed_so_far + get_available_energy_int(t_state) - u_state.max_energy;
  tiny_invariant_1.default(total_energy_refilled_so_far >= 0, consts_1.LIB + ".get_current_energy_refilling_rate_per_ms() total_energy_refilled_so_far = " + total_energy_refilled_so_far + "!");

  if (total_energy_refilled_so_far <= 0) {
    // <= 0 to avoid dividing by 0
    return MIN_RESULT;
  }

  var established_energy_refilling_rate_per_ms = new fraction_js_1.default( // 7/24h, in ms
  7, 24 * 3600 * 1000);
  var onboarding_coeff = 55; // bigger = faster refill

  var onboarding_adjustment = 5; // to skip the too many "0s" refill at the beginning

  var onboarding_power = 5; // bigger = slower refill

  var onboarding_energy_refilling_rate_per_ms = new fraction_js_1.default(onboarding_coeff, Math.pow(total_energy_refilled_so_far + onboarding_adjustment, onboarding_power));
  var rate = onboarding_energy_refilling_rate_per_ms.add(established_energy_refilling_rate_per_ms) // for rounding reasons, we floor() the result
  // established = 7/day = ~0.000000081028970/ms
  .floor(12) // 12 because seen dropping the /day rate at 10
  ;

  if (total_energy_refilled_so_far <= 10 && rate.compare(MIN_RESULT) > 0) {
    rate = MIN_RESULT; // onboarding early values may be too big
    // we don't use Math.max to check that it only happens during onboarding
  }

  if (rate.compare(MIN_RESULT) > 0) {
    definitions_1.get_logger().error('rate too big!', {
      rate: rate,
      rate_v: rate.valueOf(),
      u_state: u_state,
      t_state: t_state,
      total_energy_refilled_so_far: total_energy_refilled_so_far,
      onboarding_coeff: onboarding_coeff,
      onboarding_power: onboarding_power,
      established_energy_refilling_rate_per_ms: established_energy_refilling_rate_per_ms,
      established_energy_refilling_rate_per_ms_v: established_energy_refilling_rate_per_ms.floor(12).valueOf(),
      den: Math.pow(total_energy_refilled_so_far, onboarding_power)
    });
  }

  tiny_invariant_1.default(rate.compare(MIN_RESULT) <= 0, 'rate too big');
  return rate;
}

exports.get_current_energy_refilling_rate_per_ms = get_current_energy_refilling_rate_per_ms; ////////////

function debugTTNx(energy_refilling_rate_per_ms) {
  /*const ttn = (
      (new Fraction(1))
          .div(energy_refilling_rate_per_ms)
          .round(0)
          .valueOf()
  )
  console.warn('debug', {
      energy_refilling_rate_per_ms,
      ttn,
  })*/
}

var debugTTN = memoize_one_1.default(debugTTNx);

function get_milliseconds_to_next(u_state, t_state) {
  if (t_state.timestamp_ms + consts_1.TICK_MS < timestamps_1.get_UTC_timestamp_ms()) {
    /*console.log('outdated:', {
        TICK_MS,
        't_state.timestamp_ms': t_state.timestamp_ms,
        UTC_timestamp_ms: get_UTC_timestamp_ms()
    })*/
    definitions_1.get_logger().warn(consts_1.LIB + ".get_milliseconds_to_next() called on outdated state!");
  }

  var available_energy = new fraction_js_1.default(t_state.available_energy);
  if (available_energy.compare(u_state.max_energy) >= 0) throw new Error(consts_1.LIB + ".get_milliseconds_to_next() called with no next!");
  var energy_refilling_rate_per_ms = get_current_energy_refilling_rate_per_ms(u_state, t_state);
  var fractional_available_energy = available_energy.mod(1); //console.log('fractional_available_energy', fractional_available_energy.valueOf())
  //console.log('remaining fractional_available_energy', (new Fraction(1)).sub(fractional_available_energy).valueOf())

  debugTTN(energy_refilling_rate_per_ms.valueOf()); // time to next = (1 - frac) / refilling

  var ttn = new fraction_js_1.default(1).sub(fractional_available_energy).div(energy_refilling_rate_per_ms).round(0).valueOf(); // if 0, sth is wrong

  if (ttn <= 0) {
    definitions_1.get_logger().log('ms 0!', {
      u_state: u_state,
      t_state: t_state,
      available_energy: available_energy,
      available_energy_v: available_energy.valueOf(),
      fractional_available_energy: fractional_available_energy,
      fractional_available_energy_v: fractional_available_energy.valueOf(),
      energy_refilling_rate_per_ms: energy_refilling_rate_per_ms,
      energy_refilling_rate_per_ms_v: energy_refilling_rate_per_ms.valueOf(),
      ttn: ttn,
      ttn_f: new fraction_js_1.default(1).sub(fractional_available_energy).div(energy_refilling_rate_per_ms)
    });
  }

  tiny_invariant_1.default(ttn > 0, consts_1.LIB + ".get_milliseconds_to_next() should never return 0!");
  return ttn;
}

exports.get_milliseconds_to_next = get_milliseconds_to_next;

function get_human_time_to_next(u_state, t_state) {
  if (t_state.timestamp_ms + consts_1.TICK_MS < timestamps_1.get_UTC_timestamp_ms()) {
    definitions_1.get_logger().warn(consts_1.LIB + ".get_human_time_to_next() called on outdated state!");
  }

  var energy = new fraction_js_1.default(t_state.available_energy);
  if (energy.compare(u_state.max_energy) >= 0) return '';
  var millisec_until_next = get_milliseconds_to_next(u_state, t_state);
  var sec_until_next = Math.ceil(millisec_until_next / 1000.);
  return utils_1.time_to_human(sec_until_next);
}

exports.get_human_time_to_next = get_human_time_to_next; ////////////

function get_available_energy_float(t_state) {
  if (t_state.timestamp_ms + consts_1.TICK_MS < timestamps_1.get_UTC_timestamp_ms()) {
    definitions_1.get_logger().warn(consts_1.LIB + ".get_available_energy_float() called on outdated state!");
  }

  var available_energy = new fraction_js_1.default(t_state.available_energy);
  return available_energy.floor(2).valueOf();
}

exports.get_available_energy_float = get_available_energy_float;

function get_available_energy_int(t_state) {
  if (t_state.timestamp_ms + consts_1.TICK_MS < timestamps_1.get_UTC_timestamp_ms()) {
    definitions_1.get_logger().warn(consts_1.LIB + ".get_available_energy_int() called on outdated state!");
  }

  return Math.floor(get_available_energy_float(t_state));
}
},{"tiny-invariant":"VYmh","fraction.js":"xnfm","memoize-one":"lvkj","@tbrpg/definitions":"PTCd","@offirmo-private/timestamps":"bMV2","./consts":"Lo5l","./utils":"APBf"}],"cD5i":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.restore_energy = exports.lose_all_energy = exports.use_energy = exports.update_to_now = exports.create = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var fraction_js_1 = __importDefault(require("fraction.js"));

var timestamps_1 = require("@offirmo-private/timestamps");

var definitions_1 = require("@tbrpg/definitions");

var consts_1 = require("./consts");

var selectors_1 = require("./selectors");

var DEBUG = false; /////////////////////
// TODO now should be set through sinon, no need

function create(now_ms) {
  var u_state = {
    schema_version: consts_1.SCHEMA_VERSION,
    revision: 0,
    max_energy: 7,
    total_energy_consumed_so_far: 0
  };
  var t_state = {
    schema_version: consts_1.SCHEMA_VERSION,
    revision: 0,
    timestamp_ms: now_ms || 0,
    available_energy: {
      n: u_state.max_energy,
      d: 1
    }
  };
  return [u_state, t_state];
}

exports.create = create; /////////////////////
// date can be forced for testing reasons,

function update_to_now(_a, now_ms) {
  var u_state = _a[0],
      t_state = _a[1];

  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  var elapsed_time_ms = now_ms - t_state.timestamp_ms;
  if (DEBUG) console.log('- UTN: starting...');
  tiny_invariant_1.default(now_ms === 0 || now_ms > 10000, consts_1.LIB + ".update_to_now(): Wrong new Date(value) usage?");

  if (elapsed_time_ms < 0) {
    // time went backward? Must be a "daylight saving".
    definitions_1.get_logger().warn(consts_1.LIB + ".update_to_now(): Time went backward. Daylight saving?"); // just do nothing while time is not positive again

    return t_state;
  }

  if (elapsed_time_ms < consts_1.TICK_MS) {
    if (DEBUG) console.log('       less than a tick.'); //console.warn('E.update_to_now: high frequency, skipping')

    return t_state;
  }

  var available_energy = new fraction_js_1.default(t_state.available_energy);
  var initial_available_energy = new fraction_js_1.default(t_state.available_energy);
  /* NOOOOOOO!
   * update_to_now is prelude to energy manipulation
   * if not updating the "now" prop, removing energy while keeping an old time may yield full energy immediately
   * this is not what we want!!!
  if (available_energy.compare(u_state.max_energy) >= 0) {
      console.log('E.update_to_now: energy already max', available_energy.compare(u_state.max_energy))
      return t_state
  }
  */

  t_state = __assign(__assign({}, t_state), {
    timestamp_ms: now_ms
  });
  /*console.log({
      available_energy: t_state.available_energy,
      max_energy: u_state.max_energy,
      comp: available_energy.compare(u_state.max_energy),
  })*/
  // due to onboarding,
  // energy refill rate may change at each rounded energy re-gained.
  // we need to refill energy 1 by 1

  var time_left_to_process_ms = elapsed_time_ms;
  var safety_counter = 10;
  var energy_gain_per_ms = new fraction_js_1.default(1);
  var energy_gained_in_this_iteration = new fraction_js_1.default(1);

  while (time_left_to_process_ms > 0) {
    if (DEBUG) console.log("       - time left to process: " + time_left_to_process_ms + "ms...");
    safety_counter--;
    tiny_invariant_1.default(safety_counter > 0, 'UTN: infinite loop?');
    if (DEBUG) console.log("         available energy: " + available_energy.valueOf());

    if (available_energy.compare(u_state.max_energy) >= 0) {
      if (DEBUG) console.log('         energy is full, no need to refill further');
      time_left_to_process_ms = 0;
      continue;
    } // there is energy to refill


    var time_to_next_ms = selectors_1.get_milliseconds_to_next(u_state, t_state);
    if (DEBUG) console.log("         time to next = " + time_to_next_ms + "ms");
    if (DEBUG) console.log("                      = " + selectors_1.get_human_time_to_next(u_state, t_state));
    var time_handled_in_this_iteration_ms = Math.min(time_left_to_process_ms, time_to_next_ms);

    if (time_handled_in_this_iteration_ms === time_to_next_ms) {
      // try to avoid rounding issues
      var new_energy = new fraction_js_1.default(available_energy).add(1).floor(0);
      energy_gained_in_this_iteration = new fraction_js_1.default(new_energy).sub(available_energy);
      available_energy = new_energy;
    } else {
      energy_gain_per_ms = selectors_1.get_current_energy_refilling_rate_per_ms(u_state, t_state);
      energy_gained_in_this_iteration = energy_gain_per_ms.mul(time_handled_in_this_iteration_ms);
      available_energy = available_energy.add(energy_gained_in_this_iteration);
    }

    if (DEBUG) console.log("         time handled = " + time_handled_in_this_iteration_ms + "ms");
    if (DEBUG) console.log("         refilled energy = +" + energy_gained_in_this_iteration.valueOf());
    tiny_invariant_1.default(energy_gained_in_this_iteration.valueOf() > 0, 'UTN: no energy gain in a loop!');
    time_left_to_process_ms -= time_handled_in_this_iteration_ms;
    if (DEBUG) console.log("         energy refilled to: " + available_energy.valueOf());
    t_state = __assign(__assign({}, t_state), {
      available_energy: {
        n: available_energy.n,
        d: available_energy.d
      }
    });
  }

  if (available_energy.compare(u_state.max_energy) > 0) {
    // too big: cap it
    available_energy = new fraction_js_1.default(u_state.max_energy);
  }

  if (DEBUG) console.log("       done! available energy = " + available_energy.valueOf());
  if (DEBUG) console.log("             refilled energy = +" + available_energy.sub(initial_available_energy).valueOf());
  return __assign(__assign({}, t_state), {
    available_energy: {
      n: available_energy.n,
      d: available_energy.d
    }
  });
}

exports.update_to_now = update_to_now;

function use_energy(_a, qty, now_ms) {
  var u_state = _a[0],
      t_state = _a[1];

  if (qty === void 0) {
    qty = 1;
  }

  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  if (now_ms < t_state.timestamp_ms) throw new Error(consts_1.LIB + ": time went backward! (cheating attempt?)");
  t_state = update_to_now([u_state, t_state], now_ms);
  var available_energy = new fraction_js_1.default(t_state.available_energy).sub(qty);

  if (available_energy.s < 0) {
    throw new Error(consts_1.LIB + ": not enough energy left!");
  }

  u_state = __assign(__assign({}, u_state), {
    total_energy_consumed_so_far: u_state.total_energy_consumed_so_far + qty,
    revision: u_state.revision + 1
  });
  t_state = __assign(__assign({}, t_state), {
    available_energy: {
      // don't store sign
      n: available_energy.n,
      d: available_energy.d
    },
    revision: t_state.revision + 1
  });
  return [u_state, t_state];
}

exports.use_energy = use_energy; // can be used as a punishment

function lose_all_energy(_a, qty, now_ms) {
  var u_state = _a[0],
      t_state = _a[1];

  if (qty === void 0) {
    qty = 1;
  }

  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  t_state = __assign(__assign({}, t_state), {
    timestamp_ms: now_ms,
    available_energy: {
      n: 0,
      d: 1
    },
    revision: t_state.revision + 1
  });
  return t_state;
}

exports.lose_all_energy = lose_all_energy; // seldom used, for ex. by secret codes or for tests

function restore_energy(_a, qty, now_ms) {
  var u_state = _a[0],
      t_state = _a[1];

  if (qty === void 0) {
    qty = 1;
  }

  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  t_state = update_to_now([u_state, t_state], now_ms);
  var available_energy = new fraction_js_1.default(t_state.available_energy).add(qty);
  if (available_energy.compare(u_state.max_energy) > 0) available_energy = new fraction_js_1.default(u_state.max_energy);
  t_state = __assign(__assign({}, t_state), {
    available_energy: {
      n: available_energy.n,
      d: available_energy.d
    }
  });
  return t_state;
}

exports.restore_energy = restore_energy; /////////////////////
},{"tiny-invariant":"VYmh","fraction.js":"xnfm","@offirmo-private/timestamps":"bMV2","@tbrpg/definitions":"PTCd","./consts":"Lo5l","./selectors":"tTAZ"}],"aEWj":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIGRATION_HINTS_FOR_TESTS = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var state_utils_2 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


var MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});
exports.MIGRATION_HINTS_FOR_TESTS = MIGRATION_HINTS_FOR_TESTS;

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  return state_utils_2.generic_migrate_to_latest({
    SEC: SEC,
    LIB: consts_1.LIB,
    SCHEMA_VERSION: consts_1.SCHEMA_VERSION,
    legacy_state: legacy_state,
    hints: hints,
    sub_states_migrate_to_latest: {},
    pipeline: [migrate_to_4x, migrate_to_3]
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

var migrate_to_4x = function (SEC, legacy_state, hints, previous, legacy_schema_version) {
  //console.log('hello from migrate_to_4x', legacy_state, hints, previous, legacy_schema_version)
  if (legacy_schema_version < 3) legacy_state = previous(SEC, legacy_state, hints);
  var u_state = legacy_state[0],
      t_state = legacy_state[1];
  u_state = __assign(__assign({}, u_state), {
    schema_version: 4
  });
  t_state = __assign(__assign({}, t_state), {
    schema_version: 4,
    // this field was added
    revision: u_state.revision
  });
  return [u_state, t_state];
};

var migrate_to_3 = function () {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
};
},{"@offirmo-private/state-utils":"PmVE","./consts":"Lo5l"}],"t3WS":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"vXc2","./examples":"WCuv","./selectors":"tTAZ","./state":"cD5i","./migrations":"aEWj"}],"qJ36":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EngagementType = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var EngagementType = typescript_string_enums_1.Enum('flow', // normal immediate feedback to user actions
'aside', // side message like an achievement
'warning');
exports.EngagementType = EngagementType; /////////////////////
},{"typescript-string-enums":"qyCc"}],"JQL6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var types_1 = require("./types"); /////////////////////
// a full featured, non-trivial demo state
// useful for demos and unit tests


var DEMO_STATE = state_utils_1.enforce_immutability({
  schema_version: 1,
  revision: 42,
  queue: [{
    uid: 42,
    engagement: {
      key: 'hello_world--flow',
      type: types_1.EngagementType.flow
    },
    params: {}
  }]
});
exports.DEMO_STATE = DEMO_STATE;
},{"@offirmo-private/state-utils":"PmVE","./types":"qJ36"}],"ye1L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_oldest_queued_non_flow = exports.get_oldest_queued_flow = void 0;

var types_1 = require("./types"); /////////////////////


function get_oldest_queued_flow(state) {
  return state.queue.find(function (queued) {
    return queued.engagement.type === types_1.EngagementType.flow;
  });
}

exports.get_oldest_queued_flow = get_oldest_queued_flow;

function get_oldest_queued_non_flow(state) {
  return state.queue.find(function (queued) {
    return queued.engagement.type !== types_1.EngagementType.flow;
  });
}

exports.get_oldest_queued_non_flow = get_oldest_queued_non_flow;
},{"./types":"qJ36"}],"IOMu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@oh-my-rpg/state-engagement';
exports.LIB = LIB;
var SCHEMA_VERSION = 1;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
},{}],"ZG7Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("./consts");

function get_lib_SEC(parent) {
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: 'state-engagement'
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","./consts":"IOMu"}],"IeTF":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acknowledge_all_seen = exports.acknowledge_seen = exports.enqueue = exports.create = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var sec_1 = require("./sec"); /////////////////////


function create(SEC) {
  return sec_1.get_lib_SEC(SEC).xTry('create', function () {
    return state_utils_1.enforce_immutability({
      schema_version: consts_1.SCHEMA_VERSION,
      revision: 0,
      queue: []
    });
  });
}

exports.create = create; /////////////////////

function enqueue(state, engagement, params) {
  // Avoid duplication? Possible bug? No, hard to detect, may have different params.
  // ex. multiple level rises should be ok.
  // ex. multiple new achievements
  if (params === void 0) {
    params = {};
  }

  var pending = {
    uid: state.revision + 1,
    engagement: engagement,
    params: params
  };
  return __assign(__assign({}, state), {
    queue: __spreadArray(__spreadArray([], state.queue), [pending]),
    revision: state.revision + 1
  });
}

exports.enqueue = enqueue;

function acknowledge_seen(state, uid) {
  var is_in_queue = state.queue.some(function (queued) {
    return queued.uid === uid;
  });
  tiny_invariant_1.default(is_in_queue, "Engagement: acknowledging a non-queued engagement \"" + uid + "\"!");
  return __assign(__assign({}, state), {
    queue: state.queue.filter(function (queued) {
      return queued.uid !== uid;
    }),
    revision: state.revision + 1
  });
}

exports.acknowledge_seen = acknowledge_seen;

function acknowledge_all_seen(state) {
  if (!state.queue.length) return state;
  return __assign(__assign({}, state), {
    queue: [],
    revision: state.revision + 1
  });
}

exports.acknowledge_all_seen = acknowledge_all_seen; /////////////////////
},{"tiny-invariant":"VYmh","@offirmo-private/state-utils":"PmVE","./consts":"IOMu","./sec":"ZG7Y"}],"O96W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIGRATION_HINTS_FOR_TESTS = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var sec_1 = require("./sec"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


var MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});
exports.MIGRATION_HINTS_FOR_TESTS = MIGRATION_HINTS_FOR_TESTS; /////////////////////

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var existing_version = legacy_state && legacy_state.schema_version || 0;
  SEC = sec_1.get_lib_SEC(SEC).setAnalyticsAndErrorDetails({
    version_from: existing_version,
    version_to: consts_1.SCHEMA_VERSION
  });
  return SEC.xTry('migrate_to_latest', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    if (existing_version > consts_1.SCHEMA_VERSION) throw new Error('Your data is from a more recent version of this lib. Please update!');
    var state = legacy_state; // for starter

    if (existing_version < consts_1.SCHEMA_VERSION) {
      logger.warn(consts_1.LIB + ": attempting to migrate schema from v" + existing_version + " to v" + consts_1.SCHEMA_VERSION + ":");
      SEC.fireAnalyticsEvent('schema_migration.began');

      try {
        state = migrate_to_2(SEC, legacy_state, hints);
      } catch (err) {
        SEC.fireAnalyticsEvent('schema_migration.failed');
        throw err;
      }

      logger.info(consts_1.LIB + ": schema migration successful.");
      SEC.fireAnalyticsEvent('schema_migration.ended');
    } // migrate sub-reducers if any...


    return state;
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

function migrate_to_2(SEC, legacy_state, hints) {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
}
},{"@offirmo-private/state-utils":"PmVE","./consts":"IOMu","./sec":"ZG7Y"}],"WEJP":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"qJ36","./examples":"JQL6","./selectors":"ye1L","./state":"IeTF","./migrations":"O96W"}],"i1Er":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var timestamps_1 = require("@offirmo-private/timestamps"); /////////////////////
// a full featured, non-trivial demo state
// useful for demos and unit tests


var DEMO_STATE = state_utils_1.enforce_immutability({
  schema_version: 1,
  revision: 3,
  redeemed_codes: {
    BORED: {
      'redeem_count': 1,
      'last_redeem_date_minutes': timestamps_1.get_human_readable_UTC_timestamp_minutes(new Date(timestamps_1.TEST_TIMESTAMP_MS))
    }
  }
});
exports.DEMO_STATE = DEMO_STATE;
},{"@offirmo-private/state-utils":"PmVE","@offirmo-private/timestamps":"bMV2"}],"XKKA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@oh-my-rpg/state-codes';
exports.LIB = LIB;
var SCHEMA_VERSION = 1;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
},{}],"Wm3X":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default_to = exports.normalize = exports.combine_normalizers = void 0;

function combine_normalizers() {
  var normalizers = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    normalizers[_i] = arguments[_i];
  }

  return function (s) {
    return normalizers.reduce(function (acc, normalizer) {
      var out = normalizer(acc); //console.log(`combined normalization: "${acc}" -> "${out}"`)

      return out;
    }, s);
  };
}

exports.combine_normalizers = combine_normalizers;

function normalize(s) {
  var normalizers = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    normalizers[_i - 1] = arguments[_i];
  }

  return combine_normalizers.apply(void 0, normalizers)(s);
}

exports.normalize = normalize;

function default_to(def) {
  if (def === void 0) {
    def = '';
  }

  return function (s) {
    return s ? s : '';
  };
}

exports.default_to = default_to;
},{}],"Woit":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.coerce_to_redeemable_code = exports.coerce_to_safe_nickname = exports.convert_spaces_to_camel_case = exports.coerce_delimiters_to_space = exports.coerce_blanks_to_single_spaces = exports.normalize_unicode = exports.coerce_to_ascii = exports.trim = exports.to_upper_case = exports.to_lower_case = exports.capitalize = exports.ensure_string = exports.default_to_empty = exports.RECOMMENDED_UNICODE_NORMALIZATION = void 0;

var normalize_1 = require("./normalize"); /////////////////////


exports.RECOMMENDED_UNICODE_NORMALIZATION = 'NFC'; // https://www.win.tue.nl/~aeb/linux/uc/nfc_vs_nfd.html

exports.default_to_empty = normalize_1.default_to('');

var ensure_string = function (s) {
  return String(s);
};

exports.ensure_string = ensure_string;

var capitalize = function (s) {
  return s.length === 0 ? s : s[0].toUpperCase() + s.slice(1);
};

exports.capitalize = capitalize;

var to_lower_case = function (s) {
  return s.toLowerCase();
};

exports.to_lower_case = to_lower_case;

var to_upper_case = function (s) {
  return s.toUpperCase();
};

exports.to_upper_case = to_upper_case; // https://devdocs.io/javascript/global_objects/string/trim

var trim = function (s) {
  return s.trim();
};

exports.trim = trim; // https://thread.engineering/2018-08-29-searching-and-sorting-text-with-diacritical-marks-in-javascript/

var coerce_to_ascii = function (s) {
  return s.normalize('NFD') // D = Decompose = technique to remove non-ascii part
  .replace(/[\u0300-\u036f]/g, '');
};

exports.coerce_to_ascii = coerce_to_ascii; // https://devdocs.io/javascript/global_objects/string/normalize
// https://withblue.ink/2019/03/11/why-you-need-to-normalize-unicode-strings.html

var normalize_unicode = function (s) {
  return s.normalize(exports.RECOMMENDED_UNICODE_NORMALIZATION);
};

exports.normalize_unicode = normalize_unicode; // https://stackoverflow.com/a/1981366/587407

var ANY_BLANK_REGEXP = /\s+/g;

var coerce_blanks_to_single_spaces = function (s) {
  return s.replace(ANY_BLANK_REGEXP, ' ');
};

exports.coerce_blanks_to_single_spaces = coerce_blanks_to_single_spaces; // https://stackoverflow.com/a/19313707/587407

var ANY_DELIMITER_REGEXP = new RegExp('[-+()*/:? _\.]', 'g');

var coerce_delimiters_to_space = function (s) {
  return s.replace(ANY_DELIMITER_REGEXP, ' ');
};

exports.coerce_delimiters_to_space = coerce_delimiters_to_space;

var convert_spaces_to_camel_case = function (s) {
  return s.split(' ').map(exports.capitalize).join('');
};

exports.convert_spaces_to_camel_case = convert_spaces_to_camel_case; // for user names, player names...

exports.coerce_to_safe_nickname = normalize_1.combine_normalizers(exports.coerce_to_ascii, exports.trim, exports.to_lower_case, exports.coerce_delimiters_to_space, exports.coerce_blanks_to_single_spaces, exports.convert_spaces_to_camel_case);
exports.coerce_to_redeemable_code = normalize_1.combine_normalizers(exports.trim, exports.coerce_to_ascii, exports.to_upper_case, exports.coerce_delimiters_to_space, exports.convert_spaces_to_camel_case); /////////////////////
},{"./normalize":"Wm3X"}],"rUVE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalize_email_full = exports.normalize_email_reasonable = exports.normalize_email_safe = void 0;

var normalize_1 = require("./normalize");

var normalizers__base_1 = require("./normalizers--base"); ////////////////////////////////////
// general infos: https://github.com/Offirmo-team/wiki/wiki/courriel
// credits to
////////////////////////////////////
// fragments
// inspired by the spec of https://github.com/johno/normalize-email


function remove_plus_fragment_from_local_part(email) {
  var _a = email.split('@'),
      local_part = _a[0],
      domain = _a[1];

  return [local_part.split('+')[0], domain].join('@');
}

function remove_dots_from_local_part(email) {
  var _a = email.split('@'),
      local_part = _a[0],
      domain = _a[1];

  return [local_part.split('.').join(''), domain].join('@');
}

function lowercase_domain(email) {
  var _a = email.split('@'),
      local_part = _a[0],
      _b = _a[1],
      domain = _b === void 0 ? '' : _b;

  return [local_part, domain.toLowerCase()].join('@');
}

function normalize_domain(email) {
  var _a = email.split('@'),
      local_part = _a[0],
      _b = _a[1],
      domain = _b === void 0 ? '' : _b;

  domain = domain.toLowerCase();
  if (domain === 'googlemail.com') domain = 'gmail.com';
  return [local_part, domain].join('@');
}

var RULES = {
  'gmail.com': {
    local_part_case_sensitive: false,
    plus_fragment_sensitive: false,
    dots_sensitive: false
  },
  'hotmail.com': {
    local_part_case_sensitive: undefined,
    plus_fragment_sensitive: false,
    dots_sensitive: true
  },
  'live.com': {
    local_part_case_sensitive: undefined,
    plus_fragment_sensitive: false,
    dots_sensitive: false
  },
  'outlook.com': {
    local_part_case_sensitive: undefined,
    plus_fragment_sensitive: false,
    dots_sensitive: true
  }
};

function remove_plus_fragment_from_local_part_if_insensitive(email) {
  var _a;

  var _b = email.split('@'),
      local_part = _b[0],
      domain = _b[1]; //console.log('remove_plus_fragment_from_local_part_if_insensitive', domain, RULES[domain])


  if (((_a = RULES[domain]) === null || _a === void 0 ? void 0 : _a.plus_fragment_sensitive) === false) return remove_plus_fragment_from_local_part(email);
  return email;
}

function remove_dots_from_local_part_if_insensitive(email) {
  var _a;

  var _b = email.split('@'),
      local_part = _b[0],
      domain = _b[1];

  if (((_a = RULES[domain]) === null || _a === void 0 ? void 0 : _a.dots_sensitive) === false) return remove_dots_from_local_part(email);
  return email;
}

function lowercase_local_part_if_insensitive(email) {
  var _a;

  var _b = email.split('@'),
      local_part = _b[0],
      domain = _b[1];

  if (!((_a = RULES[domain]) === null || _a === void 0 ? void 0 : _a.local_part_case_sensitive)) // default to true
    return email.toLowerCase();
  return email;
} /////////////////////
// extras from me
// useful to fix autocomplete after typing "."


function remove_all_spaces(email) {
  return email.split(' ').join('');
}

function validate_email_structure(possible_email) {
  var _a = possible_email.split('@'),
      before = _a[0],
      after = _a[1],
      rest = _a.slice(2); //console.log({before, after, rest, ta: typeof after})


  if (rest.length) throw new Error('Invalid email: more than one @!');
  if (typeof after !== 'string') throw new Error('Invalid email: no @!');
  if (after.split('.').length < 2) throw new Error('Invalid email: bad domain!');
  if (!before.length || !after.length) throw new Error('Invalid email: bad structure!');
  return possible_email;
} ////////////////////////////////////
// We need different levels of normalization
// for ex. using "+" foo+test@gmail.com is not known and very likely to be an attempt to double register
// however using "." foo.bar@gmail.com is well known and not all pp know it can be removed
// normalizing too hard prevents us from using gravatar
// ex. offirmo.net@gmail.com is not matching gravatar offirmonet@gmail.com


exports.normalize_email_safe = normalize_1.combine_normalizers(normalizers__base_1.normalize_unicode, remove_all_spaces, validate_email_structure, lowercase_domain);
exports.normalize_email_reasonable = normalize_1.combine_normalizers(normalizers__base_1.normalize_unicode, remove_all_spaces, validate_email_structure, normalize_domain, remove_plus_fragment_from_local_part_if_insensitive, lowercase_local_part_if_insensitive);
exports.normalize_email_full = normalize_1.combine_normalizers(normalizers__base_1.normalize_unicode, remove_all_spaces, validate_email_structure, normalize_domain, remove_plus_fragment_from_local_part_if_insensitive, remove_dots_from_local_part_if_insensitive, lowercase_local_part_if_insensitive);
},{"./normalize":"Wm3X","./normalizers--base":"Woit"}],"s33f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NORMALIZERS = void 0;

var normalizers__base_1 = require("./normalizers--base");

var normalizer__email_1 = require("./normalizer--email"); /////////////////////


exports.NORMALIZERS = {
  default_to_empty: normalizers__base_1.default_to_empty,
  ensure_string: normalizers__base_1.ensure_string,
  capitalize: normalizers__base_1.capitalize,
  to_lower_case: normalizers__base_1.to_lower_case,
  to_upper_case: normalizers__base_1.to_upper_case,
  trim: normalizers__base_1.trim,
  coerce_to_ascii: normalizers__base_1.coerce_to_ascii,
  normalize_unicode: normalizers__base_1.normalize_unicode,
  coerce_blanks_to_single_spaces: normalizers__base_1.coerce_blanks_to_single_spaces,
  coerce_delimiters_to_space: normalizers__base_1.coerce_delimiters_to_space,
  convert_spaces_to_camel_case: normalizers__base_1.convert_spaces_to_camel_case,
  coerce_to_safe_nickname: normalizers__base_1.coerce_to_safe_nickname,
  coerce_to_redeemable_code: normalizers__base_1.coerce_to_redeemable_code,
  normalize_email_safe: normalizer__email_1.normalize_email_safe,
  normalize_email_reasonable: normalizer__email_1.normalize_email_reasonable,
  normalize_email_full: normalizer__email_1.normalize_email_full
}; /////////////////////
},{"./normalizers--base":"Woit","./normalizer--email":"rUVE"}],"tbXb":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./normalize"), exports);

__exportStar(require("./normalizers"), exports);
},{"./types":"MKE5","./normalize":"Wm3X","./normalizers":"s33f"}],"klHm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var normalize_string_1 = require("@offirmo-private/normalize-string"); // useless function to circumvent a strange TS bug


function normalize_code(s) {
  return normalize_string_1.NORMALIZERS.coerce_to_redeemable_code(s);
}

exports.default = normalize_code;
},{"@offirmo-private/normalize-string":"tbXb"}],"bxud":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_code_redeemable = exports.is_code = exports.normalize_code = void 0;

var consts_1 = require("./consts");

var normalize_code_1 = __importDefault(require("./normalize-code"));

exports.normalize_code = normalize_code_1.default; /////////////////////

function is_code(code) {
  if (typeof code !== 'string') return false;
  code = normalize_code_1.default(code);
  if (!code) return false;
  return true;
}

exports.is_code = is_code;

function is_code_redeemable(state, code_spec, infos) {
  if (!code_spec) throw new Error(consts_1.LIB + ": is_code_redeemable() invalid invocation!");
  var code = normalize_code_1.default(code_spec.code);
  if (code_spec.code !== code) throw new Error("Invalid code spec for \"" + code_spec.code + "\", should be \"" + code + "\"!");
  var code_redemption = state.redeemed_codes[code]; // integrated conditions

  if (code_redemption && code_spec.redeem_limit) {
    var redeem_limit = code_spec.redeem_limit;
    if (code_redemption.redeem_count >= redeem_limit) return false;
  } // custom condition


  if (!code_spec.is_redeemable(infos, state)) return false;
  return true;
}

exports.is_code_redeemable = is_code_redeemable;
},{"./consts":"XKKA","./normalize-code":"klHm"}],"HvbZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("./consts");

function get_lib_SEC(parent) {
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: 'state-codes'
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","./consts":"XKKA"}],"V6Fc":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attempt_to_redeem_code = exports.create = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var timestamps_1 = require("@offirmo-private/timestamps");

var consts_1 = require("./consts");

var selectors_1 = require("./selectors");

var sec_1 = require("./sec"); /////////////////////


function create(SEC) {
  return sec_1.get_lib_SEC(SEC).xTry('create', function () {
    return state_utils_1.enforce_immutability({
      schema_version: consts_1.SCHEMA_VERSION,
      revision: 0,
      redeemed_codes: {}
    });
  });
}

exports.create = create; /////////////////////

function attempt_to_redeem_code(state, code_spec, infos) {
  return sec_1.get_lib_SEC().xTry('redeem_code', function () {
    var _a;

    if (!selectors_1.is_code_redeemable(state, code_spec, infos)) throw new Error('This code is either non-existing or non redeemable at the moment!');
    var code = code_spec.code;
    var r = state.redeemed_codes[code] || {
      redeem_count: 0,
      last_redeem_date_minutes: ''
    };
    return state_utils_1.enforce_immutability(__assign(__assign({}, state), {
      redeemed_codes: __assign(__assign({}, state.redeemed_codes), (_a = {}, _a[code] = __assign(__assign({}, r), {
        redeem_count: r.redeem_count + 1,
        last_redeem_date_minutes: timestamps_1.get_human_readable_UTC_timestamp_minutes()
      }), _a)),
      revision: state.revision + 1
    }));
  });
}

exports.attempt_to_redeem_code = attempt_to_redeem_code; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","@offirmo-private/timestamps":"bMV2","./consts":"XKKA","./selectors":"bxud","./sec":"HvbZ"}],"Ri2r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIGRATION_HINTS_FOR_TESTS = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var sec_1 = require("./sec"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


var MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});
exports.MIGRATION_HINTS_FOR_TESTS = MIGRATION_HINTS_FOR_TESTS; /////////////////////

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var existing_version = legacy_state && legacy_state.schema_version || 0;
  SEC = sec_1.get_lib_SEC(SEC).setAnalyticsAndErrorDetails({
    version_from: existing_version,
    version_to: consts_1.SCHEMA_VERSION
  });
  return SEC.xTry('migrate_to_latest', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    if (existing_version > consts_1.SCHEMA_VERSION) throw new Error('Your data is from a more recent version of this lib. Please update!');
    var state = legacy_state; // for starter

    if (existing_version < consts_1.SCHEMA_VERSION) {
      logger.warn(consts_1.LIB + ": attempting to migrate schema from v" + existing_version + " to v" + consts_1.SCHEMA_VERSION + ":");
      SEC.fireAnalyticsEvent('schema_migration.began');

      try {
        state = migrate_to_2(SEC, legacy_state, hints);
      } catch (err) {
        SEC.fireAnalyticsEvent('schema_migration.failed');
        throw err;
      }

      logger.info(consts_1.LIB + ": schema migration successful.");
      SEC.fireAnalyticsEvent('schema_migration.ended');
    } // migrate sub-reducers if any...


    return state;
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

function migrate_to_2(SEC, legacy_state, hints) {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
}
},{"@offirmo-private/state-utils":"PmVE","./consts":"XKKA","./sec":"HvbZ"}],"HIvc":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./migrations"), exports);

__exportStar(require("./normalize-code"), exports);
},{"./types":"vXc2","./examples":"i1Er","./selectors":"bxud","./state":"V6Fc","./migrations":"Ri2r","./normalize-code":"klHm"}],"iio9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AchievementStatus = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var AchievementStatus = typescript_string_enums_1.Enum('secret', // should not even be hinted
'hidden', // may be hinted, for ex. as [???]
'revealed', // appear and conditions may be seen
'unlocked');
exports.AchievementStatus = AchievementStatus; /////////////////////
},{"typescript-string-enums":"qyCc"}],"zRoj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var timestamps_1 = require("@offirmo-private/timestamps");

var types_1 = require("./types"); /////////////////////


var TRUE_TRUE = true; // https://github.com/Microsoft/TypeScript/issues/19360
// a full featured, non-trivial demo state
// useful for demos and unit tests

var DEMO_STATE = state_utils_1.enforce_immutability({
  schema_version: 3,
  revision: 42,
  wiki: null,
  flags: null,
  achievements: {
    'TEST': types_1.AchievementStatus.unlocked,
    'Summoned': types_1.AchievementStatus.unlocked,
    'Alpha player': types_1.AchievementStatus.unlocked,
    'Beta player': types_1.AchievementStatus.revealed,
    'I am bored': types_1.AchievementStatus.unlocked,
    'Turn it up to eleven': types_1.AchievementStatus.unlocked,
    'I am dead bored': types_1.AchievementStatus.revealed,
    'did I mention I was bored?': types_1.AchievementStatus.hidden,
    'king of boredom': types_1.AchievementStatus.hidden,
    'No-life except for boredom': types_1.AchievementStatus.hidden,
    'Hello darkness my old friend': types_1.AchievementStatus.hidden,
    'What’s in a name?': types_1.AchievementStatus.unlocked,
    'Graduated': types_1.AchievementStatus.unlocked,
    'I am very bored': types_1.AchievementStatus.unlocked,
    'Sorry my hand slipped': types_1.AchievementStatus.unlocked,
    'Oops!... I Did It Again': types_1.AchievementStatus.unlocked,
    'I’m not that innocent': types_1.AchievementStatus.revealed,
    'It’s good to be bad': types_1.AchievementStatus.hidden
  },
  statistics: {
    creation_date_hrtday: timestamps_1.get_human_readable_UTC_timestamp_days(new Date(timestamps_1.TEST_TIMESTAMP_MS - 100000)),
    last_visited_timestamp_hrtday: timestamps_1.get_human_readable_UTC_timestamp_days(new Date(timestamps_1.TEST_TIMESTAMP_MS)),
    active_day_count: 12,
    good_play_count: 12,
    bad_play_count: 3,
    encountered_adventures: {
      'caravan_success': TRUE_TRUE,
      'dying_man': TRUE_TRUE,
      'ate_bacon': TRUE_TRUE,
      'ate_zombie': TRUE_TRUE,
      'refreshing_nap': TRUE_TRUE,
      'older': TRUE_TRUE
    },
    encountered_monsters: {
      'wolf': TRUE_TRUE,
      'spreading adder': TRUE_TRUE,
      'fur-bearing truit': TRUE_TRUE
    },
    good_play_count_by_active_class: {
      'novice': 7,
      'warrior': 5
    },
    bad_play_count_by_active_class: {
      'novice': 2,
      'warrior': 1
    },
    fight_won_count: 6,
    fight_lost_count: 4,
    coins_gained: 1234,
    tokens_gained: 2,
    items_gained: 3,
    has_account: true,
    is_registered_alpha_player: false
  }
});
exports.DEMO_STATE = DEMO_STATE;
},{"@offirmo-private/state-utils":"PmVE","@offirmo-private/timestamps":"bMV2","./types":"iio9"}],"jOSu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_achievement_already_unlocked = exports.get_last_known_achievement_status = void 0;

var types_1 = require("./types"); /////////////////////


function get_last_known_achievement_status(state, key) {
  return state.achievements[key];
}

exports.get_last_known_achievement_status = get_last_known_achievement_status;

function is_achievement_already_unlocked(state, key) {
  return state.achievements.hasOwnProperty(key) ? state.achievements[key] === types_1.AchievementStatus.unlocked : false;
}

exports.is_achievement_already_unlocked = is_achievement_already_unlocked;
},{"./types":"iio9"}],"pUlX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@tbrpg/state--progress';
exports.LIB = LIB;
var SCHEMA_VERSION = 3;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
},{}],"YSka":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("./consts");

function get_lib_SEC(parent) {
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: 'state-progress'
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","./consts":"pUlX"}],"eb8U":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.on_achieved = exports.on_played = exports.create = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var timestamps_1 = require("@offirmo-private/timestamps");

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var types_1 = require("./types");

var selectors_1 = require("./selectors");

var sec_1 = require("./sec"); /////////////////////


function create(SEC) {
  return sec_1.get_lib_SEC(SEC).xTry('create', function () {
    var now_hrtday = timestamps_1.get_human_readable_UTC_timestamp_days();
    return state_utils_1.enforce_immutability({
      schema_version: consts_1.SCHEMA_VERSION,
      revision: 0,
      wiki: null,
      flags: null,
      achievements: {},
      statistics: {
        creation_date_hrtday: now_hrtday,
        last_visited_timestamp_hrtday: now_hrtday,
        active_day_count: 1,
        good_play_count: 0,
        bad_play_count: 0,
        encountered_adventures: {},
        encountered_monsters: {},
        good_play_count_by_active_class: {},
        bad_play_count_by_active_class: {},
        fight_won_count: 0,
        fight_lost_count: 0,
        coins_gained: 0,
        tokens_gained: 0,
        items_gained: 0,
        has_account: false,
        is_registered_alpha_player: false
      }
    });
  });
}

exports.create = create; /////////////////////

function _on_activity(state, previous_revision) {
  var now_hrtday = timestamps_1.get_human_readable_UTC_timestamp_days();
  var is_new_day = state.statistics.last_visited_timestamp_hrtday !== now_hrtday;

  if (is_new_day) {
    state = __assign(__assign({}, state), {
      statistics: __assign(__assign({}, state.statistics), {
        last_visited_timestamp_hrtday: now_hrtday,
        active_day_count: (state.statistics.active_day_count || 0) + 1
      }),
      revision: previous_revision + 1
    });
  }

  return state;
}

function on_played(previous_state, details) {
  var _a, _b, _c, _d;

  var state = previous_state;
  var good = details.good,
      adventure_key = details.adventure_key,
      encountered_monster_key = details.encountered_monster_key,
      active_class = details.active_class,
      coins_gained = details.coins_gained,
      tokens_gained = details.tokens_gained,
      items_gained = details.items_gained; // shortcut + drop immutability

  var stats = __assign({}, state.statistics);

  if (!stats.encountered_adventures[adventure_key]) {
    stats.encountered_adventures = __assign(__assign({}, stats.encountered_adventures), (_a = {}, _a[adventure_key] = true, _a));
  }

  if (good) {
    stats.good_play_count++;
    stats.good_play_count_by_active_class = __assign((_b = {}, _b[active_class] = 0, _b), stats.good_play_count_by_active_class);
    stats.good_play_count_by_active_class[active_class]++;

    if (adventure_key.startsWith('fight_won_')) {
      stats.fight_won_count++;
    } else if (adventure_key.startsWith('fight_lost_')) {
      stats.fight_lost_count++;
    }
  } else {
    stats.bad_play_count++;
    stats.bad_play_count_by_active_class = __assign((_c = {}, _c[active_class] = 0, _c), stats.bad_play_count_by_active_class);
    stats.bad_play_count_by_active_class[active_class]++;
  }

  if (encountered_monster_key && !stats.encountered_monsters[encountered_monster_key]) {
    stats.encountered_monsters = __assign(__assign({}, stats.encountered_monsters), (_d = {}, _d[encountered_monster_key] = true, _d));
  }

  stats.coins_gained += coins_gained;
  stats.tokens_gained += tokens_gained;
  stats.items_gained += items_gained;
  state = __assign(__assign({}, state), {
    statistics: stats,
    revision: state.revision + 1
  });
  return _on_activity(state, previous_state.revision);
}

exports.on_played = on_played; /////////////////////

function on_achieved(previous_state, key, new_status) {
  var _a;

  var last_known_status = selectors_1.get_last_known_achievement_status(previous_state, key);
  if (last_known_status === new_status) return previous_state;

  if (last_known_status === types_1.AchievementStatus.unlocked) {
    // Never remove an achievement, they are sticky.
    // Even if it was a bug, it should be revoked in a migration
    tiny_invariant_1.default(last_known_status !== types_1.AchievementStatus.unlocked, consts_1.LIB + ": achievements are sticky, they can\u2019t be removed!");
  }

  var state = __assign(__assign({}, previous_state), {
    achievements: __assign(__assign({}, previous_state.achievements), (_a = {}, _a[key] = new_status, _a)),
    revision: previous_state.revision + 1
  });

  return _on_activity(state, previous_state.revision);
}

exports.on_achieved = on_achieved; /////////////////////
},{"tiny-invariant":"VYmh","@offirmo-private/timestamps":"bMV2","@offirmo-private/state-utils":"PmVE","./consts":"pUlX","./types":"iio9","./selectors":"jOSu","./sec":"YSka"}],"fkKa":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.migrate_to_latest = exports.MIGRATION_HINTS_FOR_TESTS = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


exports.MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  return state_utils_1.generic_migrate_to_latest({
    SEC: SEC,
    LIB: consts_1.LIB,
    SCHEMA_VERSION: consts_1.SCHEMA_VERSION,
    legacy_state: legacy_state,
    hints: hints,
    sub_states_migrate_to_latest: {},
    pipeline: [migrate_to_3x, migrate_to_2]
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

var migrate_to_3x = function (SEC, legacy_state, hints, previous, legacy_schema_version) {
  var _a; //console.log('hello from migrate_to_3x', legacy_state, hints, previous, legacy_schema_version)


  if (legacy_schema_version < 2) legacy_state = previous(SEC, legacy_state, hints);
  var state = legacy_state;

  var _b = legacy_state.statistics,
      last_visited_timestamp = _b.last_visited_timestamp,
      other_stats = __rest(_b, ["last_visited_timestamp"]);

  state = __assign(__assign({}, state), {
    schema_version: 3,
    statistics: __assign(__assign({}, other_stats), {
      creation_date_hrtday: (_a = legacy_state.statistics.creation_date_hrtday) !== null && _a !== void 0 ? _a : last_visited_timestamp,
      last_visited_timestamp_hrtday: last_visited_timestamp
    })
  });
  return state;
};

var migrate_to_2 = function (SEC, legacy_state, hints, next, legacy_schema_version) {
  return __assign(__assign({}, legacy_state), {
    schema_version: 2,
    achievements: legacy_state.achievements || {}
  });
};
},{"@offirmo-private/state-utils":"PmVE","./consts":"pUlX"}],"Tgn1":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"iio9","./examples":"zRoj","./selectors":"jOSu","./state":"eb8U","./migrations":"fkKa"}],"RR9s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = void 0;

var state_utils_1 = require("@offirmo-private/state-utils"); /////////////////////
// needed to test migrations, both here and in composing parents
// a full featured, non-trivial demo state
// needed for demos


var DEMO_STATE = state_utils_1.enforce_immutability({
  schema_version: 3,
  revision: 5,
  slot_id: 0,
  is_web_diversity_supporter: true,
  is_logged_in: true,
  roles: ['tbrpg:alpha']
});
exports.DEMO_STATE = DEMO_STATE;
},{"@offirmo-private/state-utils":"PmVE"}],"Bz9Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_VERSION = exports.LIB = void 0;
var LIB = '@oh-my-rpg/state-meta';
exports.LIB = LIB;
var SCHEMA_VERSION = 3;
exports.SCHEMA_VERSION = SCHEMA_VERSION;
},{}],"lAsh":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.on_logged_in_refresh = exports.on_start_session = exports.create = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts"); /////////////////////


function create() {
  return state_utils_1.enforce_immutability({
    schema_version: consts_1.SCHEMA_VERSION,
    revision: 0,
    slot_id: 0,
    is_web_diversity_supporter: false,
    is_logged_in: false,
    roles: [] // so far

  });
}

exports.create = create; /////////////////////

function on_start_session(previous_state, is_web_diversity_supporter) {
  if (previous_state.is_web_diversity_supporter === is_web_diversity_supporter) return previous_state;
  return state_utils_1.enforce_immutability(__assign(__assign({}, previous_state), {
    is_web_diversity_supporter: is_web_diversity_supporter,
    revision: previous_state.revision + 1
  }));
}

exports.on_start_session = on_start_session;
/*interface OnLoggedIn {
    is_logged_in: boolean
    roles: string[]
}*/

function on_logged_in_refresh(previous_state, is_logged_in, roles) {
  if (roles === void 0) {
    roles = [];
  }

  var sorted_roles = __spreadArray([], roles).sort();

  if (previous_state.is_logged_in === is_logged_in && previous_state.roles.join(',') === sorted_roles.join(',')) return previous_state; // no change

  var state = previous_state;
  return state_utils_1.enforce_immutability(__assign(__assign({}, state), {
    is_logged_in: is_logged_in,
    roles: roles,
    revision: state.revision + 1
  }));
}

exports.on_logged_in_refresh = on_logged_in_refresh; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","./consts":"Bz9Q"}],"CaHN":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.migrate_to_latest = exports.MIGRATION_HINTS_FOR_TESTS = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var state_utils_2 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts"); // some hints may be needed to migrate to demo state
// need to export them for composing tests


exports.MIGRATION_HINTS_FOR_TESTS = state_utils_1.enforce_immutability({});

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  return state_utils_2.generic_migrate_to_latest({
    SEC: SEC,
    LIB: consts_1.LIB,
    SCHEMA_VERSION: consts_1.SCHEMA_VERSION,
    legacy_state: legacy_state,
    hints: hints,
    sub_states_migrate_to_latest: {},
    pipeline: [migrate_to_3x, migrate_to_2]
  });
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

var migrate_to_3x = function (SEC, legacy_state, hints, next, legacy_schema_version) {
  //console.log('hello from migrate_to_3x', legacy_state, hints, legacy_schema_version)
  if (legacy_schema_version < 2) legacy_state = next(SEC, legacy_state, hints);

  var state = __assign(__assign({}, legacy_state), {
    schema_version: 3,
    slot_id: 0
  });

  delete state.persistence_id;
  return state;
};

var migrate_to_2 = function () {
  throw new Error('Schema is too old (pre-beta), can’t migrate!');
}; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","./consts":"Bz9Q"}],"GY73":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./state"), exports);

__exportStar(require("./migrations"), exports);
},{"./types":"vXc2","./examples":"RR9s","./state":"lAsh","./migrations":"CaHN"}],"uOQ2":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.appraise_sell_value = exports.appraise_power = exports.appraise_power_normalized = void 0;

var definitions_1 = require("@tbrpg/definitions");

var logic_armors_1 = require("@oh-my-rpg/logic-armors");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons"); /////////////////////

/* NOTE
 * the "normalized power" is used to sort the inventory
 * AND to auto-discard items.
 * Thus it should not be biased toward/against a certain type of item.
 */


var ARMOR_DMG_REDUCTION_TO_POWER_RATIO = 1.;

function appraise_armor_power(armor, potential) {
  return Math.round(logic_armors_1.get_ultimate_medium_damage_reduction(armor) * ARMOR_DMG_REDUCTION_TO_POWER_RATIO);
}

var WEAPON_DMG_TO_POWER_RATIO = 1.;

function appraise_weapon_power(weapon, potential) {
  return Math.round(logic_weapons_1.get_ultimate_medium_damage(weapon) * WEAPON_DMG_TO_POWER_RATIO);
}

function appraise_power(item, potential) {
  if (potential === void 0) {
    potential = true;
  }

  switch (item.slot) {
    case definitions_1.InventorySlot.armor:
      return appraise_armor_power(item, potential);

    case definitions_1.InventorySlot.weapon:
      return appraise_weapon_power(item, potential);

    default:
      throw new Error("appraise_power(): no appraisal scheme for slot \"" + item.slot + "\" !");
  }
}

exports.appraise_power = appraise_power; // appraise power normalized across different item slots

function appraise_power_normalized(item, potential) {
  if (potential === void 0) {
    potential = true;
  }

  switch (item.slot) {
    case definitions_1.InventorySlot.armor:
      return appraise_armor_power(item, potential) / logic_armors_1.ATTACK_VS_DEFENSE_RATIO;

    case definitions_1.InventorySlot.weapon:
      return appraise_weapon_power(item, potential);

    default:
      throw new Error("appraise_power_normalized(): no appraisal scheme for slot \"" + item.slot + "\" !");
  }
}

exports.appraise_power_normalized = appraise_power_normalized; ///////

var ARMOR_DMG_REDUCTION_TO_COINS_RATIO = 1;

function appraise_armor_base_value(armor) {
  return logic_armors_1.get_ultimate_medium_damage_reduction(armor) * ARMOR_DMG_REDUCTION_TO_COINS_RATIO;
}

var WEAPON_DMG_TO_COINS_RATIO = 1.5;

function appraise_weapon_base_value(weapon) {
  return logic_weapons_1.get_ultimate_medium_damage(weapon) * WEAPON_DMG_TO_COINS_RATIO;
}

var SELL_RATIO = .25;

function appraise_sell_value(item) {
  switch (item.slot) {
    case definitions_1.InventorySlot.armor:
      return Math.max(1, Math.round(appraise_armor_base_value(item) * SELL_RATIO));

    case definitions_1.InventorySlot.weapon:
      return Math.max(1, Math.round(appraise_weapon_base_value(item) * SELL_RATIO));

    default:
      throw new Error("appraise_value(): no appraisal scheme for slot \"" + item.slot + "\" !");
  }
}

exports.appraise_sell_value = appraise_sell_value;
},{"@tbrpg/definitions":"PTCd","@oh-my-rpg/logic-armors":"eV82","@oh-my-rpg/logic-weapons":"qUBn"}],"qSoP":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = exports.generate_random_demo_shop = void 0;

var random_1 = require("@offirmo/random"); /////////////////////


function create(rng) {// TODO one day
}

exports.create = create; /////////////////////
// for demo purpose, all attributes having the same probability + also random enhancement level

function generate_random_demo_shop() {
  var rng = random_1.Random.engines.mt19937().autoSeed();
  return create(rng);
}

exports.generate_random_demo_shop = generate_random_demo_shop; /////////////////////
},{"@offirmo/random":"OV1n"}],"jzJm":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./state"), exports);
},{"./types":"vXc2","./selectors":"uOQ2","./state":"qSoP"}],"Z4ak":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AdventureType = exports.CoinsGain = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var CoinsGain = typescript_string_enums_1.Enum('lossꘌsmall', 'lossꘌone', 'none', 'gainꘌone', 'gainꘌsmall', 'gainꘌmedium', 'gainꘌbig', 'gainꘌhuge');
exports.CoinsGain = CoinsGain;
var AdventureType = typescript_string_enums_1.Enum('story', 'fight');
exports.AdventureType = AdventureType; /////////////////////
},{"typescript-string-enums":"qyCc"}],"qhLK":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messages = exports.OFFIRMO_BLAND_REPARTITION_ADJUSTMENT = void 0;
var BAD_ADVENTURES = {
  // https://www.thesaurus.com/browse/tired
  bad_s1: "\uD83D\uDEAB  You clicked too early!\nYou collapse from exhaustion \uD83D\uDE35 , you lose all your energy\u26A1 !",
  bad_s2: "\uD83D\uDEAB  You clicked too early!\nYou burn out \uD83D\uDE35 , you lose all your energy\u26A1 !",
  // monsters
  bad_m1: "\uD83D\uDEAB  You clicked too early!\nYou fall asleep and get eaten by a dragon \uD83D\uDC09 !\nyou lose all your energy \uD83D\uDC80 !",
  bad_m2: "\uD83D\uDEAB  You clicked too early!\nYou are drowsy during a critical fight and get eaten by a monster \uD83E\uDD96 !\nyou lose all your energy \u2620\uFE0F !",
  bad_m3: "\uD83D\uDEAB  You clicked too early!\nYou fall asleep and get sucked dry by a vampire \uD83E\uDDDB\u200D\u2640\uFE0F !\nyou lose all your energy \u26B0\uFE0F !",
  bad_m4: "\uD83D\uDEAB  You clicked too early!\nYou fall asleep and get eaten by wolves \uD83D\uDC3A \uD83D\uDC3A \uD83D\uDC3A !\nyou lose all your energy \uD83D\uDC80 !",
  bad_m5: "\uD83D\uDEAB  You clicked too early!\nYou fall asleep and get eaten by ants \uD83D\uDC1C \uD83D\uDC1C \uD83D\uDC1C !\nyou lose all your energy \u2620\uFE0F !",
  bad_m6: "\uD83D\uDEAB  You clicked too early!\nYou fall asleep and get eaten by a spider \uD83D\uDD77 \uD83D\uDD78 !\nyou lose all your energy \uD83D\uDC80 !",
  // environment
  bad_e1: "\uD83D\uDEAB  You clicked too early!\nYou fall asleep and get eaten by a carnivorous plant \uD83E\uDD40 !\nyou lose all your energy \uD83D\uDC80 !",
  bad_e2: "\uD83D\uDEAB  You clicked too early!\nYou fall asleep in a dark dungeon and freeze to death \u2744\uFE0F !\nyou lose all your energy \uD83D\uDC80 !"
};
var FIGHT_ADVENTURES = {
  fight_won_coins: "\nYou have defeated a {{encounter}} !{{br}}\nYou loot {{coin}} coins from its corpse.",
  fight_won_loot: "\nYou have defeated a {{encounter}} !{{br}}\nYou loot a {{item}} from its corpse.",
  fight_won_any: "\nYou have defeated a {{encounter}}!{{br}}\nYou perfected your {{attr_name}} during the fight: +{{attr}} {{attr_name}}!",
  fight_observe: "\nYou encounter a wild {{encounter}} from afar!{{br}}\nFascinated, you observe it instead of attacking it.{{br}}\nIts behaviour makes you think of new techniques. You gain +{{attr}} {{attr_name}}!",
  // TODO follow target to resources?
  fight_lost_any: "\nYou were attacked and nearly killed by a {{encounter}} but you got away just before it was too late.{{br}}\nYou figured out techniques to flee more efficiently: +{{attr}} {{attr_name}}!",
  fight_lost_shortcoming: "\nYou were attacked by a {{encounter}} and it didn\u2019t end well... but you got away just before it was about to kill you.{{br}}\nYou reflect on your lack of {{attr_name}} in the fight and train hard: +{{attr}} {{attr_name}}!"
};
var SCAVENGED_ORIGINAL_ADVENTURES = {
  // scavenged from screens of the original game
  // slightly altered/enhanced/normalized
  bored_log: "\nYou are so bored, you punch a log for hours!\nYou gain +{{strength}} strength!",
  caravan_success: "\nYou were hired to protect a caravan of merchants.\nYour presence repels them, the caravan arrives at its destination, you gain {{coin}} coins!",
  dying_man: "\nA dying man on the street left you everything he had.\nYou gain {{coin}} coins!",
  ate_bacon: "\nYou eat some delicious crispy bacon.\nYou gain +{{level}} level!",

  /* too bland, please!
   ate_mushroom: `
  You ate a mushroom.
  You gained +{{level}} level!`,*/
  ate_zombie: "\nYou eat a zombie!\nYou gain +{{mana}} mana!",
  refreshing_nap: "\nYou take a nap and feel refreshed.\nYou gain +{{health}} health!",
  older: "\nYou feel a little older.\nYou just gained +{{level}} level!",
  stare_cup: "\nYou stare really hard at a cup, and it almost moves!\nYou gain +{{mana}} mana!",
  nuclear_fusion_paper: "\nYou write a paper on nuclear fusion.\nYou gain +{{wisdom}} wisdom!",
  found_green_mushroom: "\nYou find a green mushroom.\nYou gain +{{level}} level!",
  // from this round of player suggestions
  // https://www.reddit.com/r/boringrpg/comments/dloxe/event_messages/
  eaten_by_a_grue: "You have been eaten by a grue. You lose {{coin}} coins.",
  walk_in_mordor: 'You simply walk into Mordor. You gain +{{agility}} agility.',
  jig: 'You see a guy doing a jig, and join him! +{{agility}} agility!',
  good_end: 'Oh, THAT end is the one you hit them with! +{{wisdom}} wisdom!',
  waterfall: 'You sit under a pounding waterfall. +{{health}} vitality!',
  meteor: 'A meteor JUST misses you! +{{luck}} luck!',
  weird_duck: 'Some weird duck is trying to swim in coins, so you take them! +{{coin}} coins!',
  last_quest: 'That last quest gave you just enough XP! Level Up!',
  busking: 'You wail on a guitar next to the inn, and it pays off! +{{token}} token!',
  best_meal: 'You eat the best meal you’ve ever had! +{{health}} health!',
  witch_riddle: 'You successfully solve a riddle from a witch. You gain +{{wisdom}} wisdom!',
  princess_castle: 'The princess was actually in this castle! +{{luck}} luck!',
  problem: "You have a problem? -{{coin}} coins.",
  foreign_language: 'You learn a foreign language. +{{charisma}} charisma!',
  last_night: '…what happened last night? +{{luck}} luck!',
  chasm_leap: 'You successfully leap over a chasm! +{{agility}} agility!',
  luxurious_meal: "You cook the most luxurious meal! {{coin}} coins.",
  donate: "You donate {{coin}} coins. You gain +{{token}} token.",
  coffee: 'You drink a cup of coffee. +{{wisdom}} wisdom!',
  socks: "You buy some socks, {{coin}} gold.",
  gold_nugget: 'You trip on a gold nugget: +{{coin}} gold!',
  pileup: "You get into a 3 horse pileup: {{coin}} gold!",
  tavern: "You drink too much at the tavern, lose {{coin}} gold!",
  magic_lamp: 'You stumble upon a magic lamp! You gain +{{luck}} luck!',
  rabbit_hole: 'You find out just how deep the rabbit hole goes. You gain +{{wisdom}} wisdom.',
  cat_out_tree: 'You help a little girl get her cat out a tree. You gain +{{agility}} agility!',
  green_food: 'You somehow survive eating green eggs and ham. You gain +{{health}} health!',
  wishing_well: 'You try your luck at the wishing well. You lose the coin.',
  conscripted: 'You are conscripted into the army, you gain +{{coin}} coins.',
  brigands: 'Waylayed by brigands, {{coin}} coins.',
  duke_rescue: 'You rescued a duke, you are rewarded +{{coin}} coins!',
  bribe: 'Bribed your way out of an arrest, {{coin}} coins.',
  doctor: 'Doctor prescribes leaches for your extreme case of evil vapors, {{coin}} coins.',
  gazebo: 'You were caught by a gazebo. You lost {{coin}} coins!',
  sock_drawer: 'You buy a drawer for all of your socks: {{coin}} coins.',
  flying_rat: 'A flying rat stole your hat! You replace it and lose {{coin}} coins.'
}; // from me, inferred and extended from the originals

var OFFIRMO_MUSHROOMS_AND_MISC = {
  found_red_mushroom: "\nYou find a red mushroom and eat it.\nYou gained +{{health}} health!",
  found_blue_mushroom: "\nYou find a blue mushroom and eat it.\nYou gained +{{mana}} mana!",
  found_white_mushroom: "\nYou find a white mushroom and eat it.\nYou gained +{{strength}} strength!",
  found_yellow_mushroom: "\nYou find a yellow mushroom and eat it.\nYou gained +{{agility}} agility!",
  found_orange_mushroom: "\nYou find an orange mushroom and eat it.\nYou gained +{{charisma}} charisma!",
  found_black_mushroom: "\nYou find a black mushroom and eat it.\nYou gained +{{wisdom}} wisdom!",
  found_rainbow_mushroom: "\nYou find a glowing rainbow mushroom and eat it.\nYou gained +{{luck}} luck!"
};
var OFFIRMO_INSPIRED_FROM_RPG_MEMES_FROM_THE_NET = {
  // https://swordscomic.com/swords/VI/
  demon_king: "\nYou swear to defeat the demon king!{{br}}\nThe local hero pledges you his sword... and leaves you with it!{{br}}\nWell, it\u2019s loot: {{item}}",
  // https://swordscomic.com/swords/IX/
  false_lake: "\nA hand holding a sword emerges from the lake:\n\"take this blade and become the new king!\"\nAs you reach out, the lake monster emerges and try to devour you: it\u2019s a trap!{{br}}\nYou defeat it and find good loot from previous victims: {{item}}, +{{coin}} coins.\n\t",
  // https://swordscomic.com/swords/XI/
  soul_weapon_pet_zombie: "\nYou attach a soul to your weapon (+1 enhancement) and keep the soul owner\u2019s body as a pet zombie.{{br}}\nThe pet zombie\u2019s aura increases your regeneration: +{{health}} heath!\n\t",
  // https://swordscomic.com/swords/XII/
  class_master_sharpest_weapon: "\nYou ask your master: \"What is the best weapon?\".\nShe answers: \"The most lethal weapon is your mind!\".{{br}}\nYou\u2019re not convinced, so you train instead of meditating.\nYou gain +{{attr}} {{attr_name}}!\n\t",
  // https://swordscomic.com/swords/XIII/
  // racist towards dwarves TODO secret equipment door
  // https://swordscomic.com/swords/XVII/
  // demon board games
  // electricbunnycomics.com
  good_necromancer: "\nYou meet a child weeping over his dead hamster\u2026 Thanks to necromancy, you reanimate it as a hamster-zombie!\nOddly, the child cries even more while running away.{{br}}\nFortunately, you gain +{{agility}} agility while avoiding the stones thrown by the villagers.",
  // dorkly
  talk_to_all_villagers: "\nYou spoke to everyone in the village leaving no quest unanswered!{{br}}\nAlthough your head aches from discussing so much,\nyou gain +{{charisma}} charisma having met so many people!",
  // DK
  fate_sword: "\nTo thank you for saving his wife and his children, a farmer offers you \"Destiny\",\nthe heirloom sword passed down in his family for generations.{{br}}\n30 minutes later, the merchant buys it off you for only {{coin}} coins\u2026 some heirloom!",
  // cad-comic.com
  rematch: "\nYou got beaten by a goblin!\nIn shame, you roam around the country, accepting quest after quest to train yourself before facing him again.{{br}}\nAlas, he also trained and beats you again!\nWell, the +{{level}} level is still useful\u2026",
  // paintraincomic.com
  // https://paintraincomic.com/comic/cemetery/
  useless: "\nArriving at the village, the mayor announces that the neighborhood is no longer dangerous.\nThe sorceress fell in love and no longer curses people.\nThe haunted cemetery was a pet cemetery, villagers are happy to have their companions back.\nThe giant is helping the farmers with their harvest.{{br}}\nYou feel useless and reflect on your place in the world. +{{wisdom}} wisdom!",
  // memecenter.com
  escort: "\nYou are escorting an important NPC.\nFrustratingly, if you walk, he\u2019s faster than you.\nHowever, if you run, you\u2019re faster than him!\nBy strafing and running in circles, you manage\nto stay close to him.{{br}}\n+{{health}} health thanks to your efforts!",
  // memecenter.com
  rare_goods_seller: "\nYou come across an old man with eccentric apparel.\nScore! It\u2019s a rare item seller!\nHe gives you a good price for a {{item}}.",
  // memecenter.com
  progress_loop: "\nYou would need better gear to level up.\nBut you\u2019d need to level up to get better gear.\nCruel dilemma!{{br}}\nFortunately, you find a {{item}} at the bottom of a well!",
  // memecenter.com/motohorse
  idiot_bandits: "\nYour name is whispered across the land since you slayed the dragon and defeated the sorceress.\nBandits ambush you, aiming for your wealth. For their folly!\nThey realize their mistake one moment\nbefore your fireball incinerates them.\nFortunately, gold doesn\u2019t burn: +{{coin}} coins!",
  // don't remember the source for this one
  princess: "\n\"You won\u2019t take back the princess!\" yells the fearsome black mage,\nas you reach his throne room.\nYou reassure him: you are only here for loot.{{br}}\nHe lets you help yourself to {{coin}} coins\nand even enchants your weapon too!",
  // DM of the ring
  bad_village: "\nYou reach a new village. There is no weapon shop.\nNo potion shop either! And no quests at the inn!!\nWhat a useless village. At your call, lightning and meteors wipe out this place.\nA good opportunity to practice your magic: +{{mana}} mana.",
  // ?
  so_many_potions: "\nThe fight against the final boss was hard, very hard\u2026\nMost importantly, +{{strength}} strength for managing to control a pressing urge during the encounter after drinking 25 health potions !",
  // https://www.instagram.com/p/BjnclTCAiEK/
  high_level_zone_1: "\nYou accidentally wander into a high level zone.\nUnexpectedly, this challenges your limits and proves to be a good training: +{{attr}} {{attr_name}}!\n\t",
  high_level_zone_2: "\nYou accidentally wander into a high level zone.\nYou quickly and horribly die after fleeing monsters for half an hour.\nWhat did you expect?{{br}}\nYou go back to training and gain +{{attr}} {{attr_name}}.\n\t",
  // https://starecat.com/the-witcher-looking-at-side-quest-meme/
  side_quests: "\n\tYou get distracted by side quests again!\nHopefully the loot ({{coin}} coins) and preparation (equipment enhanced) will help in the final battle!\n\t",
  // https://starecat.com/gandalf-tells-them-to-run-to-get-all-the-xp-on-the-balrog-and-level-up/
  balrog: 'You tell your party members to run then kill the balrog and get all the XP. You level up!',
  // classic manga story
  castle_summon: "\nYou are summoned to the castle by the king.\nIn the throne room, in front of the court, he pressures you:{{br}}\n\"Hero, you must defeat the demon lord to bring back peace in the land!\nTake this magical sword, only with it can you defeat the evil ones!\".{{br}}\nWell, a new weapon is always welcome: {{weapon}}!\n\t",
  // https://starecat.com/when-a-piece-of-armor-doesnt-match-your-current-set-but-its-stats-are-too-good-to-pass-up-hello-kitty-shield-pink/
  unmatched_set: "\nYou loot a powerful piece of armor but unfortunately its appearance doesn\u2019t match with your existing ones...\nNo way, style is important for a hero! You sell this piece of armor for coin: +{{coin}} coins!"
};
var OFFIRMO_INSPIRED_FROM_NET_RSRCS = {
  // https://springhole.net/writing_roleplaying_randomators/rpg-campaign-idea.htm
  // https://www.seventhsanctum.com/generate.php?Genname=storygen
  // https://donjon.bin.sh/fantasy/adventure/
  // My potions would kill you traveler. You can’t handle my potions.
  // https://orteil.dashnet.org/gamegen
  bards: "\nBards start writing songs about you.\nThis fame helps you when dealing with humans.\nYou gain +{{charisma}} charisma!\n",
  elementals: "\nYou free some elementals. They reward you with a blessing suited to your class.\nYou gain {{attr}} {{attr_name}}!",
  // you have superhuman luck
  fabric_of_reality: "\nYou battle mages to unravel the fabric of reality.\nYou gain +{{mana}} mana!",
  // you destroy a few parallel worlds with cyborgs.
  // you mine ore
  // you craft some stuff
  save_world_again: "\nYou saved the world. Again. You are famous: +{{charisma}} charisma!{{br}}\nBut honestly, you and me know you are doing it only for the loot ;)\nIndeed you gain a {{item}} and {{coin}} coins!",
  clean_wizard_tower: "\nYou clean a mad wizard\u2019s tower.{{br}}\nYou learn some of her magic: +{{mana}} mana!",
  explore_ruins: "\nYou explore some ruins of an ancient civilisation the world.{{br}}\nYou find a {{item}} and worth {{coin}} of coins!",
  inspect_sewers: "\nYou inspect the city\u2019s sewers and clean the vermin.{{br}}\nYou find worth {{coin}} of coins and polish your skills: +{{attr}} {{attr_name}}!",
  explore_catacombs: "\nYou explore the city\u2019s old catacombs and put the undeads to rest.{{br}}\nYou find a {{item}} and worth {{coin}} of coins!",
  bandits_punishment: "\nYou are attacked by bandits: They are in need of some punishment!.{{br}}\nYou promptly dispense it and loot {{coin}} coins from them."
};
var OFFIRMO_INSPIRED_FROM_INSTAGRAM_POSTS = {
  // https://www.instagram.com/travisjhanson/
  // https://www.instagram.com/p/B_kXgz3hCcL/
  xxx_flammable_village: "\nThey should have told you that the village was flammable\nBEFORE you started to clean out the infestation!\nThose ungrateful villagers refuse to give you the promised reward.\nBut at least it was good XP! +1 level.\n\t",
  // https://www.instagram.com/p/B-M2VTCB_ss/
  xxx_tomb_of_lost_socks: "\nYou found it: The Tomb of Lost Socks.\n\t",
  // https://www.instagram.com/p/B9PCUWwBXuT/
  xxx_happy_dragon: "\nThe dragon is devastating the village,\nbut she looks so happy that you feel bad about interrupting.\n",
  // https://www.instagram.com/p/B8OzcWdhIOp/
  xxx_drink_me: "\nYou find a potion written \"drink me\".\n",
  // https://www.instagram.com/p/B6-78D1h62g/
  xxx_you_shall_not_pass: "\n",
  // https://www.instagram.com/p/B63PD7IB4uT/
  xxx_customize_gear: "\n\t",
  // https://www.instagram.com/p/B6TEffgB8r2/
  xxx_potion_of_blowing: "\nAn alchemist is selling a new king of potions: explosive one!\nThey work quite well! You solo a dungeon with them.\nToo bad they blow the ennemy, the loot and a bit of yourself.\nBut your pain resistance increased!\n\t",
  // https://www.instagram.com/p/B6BCnUNBcw0/
  xxx_dragon_admirer: "\nDragong... how can't you love such beautiful creatures?\n\t",
  // https://www.instagram.com/p/B5FzGvxhMSx/
  evil_laugh: "\nThe villain give you some tips to improve your evil laugh.\n+1 charisma\n\t",
  hero_smile: "\nIn front of a mirror, you practice your hero smile.\n+1 charisma",
  // https://www.instagram.com/p/B4xPBEYhO_x/
  bg_music: "\nYou manage to create a sound spell to play heroic music when you fight.\nIt raises your morale and make you stronger!\n\t",
  // https://www.instagram.com/p/B4Ke6_gBpSv/
  xxx_body_parts: "\nSince you started to learn necromancy,\nyour dungeon runs are more efficient: you salvage body parts as well!\nYou make good progress in necromancy.",
  // https://www.instagram.com/p/B37LIlXhaf8/
  owlbear: "\nYou encounters a friendly owlbear.\nHe teaches you wisdom.\n\t",
  // https://www.instagram.com/p/B3VJ0D2hbyJ/
  book_hobbit_riddles: "\nYou find a book about Hobbit's riddles.\nThat can be useful in the future! Your wisdom increased.\n",
  xxx_book_lost_treasures: "\n\t",
  xxx_book_wealth_planning: "\n\t",
  // https://www.instagram.com/p/B3HlHD8hAZM/
  book_excuses_dragon: "\nYou find a book listing excuses for when you are caught by a dragon (stealing some treasure?)\nThey are mainly flattery-based. Your charisma increases!\n\t",
  // https://www.instagram.com/p/B21fhJmhuZQ/
  xxx_gift_of_friendship: "\n\t",
  // https://www.instagram.com/p/B2MPyBfhLgR/
  xxx_book_smart: "\n\t",
  // https://www.instagram.com/p/B1_VJq3BBR-/
  xxx_in_doubt_fireball: "\n\t",
  // (780)
  // TODO RPG hooks Instagram
  // https://www.instagram.com/p/BorAmImhT-f/
  xxx_save_village_no_money: "\n\"Please hero, save our village! We have no money but you are our only hope!\"\n\t",
  // https://www.instagram.com/p/BozHAjkBGVt/
  xxx_odd_boy: "\n\"A small child asks you to help him find his lost kitty.\nAs you and the child search the forest you find his pet,\nbeast\n\t",
  // https://www.instagram.com/p/BoyqXBVhjSa/
  // archer skeleton
  // https://www.instagram.com/p/BkkgGyiH5X-/?saved-by=theboringrpg
  magical_cooking_ragnaros: "\nYou try magical cooking but end up summoning a tiny Ragnaros in your frying pan!{{br}}\nYou keep this avatar as a pet. His aura gives you +{{strength}} strength!\n\t",
  // https://www.instagram.com/p/BorYMavBG3s/
  xxx_fancy_arrows: "\n\tYou\n\t",
  // https://www.instagram.com/p/Boo4jwRBe6D/
  // rule them like gods!
  // https://www.instagram.com/p/BodLbb0hTvw/
  // big festival
  // https://www.instagram.com/p/BoMOPU4h8VH/
  // need help to get down
  // https://www.instagram.com/p/Bl6cKIghQxY/
  // hit first
  // https://www.instagram.com/p/Bkg3XsChrfw/
  // https://www.instagram.com/p/Bi1yE_3hBdn/
  // https://www.instagram.com/p/BiroNNUhFkE/
  // https://www.instagram.com/p/BiUzisIBfoU/
  // https://www.instagram.com/p/BhFS4-FAquN/
  // https://www.instagram.com/p/BowGNzChB-U/?utm_source=ig_web_button_share_sheet
  xxx_guarding_dungeon: "\nYou are so effective at raiding his dungeon\nthat the dark necromancer offers you gold to guard it instead.\nYou would be using your experience to keep other adventurers from looting it!\n\t",
  // slackwirm:
  // https://www.joshuawright.net/slack-wyrm-012.html
  // "I am the Wise Wisewood Tree and I possess uncanny wisdom
  wise_wisewood_tree: "\nYou meet the Wise Wisewood Tree:\n\"I am the Wise Wisewood Tree and I possess uncanny wisdom\".\nIndeed, the talking tree impart you some: +{{wisdom}} wisdom.\n\t\t",
  // https://www.joshuawright.net/slack-wyrm-017.html
  //you the dragon having tea with the rabbits His reputation is crushed.
  // https://www.joshuawright.net/slack-wyrm-026.html
  // the giant eye of Agoroth
  // https://www.joshuawright.net/slack-wyrm-030.html
  // guilt anxiety
  // princess with woodland friends
  // having to spot the real princess
  // https://www.joshuawright.net/slack-wyrm-031.html
  // hallowed dragonspear
  // https://www.joshuawright.net/slack-wyrm-034.html
  // village of Spuddy
  // https://www.joshuawright.net/slack-wyrm-042.html
  // https://www.joshuawright.net/slack-wyrm-059.html
  // Zizok the wizard
  // they weren’t my friends,they were just using me for my spells
  // https://www.joshuawright.net/slack-wyrm-066.html
  // dragon stole the wedding cake
  // https://www.joshuawright.net/slack-wyrm-072.html
  // Linda Greenslime
  //the country of Doily
  // 99
  // https://www.joshuawright.net/slack-wyrm-158.html
  // The sulking swamp
  // butthurt bog
  // https://www.comic-rocket.com/read/bunny/28
  // Bunthulhu
  // https://www.instagram.com/p/Bi5QlAeAAlx/
  murderer: "\nYou are accused of murder and the guards try to arrest you! You refuse, they insist and you kill them all.\nNobody is after you anymore, that was an effective way to prove your innocence!{{br}}\nYou gain +{{luck}} luck!\n\t"
};
var OFFIRMO_INPIRED_FROM_VIDEOGAMES = {
  // LOTRO
  visual_effect: "\nYou pay an enchanter to add a cool visual effect on your equipment!\n\t",
  weapon_damage_type: "\nYou get your weapon reforged into old elven alloy.\nThis makes it sharper against orcs... and dwarves?\n\t",
  // TODO always winter
  // Marvel reference
  give_a_shield: "\nThe captain of the assieged castle yells: \"Give this hero a shield!\"{{br}}\nThe blacksmith obey: you receive a {{item}}!\n",
  // cookie clicker
  cookies_grandmas: "\nA group of strange grandmas bake you cookies.\nThey are incredibly good and make you crave for more!\nThey have a magical effect: you gain +{{attr}} {{attr_name}}!\n\t",
  // Zelda reference
  treasure_in_pots: "\nYou enter a pottery shop and destroy every jug, vase and item in the store.\nYou collect +{{coin}} in coins, precious stones and other treasures found!",
  // Oblivion dangerous chicken
  chicken_slayer: "\nYou enter a village and see a chicken roaming in a garden peacefully.\nYou slay the chicken mercilessly.\nThe entire cohort of guards for the town come after you and you are forced to slay them too.\nAfter hours of fighting you gain +{{strength}} strength!",
  // skyrim meme
  arrow_in_the_knee: "\nA guard tells you stories of when he was an adventurer,\nbefore he took an arrow in the knee.\nYou feel enlightened: +{{wisdom}} wisdom!\n\t\t",
  // inspired by morrowind's level up messages
  // https://www.reddit.com/r/Morrowind/comments/1s1emv/i_find_the_levelup_messages_very_inspirational/
  // TODO
  // WoW / 1st quest (+ a meme somewhere)
  sentients_killing: "\nYou introduce yourself to the captain of the guard. Your mission: kill 10 kobolds.\nAfter a brief hesitation on the ethics of the extermination of thinking creatures, you accept: you need loot and XP too badly.\nYou gain {{coin}} coins and +{{attr}} {{attr_name}}.\n\t\t",
  // Colossal Cave Adventure
  // https://rickadams.org/adventure/d_hints/index.html
  colossal_cave: "\nYou discover and explore a colossal cave! Undeads, goblins...\nYou emerge victoriously, with loot ({{item}}) and experience (+{{attr}} {{attr_name}})!\n\t\t",
  // https://rickadams.org/adventure/d_hints/hint009.html
  colossal_cave_maze: "\nYou explore yet another cave.\nYou are in a maze of twisty little passages, all alike.\nYou find a {{item}} on the ground and manage to find an exit after a while.\n",
  // You are in a twisty maze of passageways, all different,
  // nethack
  gehennom: "\nYou enter the dark Cavities of Gehennom. You don\u2019t find the Amulet of Yendor,\nbut still ends up with good loot: +{{coin}} coins, {{item}}...\n\t\t",
  // TODO book of Tyr
  // TODO Amulet of Yendor
  // Exile / Avernum
  exile_GIFTS: "\nYou meet a tribe of Giant, Intelligent, Friendly, Talking Spiders.\nThey\u2019re shy and all respond to the name \"Spider\".{{br}}\nYou buy poison from them and coat your weapon with it, providing a good enhancement!\n\t",
  // Ultima
  // Wizardry
  // TODO prestige classes
  // Dragon quest
  DQ_good_slime: "The slime speaks to you: \u00ABI\u2019m not a bad slime, you know?\u00BB{{br}}\nWhat a stupid statement: obviously slimes are monsters! You slaughter it and many others.{{br}}\nThis training earns you +{{attr}} {{attr_name}}!",
  // misc
  socketed_item: "\nYou put magic gems in one of you item's socket. It is now stronger!"
};
var OFFIRMO_INSPIRED_FROM_MANGAS = {
  guild_rank: "\nThe Adventurer's Guild recognize your recent level increases\nand promotes you to the next ranking!",
  runes: "\nYou have a piece of your equipment engraved with magic runes.\nIt is now stronger!\n"
};
var OFFIRMO_INSPIRED_BY_POPULAR_CULTURE = {
  // Atlantis is calling
  drown_in_holy_water: "\nYou nearly drown yourself in holy water. You gain +{{mana}} mana!\n\t",
  rings_of_power: "\nYou forge rings and give them to you dwarven, elven and human allies.\nThey now like you a bit more: +{{charisma}} charisma!\n\t",
  raining_elves: "\nIt\u2019s raining... elves?{{br}}\nYou gain +{{mana}} mana!",
  raining_dwarves: "\nIt\u2019s raining... dwarves?{{br}}\nYou gain +{{strength}} strength!",
  // Top Gun
  need_for_speed: "\nYou feel the need\u2026{{br}}\n\u2026the need for speed!{{br}}\n+{{agility}} agility!\n",
  // TODO dungeons
  // TODO Shrek
  // goblin slayer
  xxx_goblin_slayer: "\n\"The only good goblins are the one who never come out of their stinking holes!\"\n\t",
  // Conan movie https://conan.wikia.com/wiki/The_Riddle_of_Steel
  riddle_of_steel: "\nYou solve the riddle of steel; Obviously it\u2019s more steel! And stronger steel!{{br}}\nYou have a blacksmith reforge your equipment to enhance it.",
  // TOTO tree of woe, eat a vulture https://conan.wikia.com/wiki/Tree_of_Woe
  // classic tales
  sword_in_rock: "\nYou find a sword planted into a stone.\nYou draw it out: {{item}}.{{br}}\nPeople nearby start worshipping you!\n",
  sword_in_a_lake: "\nYou find a good sword at the bottom of a lake: {{item}}.{{br}}\nWho could have thrown it there?\nNevermind, it\u2019s good loot!\n",
  // mission sydney (escape room)
  // the lost mine
  lost_mine: "\nYou discover a mysterious lost mine, filled with strange tools\nand glowing with mana crystals. You pick some: +{{token}} token.\n\t\t",
  // mission sydney (escape room)
  // vampire castle lost in a forest
  vampire_castle: "\nLost in the Dark Forest at night, you come across a gloomy castle.\nThe owner welcomes you politely, but you spot his teeth fangs. A vampire!\nAfter an intense battle, you earned the castle and its riches!{{br}}\n+{{coin}} coins and a {{item}}\n\t\t",
  // muppets
  mana_mana: "\n\"Mah na mah na\" \"To to to do do\"{{br}}\n+{{mana}} mana!",
  // Scrooge McDuck
  square_eggs: "\nDeep in the jungle, you find the marvelous square eggs of the legendary fatu-liva bird!\nYou cook an omelette, and gain +{{luck}} luck.\n\t\t"
};
var OFFIRMO_ORIGINAL = {
  // from H.
  foodie_friend: "\nYou meet with your foodie friend.\nHe convinces you to try the latest magic treats.\nYou gain extra energy (+{{health}} health) and a bit of weight!\n\t",
  chilies: "\nAt the adventuring guild party, you pickup a treat.\nTurns out it\u2019s made of magic chilies and you can\u2019t feel your face anymore!\nOnce the pain is gone (one day later!) you feel better than ever, you gained +{{attr}} {{attr_name}}!\n\t",
  // friend with the dark mage
  // twist on original
  caravan_failure: "\nYou were hired to protect a caravan of merchants.\nThe bandits and monsters aren\u2019t impressed, they keep harassing the caravan until no one is left alive except you.\nYou nevertheless gain some loot and gold from the remains of both the caravan and the attackers: +{{coin}} coins and a {{item}}!",
  // classic fantasy/rpg
  meet_old_wizard: "\nYou meet a mysterious old wizard\u2026\nBefore giving you the quest, he tells you his loooong story: You gain +{{wisdom}} wisdom!",
  always_keep_potions: "\nBeing a seasoned adventurer, you kept a health potion \"just in case\":\nWell done, your health is top-notch!",
  lost: "\nWith all those quests, you forgot where you had to go\u2026{{br}}\nBut circling around the map is good for your health: +{{health}} health!",
  grinding: "\nFor lack of a better thing to do, you grind for hours and hours\u2026\nSo what? It\u2019s an RPG, what did you expect?\nBut it pays off: +{{level}} level!",
  // classic quests
  keep_watch: "\nYou are hired to keep the watch. Boring, but lives are depending on you!\nThe night pass without any trouble.\nYou gain {{coin}} coins as agreed. Good job!\n\t\t",
  critters: "\nYou hunt critters to get XP and improve your skills.\nAfter one hour of farming, +{{attr}} {{attr_name}}, not bad!\n\t\t",
  class_grimoire: "\nYou find a tome about your class.\nIt\u2019s filled with interesting stuff!\nIt\u2019s worth reading: +{{attr}} {{attr_name}}!\n\t\t",
  // farm village
  village_farmwork: "\nThe villagers hire you to do their errands.\nYou gather firewood, draw water from the well, chase pests.\nYou gain {{coin}} coins as agreed, +{{strength}} strength as a bonus and hopefully gain the people\u2019s trust for better quests in the future!\n\t\t",
  village_lost_kid: "\nA villager runs after you \"Please find my kid lost in the forest! I heard about goblins and fear the worst!\".{{br}}\nYou arrive just as the goblins were about to put the kid in the cauldron.\nYou deal justice to these pests, drink their soup and bring back the kid.{{br}}\nThe parent is delighted and you looted a {{item}} in the goblin camp.\n\t\t",
  village_lost_father: "\nA child from the village runs after you \"Please, find my father who isn\u2019t back from the forest!\".\nYou track the father to a clearing, where he took refuge in a tree, surrounded by wolves.\nYou sow death amongst the pack using your adventurer\u2019s arts and bring back the father home.\nYou practiced your {{attr_name}} during this encounter: +{{attr}} {{attr_name}}!\nAnd the child now wants to be an adventurer...\n\t\t",
  village_nice_daughter: "\nThe daughter of one of the villager you helped wants to have a tea with her saviour.\nShe\u2019s very nice. You learn from her how to have a polite conversation: + {{charisma}} charisma.\n\t\t",
  village_gifts_blacksmith: "\nYou helped the village so much that the inhabitants are giving you parting gifts.\n\"You can\u2019t travel without protection\" say the blacksmith. He makes you an armor: {{armor}}!\n",
  village_strongman: "\nYou spar with the village\u2019s strongman. His methods are crude but practical and effective.\n\"You gain +{{strength}} strength!\n",
  // capital
  // royal castle
  capital_castle: "\nYou arrive at the Royal Castle, one of the famous landmark of the capital.\nIt\u2019s incredible: huge, strong yet delicate, with high towers and ornaments everywhere...\nYou ponder about civilizations: +{{wisdom}} wisdom.\n\t\t",
  // royal road
  capital_royal_road: "\nYou visit the Royal Road, one of the famous landmark of the capital.\nIt\u2019s a wide road filled with stalls with goods from the best gatherers and the best crafters.\nYou barter for a much needed equipment enhancement.\n\t\t",
  // royal amusement park
  capital_royal_amusement_park: "\nYou visit the Royal Amusement Park, one of the famous landmark of the capital.\nYou try all the magical attractions and have a second round of your favorite ones.\nThis is a curious but effective training: +{{attr}} {{attr_name}}!\n\t\t",
  // biomes
  // rural
  // snow
  // mountain
  // jungle
  // desert
  // swamp
  // sewers
  // famous stones
  famous_stone_ruby: "\nIn a lost city, you loot the famous lost striped candy-pink ruby!\nYour fame increases: +{{charisma}} charisma, +{{token}} token.\n\t\t",
  famous_stone_diamond: "\nIn a meteor crater, you loot an incredible rare black diamond!\nYour wisdom increases: +{{wisdom}} wisdom, +{{token}} token.\n\t\t",
  famous_stone_sapphire: "\nIn a secret cave below the ocean, you loot the forgotten sapphire of Atlantis!\nYour mana increases: +{{mana}} mana, +{{token}} token.\n\t\t",
  famous_stone_emerald: "\nOn a lost altar deep in the jungle, you loot the mysterious emerald of Shapeshifting!\nYour agility increases: +{{agility}} agility, +{{token}} token.\n\t\t",
  // class master
  // winter spirit cookies
  // https://github.com/kodeguild/winter-spirits/blob/master/src/data/cookies/en-us.js
  class_master_primary_attr_1: "\nYour class master is playing wise:\n\"You need to work on your {{attr_name}}, it\u2019s the basis of everything! Focus on your strengths, not your weaknesses!\"\nShe gives you exercises. You gain +{{attr}} {{attr_name}}.\n\t\t",
  class_master_primary_attr_2: "\nYour class master is playing wise again:\n\"The successful warrior is the average man, with laser-like focus! Concentrate on improving your {{attr_name}}!\"\nShe gives you exercises. You gain +{{attr}} {{attr_name}}.\n\t\t",
  class_master_second_attr: "\nAs usual, your class master is grumpy:\n\"What\u2019s the use of improving only your main attribute? You need to improve your {{attr_name}} too! Focus on your weaknesses, to become stronger!\"\nShe gives you exercises. You gain +{{attr}} {{attr_name}}.\n\t\t",
  class_master_forbidden_knowledge: "\nYou feel that your class master is not teaching you everything.\nYou sneak into her room and read her forbidden scrolls.\nYou gain +{{attr}} {{attr_name}}!\n\t\t",
  class_master_dark_holocron: "\nYou feel that your class master is not teaching you everything.\nYou sneak into her room and find the holocron of a dead evil master.\nHe happily teaches you in exchange of some \"services\". You gain +{{attr}} {{attr_name}}!\n\t\t",
  class_master_coolidge: "\nYour class master implores you to meditate:\n\"Persistence and determination win over talent, genius and skills!\"{{br}}\nPersistence? Determination? She must be talking about levelling: You gain +{{level}} {{level}}!\n\t\t",
  class_master_half_battle: "\nYour class master tries to instill some common sense:\n\"Knowing is half the battle!\"{{br}}\nShe must means you need more experience. You spar against other classes and gain +{{attr}} {{attr_name}}!\n\t\t",
  church_book: "\nYou visit a church for healing and end up reading their magic books.\nYou gain +{{mana}} mana!\n\t\t",
  church_cellar_prisoner: "\nYou visit a church for healing and check their cellar.\nBehind a secret door, a chained prisoner offers you power in exchange of his freedom.\nYou gain +{{attr}} {{attr_name}}!\n\t\t",
  huge_tower: "\nYou discover and explore a huge tower. It\u2019s filled with mad wizards, cultists and golems.\nYou reach the top and snatch some loot ({{item}}) then exit the tower,\nvictorious and more experienced (+{{attr}} {{attr_name}})!\n\t\t",
  make_friends: "\nYou learnt necromancy (+{{mana}} mana). With your new skills, you assemble some living corpses from remains dug in the cemetery.{{br}}\nYour mom would be proud, she was always telling you to go and \"make\" friends!\n\t\t",
  milk: "\nYou drink a lot of milk! Your bones strengthen and your health increases!\nYou gain +{{health}} health.\n\t",
  clover: 'You find a four-leaf clover. You gain +{{luck}} luck.',
  horseshoe: 'You find a horseshoe. You gain +{{luck}} luck.',
  rabbit_foot: "\nYou kill a rabbit, eat it and keep one of its foot as a good luck charm.\nYou gain +{{luck}} luck.",
  // future followers
  // Kloo the dryad druidess
  erika: "\nExploring the Colossal Cave, you meet Erika, a powerful sorceress\nwhose sensitive skin led her to live underground.\nShe teaches you a new spell for money: +{{mana}} mana\n\t\t",
  rachel: "\nBetween two villages, you meet Rachel the washer wench.\nShe competes with you in arm twisting, and win!\nGood exercise, +{{strength}} strength.\n\t\t",
  // inspired by player
  ribert: "\nYou meet Ribert, the head of the royal guards.{{br}}\nHe is a seasoned warrior and agrees to spar with you.{{br}}\nGood fighting exercise, you gain +{{attr}} {{attr_name}}.\n\t\t",
  // Maluka the bardess
  // King Gallus
  // reginold the guard
  // bandits
  // secret order
  // secret sages

  /*
   princess rich, powerful
   */

  /* Ma Backer bandit woman ->
   */

  /*
    // licorne multicolore
    xunicorns:
    '',
    // memes
    // retour chez le mage noir, apprentissage de sorts
    xblack_mage_again:
    '',
    */
  // get rid of them, not slaughter them all
  // knowing is half the battle
  // warsong
  // peace song
  // dragon's graveyard
  // https://starecat.com/the-witcher-looking-at-side-quest-meme/
  meteor_metal: "\nA meteorite falls near your position. You rush to the crater and gather the star metal.\nYou then pay a blacksmith to coat your equipment with it.\nNice enhancement!\n\t",
  king_reward: "\nYou did well to help the kingdom.\nKing Gallus welcomes you again in the throne room in front of all the court assembled.\nYou are rewarded with weapons and honors: {{item}}, {{token}} token...\n",
  // pets
  pet_squirrel: "\nHaving spent so much time in the forest, you befriend and tame a squirrel.\nYou keep it as a pet.\nIts aura gives you +{{agility}} agility!\n\t",
  pet_black_cat: "\nYou befriend and tame a black cat.\nHe now follows you as a pet.\nIts aura gives you +{{luck}} luck!\n\t",
  pet_rainbow_lorikeet: "\nIn the paradise island, you befriend and tame a rainbow lorikeet.\nIt now stays on your shoulder, that\u2019s quite a sight!\nThis makes you popular: +{{charisma}} charisma!\n\t",
  pet_red_eyed_unicorn: "\nYou encounter a red eyed unicorn throwing fire from her mouth.\nIt seems evil and acknowledges you.{{br}}\nYou just won yourself an epic mount! And its aura gives you +{{mana}} mana!\n\t",
  pet_badger_mushrooms: "\nYou dance and sing \"badger badger mushrooms mushrooms\"{{br}}\nYou must have eaten the wrong mushroom.{{br}}\nYou wake up with a pet badger. Its aura gives you +{{strength}} strength!\n",
  // misc
  best_defense_is_offense: "\nThe best defense is offense!\nYou pay for an upgrade of your weapon, it is now stronger!\n",
  defense_is_also_important: "\nYou discuss with another warrior: \"the only real defense is active defense: A good counter-attack leading to taking the offensive!\"\nFollowing this conversation, you buy an upgrade for your armor, it is now stronger!\n"
};
exports.OFFIRMO_BLAND_REPARTITION_ADJUSTMENT = {
  // we can change the target attribute to improve the distribution
  found_random_mushroom: "\nYou find a golden mushroom and eat it.\nYou gained +{{attr}} {{attr_name}}!",
  // food
  dragon_kebab: "\nYou have the chance to taste the legendary dragon meat kebab!\nThrough this magical food, you gain +{{attr}} {{attr_name}}!\n\t",
  elven_hydromel: "\nYou have the chance to taste the legendary elven hydromel!\nThrough this magical drink, you gain +{{attr}} {{attr_name}}!\n\t",
  random_blessing: "\nYou helped a village. The village\u2019s elder grants you a blessing.\nShe is very old and you are not very sure she knows what she\u2019s doing\u2026\nYou find that you gained +{{attr}} {{attr_name}}!\n\t",
  guild_party_food: "\nAt an adventuring guild party, you are drunk and pick something unidentified to eat.{{br}}\nOnce you wake up (one day later!) you discover that you strangely gained +{{attr}} {{attr_name}}!\n\t",

  /*
  fantasy metals
      * https://tvtropes.org/pmwiki/pmwiki.php/Main/FantasyMetals
  * https://metallurgy.wikia.com/wiki/Fantasy_Metals
  * https://www.bodycote.com/fictional-metals
  */
  // potions
  // https://www.reddit.com/r/DnDBehindTheScreen/comments/4btnkc/random_potions_table/
  // see "appearance"
  found_vermilion_potion: "\nYou find a vermilion potion.\nCrazy drink, gained +{{attr}} {{attr_name}}!",
  found_silver_potion: "\nYou find a silver potion.\nSweet drink, gained +{{attr}} {{attr_name}}!",
  found_swirling_potion: "\nYou find a swirling potion.\nStrange drink, gained +{{attr}} {{attr_name}}!",
  found_fizzing_potion: "\nYou find a fizzing potion.\nSparkling drink, gained +{{attr}} {{attr_name}}!",
  found_bubbly_potion: "\nYou find a bubbly potion.\nSoft drink, gained +{{attr}} {{attr_name}}!",
  found_worn_out_potion: "\nYou find an old potion with an unreadable label.\nYou try your luck and drink it.\nYou gain +{{attr}} {{attr_name}}!",
  // books
  found_journal: "\nYou find the remains of an unlucky adventurer. She or he (you can\u2019t tell from the remains) kept a journal.\nYou read it and learn from their failure: +{{attr}} {{attr_name}}!"
};
var OFFIRMO_TECHNICALS = {
  found_coin: "\nYou find a coin on the ground!"
}; // NOTE: we allow line returns for ease of writing
// but they'll be automatically removed, see bottom of this file.
// use {{br}} for actual line returns.

var raw_messages = {
  adventures: __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, BAD_ADVENTURES), FIGHT_ADVENTURES), SCAVENGED_ORIGINAL_ADVENTURES), OFFIRMO_MUSHROOMS_AND_MISC), OFFIRMO_INSPIRED_FROM_RPG_MEMES_FROM_THE_NET), OFFIRMO_INSPIRED_FROM_NET_RSRCS), OFFIRMO_INSPIRED_FROM_INSTAGRAM_POSTS), OFFIRMO_INPIRED_FROM_VIDEOGAMES), OFFIRMO_INSPIRED_FROM_MANGAS), OFFIRMO_INSPIRED_BY_POPULAR_CULTURE), OFFIRMO_ORIGINAL), exports.OFFIRMO_BLAND_REPARTITION_ADJUSTMENT), OFFIRMO_TECHNICALS)
};
var messages = {
  adventures: {}
};
exports.messages = messages;
Object.keys(raw_messages.adventures).filter(function (key) {
  return !key.startsWith('xxx');
}).forEach(function (entry) {
  messages.adventures[entry] = clean_multiline_string(raw_messages.adventures[entry]);
});

function clean_multiline_string(str) {
  return str.split('\n').map(function (s) {
    return s.trim();
  }).filter(function (s) {
    return !!s;
  }).join(' ');
}
},{}],"Cqmk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i18n_messages = exports.ENTRIES = void 0;

var i18n_en_1 = require("./i18n_en"); // TODO type better? (coins)


var types_1 = require("../types");

var story = types_1.AdventureType.story;
var fight = types_1.AdventureType.fight;
var ENTRIES = [{
  good: false,
  type: story,
  hid: 'bad_s1',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_s2',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_m1',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_m2',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_m3',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_m4',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_m5',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_m6',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_e1',
  outcome: {}
}, {
  good: false,
  type: story,
  hid: 'bad_e2',
  outcome: {}
}, {
  good: true,
  type: fight,
  hid: 'fight_won_coins',
  outcome: {
    coin: 'gainꘌsmall'
  }
}, {
  good: true,
  type: fight,
  hid: 'fight_won_loot',
  outcome: {
    armor_or_weapon: true
  }
}, {
  good: true,
  type: fight,
  hid: 'fight_won_any',
  outcome: {
    random_attribute: true
  }
}, {
  good: true,
  type: fight,
  hid: 'fight_observe',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: fight,
  hid: 'fight_lost_any',
  outcome: {
    random_attribute: true
  }
}, {
  good: true,
  type: fight,
  hid: 'fight_lost_shortcoming',
  outcome: {
    lowest_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'bored_log',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'caravan_success',
  outcome: {
    coin: 'gainꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'dying_man',
  outcome: {
    coin: 'gainꘌmedium'
  }
}, {
  good: true,
  type: story,
  hid: 'ate_bacon',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'ate_zombie',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'refreshing_nap',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'older',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'stare_cup',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'nuclear_fusion_paper',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_green_mushroom',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'eaten_by_a_grue',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'walk_in_mordor',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'jig',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'good_end',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'waterfall',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'meteor',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'weird_duck',
  outcome: {
    coin: 'gainꘌhuge'
  }
}, {
  good: true,
  type: story,
  hid: 'last_quest',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'busking',
  outcome: {
    token: 1
  }
}, {
  good: true,
  type: story,
  hid: 'best_meal',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'witch_riddle',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'princess_castle',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'problem',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'foreign_language',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'last_night',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'chasm_leap',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'luxurious_meal',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'donate',
  outcome: {
    coin: 'lossꘌsmall',
    token: 1
  }
}, {
  good: true,
  type: story,
  hid: 'coffee',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'socks',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'gold_nugget',
  outcome: {
    coin: 'gainꘌmedium'
  }
}, {
  good: true,
  type: story,
  hid: 'pileup',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'tavern',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'magic_lamp',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'rabbit_hole',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'cat_out_tree',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'green_food',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'wishing_well',
  outcome: {
    coin: 'lossꘌone'
  }
}, {
  good: true,
  type: story,
  hid: 'conscripted',
  outcome: {
    coin: 'gainꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'brigands',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'duke_rescue',
  outcome: {
    coin: 'gainꘌmedium'
  }
}, {
  good: true,
  type: story,
  hid: 'bribe',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'doctor',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'gazebo',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'sock_drawer',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'flying_rat',
  outcome: {
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'found_red_mushroom',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_blue_mushroom',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_white_mushroom',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_yellow_mushroom',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_orange_mushroom',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_black_mushroom',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_rainbow_mushroom',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'demon_king',
  outcome: {
    weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'false_lake',
  outcome: {
    coin: 'gainꘌmedium',
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'soul_weapon_pet_zombie',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_sharpest_weapon',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'good_necromancer',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'talk_to_all_villagers',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'fate_sword',
  outcome: {
    coin: 'gainꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'rematch',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'useless',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'escort',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'rare_goods_seller',
  outcome: {
    armor_or_weapon: true,
    coin: 'lossꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'progress_loop',
  outcome: {
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'idiot_bandits',
  outcome: {
    coin: 'gainꘌmedium'
  }
}, {
  good: true,
  type: story,
  hid: 'princess',
  outcome: {
    coin: 'gainꘌmedium',
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'bad_village',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'so_many_potions',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'high_level_zone_1',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'high_level_zone_2',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'side_quests',
  outcome: {
    coin: 'gainꘌmedium'
  }
}, {
  good: true,
  type: story,
  hid: 'balrog',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'castle_summon',
  outcome: {
    weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'unmatched_set',
  outcome: {
    coin: 'gainꘌbig'
  }
}, {
  good: true,
  type: story,
  hid: 'bards',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'elementals',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'fabric_of_reality',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'save_world_again',
  outcome: {
    charisma: true,
    'coin': 'gainꘌbig',
    'armor_or_weapon': true
  }
}, {
  good: true,
  type: story,
  hid: 'clean_wizard_tower',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'explore_ruins',
  outcome: {
    coin: 'gainꘌmedium',
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'inspect_sewers',
  outcome: {
    class_secondary_attribute: true,
    coin: 'gainꘌmedium'
  }
}, {
  good: true,
  type: story,
  hid: 'explore_catacombs',
  outcome: {
    coin: 'gainꘌmedium',
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'bandits_punishment',
  outcome: {
    coin: 'gainꘌmedium'
  }
}, {
  good: true,
  type: story,
  hid: 'evil_laugh',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'hero_smile',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'bg_music',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'owlbear',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'book_hobbit_riddles',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'book_excuses_dragon',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'magical_cooking_ragnaros',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'wise_wisewood_tree',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'murderer',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'visual_effect',
  outcome: {
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'weapon_damage_type',
  outcome: {
    improvementⵧweapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'give_a_shield',
  outcome: {
    armor: true
  }
}, {
  good: true,
  type: story,
  hid: 'treasure_in_pots',
  outcome: {
    coin: 'gainꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'chicken_slayer',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'arrow_in_the_knee',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'sentients_killing',
  outcome: {
    coin: 'gainꘌsmall',
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'colossal_cave',
  outcome: {
    armor_or_weapon: true,
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'colossal_cave_maze',
  outcome: {
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'gehennom',
  outcome: {
    coin: 'gainꘌmedium',
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'exile_GIFTS',
  outcome: {
    improvementⵧweapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'DQ_good_slime',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'socketed_item',
  outcome: {
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'guild_rank',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'runes',
  outcome: {
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'drown_in_holy_water',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'rings_of_power',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'raining_elves',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'raining_dwarves',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'need_for_speed',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'riddle_of_steel',
  outcome: {
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'sword_in_rock',
  outcome: {
    weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'sword_in_a_lake',
  outcome: {
    weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'lost_mine',
  outcome: {
    token: 1
  }
}, {
  good: true,
  type: story,
  hid: 'vampire_castle',
  outcome: {
    coin: 'gainꘌmedium',
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'mana_mana',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'square_eggs',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'foodie_friend',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'chilies',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'caravan_failure',
  outcome: {
    coin: 'gainꘌmedium',
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'meet_old_wizard',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'always_keep_potions',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'lost',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'grinding',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'keep_watch',
  outcome: {
    coin: 'gainꘌsmall'
  }
}, {
  good: true,
  type: story,
  hid: 'critters',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_grimoire',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'village_farmwork',
  outcome: {
    coin: 'gainꘌsmall',
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'village_lost_kid',
  outcome: {
    armor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'village_lost_father',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'village_nice_daughter',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'village_gifts_blacksmith',
  outcome: {
    armor: true
  }
}, {
  good: true,
  type: story,
  hid: 'village_strongman',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'capital_castle',
  outcome: {
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'capital_royal_road',
  outcome: {
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'capital_royal_amusement_park',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'famous_stone_ruby',
  outcome: {
    token: 1,
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'famous_stone_diamond',
  outcome: {
    token: 1,
    wisdom: true
  }
}, {
  good: true,
  type: story,
  hid: 'famous_stone_sapphire',
  outcome: {
    token: 1,
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'famous_stone_emerald',
  outcome: {
    token: 1,
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_primary_attr_1',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_primary_attr_2',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_second_attr',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_forbidden_knowledge',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_dark_holocron',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_coolidge',
  outcome: {
    level: true
  }
}, {
  good: true,
  type: story,
  hid: 'class_master_half_battle',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'church_book',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'church_cellar_prisoner',
  outcome: {
    class_secondary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'huge_tower',
  outcome: {
    armor_or_weapon: true,
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'make_friends',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'milk',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'clover',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'horseshoe',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'rabbit_foot',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'erika',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'rachel',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'ribert',
  outcome: {
    class_primary_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'meteor_metal',
  outcome: {
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'king_reward',
  outcome: {
    armor_or_weapon: true,
    token: 1
  }
}, {
  good: true,
  type: story,
  hid: 'pet_squirrel',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'pet_black_cat',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'pet_rainbow_lorikeet',
  outcome: {
    charisma: true
  }
}, {
  good: true,
  type: story,
  hid: 'pet_red_eyed_unicorn',
  outcome: {
    mana: true
  }
}, {
  good: true,
  type: story,
  hid: 'pet_badger_mushrooms',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'best_defense_is_offense',
  outcome: {
    improvementⵧarmor_or_weapon: true
  }
}, {
  good: true,
  type: story,
  hid: 'defense_is_also_important',
  outcome: {
    improvementⵧarmor: true
  }
}, // those stories are not hinting a a specific attribute,
// thus can be used for adjusting distribution.
// (if aligned, use 'random_attribute')
{
  good: true,
  type: story,
  hid: 'cookies_grandmas',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_random_mushroom',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'dragon_kebab',
  outcome: {
    lowest_attribute: true
  }
}, {
  good: true,
  type: story,
  hid: 'elven_hydromel',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'random_blessing',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'guild_party_food',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_vermilion_potion',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_silver_potion',
  outcome: {
    agility: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_swirling_potion',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_fizzing_potion',
  outcome: {
    strength: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_bubbly_potion',
  outcome: {
    luck: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_worn_out_potion',
  outcome: {
    health: true
  }
}, {
  good: true,
  type: story,
  hid: 'found_journal',
  outcome: {
    health: true
  }
}, // special
{
  good: true,
  type: story,
  hid: 'found_coin',
  outcome: {
    coin: 'gainꘌone'
  }
}];
exports.ENTRIES = ENTRIES;
var i18n_messages = {
  en: i18n_en_1.messages
};
exports.i18n_messages = i18n_messages;
},{"./i18n_en":"qhLK","../types":"Z4ak"}],"WjhT":[function(require,module,exports) {
"use strict"; /////////////////////

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_archetype = exports.generate_random_coin_gain_or_loss = exports.pick_random_bad_archetype = exports.pick_random_good_archetype = exports.AdventureArchetype = exports.OutcomeArchetype = exports.AdventureType = exports.CoinsGain = exports.GOOD_ADVENTURE_ARCHETYPES_BY_TYPE = exports.ALL_GOOD_ADVENTURE_ARCHETYPES = exports.ALL_BAD_ADVENTURE_ARCHETYPES = exports.ALL_ADVENTURE_ARCHETYPES = exports.i18n_messages = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var random_1 = require("@offirmo/random");

var types_1 = require("./types");

Object.defineProperty(exports, "CoinsGain", {
  enumerable: true,
  get: function () {
    return types_1.CoinsGain;
  }
});
Object.defineProperty(exports, "AdventureType", {
  enumerable: true,
  get: function () {
    return types_1.AdventureType;
  }
});
Object.defineProperty(exports, "OutcomeArchetype", {
  enumerable: true,
  get: function () {
    return types_1.OutcomeArchetype;
  }
});
Object.defineProperty(exports, "AdventureArchetype", {
  enumerable: true,
  get: function () {
    return types_1.AdventureArchetype;
  }
});

var data_1 = require("./data");

Object.defineProperty(exports, "i18n_messages", {
  enumerable: true,
  get: function () {
    return data_1.i18n_messages;
  }
}); /////////////////////

var ALL_ADVENTURE_ARCHETYPES = data_1.ENTRIES.map(function (paa) {
  var raw_outcome = paa.outcome || {};
  var outcome = {
    level: !!raw_outcome.level,
    agility: !!raw_outcome.agility,
    health: !!raw_outcome.health,
    luck: !!raw_outcome.luck,
    mana: !!raw_outcome.mana,
    strength: !!raw_outcome.strength,
    charisma: !!raw_outcome.charisma,
    wisdom: !!raw_outcome.wisdom,
    random_attribute: !!raw_outcome.random_attribute,
    lowest_attribute: !!raw_outcome.lowest_attribute,
    class_primary_attribute: !!raw_outcome.class_primary_attribute,
    class_secondary_attribute: !!raw_outcome.class_secondary_attribute,
    coin: raw_outcome.coin || types_1.CoinsGain.none,
    token: raw_outcome.token || 0,
    armor: !!raw_outcome.armor,
    weapon: !!raw_outcome.weapon,
    armor_or_weapon: !!raw_outcome.armor_or_weapon,
    item_spec: null,
    improvementⵧarmor: !!raw_outcome.improvementⵧarmor,
    improvementⵧweapon: !!raw_outcome.improvementⵧweapon,
    improvementⵧarmor_or_weapon: !!raw_outcome.improvementⵧarmor_or_weapon
  };
  var aa = {
    hid: paa.hid,
    good: paa.good,
    type: paa.type,
    outcome: outcome
  };
  return aa;
});
exports.ALL_ADVENTURE_ARCHETYPES = ALL_ADVENTURE_ARCHETYPES;
var ALL_BAD_ADVENTURE_ARCHETYPES = ALL_ADVENTURE_ARCHETYPES.filter(function (aa) {
  return !aa.good;
});
exports.ALL_BAD_ADVENTURE_ARCHETYPES = ALL_BAD_ADVENTURE_ARCHETYPES;
var ALL_GOOD_ADVENTURE_ARCHETYPES = ALL_ADVENTURE_ARCHETYPES.filter(function (aa) {
  return aa.good;
});
exports.ALL_GOOD_ADVENTURE_ARCHETYPES = ALL_GOOD_ADVENTURE_ARCHETYPES;
var GOOD_ADVENTURE_ARCHETYPES_BY_TYPE = {
  story: ALL_GOOD_ADVENTURE_ARCHETYPES.filter(function (aa) {
    return aa.type === types_1.AdventureType.story;
  }),
  fight: ALL_GOOD_ADVENTURE_ARCHETYPES.filter(function (aa) {
    return aa.type === types_1.AdventureType.fight;
  })
};
exports.GOOD_ADVENTURE_ARCHETYPES_BY_TYPE = GOOD_ADVENTURE_ARCHETYPES_BY_TYPE;
var COINS_GAIN_MULTIPLIER_PER_LEVEL = 1.1;
var COINS_GAIN_RANGES = {
  lossꘌsmall: [-10, -1],
  none: [0, 0],
  gainꘌsmall: [1, 20],
  gainꘌmedium: [50, 100],
  gainꘌbig: [500, 700],
  gainꘌhuge: [900, 2000]
}; // TODO UT data
/////////////////////
// useful for picking an exact archetype (ex. tests)

function get_archetype(hid) {
  var aa = ALL_ADVENTURE_ARCHETYPES.find(function (aa) {
    return aa.hid === hid;
  });
  if (!aa) throw new Error("logic-adventures, get_archetype(): couldn't find archetype \"" + hid + "\" !");
  return aa;
}

exports.get_archetype = get_archetype;
var FIGHT_ENCOUNTER_RATIO = 0.33;

function pick_random_good_archetype(rng) {
  return random_1.Random.bool(FIGHT_ENCOUNTER_RATIO)(rng) ? random_1.Random.pick(rng, GOOD_ADVENTURE_ARCHETYPES_BY_TYPE.fight) : random_1.Random.pick(rng, GOOD_ADVENTURE_ARCHETYPES_BY_TYPE.story);
}

exports.pick_random_good_archetype = pick_random_good_archetype;

function pick_random_bad_archetype(rng) {
  return random_1.Random.pick(rng, ALL_BAD_ADVENTURE_ARCHETYPES);
}

exports.pick_random_bad_archetype = pick_random_bad_archetype;

function generate_random_coin_gain_or_loss(rng, _a) {
  var range = _a.range,
      player_level = _a.player_level,
      current_wallet_amount = _a.current_wallet_amount;

  switch (range) {
    case types_1.CoinsGain.lossꘌsmall:
      {
        tiny_invariant_1.default(current_wallet_amount > 0, 'wallet should not be empty for loss to be allowed!');
        var interval = COINS_GAIN_RANGES[range];
        tiny_invariant_1.default(interval, "known range \"" + range + "\"");
        var amount = random_1.Random.integer(interval[0], interval[1])(rng);
        var capped_amount = Math.max(amount, -current_wallet_amount);
        return capped_amount;
      }

    case types_1.CoinsGain.lossꘌone:
      return -1;

    case types_1.CoinsGain.none:
      return 0;

    case types_1.CoinsGain.gainꘌone:
      return 1;

    default:
      {
        var level_multiplier = player_level * COINS_GAIN_MULTIPLIER_PER_LEVEL;
        var interval = COINS_GAIN_RANGES[range];
        tiny_invariant_1.default(interval, "known range \"" + range + "\"");
        interval = [interval[0] * level_multiplier, interval[1] * level_multiplier];
        return random_1.Random.integer(interval[0], interval[1])(rng);
      }
  }
}

exports.generate_random_coin_gain_or_loss = generate_random_coin_gain_or_loss; /////////////////////
},{"tiny-invariant":"VYmh","@offirmo/random":"OV1n","./types":"Z4ak","./data":"Cqmk"}],"YmLA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_lib_SEC = exports.OMRSoftExecutionContext = void 0;

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var definitions_1 = require("@tbrpg/definitions");

Object.defineProperty(exports, "OMRSoftExecutionContext", {
  enumerable: true,
  get: function () {
    return definitions_1.OMRSoftExecutionContext;
  }
});

var consts_1 = require("../consts");

function get_lib_SEC(parent) {
  return definitions_1.decorate_SEC((parent || soft_execution_context_1.getRootSEC()).createChild().setLogicalStack({
    module: consts_1.LIB
  }).setAnalyticsAndErrorDetails({
    sub_product: consts_1.LIB
  }));
}

exports.get_lib_SEC = get_lib_SEC;
},{"@offirmo-private/soft-execution-context":"cjhL","@tbrpg/definitions":"PTCd","../consts":"xaPH"}],"ZEPs":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_achievements_completion = exports.get_achievements_snapshot = exports.get_achievement_snapshot_by_temporary_id = exports.get_achievement_snapshot = void 0;

var definitions_1 = require("@tbrpg/definitions");

var state__progress_1 = require("@tbrpg/state--progress");

var achievements_1 = __importDefault(require("../data/achievements")); /////////////////////


function get_achievement_snapshot(u_state, definition) {
  var session_uuid = definition.session_uuid,
      name = definition.name,
      icon = definition.icon,
      description = definition.description,
      lore = definition.lore,
      get_completion_rate = definition.get_completion_rate; // we check this and not get_status since unlock is "sticky" (by design) and get_status may not be

  var status = state__progress_1.get_last_known_achievement_status(u_state.progress, name);
  return {
    uuid: session_uuid,
    element_type: definitions_1.ElementType.achievement_snapshot,
    name: name,
    icon: icon,
    description: description,
    lore: lore,
    status: status,
    completion_rate: get_completion_rate ? get_completion_rate(u_state) : undefined
  };
}

exports.get_achievement_snapshot = get_achievement_snapshot;

function get_achievement_snapshot_by_temporary_id(u_state, temporary_id) {
  var definition = achievements_1.default.find(function (d) {
    return d.session_uuid === temporary_id;
  });
  if (!definition) throw new Error("No achievement definition found for temporary_id \"" + temporary_id + "\"!");
  return get_achievement_snapshot(u_state, definition);
}

exports.get_achievement_snapshot_by_temporary_id = get_achievement_snapshot_by_temporary_id;

function get_achievements_snapshot(u_state) {
  return achievements_1.default.map(function (definition) {
    return get_achievement_snapshot(u_state, definition);
  }).filter(function (as) {
    return as.status !== state__progress_1.AchievementStatus.secret;
  });
}

exports.get_achievements_snapshot = get_achievements_snapshot;

function get_achievements_completion(u_state) {
  var snapshot = get_achievements_snapshot(u_state);
  var unlocked_ach_count = snapshot.filter(function (as) {
    return as.status === state__progress_1.AchievementStatus.unlocked;
  }).length;
  return [unlocked_ach_count, snapshot.length];
}

exports.get_achievements_completion = get_achievements_completion;
},{"@tbrpg/definitions":"PTCd","@tbrpg/state--progress":"Tgn1","../data/achievements":"gTcy"}],"q6Lz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_human_time_to_next_energy = exports.get_available_energy_float = void 0;

var state_energy_1 = require("@oh-my-rpg/state-energy"); /////////////////////


function get_available_energy_float(t_state) {
  return state_energy_1.get_available_energy_float(t_state.energy);
}

exports.get_available_energy_float = get_available_energy_float;

function get_human_time_to_next_energy(_a) {
  var u_state = _a.u_state,
      t_state = _a.t_state;
  return state_energy_1.get_human_time_to_next(u_state.energy, t_state.energy);
}

exports.get_human_time_to_next_energy = get_human_time_to_next_energy;
},{"@oh-my-rpg/state-energy":"t3WS"}],"gKfo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.will_next_play_be_good_at = exports.get_available_classes = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var state__character_1 = require("@tbrpg/state--character");

var energy_1 = require("./energy");

var internal_1 = require("../reducers/internal"); /////////////////////


function get_available_classes(u_state) {
  return typescript_string_enums_1.Enum.keys(state__character_1.CharacterClass).filter(function (klass) {
    return klass !== state__character_1.CharacterClass.novice;
  });
}

exports.get_available_classes = get_available_classes;

function will_next_play_be_good_at(state, now_ms) {
  state = internal_1._update_to_now(state, now_ms);
  var t_state = state.t_state;
  var available_energy = energy_1.get_available_energy_float(t_state);
  var is_good_play = available_energy >= 1.;
  return is_good_play;
}

exports.will_next_play_be_good_at = will_next_play_be_good_at; /////////////////////
},{"typescript-string-enums":"qyCc","@tbrpg/state--character":"oDfL","./energy":"q6Lz","../reducers/internal":"g0Cm"}],"VQds":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.find_better_unequipped_weapon = exports.find_better_unequipped_armor = exports.get_item = exports.get_item_in_slot = exports.is_inventory_full = exports.appraise_item_power = exports.appraise_item_value = void 0;

var definitions_1 = require("@tbrpg/definitions");

var state__inventory_1 = require("@tbrpg/state--inventory");

var logic__shop_1 = require("@tbrpg/logic--shop");

var state__inventory_2 = require("@tbrpg/state--inventory"); /////////////////////


function appraise_item_value(u_state, uuid) {
  var item = state__inventory_2.get_item(u_state.inventory, uuid);
  if (!item) throw new Error('appraise_item_value(): No item!');
  return logic__shop_1.appraise_sell_value(item);
}

exports.appraise_item_value = appraise_item_value;

function appraise_item_power(u_state, uuid) {
  var item = state__inventory_2.get_item(u_state.inventory, uuid);
  if (!item) throw new Error('appraise_item_power(): No item!');
  return logic__shop_1.appraise_power(item);
}

exports.appraise_item_power = appraise_item_power;

function is_inventory_full(u_state) {
  return state__inventory_1.is_full(u_state.inventory);
}

exports.is_inventory_full = is_inventory_full;

function get_item_in_slot(u_state, slot) {
  return state__inventory_2.get_item_in_slot(u_state.inventory, slot);
}

exports.get_item_in_slot = get_item_in_slot;

function get_item(u_state, uuid) {
  return state__inventory_2.get_item(u_state.inventory, uuid);
}

exports.get_item = get_item;

function find_best_unequipped_armor(u_state) {
  // we take advantage of the fact that the inventory is auto-sorted
  var best_unequipped_armor = u_state.inventory.unslotted.find(function (e) {
    return e.slot === definitions_1.InventorySlot.armor;
  });
  return best_unequipped_armor ? best_unequipped_armor : null;
}

function find_better_unequipped_armor(u_state) {
  var best_unequipped_armor = find_best_unequipped_armor(u_state);
  if (!best_unequipped_armor) return null;
  var best_unequipped_power = logic__shop_1.appraise_power(best_unequipped_armor);
  var equipped_power = logic__shop_1.appraise_power(get_item_in_slot(u_state, definitions_1.InventorySlot.armor));
  if (best_unequipped_power > equipped_power) return best_unequipped_armor;
  return null;
}

exports.find_better_unequipped_armor = find_better_unequipped_armor;

function find_best_unequipped_weapon(u_state) {
  // we take advantage of the fact that the inventory is auto-sorted
  var best_unequipped_weapon = u_state.inventory.unslotted.find(function (e) {
    return e.slot === definitions_1.InventorySlot.weapon;
  });
  return best_unequipped_weapon ? best_unequipped_weapon : null;
}

function find_better_unequipped_weapon(u_state) {
  var best_unequipped_weapon = find_best_unequipped_weapon(u_state);
  if (!best_unequipped_weapon) return null;
  var best_unequipped_power = logic__shop_1.appraise_power(best_unequipped_weapon);
  var equipped_power = logic__shop_1.appraise_power(get_item_in_slot(u_state, definitions_1.InventorySlot.weapon));
  if (best_unequipped_power > equipped_power) return best_unequipped_weapon;
  return null;
}

exports.find_better_unequipped_weapon = find_better_unequipped_weapon; /////////////////////
},{"@tbrpg/definitions":"PTCd","@tbrpg/state--inventory":"pmyL","@tbrpg/logic--shop":"jzJm"}],"E0fL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_registered_alpha_player = exports.is_player_since_alpha = exports.is_alpha = exports.has_account = void 0; /////////////////////

function has_account(state) {
  return state.u_state.meta.is_logged_in;
}

exports.has_account = has_account;

function is_alpha() {
  return true; // TODO alpha
}

exports.is_alpha = is_alpha;

function is_player_since_alpha(state) {
  return true; // TODO check date
}

exports.is_player_since_alpha = is_player_since_alpha;

function is_registered_alpha_player(state) {
  return state.u_state.meta.roles.includes('tbrpg:alpha');
}

exports.is_registered_alpha_player = is_registered_alpha_player;
},{}],"GLx1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_oldest_pending_non_flow_engagement = exports.get_oldest_pending_flow_engagement = exports.appraise_player_power = exports.find_element = void 0;

var definitions_1 = require("@tbrpg/definitions");

var logic__shop_1 = require("@tbrpg/logic--shop");

var state__inventory_1 = require("@tbrpg/state--inventory");

var state_engagement_1 = require("@oh-my-rpg/state-engagement");

var engagement_1 = require("../data/engagement");

var achievements_1 = require("./achievements"); /////////////////////
// TODO power


function appraise_player_power(u_state) {
  var power = 1;
  definitions_1.ITEM_SLOTS.forEach(function (slot) {
    var item = state__inventory_1.get_item_in_slot(u_state.inventory, slot);
    if (item) power += logic__shop_1.appraise_power(item);
  }); // TODO appraise attributes relative to class

  return power;
}

exports.appraise_player_power = appraise_player_power;

function find_element(u_state, uuid) {
  // only inventory for now
  var possible_achievement = null;

  try {
    possible_achievement = achievements_1.get_achievement_snapshot_by_temporary_id(u_state, uuid);
  } catch (err) {// not found, swallow
  }

  return possible_achievement || state__inventory_1.get_item(u_state.inventory, uuid);
}

exports.find_element = find_element; // TODO code duplication

function get_oldest_pending_flow_engagement(u_state) {
  var pe = state_engagement_1.get_oldest_queued_flow(u_state.engagement);
  if (!pe) return null;
  return {
    uid: pe.uid,
    $doc: engagement_1.get_engagement_message(pe),
    pe: pe
  };
}

exports.get_oldest_pending_flow_engagement = get_oldest_pending_flow_engagement;

function get_oldest_pending_non_flow_engagement(u_state) {
  var pe = state_engagement_1.get_oldest_queued_non_flow(u_state.engagement);
  if (!pe) return null;
  return {
    uid: pe.uid,
    $doc: engagement_1.get_engagement_message(pe),
    pe: pe
  };
}

exports.get_oldest_pending_non_flow_engagement = get_oldest_pending_non_flow_engagement; /////////////////////
},{"@tbrpg/definitions":"PTCd","@tbrpg/logic--shop":"jzJm","@tbrpg/state--inventory":"pmyL","@oh-my-rpg/state-engagement":"WEJP","../data/engagement":"FZDX","./achievements":"ZEPs"}],"iasm":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./achievements"), exports);

__exportStar(require("./energy"), exports);

__exportStar(require("./game"), exports);

__exportStar(require("./inventory"), exports);

__exportStar(require("./meta"), exports);

__exportStar(require("./others"), exports);
},{"./achievements":"ZEPs","./energy":"q6Lz","./game":"gKfo","./inventory":"VQds","./meta":"E0fL","./others":"GLx1"}],"g0Cm":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._enhance_a_weapon = exports._enhance_an_armor = exports._auto_make_room = exports._ack_all_engagements = exports._receive_tokens = exports._lose_coins = exports._receive_coins = exports._sell_item = exports._receive_item = exports._receive_stat_increase = exports._lose_all_energy = exports._update_to_now = void 0; /////////////////////

var definitions_1 = require("@tbrpg/definitions");

var WeaponLib = __importStar(require("@oh-my-rpg/logic-weapons"));

var ArmorLib = __importStar(require("@oh-my-rpg/logic-armors"));

var logic__shop_1 = require("@tbrpg/logic--shop");

var state__character_1 = require("@tbrpg/state--character");

var state_wallet_1 = require("@oh-my-rpg/state-wallet");

var EnergyState = __importStar(require("@oh-my-rpg/state-energy"));

var WalletState = __importStar(require("@oh-my-rpg/state-wallet"));

var InventoryState = __importStar(require("@tbrpg/state--inventory"));

var EngagementState = __importStar(require("@oh-my-rpg/state-engagement"));

var selectors_1 = require("../selectors");

var sec_1 = require("../services/sec");

var create_1 = require("./create"); /////////////////////


function compare_items_by_normalized_power(a, b) {
  var power_a = logic__shop_1.appraise_power_normalized(a);
  var power_b = logic__shop_1.appraise_power_normalized(b);
  return power_b - power_a;
} /////////////////////
// WARN those internal reducers:
// - do not refresh achievements or update the T-state
// - do not increment the root revision (this has to be done by the parent to avoid multiple increments)


function _lose_all_energy(state) {
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      energy: __assign(__assign({}, state.u_state.energy), {
        revision: state.u_state.energy.revision + 1,
        total_energy_consumed_so_far: Math.max(7, state.u_state.energy.total_energy_consumed_so_far)
      })
    }),
    t_state: __assign(__assign({}, state.t_state), {
      energy: EnergyState.lose_all_energy([state.u_state.energy, state.t_state.energy])
    })
  });
}

exports._lose_all_energy = _lose_all_energy;

function _update_to_now(state, now_ms) {
  var u_state = state.u_state,
      t_state = state.t_state;
  var t_state_e = EnergyState.update_to_now([u_state.energy, t_state.energy], now_ms);
  if (t_state_e === t_state.energy) return state; // no change

  return __assign(__assign({}, state), {
    t_state: __assign(__assign({}, t_state), {
      timestamp_ms: t_state_e.timestamp_ms,
      energy: t_state_e
    })
  });
}

exports._update_to_now = _update_to_now;

function _receive_stat_increase(state, stat, amount) {
  if (amount === void 0) {
    amount = 1;
  }

  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      avatar: state__character_1.increase_stat(sec_1.get_lib_SEC(), state.u_state.avatar, stat, amount)
    })
  });
}

exports._receive_stat_increase = _receive_stat_increase;

function _receive_item(state, item) {
  // inventory can't be full since we prevent playing in this case
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      inventory: InventoryState.add_item(state.u_state.inventory, item)
    })
  });
}

exports._receive_item = _receive_item;

function _sell_item(state, uuid) {
  var price = selectors_1.appraise_item_value(state.u_state, uuid);
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      inventory: InventoryState.remove_item_from_unslotted(state.u_state.inventory, uuid),
      wallet: WalletState.add_amount(state.u_state.wallet, state_wallet_1.Currency.coin, price)
    })
  });
}

exports._sell_item = _sell_item;

function _receive_coins(state, amount) {
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      wallet: WalletState.add_amount(state.u_state.wallet, state_wallet_1.Currency.coin, amount)
    })
  });
}

exports._receive_coins = _receive_coins;

function _lose_coins(state, amount) {
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      wallet: WalletState.remove_amount(state.u_state.wallet, state_wallet_1.Currency.coin, amount)
    })
  });
}

exports._lose_coins = _lose_coins;

function _receive_tokens(state, amount) {
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      wallet: WalletState.add_amount(state.u_state.wallet, state_wallet_1.Currency.token, amount)
    })
  });
}

exports._receive_tokens = _receive_tokens; ////////////

function _ack_all_engagements(state) {
  if (!state.u_state.engagement.queue.length) return state;
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      engagement: EngagementState.acknowledge_all_seen(state.u_state.engagement)
    })
  });
}

exports._ack_all_engagements = _ack_all_engagements;

function _auto_make_room(state, options) {
  if (options === void 0) {
    options = {};
  }

  var DEBUG = options.DEBUG;
  if (DEBUG) console.log("  - _auto_make_room()\u2026 (inventory holding " + state.u_state.inventory.unslotted.length + " items)"); // inventory full

  if (selectors_1.is_inventory_full(state.u_state)) {
    if (DEBUG) console.log("    Inventory is full (" + state.u_state.inventory.unslotted.length + " items)");
    var freed_count_1 = 0; // sell stuff, starting from the worst, but keeping the starting items (for sentimental reasons)

    var original_unslotted = state.u_state.inventory.unslotted;
    Array.from(original_unslotted).filter(function (e) {
      switch (e.slot) {
        case definitions_1.InventorySlot.armor:
          if (ArmorLib.matches(e, create_1.STARTING_ARMOR_SPEC)) return false;
          break;

        case definitions_1.InventorySlot.weapon:
          if (WeaponLib.matches(e, create_1.STARTING_WEAPON_SPEC)) return false;
          break;

        default:
          break;
      }

      return true;
    }).sort(compare_items_by_normalized_power).reverse() // to put the lowest quality items first
    .forEach(function (e) {
      //console.log(e.quality, e.slot, appraise_power_normalized(e))
      switch (e.slot) {
        case definitions_1.InventorySlot.armor:
          if (ArmorLib.matches(e, create_1.STARTING_ARMOR_SPEC)) return;
          break;

        case definitions_1.InventorySlot.weapon:
          if (WeaponLib.matches(e, create_1.STARTING_WEAPON_SPEC)) return;
          break;

        default:
          break;
      }

      if (e.quality === definitions_1.ItemQuality.common || freed_count_1 === 0) {
        //console.log('    - selling:', e)
        state = _sell_item(state, e.uuid);
        freed_count_1++;
        return;
      }
    });
    if (freed_count_1 === 0) throw new Error('Internal error: _auto_make_room(): inventory is full and couldn’t free stuff!');
    if (DEBUG) console.log("    Freed " + freed_count_1 + " items, inventory now holding " + state.u_state.inventory.unslotted.length + " items.");
  }

  return state;
}

exports._auto_make_room = _auto_make_room;

function _enhance_an_armor(state) {
  var _a;

  var slotted = InventoryState.get_item_in_slot(state.u_state.inventory, definitions_1.InventorySlot.armor);

  if (ArmorLib.is_at_max_enhancement(slotted)) {
    // TODO try to enhance another armor
    return state;
  }

  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      inventory: __assign(__assign({}, state.u_state.inventory), {
        slotted: __assign(__assign({}, state.u_state.inventory.slotted), (_a = {}, _a[definitions_1.InventorySlot.armor] = ArmorLib.enhance(slotted), _a))
      })
    })
  });
}

exports._enhance_an_armor = _enhance_an_armor;

function _enhance_a_weapon(state) {
  var _a;

  var slotted = InventoryState.get_item_in_slot(state.u_state.inventory, definitions_1.InventorySlot.weapon);

  if (WeaponLib.is_at_max_enhancement(slotted)) {
    // TODO try to enhance another weapon
    return state;
  }

  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      inventory: __assign(__assign({}, state.u_state.inventory), {
        slotted: __assign(__assign({}, state.u_state.inventory.slotted), (_a = {}, _a[definitions_1.InventorySlot.weapon] = WeaponLib.enhance(slotted), _a))
      })
    })
  });
}

exports._enhance_a_weapon = _enhance_a_weapon;
},{"@tbrpg/definitions":"PTCd","@oh-my-rpg/logic-weapons":"qUBn","@oh-my-rpg/logic-armors":"eV82","@tbrpg/logic--shop":"jzJm","@tbrpg/state--character":"oDfL","@oh-my-rpg/state-wallet":"V5wo","@oh-my-rpg/state-energy":"t3WS","@tbrpg/state--inventory":"pmyL","@oh-my-rpg/state-engagement":"WEJP","../selectors":"iasm","../services/sec":"YmLA","./create":"slDo"}],"fG02":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.change_avatar_class = exports.rename_avatar = exports.sell_item = exports.equip_item = exports.update_to_now = exports.on_logged_in_refresh = exports.on_start_session = exports.acknowledge_engagement_msg_seen = void 0;

var timestamps_1 = require("@offirmo-private/timestamps");

var state_utils_1 = require("@offirmo-private/state-utils"); /////////////////////


var state__character_1 = require("@tbrpg/state--character");

var InventoryState = __importStar(require("@tbrpg/state--inventory"));

var EngagementState = __importStar(require("@oh-my-rpg/state-engagement"));

var MetaState = __importStar(require("@oh-my-rpg/state-meta")); /////////////////////


var consts_1 = require("../consts");

var sec_1 = require("../services/sec");

var selectors_1 = require("../selectors");

var achievements_1 = require("./achievements");

var internal_1 = require("./internal"); /////////////////////


function on_start_session(previous_state, is_web_diversity_supporter, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  } // update energy (not sure needed but good safety)


  var state = internal_1._update_to_now(previous_state, now_ms);

  state = __assign(__assign({}, state), {
    //last_user_investment_tms: now_ms, //No, this is NOT a valuable user action
    u_state: __assign(__assign({}, state.u_state), {
      meta: MetaState.on_start_session(state.u_state.meta, is_web_diversity_supporter),
      revision: previous_state.u_state.revision + 1
    })
  }); // TODO recap here ?
  // new achievements may have appeared
  // (new content = not the same as a migration)

  return achievements_1._refresh_achievements(state);
}

exports.on_start_session = on_start_session;

function on_logged_in_refresh(previous_state, is_logged_in, roles, now_ms) {
  if (roles === void 0) {
    roles = [];
  }

  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  } // update energy (not sure needed but good safety)


  var updated_state = internal_1._update_to_now(previous_state, now_ms);

  var state = updated_state;
  state = __assign(__assign({}, state), {
    //last_user_investment_tms: now_ms, //No, this is NOT a valuable user action
    u_state: __assign(__assign({}, state.u_state), {
      meta: MetaState.on_logged_in_refresh(state.u_state.meta, is_logged_in, roles)
    })
  }); // TODO engagement here ?

  state = achievements_1._refresh_achievements(state);
  state = state_utils_1.complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous_state, state, updated_state, 'on_logged_in_refresh');
  return state;
}

exports.on_logged_in_refresh = on_logged_in_refresh;

function update_to_now(state, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  return internal_1._update_to_now(state, now_ms);
}

exports.update_to_now = update_to_now;

function equip_item(previous_state, uuid, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  var state = previous_state;
  state = __assign(__assign({}, state), {
    last_user_investment_tms: now_ms,
    u_state: __assign(__assign({}, state.u_state), {
      inventory: InventoryState.equip_item(state.u_state.inventory, uuid),
      revision: previous_state.u_state.revision + 1
    })
  });
  return achievements_1._refresh_achievements(state);
}

exports.equip_item = equip_item;

function sell_item(previous_state, uuid, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  var state = previous_state;
  state = internal_1._sell_item(state, uuid);
  state = __assign(__assign({}, state), {
    last_user_investment_tms: now_ms,
    u_state: __assign(__assign({}, state.u_state), {
      revision: previous_state.u_state.revision + 1
    })
  });
  return achievements_1._refresh_achievements(state);
}

exports.sell_item = sell_item;

function rename_avatar(previous_state, new_name, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  var state = previous_state;
  state = __assign(__assign({}, state), {
    last_user_investment_tms: now_ms,
    u_state: __assign(__assign({}, state.u_state), {
      avatar: state__character_1.rename(sec_1.get_lib_SEC(), state.u_state.avatar, new_name),
      revision: previous_state.u_state.revision + 1
    })
  });
  return achievements_1._refresh_achievements(state);
}

exports.rename_avatar = rename_avatar;

function change_avatar_class(previous_state, new_class, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  if (!selectors_1.get_available_classes(previous_state.u_state).includes(new_class)) throw new Error(consts_1.LIB + ": switch class: invalid class \"" + new_class + "\"!");
  var state = previous_state;
  state = __assign(__assign({}, state), {
    last_user_investment_tms: now_ms,
    u_state: __assign(__assign({}, state.u_state), {
      avatar: state__character_1.switch_class(sec_1.get_lib_SEC(), state.u_state.avatar, new_class),
      revision: previous_state.u_state.revision + 1
    })
  });
  return achievements_1._refresh_achievements(state);
}

exports.change_avatar_class = change_avatar_class;

function acknowledge_engagement_msg_seen(previous_state, uid, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  var state = previous_state;
  state = __assign(__assign({}, state), {
    last_user_investment_tms: now_ms,
    u_state: __assign(__assign({}, state.u_state), {
      engagement: EngagementState.acknowledge_seen(state.u_state.engagement, uid),
      revision: previous_state.u_state.revision + 1
    })
  });
  return state;
}

exports.acknowledge_engagement_msg_seen = acknowledge_engagement_msg_seen;
},{"@offirmo-private/timestamps":"bMV2","@offirmo-private/state-utils":"PmVE","@tbrpg/state--character":"oDfL","@tbrpg/state--inventory":"pmyL","@oh-my-rpg/state-engagement":"WEJP","@oh-my-rpg/state-meta":"GY73","../consts":"xaPH","../services/sec":"YmLA","../selectors":"iasm","./achievements":"rq93","./internal":"g0Cm"}],"slDo":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reseed = exports.create = exports.STARTING_ARMOR_SPEC = exports.STARTING_WEAPON_SPEC = void 0;

var timestamps_1 = require("@offirmo-private/timestamps");

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var state_utils_1 = require("@offirmo-private/state-utils"); /////////////////////


var definitions_1 = require("@tbrpg/definitions");

var CharacterState = __importStar(require("@tbrpg/state--character"));

var WalletState = __importStar(require("@oh-my-rpg/state-wallet"));

var InventoryState = __importStar(require("@tbrpg/state--inventory"));

var EnergyState = __importStar(require("@oh-my-rpg/state-energy"));

var EngagementState = __importStar(require("@oh-my-rpg/state-engagement"));

var PRNGState = __importStar(require("@oh-my-rpg/state-prng"));

var CodesState = __importStar(require("@oh-my-rpg/state-codes"));

var ProgressState = __importStar(require("@tbrpg/state--progress"));

var MetaState = __importStar(require("@oh-my-rpg/state-meta"));

var state_prng_1 = require("@oh-my-rpg/state-prng");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var logic_armors_1 = require("@oh-my-rpg/logic-armors"); /////////////////////


var consts_1 = require("../consts");

var sec_1 = require("../services/sec");

var engagement_1 = require("../data/engagement");

var internal_1 = require("./internal");

var base_1 = require("./base");

var achievements_1 = require("./achievements"); /////////////////////


var STARTING_WEAPON_SPEC = {
  base_hid: 'spoon',
  qualifier1_hid: 'used',
  qualifier2_hid: 'noob',
  quality: definitions_1.ItemQuality.common,
  base_strength: 1
};
exports.STARTING_WEAPON_SPEC = STARTING_WEAPON_SPEC;
var STARTING_ARMOR_SPEC = {
  base_hid: 'socks',
  qualifier1_hid: 'used',
  qualifier2_hid: 'noob',
  quality: definitions_1.ItemQuality.common,
  base_strength: 1
};
exports.STARTING_ARMOR_SPEC = STARTING_ARMOR_SPEC;

function create(SEC, seed) {
  return sec_1.get_lib_SEC(SEC).xTry('create', function () {
    var _a = EnergyState.create(),
        u_state_energy = _a[0],
        t_state_energy = _a[1];

    var now = new Date(); //console.log('creation', now)

    var state = {
      ⵙapp_id: 'tbrpg',
      schema_version: consts_1.SCHEMA_VERSION,
      last_user_investment_tms: timestamps_1.get_UTC_timestamp_ms(now),
      u_state: {
        schema_version: consts_1.SCHEMA_VERSION,
        revision: 0,
        avatar: CharacterState.create(SEC),
        inventory: InventoryState.create(SEC),
        wallet: WalletState.add_amount(WalletState.create(), WalletState.Currency.coin, 1),
        prng: PRNGState.create(seed),
        energy: u_state_energy,
        engagement: EngagementState.create(SEC),
        codes: CodesState.create(SEC),
        progress: ProgressState.create(SEC),
        meta: MetaState.create(),
        last_adventure: null
      },
      t_state: {
        schema_version: consts_1.SCHEMA_VERSION,
        revision: 0,
        timestamp_ms: t_state_energy.timestamp_ms,
        energy: t_state_energy
      }
    };
    var rng = state_prng_1.get_prng(state.u_state.prng);
    var starting_weapon = logic_weapons_1.create(rng, STARTING_WEAPON_SPEC);
    state = internal_1._receive_item(state, starting_weapon);
    state = base_1.equip_item(state, starting_weapon.uuid);
    var starting_armor = logic_armors_1.create(rng, STARTING_ARMOR_SPEC);
    state = internal_1._receive_item(state, starting_armor);
    state = base_1.equip_item(state, starting_armor.uuid);
    state = achievements_1._refresh_achievements(state); // there are some initial achievements

    state = internal_1._ack_all_engagements(state); // reset engagements that may have been created by noisy initial achievements, distracting
    // now insert some relevant start engagements

    state = __assign(__assign({}, state), {
      u_state: __assign(__assign({}, state.u_state), {
        engagement: EngagementState.enqueue(state.u_state.engagement, {
          type: EngagementState.EngagementType.flow,
          key: engagement_1.EngagementKey['tip--first_play']
        })
      })
    });
    tiny_invariant_1.default(state.u_state.prng.use_count === 0, 'prng never used yet'); //state.prng = PRNGState.update_use_count(state.prng, rng)

    state = __assign(__assign({}, state), {
      u_state: __assign(__assign({}, state.u_state), {
        // to compensate sub-functions used during creation:
        revision: 0
      })
    }); // hurts the unit tests!
    //state = _update_to_now(state, now_ms) // not sure needed but doesn't hurt

    return state_utils_1.enforce_immutability(state);
  });
}

exports.create = create;

function reseed(state, seed) {
  seed = seed || state_prng_1.generate_random_seed();
  state = __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      prng: PRNGState.set_seed(state.u_state.prng, seed),
      revision: state.u_state.revision + 1
    })
  });
  return state_utils_1.enforce_immutability(state);
}

exports.reseed = reseed; /////////////////////
},{"@offirmo-private/timestamps":"bMV2","tiny-invariant":"VYmh","@offirmo-private/state-utils":"PmVE","@tbrpg/definitions":"PTCd","@tbrpg/state--character":"oDfL","@oh-my-rpg/state-wallet":"V5wo","@tbrpg/state--inventory":"pmyL","@oh-my-rpg/state-energy":"t3WS","@oh-my-rpg/state-engagement":"WEJP","@oh-my-rpg/state-prng":"rqPL","@oh-my-rpg/state-codes":"HIvc","@tbrpg/state--progress":"Tgn1","@oh-my-rpg/state-meta":"GY73","@oh-my-rpg/logic-weapons":"qUBn","@oh-my-rpg/logic-armors":"eV82","../consts":"xaPH","../services/sec":"YmLA","../data/engagement":"FZDX","./internal":"g0Cm","./base":"fG02","./achievements":"rq93"}],"gTcy":[function(require,module,exports) {
"use strict";

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var definitions_1 = require("@tbrpg/definitions");

var logic__shop_1 = require("@tbrpg/logic--shop");

var state__progress_1 = require("@tbrpg/state--progress");

var state__character_1 = require("@tbrpg/state--character");

var state__inventory_1 = require("@tbrpg/state--inventory");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var logic_armors_1 = require("@oh-my-rpg/logic-armors");

var logic_adventures_1 = require("@oh-my-rpg/logic-adventures");

var create_1 = require("../reducers/create"); // ’


function _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, quality) {
  return definitions_1.ITEM_SLOTS.every(function (slot) {
    var item = state__inventory_1.get_item_in_slot(u_state.inventory, slot);
    return item ? definitions_1.ITEM_QUALITIES_TO_INT[item.quality] <= definitions_1.ITEM_QUALITIES_TO_INT[quality] : false;
  });
}

function _get_combined_equipped_items_power(u_state) {
  return definitions_1.ITEM_SLOTS.reduce(function (acc, slot) {
    var item = state__inventory_1.get_item_in_slot(u_state.inventory, slot);
    return acc + (item ? logic__shop_1.appraise_power(item) : 0);
  }, 0);
}

function _equipped_armor_matches(u_state, spec) {
  var armor = u_state.inventory.slotted[definitions_1.InventorySlot.armor];
  return armor ? logic_armors_1.matches(armor, spec) : false;
}

function _equipped_weapon_matches(u_state, spec) {
  var weapon = u_state.inventory.slotted[definitions_1.InventorySlot.weapon];
  return weapon ? logic_weapons_1.matches(weapon, spec) : false;
}

function _encountered_good_adventures_count(u_state) {
  return Object.keys(u_state.progress.statistics.encountered_adventures).length;
}

function _encountered_fight_adventures_count(u_state) {
  return u_state.progress.statistics.fight_won_count + u_state.progress.statistics.fight_lost_count;
}

function _eaten_mushroom_count(u_state) {
  return Object.keys(u_state.progress.statistics.encountered_adventures).filter(function (k) {
    return k.endsWith('_mushroom');
  }).length;
}

function _drunk_potion_count(u_state) {
  return Object.keys(u_state.progress.statistics.encountered_adventures).filter(function (k) {
    return k.endsWith('_potion');
  }).length;
}

function _helped_village_count(u_state) {
  return Object.keys(u_state.progress.statistics.encountered_adventures).filter(function (k) {
    return k.startsWith('village_');
  }).length;
}

function _famous_stones_count(u_state) {
  return Object.keys(u_state.progress.statistics.encountered_adventures).filter(function (k) {
    return k.startsWith('famous_stone_');
  }).length;
}

var RAW_ENTRIES_TEST = [{
  icon: '🍪',
  name: 'TEST',
  description: 'This secret achievement can only be obtained through debug commands, to test the achievements system.',
  lore: '…and a piece of lore should appear here',
  get_status: function (u_state) {
    return u_state.progress.achievements['TEST'] === undefined || u_state.progress.achievements['TEST'] === state__progress_1.AchievementStatus.secret ? state__progress_1.AchievementStatus.secret // keep it secret
    : state__progress_1.AchievementStatus.unlocked;
  } // unlock it ASAP

}, {
  icon: '🧒',
  name: 'Reborn!',
  description: 'This secret achievement can only be obtained if you got "reborn" = your savegame was reinitialised with an autoplay due to a new format being introduced. This can only happen during the alpha.',
  lore: 'I won’t waste this new chance! I’ll live my life to the fullest!',
  get_status: function (u_state) {
    return u_state.progress.achievements['Reborn!'] === state__progress_1.AchievementStatus.unlocked ? state__progress_1.AchievementStatus.unlocked // keep it unlocked
    : state__progress_1.AchievementStatus.secret;
  } // keep it secret

}];
var RAW_ENTRIES_GAME_PHASES = [{
  icon: '🐺',
  name: 'Alpha player',
  description: 'You started playing during the alpha or earlier.',
  lore: 'Let me tell you of a time of great adventure…',
  get_status: function () {
    return state__progress_1.AchievementStatus.unlocked;
  } // TODO alpha

}, {
  icon: '🦍',
  name: 'Beta player',
  description: 'You played during the beta. (no beta yet, though)',
  lore: 'Those were the days my friend…',
  get_status: function () {
    return state__progress_1.AchievementStatus.revealed;
  } // TODO beta

}];
var ADVENTURE_TIERS = [1, 5, 10, 25, 50, 100, 150];
var RAW_ENTRIES_ADVENTURING = [{
  icon: '🥉',
  name: 'Aspiring Explorer',
  description: "Having experienced " + ADVENTURE_TIERS[1] + " different adventures",
  get_status: function (u_state) {
    return _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}, {
  icon: '🥈',
  name: 'Rookie Explorer',
  description: "Having experienced " + ADVENTURE_TIERS[2] + " different adventures",
  get_status: function (u_state) {
    return _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_good_adventures_count(u_state), ADVENTURE_TIERS[2]];
  }
}, {
  icon: '🥇',
  name: 'Young Explorer',
  description: "Having experienced " + ADVENTURE_TIERS[3] + " different adventures",
  get_status: function (u_state) {
    return _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_good_adventures_count(u_state), ADVENTURE_TIERS[3]];
  }
}, {
  icon: '🏅',
  name: 'Master Explorer',
  description: "Having experienced " + ADVENTURE_TIERS[4] + " different adventures",
  get_status: function (u_state) {
    return _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_good_adventures_count(u_state), ADVENTURE_TIERS[4]];
  }
}, {
  icon: '🎖',
  name: 'Senior Explorer',
  description: "Having experienced " + ADVENTURE_TIERS[5] + " different adventures",
  get_status: function (u_state) {
    return _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[5] ? state__progress_1.AchievementStatus.unlocked : _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[4] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_good_adventures_count(u_state), ADVENTURE_TIERS[5]];
  }
}, {
  icon: '🏆',
  name: 'Grandmaster Explorer',
  description: "Having experienced " + ADVENTURE_TIERS[6] + " different adventures",
  get_status: function (u_state) {
    return _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[6] ? state__progress_1.AchievementStatus.unlocked : _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[5] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_good_adventures_count(u_state), ADVENTURE_TIERS[6]];
  }
}, {
  icon: '👑',
  name: 'Absolute Explorer',
  description: 'Having experienced ALL the adventures',
  get_status: function (u_state) {
    return _encountered_good_adventures_count(u_state) >= logic_adventures_1.ALL_GOOD_ADVENTURE_ARCHETYPES.length ? state__progress_1.AchievementStatus.unlocked : _encountered_good_adventures_count(u_state) >= ADVENTURE_TIERS[6] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_good_adventures_count(u_state), logic_adventures_1.ALL_GOOD_ADVENTURE_ARCHETYPES.length];
  }
}];
var FIGHT_ENCOUNTER_TIERS = [1, 3, 10, 49, 50, 100, 500];
var RAW_ENTRIES_FIGHT_ENCOUNTERS = [{
  icon: '🥄',
  name: 'First Blood',
  description: 'Having experienced your first random fight encounter.',
  get_status: function (u_state) {
    return _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[0] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}, {
  icon: '🔨',
  name: 'Into The Wild',
  description: "Having experienced " + FIGHT_ENCOUNTER_TIERS[1] + " random fight encounters.",
  get_status: function (u_state) {
    return _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[0] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_fight_adventures_count(u_state), FIGHT_ENCOUNTER_TIERS[1]];
  }
}, {
  icon: '⛏',
  name: 'Born To Be Wild',
  description: "Having experienced " + FIGHT_ENCOUNTER_TIERS[2] + " random fight encounters.",
  get_status: function (u_state) {
    return _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_fight_adventures_count(u_state), FIGHT_ENCOUNTER_TIERS[2]];
  }
}, {
  icon: '🔪',
  name: '49 times… It was 49 times…',
  description: 'Having experienced 49 random fight encounters.',
  lore: '49 times… We fought that beast. Something’s waiting in the bushes for us…',
  get_status: function (u_state) {
    return _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_fight_adventures_count(u_state), FIGHT_ENCOUNTER_TIERS[3]];
  }
}, {
  icon: '🔪',
  name: 'Wild Like The Wind',
  description: "Having experienced " + FIGHT_ENCOUNTER_TIERS[4] + " random fight encounters.",
  get_status: function (u_state) {
    return _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_fight_adventures_count(u_state), FIGHT_ENCOUNTER_TIERS[4]];
  }
}, {
  icon: '🗡',
  name: 'The Wild One',
  description: "Having experienced " + FIGHT_ENCOUNTER_TIERS[5] + " random fight encounters.",
  get_status: function (u_state) {
    return _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[5] ? state__progress_1.AchievementStatus.unlocked : _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[4] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_fight_adventures_count(u_state), FIGHT_ENCOUNTER_TIERS[5]];
  }
}, {
  icon: '⚔',
  name: 'Alpha Of The Wilderness',
  description: "Having experienced " + FIGHT_ENCOUNTER_TIERS[6] + " random fight encounters.",
  get_status: function (u_state) {
    return _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[6] ? state__progress_1.AchievementStatus.unlocked : _encountered_fight_adventures_count(u_state) >= FIGHT_ENCOUNTER_TIERS[5] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_encountered_fight_adventures_count(u_state), FIGHT_ENCOUNTER_TIERS[6]];
  }
}];
var RAW_ENTRIES_ADVENTURES_SETS = [{
  icon: '🍄',
  name: 'Mushrooms Lover',
  description: 'Having eaten 3 different mushrooms.',
  get_status: function (u_state) {
    return _eaten_mushroom_count(u_state) >= 3 ? state__progress_1.AchievementStatus.unlocked : _eaten_mushroom_count(u_state) >= 1 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_eaten_mushroom_count(u_state), 3];
  }
}, {
  icon: '🍡',
  name: 'Mushrooms Gourmet',
  description: 'Having eaten all the different mushrooms.',
  get_status: function (u_state) {
    return _eaten_mushroom_count(u_state) >= 8 ? state__progress_1.AchievementStatus.unlocked : _eaten_mushroom_count(u_state) >= 3 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_eaten_mushroom_count(u_state), 8];
  }
}, {
  icon: '🥤',
  name: 'Potions Taster',
  description: 'Having drunk 3 different potions.',
  get_status: function (u_state) {
    return _drunk_potion_count(u_state) >= 3 ? state__progress_1.AchievementStatus.unlocked : _drunk_potion_count(u_state) >= 1 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_drunk_potion_count(u_state), 3];
  }
}, {
  icon: '🍹',
  name: 'Potions Sommelier',
  description: 'Having drunk all the different potions.',
  get_status: function (u_state) {
    return _drunk_potion_count(u_state) >= 6 ? state__progress_1.AchievementStatus.unlocked : _drunk_potion_count(u_state) >= 3 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_drunk_potion_count(u_state), 6];
  }
}, {
  icon: '👩‍🌾',
  name: 'Folk Hero',
  description: 'Having completed all the village quests.',
  get_status: function (u_state) {
    return _helped_village_count(u_state) >= 6 ? state__progress_1.AchievementStatus.unlocked : _helped_village_count(u_state) >= 1 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_helped_village_count(u_state), 6];
  }
}, {
  icon: '💎',
  name: 'Famous Gems Collector',
  description: 'Having collected all the famous gems.',
  get_status: function (u_state) {
    return _famous_stones_count(u_state) >= 4 ? state__progress_1.AchievementStatus.unlocked : _famous_stones_count(u_state) >= 1 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_famous_stones_count(u_state), 4];
  }
} // all class master
// all pets
// all npc
];
var GOOD_CLICKS_TIERS = [1, 7, 11, 77, 500, 1000, 10000];
var RAW_ENTRIES_PRIMARY_CTA = [{
  icon: '🥉',
  name: 'I am bored',
  description: 'Having played for the first time.',
  lore: 'I am looking for someone to share in an adventure…',
  get_status: function (u_state) {
    return u_state.progress.statistics.good_play_count ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}, {
  icon: '🥈',
  name: 'I am very bored',
  description: "Having played " + GOOD_CLICKS_TIERS[1] + " times.",
  lore: 'If I take one more step, I’ll be the farthest away from home I’ve ever been…',
  get_status: function (u_state) {
    return u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.good_play_count, GOOD_CLICKS_TIERS[1]];
  }
}, {
  icon: '🥇',
  // https://www.urbandictionary.com/define.php?term=Turn%20it%20up%20to%20eleven
  name: 'Turn it up to eleven',
  description: "Having played " + GOOD_CLICKS_TIERS[2] + " times.",
  lore: 'You step onto the road, and there’s no telling where you might be swept off to…',
  get_status: function (u_state) {
    return u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.good_play_count, GOOD_CLICKS_TIERS[2]];
  }
}, {
  icon: '🏅',
  name: 'I am dead bored',
  description: "Having played " + GOOD_CLICKS_TIERS[3] + " times.",
  lore: 'Not all those who wander are lost.',
  get_status: function (u_state) {
    return u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.good_play_count, GOOD_CLICKS_TIERS[3]];
  }
}, {
  icon: '🎖',
  name: 'did I mention I was bored?',
  description: "Having played " + GOOD_CLICKS_TIERS[4] + " times.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.good_play_count, GOOD_CLICKS_TIERS[4]];
  }
}, {
  icon: '👑',
  name: 'king of boredom',
  description: "Having played " + GOOD_CLICKS_TIERS[5] + " times.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[5] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[4] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.good_play_count, GOOD_CLICKS_TIERS[5]];
  }
}, {
  icon: '🏆',
  name: 'No-life except for boredom',
  description: "Having played " + GOOD_CLICKS_TIERS[6] + " times.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[6] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.good_play_count >= GOOD_CLICKS_TIERS[5] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.good_play_count, GOOD_CLICKS_TIERS[6]];
  }
}];
var BAD_CLICKS_TIERS = [0, 1, 2, 10, 50, 500];
var RAW_ENTRIES_COUNTER_CTA = [// = bad clicks
{
  icon: '😱',
  name: 'Sorry my hand slipped',
  description: 'Having played too soon for the 1st time.',
  lore: 'each mistake teaches us something…',
  get_status: function (u_state) {
    return u_state.progress.statistics.bad_play_count ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.hidden;
  }
}, {
  icon: '🙀',
  name: 'Oops!... I Did It Again',
  description: 'Having played too soon for the 2nd time.',
  lore: 'Anyone who has never made a mistake has never tried anything new.',
  get_status: function (u_state) {
    return u_state.progress.statistics.bad_play_count >= BAD_CLICKS_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.bad_play_count, BAD_CLICKS_TIERS[2]];
  }
}, {
  icon: '😼',
  name: 'I’m not that innocent',
  description: "Having played too soon " + BAD_CLICKS_TIERS[3] + " times.",
  lore: 'There is no such thing as accident; it is fate misnamed.',
  get_status: function (u_state) {
    return u_state.progress.statistics.bad_play_count >= BAD_CLICKS_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.bad_play_count >= BAD_CLICKS_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.bad_play_count, BAD_CLICKS_TIERS[3]];
  }
}, {
  icon: '😈',
  name: 'It’s good to be bad',
  description: "Having played too soon " + BAD_CLICKS_TIERS[4] + " times.",
  lore: 'Never retreat, never retract… never admit a mistake…',
  get_status: function (u_state) {
    return u_state.progress.statistics.bad_play_count >= BAD_CLICKS_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.bad_play_count >= BAD_CLICKS_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.bad_play_count, BAD_CLICKS_TIERS[4]];
  }
}, {
  icon: '👻',
  name: 'Hello darkness my old friend',
  description: "Having played too soon " + BAD_CLICKS_TIERS[5] + " times.",
  lore: 'Give yourself to the dark side…',
  get_status: function (u_state) {
    return u_state.progress.statistics.bad_play_count >= BAD_CLICKS_TIERS[5] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.bad_play_count >= BAD_CLICKS_TIERS[4] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.bad_play_count, BAD_CLICKS_TIERS[5]];
  }
}];
var REGULARITY_TIERS = [1, 2, 3, 7, 30, 120, 365];
var RAW_ENTRIES_SECONDARY_CTAS = [// regularity
{
  icon: '🌱',
  name: 'I’ll Be Back',
  description: "Having been playing for " + REGULARITY_TIERS[1] + " days.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.active_day_count, REGULARITY_TIERS[1]];
  }
}, {
  icon: '🌿',
  name: 'I Am Back',
  description: "Having been playing for " + REGULARITY_TIERS[2] + " days.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.active_day_count, REGULARITY_TIERS[2]];
  }
}, {
  icon: '🌲',
  name: 'Regular',
  description: "Having been playing for " + REGULARITY_TIERS[3] + " days.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.active_day_count, REGULARITY_TIERS[3]];
  }
}, {
  icon: '🌳',
  name: 'Faithful',
  description: "Having been playing for " + REGULARITY_TIERS[4] + " days.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.active_day_count, REGULARITY_TIERS[4]];
  }
}, {
  icon: '💉',
  name: 'Hooked',
  description: "Having been playing for " + REGULARITY_TIERS[5] + " days.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[5] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[4] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.active_day_count, REGULARITY_TIERS[5]];
  }
}, {
  icon: '🎂',
  name: 'Addicted',
  description: "Having been playing for " + REGULARITY_TIERS[6] + " days.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[6] ? state__progress_1.AchievementStatus.unlocked : u_state.progress.statistics.active_day_count >= REGULARITY_TIERS[5] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.progress.statistics.active_day_count, REGULARITY_TIERS[6]];
  }
}];
var RAW_ENTRIES_ENGAGEMENT = [{
  icon: '🎫',
  name: 'What’s in a name?',
  description: 'Having set one’s name.',
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.name !== state__character_1.DEFAULT_AVATAR_NAME ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}, {
  icon: '🎓',
  name: 'Graduated',
  description: 'Having selected a class.',
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.klass !== state__character_1.CharacterClass.novice ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}, {
  icon: '🆔',
  name: 'Registered',
  description: 'Having signed up.' // lore: 'TODO',
  // TODO make that unlock new adventures

}];
var POWER_TIERS = [0, 5000, 20000, 60000, 120000, 180000];
var RAW_ENTRIES_PROGRESSION_EQUIPMENT = [{
  icon: '🥄',
  name: 'There Is No Spoon',
  description: 'Having replaced your starting "spoon of the noob" weapon.',
  lore: 'A weapon isn’t good or bad, depends on the person who uses it.',
  get_status: function (u_state) {
    return !u_state.inventory.slotted[definitions_1.InventorySlot.weapon] || _equipped_weapon_matches(u_state, create_1.STARTING_WEAPON_SPEC) ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.unlocked;
  }
}, {
  icon: '🧦',
  name: 'They Weren’t Matched Anyway',
  description: 'Having replaced your starting "socks of the noob" armor.',
  lore: 'I’ll tell you one thing you can’t do: you can’t put your shoes on, then your socks on.',
  get_status: function (u_state) {
    return !u_state.inventory.slotted[definitions_1.InventorySlot.armor] || _equipped_armor_matches(u_state, create_1.STARTING_ARMOR_SPEC) ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.unlocked;
  }
}, {
  icon: '🎒',
  name: 'I Was Born Ready',
  description: 'Having replaced all your starting "spoon+socks" equipment.',
  // lore: 'TODO',
  get_status: function (u_state) {
    return _equipped_armor_matches(u_state, create_1.STARTING_ARMOR_SPEC) || _equipped_weapon_matches(u_state, create_1.STARTING_WEAPON_SPEC) ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.unlocked;
  },
  get_completion_rate: function (u_state) {
    return [(_equipped_armor_matches(u_state, create_1.STARTING_ARMOR_SPEC) ? 0 : 1) + (_equipped_weapon_matches(u_state, create_1.STARTING_WEAPON_SPEC) ? 0 : 1), 2];
  }
}, // - quality
{
  icon: '🛍',
  name: 'U Got The Look',
  description: 'All equipped items of quality uncommon or higher. 💚 ',
  lore: 'If there are cracks in your armor, your opponent is going to find them...',
  get_status: function (u_state) {
    return _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.uncommon) ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}, {
  icon: '💅',
  name: 'Rare Sight',
  description: 'All equipped items of quality rare or higher. 💙 ',
  // lore: 'TODO',
  get_status: function (u_state) {
    return _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.rare) ? state__progress_1.AchievementStatus.unlocked : _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.uncommon) ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  }
}, {
  icon: '🎩',
  name: 'Epic Smile',
  description: 'All equipped items of quality epic or higher. 💜 ',
  // lore: 'TODO',
  get_status: function (u_state) {
    return _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.epic) ? state__progress_1.AchievementStatus.unlocked : _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.rare) ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  }
}, {
  icon: '👑',
  name: 'I Am A Legend',
  description: 'All equipped items of quality legendary or higher. 🧡 ',
  // lore: 'TODO',
  get_status: function (u_state) {
    return _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.legendary) ? state__progress_1.AchievementStatus.unlocked : _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.epic) ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  }
}, {
  icon: '🌞',
  name: 'Twinkle Twinkle Little Star',
  description: 'All equipped items of quality artifact or higher. 💛 ',
  // lore: 'TODO',
  get_status: function (u_state) {
    return _are_all_slots_equipped_with_quality_higher_or_equal_than(u_state, definitions_1.ItemQuality.artifact) ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.hidden;
  } // since artifact can't be obtained by normal means

}, // - power
{
  icon: '🐸',
  name: 'Frog In A Well',
  description: "Having a combined equipment\u2019s power of " + POWER_TIERS[1] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return _get_combined_equipped_items_power(u_state) >= POWER_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [_get_combined_equipped_items_power(u_state), POWER_TIERS[1]];
  }
}, {
  icon: '👙',
  name: 'Looking Like something',
  description: "Having a combined equipment\u2019s power of " + POWER_TIERS[2] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return _get_combined_equipped_items_power(u_state) >= POWER_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : _get_combined_equipped_items_power(u_state) >= POWER_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_get_combined_equipped_items_power(u_state), POWER_TIERS[2]];
  }
}, {
  icon: '🎁',
  name: 'Formal Adventurer',
  description: "Having a combined equipment\u2019s power of " + POWER_TIERS[3] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return _get_combined_equipped_items_power(u_state) >= POWER_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : _get_combined_equipped_items_power(u_state) >= POWER_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_get_combined_equipped_items_power(u_state), POWER_TIERS[3]];
  }
}, {
  icon: '🔱',
  name: 'King-looking Adventurer',
  description: "Having a combined equipment\u2019s power of " + POWER_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return _get_combined_equipped_items_power(u_state) >= POWER_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : _get_combined_equipped_items_power(u_state) >= POWER_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_get_combined_equipped_items_power(u_state), POWER_TIERS[4]];
  }
}, {
  icon: '⚜',
  name: 'Emperor-Looking Adventurer',
  description: "Having a combined equipment\u2019s power of " + POWER_TIERS[5] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return _get_combined_equipped_items_power(u_state) >= POWER_TIERS[5] ? state__progress_1.AchievementStatus.unlocked : _get_combined_equipped_items_power(u_state) >= POWER_TIERS[4] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [_get_combined_equipped_items_power(u_state), POWER_TIERS[5]];
  }
}];
var ATTRIBUTES_TIERS = [1, 10, 33, 66, 100];
var RAW_ENTRIES_PROGRESSION_ATTRIBUTES = [/////// LEVEL ///////
// https://en.uesp.net/wiki/Oblivion:Leveling
{
  icon: '👶',
  name: 'Tiny Adventurer',
  description: 'Having a level of 3 or higher.',
  lore: 'You realize that all your life you have been coasting along as if you were in a dream. Suddenly, facing the trials of the last few days, you have come alive.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= 3 ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, 3];
  }
}, {
  icon: '🧒',
  name: 'Reasonable Adventurer',
  description: 'Having a level of 7 or higher.',
  lore: 'Today you wake up, full of energy and ideas, and you know, somehow, that overnight everything has changed. What a difference a day makes.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= 7 ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.level >= 3 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, 7];
  }
}, {
  icon: '👩‍🎤',
  name: 'Teenage Adventurer',
  description: 'Having a level of 12 or higher.',
  lore: 'You’ve done things the hard way. But without taking risks, taking responsibility for failure... how could you have understood?',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= 12 ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.level >= 7 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, 12];
  }
}, {
  icon: '🧑',
  name: 'Newbie Adventurer',
  description: 'Having a level of 20 or higher.',
  lore: 'Being smart doesn’t hurt. And a little luck now and then is nice. But the key is patience and hard work.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= 20 ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.level >= 12 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, 20];
  }
}, {
  icon: '🧑',
  name: 'Seasoned Adventurer',
  description: "Having a level of " + ATTRIBUTES_TIERS[2] + " or higher.",
  lore: 'You resolve to continue pushing yourself. Perhaps there’s more to you than you thought.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.level >= 20 ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '🧓',
  name: 'Grey Haired Adventurer',
  description: "Having a level of " + ATTRIBUTES_TIERS[3] + " or higher.",
  lore: 'With the life you’ve been living, the punishment your body has taken... there are limits, and maybe you’ve reached them. Is this what it’s like to grow old?',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.level >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🐢',
  name: 'Spirit Of The Tortoise',
  description: "Having a level of " + ATTRIBUTES_TIERS[4] + " or higher.",
  lore: 'So that’s how it works. You plod along, putting one foot before the other, look up, and suddenly, there you are. Right where you wanted to be all along.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.level >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, ATTRIBUTES_TIERS[4]];
  }
}, {
  icon: '🧝',
  name: 'Long Lived Adventurer',
  description: 'Having a level of 300 or higher.',
  lore: 'The results of hard work and dedication always look like luck. But you know you’ve earned every ounce of your success.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.level >= 300 ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.level >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.level, 300];
  }
}, /////// health ///////
// elephant
{
  icon: '💪',
  name: 'Light Punishment',
  description: "Having a health of " + ATTRIBUTES_TIERS[1] + " or higher.",
  lore: 'That’s just a scratch...',
  get_status: function (u_state) {
    return u_state.avatar.attributes.health >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.health, ATTRIBUTES_TIERS[1]];
  }
}, {
  icon: '😤',
  name: 'Bring It On',
  description: "Having a health of " + ATTRIBUTES_TIERS[2] + " or higher.",
  lore: 'Not even hurt!',
  get_status: function (u_state) {
    return u_state.avatar.attributes.health >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.health >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.health, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '🏋',
  name: 'I Can Handle It',
  description: "Having a health of " + ATTRIBUTES_TIERS[3] + " or higher.",
  lore: 'Is that all you’ve got?',
  get_status: function (u_state) {
    return u_state.avatar.attributes.health >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.health >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.health, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🐘',
  name: 'Spirit Of The Elephant',
  description: "Having a health of " + ATTRIBUTES_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.health >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.health >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.health, ATTRIBUTES_TIERS[4]];
  }
}, /////// mana ///////
{
  icon: '🍼',
  name: 'Awoken',
  description: "Having a mana of " + ATTRIBUTES_TIERS[1] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.mana >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.mana, ATTRIBUTES_TIERS[1]];
  }
}, {
  icon: '🥛',
  name: 'The Power Of The Mind',
  description: "Having a mana of " + ATTRIBUTES_TIERS[2] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.mana >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.mana >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.mana, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '☕',
  name: 'Vast Consciousness',
  description: "Having a mana of " + ATTRIBUTES_TIERS[3] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.mana >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.mana >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.mana, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🧙',
  name: 'Spirit Of The Human',
  description: "Having a mana of " + ATTRIBUTES_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.mana >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.mana >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.mana, ATTRIBUTES_TIERS[4]];
  }
}, /////// STRENGTH ///////
{
  icon: '💪',
  name: 'Well Built',
  description: "Having a strength of " + ATTRIBUTES_TIERS[1] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.strength >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.strength, ATTRIBUTES_TIERS[1]];
  }
}, {
  icon: '😤',
  name: 'Local Strongperson',
  description: "Having a strength of " + ATTRIBUTES_TIERS[2] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.strength >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.strength >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.strength, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '🏋',
  name: 'Titan',
  description: "Having a strength of " + ATTRIBUTES_TIERS[3] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.strength >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.strength >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.strength, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🦍',
  name: 'Spirit Of The Gorilla',
  description: "Having a strength of " + ATTRIBUTES_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.strength >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.strength >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.strength, ATTRIBUTES_TIERS[4]];
  }
}, /////// AGILITY ///////
{
  icon: '🐥',
  name: 'Small One',
  description: "Having a agility of " + ATTRIBUTES_TIERS[1] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.agility >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.agility, ATTRIBUTES_TIERS[1]];
  }
}, {
  icon: '🤹',
  name: 'Swift One',
  description: "Having a agility of " + ATTRIBUTES_TIERS[2] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.agility >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.agility >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.agility, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '🤸',
  name: 'Untouchable',
  description: "Having a agility of " + ATTRIBUTES_TIERS[3] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.agility >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.agility >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.agility, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🐒',
  name: 'Spirit Of The Monkey',
  description: "Having a agility of " + ATTRIBUTES_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.agility >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.agility >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.agility, ATTRIBUTES_TIERS[4]];
  }
}, /////// CHARISMA ///////
// https://www.google.com/search?q=silver+tongue
{
  icon: '💖',
  name: 'Sharp tongue',
  description: "Having a charisma of " + ATTRIBUTES_TIERS[1] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.charisma >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.charisma, ATTRIBUTES_TIERS[1]];
  }
}, {
  icon: '💓',
  name: 'Silver tongue',
  description: "Having a charisma of " + ATTRIBUTES_TIERS[2] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.charisma >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.charisma >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.charisma, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '💋',
  name: 'Golden tongue',
  description: "Having a charisma of " + ATTRIBUTES_TIERS[3] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.charisma >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.charisma >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.charisma, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🐈',
  name: 'Spirit Of The Cat',
  description: "Having a charisma of " + ATTRIBUTES_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.charisma >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.charisma >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.charisma, ATTRIBUTES_TIERS[4]];
  }
}, /////// WISDOM ///////
//
{
  icon: '🤓',
  name: 'Bright',
  description: "Having a wisdom of " + ATTRIBUTES_TIERS[1] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.wisdom >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.wisdom, ATTRIBUTES_TIERS[1]];
  }
}, {
  icon: '🧐',
  name: 'Smart',
  description: "Having a wisdom of " + ATTRIBUTES_TIERS[2] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.wisdom >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.wisdom >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.wisdom, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '🧓',
  name: 'Sage',
  description: "Having a wisdom of " + ATTRIBUTES_TIERS[3] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.wisdom >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.wisdom >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.wisdom, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🦉',
  name: 'Spirit Of The Owl',
  description: "Having a wisdom of " + ATTRIBUTES_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.wisdom >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.wisdom >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.wisdom, ATTRIBUTES_TIERS[4]];
  }
}, /////// LUCK ///////
// rabbit
{
  icon: '☘',
  name: 'Sprinkled',
  description: "Having a luck of " + ATTRIBUTES_TIERS[1] + " or higher.",
  lore: 'Luck is great, but most of life is hard work.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.luck >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.luck, ATTRIBUTES_TIERS[1]];
  }
}, {
  icon: '🍀',
  name: 'Blessed',
  description: "Having a luck of " + ATTRIBUTES_TIERS[2] + " or higher.",
  lore: 'The amount of good luck coming your way depends on your willingness to act.',
  get_status: function (u_state) {
    return u_state.avatar.attributes.luck >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.luck >= ATTRIBUTES_TIERS[1] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.luck, ATTRIBUTES_TIERS[2]];
  }
}, {
  icon: '👼',
  name: 'Divinely Touched',
  description: "Having a luck of " + ATTRIBUTES_TIERS[3] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.luck >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.luck >= ATTRIBUTES_TIERS[2] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.luck, ATTRIBUTES_TIERS[3]];
  }
}, {
  icon: '🐇',
  name: 'Spirit Of The Rabbit',
  description: "Having a luck of " + ATTRIBUTES_TIERS[4] + " or higher.",
  // lore: 'TODO',
  get_status: function (u_state) {
    return u_state.avatar.attributes.luck >= ATTRIBUTES_TIERS[4] ? state__progress_1.AchievementStatus.unlocked : u_state.avatar.attributes.luck >= ATTRIBUTES_TIERS[3] ? state__progress_1.AchievementStatus.revealed : state__progress_1.AchievementStatus.hidden;
  },
  get_completion_rate: function (u_state) {
    return [u_state.avatar.attributes.luck, ATTRIBUTES_TIERS[4]];
  }
}];
var RAW_ENTRIES_MISC = [{
  icon: '⚔',
  name: 'I Like Swords!',
  description: 'Having equipped a sword once.',
  lore: 'Still sharp...',
  get_status: function (u_state) {
    return _equipped_weapon_matches(u_state, {
      base_hid: 'sword'
    }) || _equipped_weapon_matches(u_state, {
      base_hid: 'longsword'
    }) ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}];
var RAW_ENTRIES_META = [{
  icon: '😇',
  name: 'Supporter of diversity',
  description: 'Having supported web diversity by playing on Firefox once.',
  lore: 'The more the merrier!',
  get_status: function (u_state) {
    return u_state.meta.is_web_diversity_supporter ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}, {
  icon: '📃',
  name: 'Registered adventurer',
  description: 'Being logged in.',
  lore: 'You are now a registered adventurer.',
  get_status: function (u_state) {
    return u_state.meta.is_logged_in ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.revealed;
  }
}];
var RAW_ENTRIES_SECRETS = [{
  icon: '👑',
  name: 'Usurper',
  description: 'Having set the name "Offirmo".',
  lore: 'I see you…',
  get_status: function (u_state) {
    return u_state.avatar.name === 'Offirmo' ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.secret;
  }
}, {
  icon: '💣',
  name: 'Blown Away',
  description: 'Having encountered a crash...' //lore: 'TODO',
  // TODO

}, {
  icon: '🍀',
  name: 'Just plain lucky',
  description: 'You have 1/1000 chance to gain this on each activity.',
  lore: 'The amount of good luck coming your way depends on your willingness to act.',
  get_status: function () {
    return Math.floor(Math.random() * 1000) === 123 ? state__progress_1.AchievementStatus.unlocked : state__progress_1.AchievementStatus.secret;
  }
}, {
  icon: '🏴‍☠️',
  name: 'Hacker',
  description: 'You manipulated the threads of reality to obtain this achievement. (can’t be obtained by normal means)',
  lore: 'Just a different way of looking at problems that no one’s thought of ;)',
  get_status: function (u_state) {
    return state__progress_1.AchievementStatus.secret;
  }
}];

var RAW_ENTRIES = __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([// Intro
{
  icon: '✨',
  name: 'Summoned',
  description: 'You began your adventures in another world.',
  lore: 'Thanks for visiting!',
  get_status: function () {
    return state__progress_1.AchievementStatus.unlocked;
  }
}], RAW_ENTRIES_PRIMARY_CTA), RAW_ENTRIES_ENGAGEMENT), RAW_ENTRIES_ADVENTURING), RAW_ENTRIES_ADVENTURES_SETS), RAW_ENTRIES_SECONDARY_CTAS), RAW_ENTRIES_FIGHT_ENCOUNTERS), RAW_ENTRIES_COUNTER_CTA), RAW_ENTRIES_PROGRESSION_EQUIPMENT), RAW_ENTRIES_PROGRESSION_ATTRIBUTES), RAW_ENTRIES_MISC), RAW_ENTRIES_GAME_PHASES), RAW_ENTRIES_META), RAW_ENTRIES_SECRETS), RAW_ENTRIES_TEST);

var UID_CHECK = new Set();
var ENTRIES = RAW_ENTRIES.filter(function (raw) {
  return raw.name && raw.description && raw.get_status;
}).map(function (_a, index) {
  var name = _a.name,
      icon = _a.icon,
      description = _a.description,
      lore = _a.lore,
      get_status = _a.get_status,
      get_completion_rate = _a.get_completion_rate;
  if (UID_CHECK.has(name)) throw new Error("Achievements: duplicate definition for \"" + name + "\"!");
  UID_CHECK.add(name);
  var session_uuid = [("" + index).padStart(4, '0'), name].join(' ');
  return {
    session_uuid: session_uuid,
    icon: icon || '🏆',
    name: name,
    description: description,
    lore: lore,
    get_status: get_status,
    get_completion_rate: get_completion_rate
  };
});
exports.default = ENTRIES;
},{"@tbrpg/definitions":"PTCd","@tbrpg/logic--shop":"jzJm","@tbrpg/state--progress":"Tgn1","@tbrpg/state--character":"oDfL","@tbrpg/state--inventory":"pmyL","@oh-my-rpg/logic-weapons":"qUBn","@oh-my-rpg/logic-armors":"eV82","@oh-my-rpg/logic-adventures":"WjhT","../reducers/create":"slDo"}],"rq93":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._refresh_achievements = void 0;

var state__progress_1 = require("@tbrpg/state--progress");

var state_engagement_1 = require("@oh-my-rpg/state-engagement");

var achievements_1 = __importDefault(require("../../data/achievements"));

var engagement_1 = require("../../data/engagement"); /////////////////////


function _refresh_achievements(state) {
  var u_state = state.u_state;
  var progress = u_state.progress,
      engagement = u_state.engagement;
  var has_change = false;
  achievements_1.default.forEach(function (definition) {
    var icon = definition.icon,
        name = definition.name;
    var last_known_status = state__progress_1.get_last_known_achievement_status(progress, name);
    if (last_known_status === state__progress_1.AchievementStatus.unlocked) return; // can't change, already best

    var current_status = definition.get_status(u_state);
    if (last_known_status === current_status) return;
    has_change = true;
    progress = state__progress_1.on_achieved(progress, name, current_status);

    if (current_status === state__progress_1.AchievementStatus.unlocked) {
      // tell the user
      engagement = state_engagement_1.enqueue(engagement, {
        type: state_engagement_1.EngagementType.aside,
        key: engagement_1.EngagementKey['achievement-unlocked']
      }, {
        semantic_level: 'success',
        auto_dismiss_delay_ms: 7000,
        icon: icon,
        name: name
      });
    }
  });
  if (!has_change) return state;
  return __assign(__assign({}, state), {
    u_state: __assign(__assign({}, u_state), {
      progress: progress,
      engagement: engagement
    })
  });
}

exports._refresh_achievements = _refresh_achievements;
},{"@tbrpg/state--progress":"Tgn1","@oh-my-rpg/state-engagement":"WEJP","../../data/achievements":"gTcy","../../data/engagement":"FZDX"}],"xcMS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_logger = void 0;

var universal_debug_api_placeholder_1 = require("@offirmo/universal-debug-api-placeholder");

function get_logger() {
  return universal_debug_api_placeholder_1.getLogger({
    name: '@tbrpg'
  });
}

exports.get_logger = get_logger;
},{"@offirmo/universal-debug-api-placeholder":"sw2i"}],"ulzU":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

var _a, _b;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._play_adventure = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var uuid_1 = require("@offirmo-private/uuid");

var random_1 = require("@offirmo/random");

var state__character_1 = require("@tbrpg/state--character");

var InventoryState = __importStar(require("@tbrpg/state--inventory"));

var PRNGState = __importStar(require("@oh-my-rpg/state-prng"));

var state_prng_1 = require("@oh-my-rpg/state-prng");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var logic_armors_1 = require("@oh-my-rpg/logic-armors");

var logic_monsters_1 = require("@oh-my-rpg/logic-monsters");

var logic_adventures_1 = require("@oh-my-rpg/logic-adventures");

var consts_1 = require("../../consts");

var internal_1 = require("../internal");

var ALL_ATTRIBUTES_X_LVL = ['health', 'mana', 'strength', 'agility', 'charisma', 'wisdom', 'luck'];
var WARRIOR_LIKE_PRIMARY_ATTRIBUTES = ['strength'];
var ROGUE_LIKE_PRIMARY_ATTRIBUTES = ['agility'];
var MAGE_LIKE_PRIMARY_ATTRIBUTES = ['mana'];
var HYBRID_PALADIN_LIKE_PRIMARY_ATTRIBUTES = ['strength', 'mana'];
var PRIMARY_STATS_BY_CLASS = (_a = {}, _a[state__character_1.CharacterClass.novice] = ALL_ATTRIBUTES_X_LVL, _a[state__character_1.CharacterClass.barbarian] = WARRIOR_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.druid] = ['wisdom', 'mana'], _a[state__character_1.CharacterClass.warrior] = WARRIOR_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.paladin] = HYBRID_PALADIN_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.rogue] = ROGUE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.sorcerer] = MAGE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.warlock] = MAGE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.wizard] = MAGE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass['darkness hunter']] = HYBRID_PALADIN_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.hunter] = ['agility'], _a[state__character_1.CharacterClass.priest] = ['charisma', 'mana'], _a[state__character_1.CharacterClass['death knight']] = HYBRID_PALADIN_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.mage] = MAGE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.engineer] = ['wisdom'], _a[state__character_1.CharacterClass.thief] = ROGUE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.assassin] = ROGUE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.illusionist] = ['charisma', 'agility'], _a[state__character_1.CharacterClass.knight] = WARRIOR_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.pirate] = ['luck'], _a[state__character_1.CharacterClass.ninja] = ROGUE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.corsair] = ROGUE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.necromancer] = MAGE_LIKE_PRIMARY_ATTRIBUTES, _a[state__character_1.CharacterClass.sculptor] = ['agility'], _a[state__character_1.CharacterClass.summoner] = MAGE_LIKE_PRIMARY_ATTRIBUTES, _a);
if (Object.keys(PRIMARY_STATS_BY_CLASS).length !== typescript_string_enums_1.Enum.keys(state__character_1.CharacterClass).length) throw new Error(consts_1.LIB + ": PRIMARY_STATS_BY_CLASS is out of date!");
var WARRIOR_LIKE_SECONDARY_ATTRIBUTES = ['health'];
var ROGUE_LIKE_SECONDARY_ATTRIBUTES = ['luck'];
var MAGE_LIKE_SECONDARY_ATTRIBUTES = ['wisdom'];
var HYBRID_PALADIN_LIKE_SECONDARY_ATTRIBUTES = ['health'];
var SECONDARY_STATS_BY_CLASS = (_b = {}, _b[state__character_1.CharacterClass.novice] = ALL_ATTRIBUTES_X_LVL, _b[state__character_1.CharacterClass.barbarian] = WARRIOR_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.druid] = ['strength', 'agility'], _b[state__character_1.CharacterClass.warrior] = WARRIOR_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.paladin] = HYBRID_PALADIN_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.rogue] = ROGUE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.sorcerer] = MAGE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.warlock] = MAGE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.wizard] = MAGE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass['darkness hunter']] = HYBRID_PALADIN_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.hunter] = ['strength'], _b[state__character_1.CharacterClass.priest] = ['wisdom'], _b[state__character_1.CharacterClass['death knight']] = HYBRID_PALADIN_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.mage] = MAGE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.engineer] = ['agility', 'luck'], _b[state__character_1.CharacterClass.thief] = ROGUE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.assassin] = ROGUE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.illusionist] = ['luck'], _b[state__character_1.CharacterClass.knight] = WARRIOR_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.pirate] = ['charisma', 'agility'], _b[state__character_1.CharacterClass.ninja] = ROGUE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.corsair] = ['charisma', 'luck'], _b[state__character_1.CharacterClass.necromancer] = MAGE_LIKE_SECONDARY_ATTRIBUTES, _b[state__character_1.CharacterClass.sculptor] = ['wisdom', 'charisma'], _b[state__character_1.CharacterClass.summoner] = MAGE_LIKE_SECONDARY_ATTRIBUTES, _b);
if (Object.keys(SECONDARY_STATS_BY_CLASS).length !== typescript_string_enums_1.Enum.keys(state__character_1.CharacterClass).length) throw new Error(consts_1.LIB + ": SECONDARY_STATS_BY_CLASS is out of date!");

function instantiate_adventure_archetype(rng, aa, character, inventory, wallet) {
  var hid = aa.hid,
      good = aa.good,
      type = aa.type,
      outcome = aa.outcome;

  var should_gain = __assign({}, outcome); // instantiate the special gains


  if (should_gain.random_attribute) {
    var stat = random_1.Random.pick(rng, ALL_ATTRIBUTES_X_LVL);
    should_gain[stat] = true;
  }

  if (should_gain.lowest_attribute) {
    var lowest_stat = ALL_ATTRIBUTES_X_LVL.reduce(function (acc, val) {
      return character.attributes[acc] < character.attributes[val] ? acc : val;
    }, 'health');
    should_gain[lowest_stat] = true;
  }

  if (should_gain.class_primary_attribute) {
    var stat = random_1.Random.pick(rng, PRIMARY_STATS_BY_CLASS[character.klass]);
    should_gain[stat] = true;
  }

  if (should_gain.class_secondary_attribute) {
    var stat = random_1.Random.pick(rng, SECONDARY_STATS_BY_CLASS[character.klass]);
    should_gain[stat] = true;
  }

  if (should_gain.armor_or_weapon) {
    // TODO take into account the existing inventory?
    if (random_1.Random.bool()(rng)) should_gain.armor = true;else should_gain.weapon = true;
  }

  if (should_gain.improvementⵧarmor_or_weapon) {
    if (logic_weapons_1.is_at_max_enhancement(InventoryState.get_slotted_weapon(inventory))) // most likely to happen
      should_gain.improvementⵧarmor = true;else if (random_1.Random.bool()(rng)) should_gain.improvementⵧarmor = true;else should_gain.improvementⵧweapon = true;
  } // intermediate data


  var new_player_level = character.attributes.level + (should_gain.level ? 1 : 0); // TODO check multiple charac gain (should not happen)

  return {
    uuid: uuid_1.generate_uuid(),
    hid: hid,
    good: good,
    encounter: type === logic_adventures_1.AdventureType.fight ? logic_monsters_1.create(rng, {
      level: character.attributes.level
    }) : null,
    gains: {
      level: should_gain.level ? 1 : 0,
      health: should_gain.health ? 1 : 0,
      mana: should_gain.mana ? 1 : 0,
      strength: should_gain.strength ? 1 : 0,
      agility: should_gain.agility ? 1 : 0,
      charisma: should_gain.charisma ? 1 : 0,
      wisdom: should_gain.wisdom ? 1 : 0,
      luck: should_gain.luck ? 1 : 0,
      coin: logic_adventures_1.generate_random_coin_gain_or_loss(rng, {
        range: should_gain.coin,
        player_level: new_player_level,
        current_wallet_amount: wallet.coin_count
      }),
      token: should_gain.token ? 1 : 0,
      armor: should_gain.armor ? logic_armors_1.create(rng) : null,
      weapon: should_gain.weapon ? logic_weapons_1.create(rng) : null,
      improvementⵧarmor: should_gain.improvementⵧarmor,
      improvementⵧweapon: should_gain.improvementⵧweapon
    }
  };
} /////////////////////


function _play_adventure(state, aa) {
  var rng = state_prng_1.get_prng(state.u_state.prng);
  var adventure = instantiate_adventure_archetype(rng, aa, state.u_state.avatar, state.u_state.inventory, state.u_state.wallet); //console.log(adventure.hid, state.u_state.wallet)
  //console.log(adventure)

  var gained = adventure.gains;
  var gain_count = 0;
  var item_gain_count = 0;

  if (gained.level) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.level);
  }

  if (gained.health) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.health, gained.health);
  }

  if (gained.mana) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.mana, gained.mana);
  }

  if (gained.strength) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.strength, gained.strength);
  }

  if (gained.agility) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.agility, gained.agility);
  }

  if (gained.charisma) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.charisma, gained.charisma);
  }

  if (gained.wisdom) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.wisdom, gained.wisdom);
  }

  if (gained.luck) {
    gain_count++;
    state = internal_1._receive_stat_increase(state, state__character_1.CharacterAttribute.luck, gained.luck);
  }

  if (gained.coin) {
    gain_count++;
    if (gained.coin >= 0) state = internal_1._receive_coins(state, gained.coin);else state = internal_1._lose_coins(state, -gained.coin);
  }

  if (gained.token) {
    gain_count++;
    state = internal_1._receive_tokens(state, gained.token);
  }

  if (gained.weapon) {
    gain_count++;
    item_gain_count++; //console.log('gained weapon')

    state = internal_1._receive_item(state, gained.weapon);
  }

  if (gained.armor) {
    gain_count++;
    item_gain_count++; //console.log('gained armor')

    state = internal_1._receive_item(state, gained.armor);
  }

  if (gained.improvementⵧweapon) {
    gain_count++;
    state = internal_1._enhance_a_weapon(state);
  }

  if (gained.improvementⵧarmor) {
    gain_count++;
    state = internal_1._enhance_an_armor(state);
  }

  if (aa.good && !gain_count) {
    //dump_prettified_any('Error NO gain!', {aa, adventure})
    throw new Error(consts_1.LIB + ": play_adventure() for \"good click\" hid \"" + aa.hid + "\" unexpectedly resulted in NO gains!");
  }

  if (item_gain_count > 1) {
    //dump_prettified_any('Error 2x item gain!', {aa, adventure})
    throw new Error(consts_1.LIB + ": play_adventure() for hid \"" + aa.hid + "\" unexpectedly resulted in " + item_gain_count + " item gains!");
  }

  state = __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      last_adventure: adventure,
      prng: PRNGState.update_use_count(state.u_state.prng, rng, {
        // we can't know because it depends on the adventure,
        // ex. generate a random weapon
        I_swear_I_really_cant_know_whether_the_rng_was_used: true
      })
    })
  });
  return state;
}

exports._play_adventure = _play_adventure; /////////////////////
},{"typescript-string-enums":"qyCc","@offirmo-private/uuid":"Im4b","@offirmo/random":"OV1n","@tbrpg/state--character":"oDfL","@tbrpg/state--inventory":"pmyL","@oh-my-rpg/state-prng":"rqPL","@oh-my-rpg/logic-weapons":"qUBn","@oh-my-rpg/logic-armors":"eV82","@oh-my-rpg/logic-monsters":"iTrv","@oh-my-rpg/logic-adventures":"WjhT","../../consts":"xaPH","../internal":"g0Cm"}],"v9HW":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._play_good = void 0; /////////////////////

var PRNGState = __importStar(require("@oh-my-rpg/state-prng"));

var WalletState = __importStar(require("@oh-my-rpg/state-wallet"));

var state_prng_1 = require("@oh-my-rpg/state-prng");

var logic_adventures_1 = require("@oh-my-rpg/logic-adventures"); /////////////////////


var consts_1 = require("../../consts");

var play_adventure_1 = require("./play_adventure"); /////////////////////


var ADVENTURE_GOOD_NON_REPETITION_ID = 'adventure_archetype--good';
var ADVENTURE_GOOD_NON_REPETITION_COUNT = 30;

function pick_random_non_repetitive_good_archetype(u_state, rng) {
  var archetype;
  state_prng_1.regenerate_until_not_recently_encountered({
    id: ADVENTURE_GOOD_NON_REPETITION_ID,
    generate: function () {
      archetype = logic_adventures_1.pick_random_good_archetype(rng);
      return archetype.hid;
    },
    state: u_state.prng,
    max_tries: ADVENTURE_GOOD_NON_REPETITION_COUNT * 10
  });
  return archetype;
}

function pick_ideal_non_repetitive_good_archetype(u_state, rng) {
  //console.log(WalletState.get_currency_amount(u_state.wallet, WalletState.Currency.coin))
  if (WalletState.get_currency_amount(u_state.wallet, WalletState.Currency.coin) === 0) {
    // needed to prevent the wallet from staying at 0
    // which mess up adventures needing a coin loss
    return logic_adventures_1.get_archetype('found_coin');
  }

  return pick_random_non_repetitive_good_archetype(u_state, rng);
}

function _play_good(state, explicit_adventure_archetype_hid) {
  var prng_state = state.u_state.prng;
  var rng = state_prng_1.get_prng(prng_state);
  var aa = explicit_adventure_archetype_hid ? logic_adventures_1.get_archetype(explicit_adventure_archetype_hid) : pick_ideal_non_repetitive_good_archetype(state.u_state, rng);
  if (!aa) throw new Error(consts_1.LIB + ": play_good(): hinted adventure archetype \"" + explicit_adventure_archetype_hid + "\" could not be found!");
  if (!aa.good) // this feature is for test only, so means wrong test
    throw new Error(consts_1.LIB + ": play_good(): hinted adventure archetype \"" + explicit_adventure_archetype_hid + "\" is a \"bad click\" one!");

  if (!explicit_adventure_archetype_hid) {
    prng_state = PRNGState.update_use_count(state.u_state.prng, rng);
  }

  state = __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      prng: state_prng_1.register_recently_used(prng_state, ADVENTURE_GOOD_NON_REPETITION_ID, aa.hid, ADVENTURE_GOOD_NON_REPETITION_COUNT)
    })
  });
  state = play_adventure_1._play_adventure(state, aa);
  return state;
}

exports._play_good = _play_good; /////////////////////
},{"@oh-my-rpg/state-prng":"rqPL","@oh-my-rpg/state-wallet":"V5wo","@oh-my-rpg/logic-adventures":"WjhT","../../consts":"xaPH","./play_adventure":"ulzU"}],"ypJs":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._play_bad = void 0; /////////////////////

var PRNGState = __importStar(require("@oh-my-rpg/state-prng"));

var state_prng_1 = require("@oh-my-rpg/state-prng");

var logic_adventures_1 = require("@oh-my-rpg/logic-adventures"); /////////////////////


var consts_1 = require("../../consts");

var play_adventure_1 = require("./play_adventure"); /////////////////////


var ADVENTURE_BAD_NON_REPETITION_ID = 'adventure_archetype--bad';
var ADVENTURE_BAD_NON_REPETITION_COUNT = 2;

function pick_random_non_repetitive_bad_archetype(u_state, rng) {
  var archetype;
  state_prng_1.regenerate_until_not_recently_encountered({
    id: ADVENTURE_BAD_NON_REPETITION_ID,
    generate: function () {
      archetype = logic_adventures_1.pick_random_bad_archetype(rng);
      return archetype.hid;
    },
    state: u_state.prng,
    max_tries: ADVENTURE_BAD_NON_REPETITION_COUNT * 10
  });
  return archetype;
}

function _play_bad(state, explicit_adventure_archetype_hid) {
  var prng_state = state.u_state.prng;
  var rng = state_prng_1.get_prng(prng_state);
  var aa = explicit_adventure_archetype_hid ? logic_adventures_1.get_archetype(explicit_adventure_archetype_hid) : pick_random_non_repetitive_bad_archetype(state.u_state, rng);
  if (!aa) throw new Error(consts_1.LIB + ": play_bad(): hinted adventure archetype \"" + explicit_adventure_archetype_hid + "\" could not be found!");
  if (aa.good) // this feature is for test only, so means wrong test
    throw new Error(consts_1.LIB + ": play_bad(): hinted adventure archetype \"" + explicit_adventure_archetype_hid + "\" is a \"good click\" one!");

  if (!explicit_adventure_archetype_hid) {
    prng_state = PRNGState.update_use_count(state.u_state.prng, rng);
  }

  state = __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      prng: state_prng_1.register_recently_used(prng_state, ADVENTURE_BAD_NON_REPETITION_ID, aa.hid, ADVENTURE_BAD_NON_REPETITION_COUNT)
    })
  });
  state = play_adventure_1._play_adventure(state, aa);
  return state;
}

exports._play_bad = _play_bad; /////////////////////
},{"@oh-my-rpg/state-prng":"rqPL","@oh-my-rpg/logic-adventures":"WjhT","../../consts":"xaPH","./play_adventure":"ulzU"}],"xS8P":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.play = void 0;

var timestamps_1 = require("@offirmo-private/timestamps"); /////////////////////


var EnergyState = __importStar(require("@oh-my-rpg/state-energy"));

var ProgressState = __importStar(require("@tbrpg/state--progress"));

var selectors_1 = require("../../selectors");

var internal_1 = require("../internal");

var play_good_1 = require("./play_good");

var play_bad_1 = require("./play_bad");

var achievements_1 = require("../achievements"); /////////////////////
// note: allows passing an explicit adventure archetype for testing


function play(previous_state, now_ms, explicit_adventure_archetype_hid) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  var updated_state = internal_1._update_to_now(previous_state, now_ms);

  var state = updated_state;
  var is_good_play = selectors_1.will_next_play_be_good_at(state, now_ms); // consume energy

  if (!is_good_play) {
    state = __assign(__assign({}, state), {
      t_state: __assign(__assign({}, state.t_state), {
        // punishment
        energy: EnergyState.lose_all_energy([state.u_state.energy, state.t_state.energy]),
        revision: state.t_state.revision + 1
      })
    });
  } else {
    var _a = EnergyState.use_energy([state.u_state.energy, state.t_state.energy]),
        u = _a[0],
        t = _a[1];

    state = __assign(__assign({}, state), {
      u_state: __assign(__assign({}, state.u_state), {
        energy: u
      }),
      t_state: __assign(__assign({}, state.t_state), {
        energy: t,
        revision: state.t_state.revision + 1
      })
    }); // onboarding

    if (!explicit_adventure_archetype_hid) {
      var good_play_count = state.u_state.progress.statistics.good_play_count;
      explicit_adventure_archetype_hid = ['talk_to_all_villagers', 'rematch', 'fight_won_coins', 'high_level_zone_2', 'found_random_mushroom', 'class_grimoire', 'progress_loop', 'fight_won_any', 'found_swirling_potion', 'castle_summon', 'arrow_in_the_knee', 'inspect_sewers', 'side_quests', 'fight_won_coins'][good_play_count];
    }
  } // actual play


  state = is_good_play ? play_good_1._play_good(state, explicit_adventure_archetype_hid) : play_bad_1._play_bad(state, explicit_adventure_archetype_hid); // final updates

  var u_state = state.u_state;
  state = __assign(__assign({}, state), {
    last_user_investment_tms: now_ms,
    u_state: __assign(__assign({}, u_state), {
      revision: state.u_state.revision + 1,
      progress: ProgressState.on_played(u_state.progress, {
        good: is_good_play,
        adventure_key: u_state.last_adventure.hid,
        encountered_monster_key: u_state.last_adventure.encounter ? u_state.last_adventure.encounter.name : null,
        active_class: u_state.avatar.klass,
        coins_gained: u_state.last_adventure.gains.coin,
        tokens_gained: u_state.last_adventure.gains.token,
        items_gained: (u_state.last_adventure.gains.armor ? 1 : 0) + (u_state.last_adventure.gains.weapon ? 1 : 0)
      })
    })
  });
  return achievements_1._refresh_achievements(state);
}

exports.play = play; /////////////////////
},{"@offirmo-private/timestamps":"bMV2","@oh-my-rpg/state-energy":"t3WS","@tbrpg/state--progress":"Tgn1","../../selectors":"iasm","../internal":"g0Cm","./play_good":"v9HW","./play_bad":"ypJs","../achievements":"rq93"}],"tEXr":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._autoplay = exports._autogroom = void 0;

var random_1 = require("@offirmo/random");

var timestamps_1 = require("@offirmo-private/timestamps");

var state_utils_1 = require("@offirmo-private/state-utils"); /////////////////////


var CharacterState = __importStar(require("@tbrpg/state--character"));

var EnergyState = __importStar(require("@oh-my-rpg/state-energy"));

var state__character_1 = require("@tbrpg/state--character");

var selectors_1 = require("../selectors");

var internal_1 = require("./internal");

var base_1 = require("./base");

var play_1 = require("./play");

var achievements_1 = require("./achievements"); /////////////////////


function _autogroom(state, options) {
  if (options === void 0) {
    options = {};
  }

  var DEBUG = options.DEBUG;
  if (DEBUG) console.log("  - Autogroom\u2026 (inventory holding " + state.u_state.inventory.unslotted.length + " items)"); // User
  // User class

  if (state.u_state.avatar.klass === state__character_1.CharacterClass.novice) {
    // change class
    var available_classes = selectors_1.get_available_classes(state.u_state);
    var new_class = random_1.Random.pick(random_1.Random.engines.nativeMath, available_classes);
    if (DEBUG) console.log("    - Changing class to " + new_class + "\u2026");
    state = base_1.change_avatar_class(state, new_class);
  } // User name


  if (state.u_state.avatar.name === CharacterState.DEFAULT_AVATAR_NAME) {
    var new_name = 'A' + Math.abs(state.u_state.prng.seed);
    if (DEBUG) console.log("    - renaming to " + new_name + "\u2026");
    state = base_1.rename_avatar(state, new_name);
  } // inventory
  // equip best gear


  var better_weapon = selectors_1.find_better_unequipped_weapon(state.u_state);

  if (better_weapon) {
    state = base_1.equip_item(state, better_weapon.uuid);
  }

  var better_armor = selectors_1.find_better_unequipped_armor(state.u_state);

  if (better_armor) {
    state = base_1.equip_item(state, better_armor.uuid);
  } // in case inventory full


  state = internal_1._auto_make_room(state, options); // misc: ack the possible notifications

  state = internal_1._ack_all_engagements(state);
  return state;
}

exports._autogroom = _autogroom;
/* Autoplay, as efficiently as possible,
 * trying to restore as much achievements as possible
 */

function _autoplay(previous_state, options) {
  if (options === void 0) {
    options = {};
  }

  var state = previous_state;
  var target_good_play_count = options.target_good_play_count,
      target_bad_play_count = options.target_bad_play_count,
      DEBUG = options.DEBUG;
  if (DEBUG) console.log("- Autoplay g=" + target_good_play_count + ", b=" + target_bad_play_count + "..");
  target_good_play_count = target_good_play_count || 0;
  target_bad_play_count = target_bad_play_count || 0;
  if (target_good_play_count < 0) throw new Error('invalid target_good_play_count!');
  if (target_bad_play_count < 0) throw new Error('invalid target_bad_play_count!');

  var last_visited_timestamp_num = function () {
    var days_needed = Math.ceil((target_good_play_count - state.u_state.progress.statistics.good_play_count) / 8); // TODO magic number!!!

    var from_now = Number(timestamps_1.get_human_readable_UTC_timestamp_days()) - days_needed;
    return Math.min(from_now, Number(state.u_state.progress.statistics.last_visited_timestamp_hrtday));
  }();

  if (last_visited_timestamp_num !== Number(state.u_state.progress.statistics.last_visited_timestamp_hrtday)) {
    state = __assign(__assign({}, state), {
      u_state: __assign(__assign({}, state.u_state), {
        progress: __assign(__assign({}, state.u_state.progress), {
          statistics: __assign(__assign({}, state.u_state.progress.statistics), {
            last_visited_timestamp_hrtday: String(last_visited_timestamp_num)
          })
        })
      })
    });
  }

  state = _autogroom(state, options); // do we have energy?

  var available_energy = selectors_1.get_available_energy_float(state.t_state);
  var have_energy = available_energy >= 1.;

  if (target_bad_play_count > state.u_state.progress.statistics.bad_play_count) {
    if (have_energy) {
      state = internal_1._lose_all_energy(state);
    } // play bad


    for (var i = state.u_state.progress.statistics.bad_play_count; i < target_bad_play_count; ++i) {
      if (DEBUG) console.log('  - playing bad...');
      state = play_1.play(state);
      state = _autogroom(state, options);
    }
  }

  if (target_good_play_count > state.u_state.progress.statistics.good_play_count) {
    // play good
    for (var i = state.u_state.progress.statistics.good_play_count; i < target_good_play_count; ++i) {
      var available_energy_1 = selectors_1.get_available_energy_float(state.t_state);
      have_energy = available_energy_1 >= 1.;

      if (!have_energy) {
        // replenish and pretend one day has passed
        var t_state_e = EnergyState.restore_energy([state.u_state.energy, state.t_state.energy]);
        last_visited_timestamp_num++;
        state = __assign(__assign({}, state), {
          u_state: __assign(__assign({}, state.u_state), {
            progress: __assign(__assign({}, state.u_state.progress), {
              statistics: __assign(__assign({}, state.u_state.progress.statistics), {
                last_visited_timestamp_hrtday: String(last_visited_timestamp_num)
              })
            })
          }),
          t_state: __assign(__assign({}, state.t_state), {
            energy: t_state_e
          })
        });
      }

      if (DEBUG) console.log('  - playing good...');
      state = play_1.play(state);
      state = _autogroom(state, options);
    }
  } // make it so the remaining energy is the same as when we started, to not prevent immediate play


  state = __assign(__assign({}, state), {
    t_state: __assign(__assign({}, state.t_state), {
      energy: __assign(__assign({}, state.t_state.energy), {
        available_energy: previous_state.t_state.energy.available_energy
      })
    })
  });
  state = achievements_1._refresh_achievements(state);
  state = internal_1._ack_all_engagements(state);
  if (state_utils_1.get_revision(state) === state_utils_1.get_revision(previous_state)) state = state_utils_1.complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous_state, state, undefined, '_autoplay');
  return state;
}

exports._autoplay = _autoplay;
},{"@offirmo/random":"OV1n","@offirmo-private/timestamps":"bMV2","@offirmo-private/state-utils":"PmVE","@tbrpg/state--character":"oDfL","@oh-my-rpg/state-energy":"t3WS","../selectors":"iasm","./internal":"g0Cm","./base":"fG02","./play":"xS8P","./achievements":"rq93"}],"JYCu":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CODE_SPECS_BY_KEY = void 0;

var timestamps_1 = require("@offirmo-private/timestamps");

var state_codes_1 = require("@oh-my-rpg/state-codes");

var selectors_1 = require("../selectors"); ////////////
// TODO move data outside?
// for test only


var TEST_CODES = {
  TESTNOTIFS: {
    redeem_limit: null,
    is_redeemable: function () {
      return true;
    }
  },
  TESTACH: {
    redeem_limit: null,
    is_redeemable: function () {
      return true;
    }
  },
  REBORNX: {
    redeem_limit: null,
    is_redeemable: function () {
      return selectors_1.is_alpha();
    }
  } // see also DEV and NODEV in the-boring-rpg/client--browser/src/components/panels/meta/component.jsx

};
var ALPHA_CODES = {
  REBORN: {
    redeem_limit: null,
    is_redeemable: function () {
      return selectors_1.is_alpha();
    }
  },
  ALPHATWINK: {
    redeem_limit: 1,
    is_redeemable: function () {
      return selectors_1.is_alpha();
    }
  }
};
var POWER_CODES = {
  BORED: {
    redeem_limit: null,
    is_redeemable: function (state, progress_state) {
      var has_energy_depleted = selectors_1.get_available_energy_float(state.t_state) < 1.;
      if (!has_energy_depleted) return false;
      if (!progress_state.redeemed_codes['BORED']) return true;
      var now_minutes = timestamps_1.get_human_readable_UTC_timestamp_minutes();
      var last_redeem_date_minutes = progress_state.redeemed_codes['BORED'].last_redeem_date_minutes;
      var is_same_day = now_minutes.slice(0, 8) === last_redeem_date_minutes.slice(0, 8);
      return !is_same_day;
    }
  },
  // https://en.wikipedia.org/wiki/Colossal_Cave_Adventure
  XYZZY: {
    redeem_limit: null,
    is_redeemable: function () {
      return true;
    }
  },
  PLUGH: {
    redeem_limit: null,
    is_redeemable: function () {
      return true;
    }
  }
};

var RAW_CODES = __assign(__assign(__assign({}, TEST_CODES), ALPHA_CODES), POWER_CODES); ////////////


var ALL_CODESPECS = Object.keys(RAW_CODES).map(function (key) {
  var _a = RAW_CODES[key],
      code = _a.code,
      redeem_limit = _a.redeem_limit,
      is_redeemable = _a.is_redeemable;
  if (code) throw new Error("Code entry \"" + key + "\" redundantly specifies a code!");
  if (key !== state_codes_1.normalize_code(key)) throw new Error("Code entry \"" + key + "\" should have normalized form \"" + state_codes_1.normalize_code(key) + "\"!");
  return {
    code: key,
    redeem_limit: redeem_limit,
    is_redeemable: is_redeemable
  };
});
var CODE_SPECS_BY_KEY = ALL_CODESPECS.reduce(function (acc, code_spec) {
  acc[code_spec.code] = code_spec;
  return acc;
}, {});
exports.CODE_SPECS_BY_KEY = CODE_SPECS_BY_KEY;
},{"@offirmo-private/timestamps":"bMV2","@oh-my-rpg/state-codes":"HIvc","../selectors":"iasm"}],"FSoc":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attempt_to_redeem_code = void 0;

var timestamps_1 = require("@offirmo-private/timestamps");

var state_utils_1 = require("@offirmo-private/state-utils"); /////////////////////


var EnergyState = __importStar(require("@oh-my-rpg/state-energy"));

var EngagementState = __importStar(require("@oh-my-rpg/state-engagement"));

var PRNGState = __importStar(require("@oh-my-rpg/state-prng"));

var CodesState = __importStar(require("@oh-my-rpg/state-codes"));

var ProgressState = __importStar(require("@tbrpg/state--progress"));

var definitions_1 = require("@tbrpg/definitions");

var state_prng_1 = require("@oh-my-rpg/state-prng");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var logic_armors_1 = require("@oh-my-rpg/logic-armors");

var engagement_1 = require("../data/engagement");

var codes_1 = require("../data/codes");

var internal_1 = require("./internal");

var achievements_1 = require("./achievements");

var salvage_1 = require("../migrations/salvage");

var create_1 = require("./create"); /////////////////////


function attempt_to_redeem_code(_state, code, now_ms) {
  if (now_ms === void 0) {
    now_ms = timestamps_1.get_UTC_timestamp_ms();
  }

  var previous_state = _state; // allow null for special manipulation such as reset

  var updated_state = _state; // for now

  var state = _state; // for now

  var engagement_key = engagement_1.EngagementKey['code_redemption--failed']; // so far

  var engagement_params = {};
  code = CodesState.normalize_code(code);
  var code_spec = codes_1.CODE_SPECS_BY_KEY[code];

  if (!code_spec || !CodesState.is_code_redeemable(state.u_state.codes, code_spec, state)) {// nothing to do,
    // will trigger an engagement rejection below
  } else {
    updated_state = internal_1._update_to_now(previous_state, now_ms); // need to compare to an updated

    state = updated_state;
    state = __assign(__assign({}, state), {
      u_state: __assign(__assign({}, state.u_state), {
        codes: CodesState.attempt_to_redeem_code(state.u_state.codes, code_spec, state)
      })
    });
    engagement_key = engagement_1.EngagementKey['code_redemption--succeeded'];
    engagement_params.code = code; // spread them for convenience
    // BE CAREFUL!

    var u_state = state.u_state,
        t_state = state.t_state;

    switch (code) {
      case 'TESTNOTIFS':
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.flow,
            key: engagement_1.EngagementKey['hello_world--flow']
          }, {
            // TODO make flow have semantic levels as well!
            name: 'flow from TESTNOTIFS'
          })
        });
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.aside,
            key: engagement_1.EngagementKey['hello_world--aside']
          }, {
            name: 'aside default from TESTNOTIFS'
          })
        });
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.aside,
            key: engagement_1.EngagementKey['hello_world--aside']
          }, {
            semantic_level: 'error',
            name: 'aside error from TESTNOTIFS'
          })
        });
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.aside,
            key: engagement_1.EngagementKey['hello_world--aside']
          }, {
            semantic_level: 'warning',
            name: 'aside warning from TESTNOTIFS'
          })
        });
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.aside,
            key: engagement_1.EngagementKey['hello_world--aside']
          }, {
            semantic_level: 'info',
            name: 'aside info from TESTNOTIFS'
          })
        });
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.aside,
            key: engagement_1.EngagementKey['hello_world--aside']
          }, {
            semantic_level: 'success',
            name: 'aside success from TESTNOTIFS'
          })
        });
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.warning,
            key: engagement_1.EngagementKey['hello_world--warning']
          }, {
            name: 'warning from TESTNOTIFS'
          })
        });
        break;

      case 'TESTACH':
        // complicated, but will auto-re-gain this achievement
        u_state = __assign(__assign({}, u_state), {
          //					progress: ProgressState.on_achieved(u_state.progress, 'TEST', ProgressState.AchievementStatus.revealed)
          progress: __assign(__assign({}, u_state.progress), {
            achievements: __assign(__assign({}, u_state.progress.achievements), {
              'TEST': ProgressState.AchievementStatus.revealed
            })
          })
        });
        break;

      case 'BORED':
        {
          t_state = __assign(__assign({}, t_state), {
            energy: EnergyState.restore_energy([u_state.energy, t_state.energy], 1.)
          });
          break;
        }

      case 'XYZZY':
        // https://www.plover.net/~davidw/sol/xyzzy.html
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.flow,
            key: engagement_1.EngagementKey['just-some-text']
          }, {
            // https://rickadams.org/adventure/d_hints/hint024.html
            text: 'fee fie foe foo ;)'
          })
        });
        break;

      case 'PLUGH':
        // https://www.plover.net/~davidw/sol/plugh.html
        u_state = __assign(__assign({}, u_state), {
          engagement: EngagementState.enqueue(u_state.engagement, {
            type: EngagementState.EngagementType.flow,
            key: engagement_1.EngagementKey['just-some-text']
          }, {
            text: 'A hollow voice says "Ahhhhhhh".' // TODO more

          })
        });
        break;

      case 'REBORNX':
        previous_state = updated_state = null; // since we completely recreate the state

        state = create_1.reseed(state); // force random reseed to see new stuff

        state = salvage_1.reset_and_salvage(state);
        u_state = state.u_state;
        t_state = state.t_state;
        u_state = __assign(__assign({}, u_state), {
          progress: ProgressState.on_achieved(u_state.progress, 'Reborn!', ProgressState.AchievementStatus.unlocked)
        });
        break;

      case 'REBORN':
        previous_state = updated_state = null; // since we completely recreate the state

        state = salvage_1.reset_and_salvage(state);
        u_state = state.u_state;
        t_state = state.t_state;
        u_state = __assign(__assign({}, u_state), {
          progress: ProgressState.on_achieved(u_state.progress, 'Reborn!', ProgressState.AchievementStatus.unlocked)
        });
        break;

      case 'ALPHATWINK':
        {
          var rng = state_prng_1.get_prng(u_state.prng);
          var weapon = logic_weapons_1.create(rng, {
            quality: definitions_1.ItemQuality.artifact,
            qualifier2_hid: 'twink'
          });
          var armor = logic_armors_1.create(rng, {
            quality: definitions_1.ItemQuality.artifact,
            qualifier2_hid: 'twink'
          });
          u_state = __assign(__assign({}, u_state), {
            prng: PRNGState.update_use_count(u_state.prng, rng, 6)
          });
          state = __assign(__assign({}, state), {
            u_state: u_state,
            t_state: t_state
          });
          state = internal_1._auto_make_room(state);
          state = internal_1._receive_item(state, weapon);
          state = internal_1._auto_make_room(state);
          state = internal_1._receive_item(state, armor);
          u_state = state.u_state;
          t_state = state.t_state;
          break;
        }

      default:
        throw new Error("Internal error: code \"" + code + "\" not implemented!");
    } // re-assemble


    state = __assign(__assign({}, state), {
      u_state: u_state,
      t_state: t_state
    });
  } // enqueue the result


  state = __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      engagement: EngagementState.enqueue(state.u_state.engagement, {
        type: EngagementState.EngagementType.flow,
        key: engagement_key
      }, engagement_params)
    })
  });
  state = achievements_1._refresh_achievements(state);
  if (previous_state) state = state_utils_1.complete_or_cancel_eager_mutation_propagating_possible_child_mutation(previous_state, state, updated_state || undefined, "attempt_to_redeem_code(" + code + ")");
  return state;
}

exports.attempt_to_redeem_code = attempt_to_redeem_code; /////////////////////
},{"@offirmo-private/timestamps":"bMV2","@offirmo-private/state-utils":"PmVE","@oh-my-rpg/state-energy":"t3WS","@oh-my-rpg/state-engagement":"WEJP","@oh-my-rpg/state-prng":"rqPL","@oh-my-rpg/state-codes":"HIvc","@tbrpg/state--progress":"Tgn1","@tbrpg/definitions":"PTCd","@oh-my-rpg/logic-weapons":"qUBn","@oh-my-rpg/logic-armors":"eV82","../data/engagement":"FZDX","../data/codes":"JYCu","./internal":"g0Cm","./achievements":"rq93","../migrations/salvage":"bvlY","./create":"slDo"}],"wKNL":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./autoplay"), exports);

__exportStar(require("./base"), exports);

__exportStar(require("./codes"), exports);

__exportStar(require("./create"), exports);

__exportStar(require("./play"), exports);
},{"./autoplay":"tEXr","./base":"fG02","./codes":"FSoc","./create":"slDo","./play":"xS8P"}],"bvlY":[function(require,module,exports) {
"use strict"; /////////////////////

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reset_and_salvage = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var state_utils_1 = require("@offirmo-private/state-utils");

var state_prng_1 = require("@oh-my-rpg/state-prng");

var state__character_1 = require("@tbrpg/state--character");

var EngagementState = __importStar(require("@oh-my-rpg/state-engagement"));

var consts_1 = require("../consts");

var logger_1 = require("../services/logger");

var reducers_1 = require("../reducers");

var engagement_1 = require("../data/engagement"); /////////////////////
// https://github.com/burakcan/mb
// Exception-free nested nullable attribute accessor


var mb = function () {
  var p = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    p[_i] = arguments[_i];
  }

  return function (o) {
    return p.map(function (c) {
      return o = (o || {})[c];
    }) && o;
  };
};

function coerce_to_number_or_zero(x) {
  var res = Number(x);
  return Number.isNaN(res) ? 0 : res;
}

var get_name_v4 = mb('avatar', 'name');
var get_name_v9 = mb('u_state', 'avatar', 'name');

var get_name = function (ls) {
  return get_name_v9(ls) || get_name_v4(ls);
};

var get_class_v4 = mb('avatar', 'klass');
var get_class_v9 = mb('u_state', 'avatar', 'klass');

var get_class = function (ls) {
  return get_class_v9(ls) || get_class_v4(ls);
};

var get_seed_v4 = mb('prng', 'seed');
var get_seed_v9 = mb('u_state', 'prng', 'seed');

var get_seed = function (ls) {
  return get_seed_v9(ls) || get_seed_v4(ls);
};

var get_good_play_count_v4 = mb('good_click_count');
var get_good_play_count_v7 = mb('progress', 'statistics', 'good_play_count');
var get_good_play_count_v9 = mb('u_state', 'progress', 'statistics', 'good_play_count');

var get_good_play_count = function (ls) {
  return coerce_to_number_or_zero(get_good_play_count_v9(ls) || get_good_play_count_v7(ls) || get_good_play_count_v4(ls));
};

var get_play_count_v4 = mb('click_count');

var get_bad_play_count_v4 = function (ls) {
  return coerce_to_number_or_zero(get_play_count_v4(ls)) - coerce_to_number_or_zero(get_good_play_count_v4(ls));
};

var get_bad_play_count_v7 = mb('progress', 'statistics', 'bad_play_count');
var get_bad_play_count_v9 = mb('u_state', 'progress', 'statistics', 'bad_play_count');

var get_bad_play_count = function (ls) {
  return coerce_to_number_or_zero(get_bad_play_count_v9(ls) || get_bad_play_count_v7(ls) || get_bad_play_count_v4(ls));
}; /////////////////////


function reset_and_salvage(legacy_state) {
  logger_1.get_logger().info(consts_1.LIB + ": salvaging some data from a v" + state_utils_1.get_schema_version_loose(legacy_state) + " legacy savegame\u2026");
  state_prng_1.xxx_internal_reset_prng_cache(); // don't do this at home, kids!

  var state = reducers_1.create();
  var seed = get_seed(legacy_state);

  if (!Number.isInteger(seed)) {
    logger_1.get_logger().warn(consts_1.LIB + ": salvaging: may need to update the seed salvaging!");
    state = reducers_1.reseed(state); // force random reseed to avoid pp having the same game
  } else {
    state = reducers_1.reseed(state, seed);
  }

  var name = get_name(legacy_state);

  if (typeof name !== 'string') {
    logger_1.get_logger().warn(consts_1.LIB + ": salvaging: may need to update the avatar name salvaging!");
  } else {
    state = reducers_1.rename_avatar(state, name);
  }

  var klass = get_class(legacy_state);

  if (typeof klass !== 'string' || !typescript_string_enums_1.Enum.isType(state__character_1.CharacterClass, klass)) {
    logger_1.get_logger().warn(consts_1.LIB + ": salvaging: may need to update the avatar class salvaging!");
  } else {
    if (klass !== state.u_state.avatar.klass) state = reducers_1.change_avatar_class(state, klass);
  }

  var good_play_count = get_good_play_count(legacy_state);

  if (good_play_count === 0) {
    logger_1.get_logger().warn(consts_1.LIB + ": salvaging: may need to update the good play count salvaging!");
  }

  var bad_play_count = get_bad_play_count(legacy_state);
  state = reducers_1._autoplay(state, {
    target_good_play_count: good_play_count,
    target_bad_play_count: bad_play_count
  }); // now insert some relevant start engagements

  state = __assign(__assign({}, state), {
    u_state: __assign(__assign({}, state.u_state), {
      engagement: EngagementState.enqueue(state.u_state.engagement, {
        type: EngagementState.EngagementType.warning,
        key: engagement_1.EngagementKey['reborn']
      })
    })
  });
  logger_1.get_logger().info(consts_1.LIB + ": salvaged some data from a v" + state_utils_1.get_schema_version_loose(legacy_state) + " legacy savegame.");
  return state;
}

exports.reset_and_salvage = reset_and_salvage;
},{"typescript-string-enums":"qyCc","@offirmo-private/state-utils":"PmVE","@oh-my-rpg/state-prng":"rqPL","@tbrpg/state--character":"oDfL","@oh-my-rpg/state-engagement":"WEJP","../consts":"xaPH","../services/logger":"xcMS","../reducers":"wKNL","../data/engagement":"FZDX"}],"ruPx":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cleanup = exports.migrate_to_latest = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var timestamps_1 = require("@offirmo-private/timestamps");

var CharacterState = __importStar(require("@tbrpg/state--character"));

var WalletState = __importStar(require("@oh-my-rpg/state-wallet"));

var InventoryState = __importStar(require("@tbrpg/state--inventory"));

var PRNGState = __importStar(require("@oh-my-rpg/state-prng"));

var EnergyState = __importStar(require("@oh-my-rpg/state-energy"));

var EngagementState = __importStar(require("@oh-my-rpg/state-engagement"));

var CodesState = __importStar(require("@oh-my-rpg/state-codes"));

var ProgressState = __importStar(require("@tbrpg/state--progress"));

var MetaState = __importStar(require("@oh-my-rpg/state-meta"));

var consts_1 = require("../consts");

var achievements_1 = require("../reducers/achievements");

var salvage_1 = require("./salvage"); /////////////////////
// this state is a top one, not composable.
// hints are defined in the unit tests
/////////////////////


var SUB_STATES_MIGRATIONS = {
  avatar: CharacterState.migrate_to_latest,
  inventory: InventoryState.migrate_to_latest,
  wallet: WalletState.migrate_to_latest,
  prng: PRNGState.migrate_to_latest,
  energy: EnergyState.migrate_to_latest,
  engagement: EngagementState.migrate_to_latest,
  codes: CodesState.migrate_to_latest,
  progress: ProgressState.migrate_to_latest,
  meta: MetaState.migrate_to_latest
};

function migrate_to_latest(SEC, legacy_state, hints) {
  if (hints === void 0) {
    hints = {};
  }

  var state = legacy_state; // for starter

  try {
    state = state_utils_1.generic_migrate_to_latest({
      SEC: SEC,
      LIB: consts_1.LIB,
      SCHEMA_VERSION: consts_1.SCHEMA_VERSION,
      legacy_state: legacy_state,
      hints: hints,
      sub_states_migrate_to_latest: SUB_STATES_MIGRATIONS,
      cleanup: exports.cleanup,
      pipeline: [migrate_to_15x, migrate_to_14, migrate_to_13, migrate_to_12]
    }); // TODO migrate adventures
    // TODO migrate items
  } catch (err) {
    if (err.message.includes('more recent')) {
      // don't touch a more recent savegame!
      throw err;
    } // attempt to salvage


    SEC.getInjectedDependencies().logger.error(consts_1.LIB + ": failed migrating schema, reseting and salvaging!", {
      err: err
    });
    state = salvage_1.reset_and_salvage(legacy_state);
    SEC.fireAnalyticsEvent('schema_migration.salvaged', {
      step: 'main'
    });
  }

  return state;
}

exports.migrate_to_latest = migrate_to_latest; /////////////////////

var cleanup = function (SEC, state, hints) {
  // HACK
  // new achievements may appear thanks to new content !== migration
  // this is covered semantically in ~start_session()
  // HOWEVER if we don't do it here,
  // it makes it difficult to test the migration of old savegames with less content.
  // HENCE we refresh the achievements here, for test simplicity, even when it's not 100% semantic
  state = achievements_1._refresh_achievements(state); /////// begin minor migrations (not warranting a schema_version change)
  // to be bundled in the next major schema version

  var has_change = false;
  var u_state = state.u_state,
      t_state = state.t_state; // ...

  if (has_change) {
    state = __assign(__assign({}, state), {
      u_state: u_state,
      t_state: t_state
    });
  } /////// end minor migrations


  return state;
};

exports.cleanup = cleanup;

var migrate_to_15x = function (SEC, legacy_state, hints, previous, legacy_schema_version) {
  if (legacy_schema_version < 14) legacy_state = previous(SEC, legacy_state, hints); // minor migration: cleanup uuid field

  var _a = legacy_state.u_state,
      last_user_action_tms = _a.last_user_action_tms,
      creation_date_hrtmin = _a.creation_date,
      uuid = _a.uuid,
      rest__u_state = __rest(_a, ["last_user_action_tms", "creation_date", "uuid"]);

  var last_user_investment_tms = last_user_action_tms !== null && last_user_action_tms !== void 0 ? last_user_action_tms : timestamps_1.get_UTC_timestamp_ms(); //console.log('@@@@@', { last_user_action_tms, creation_date_hrtmin, uuid, schema_version: legacy_state.schema_version })

  var state = __assign(__assign({}, legacy_state), {
    u_state: __assign({}, rest__u_state)
  }); // for starter


  state = __assign(__assign({}, state), {
    ⵙapp_id: 'tbrpg',
    last_user_investment_tms: last_user_investment_tms,
    u_state: __assign(__assign({}, state.u_state), {
      progress: __assign(__assign({}, state.u_state.progress), {
        statistics: __assign(__assign({}, state.u_state.progress.statistics), {
          creation_date_hrtday: creation_date_hrtmin.slice(0, 8)
        })
      })
    })
  }); // minor migration: min wallet always >0

  if (WalletState.get_currency_amount(state.u_state.wallet, WalletState.Currency.coin) <= 0) {
    state = __assign(__assign({}, state), {
      u_state: __assign(__assign({}, state.u_state), {
        wallet: WalletState.add_amount(state.u_state.wallet, WalletState.Currency.coin, 1)
      })
    });
  } // eventually, update schema version


  state = __assign(__assign({}, state), {
    schema_version: 15,
    u_state: __assign(__assign({}, state.u_state), {
      schema_version: 15
    }),
    t_state: __assign(__assign({}, state.t_state), {
      schema_version: 15
    })
  });
  return state;
};

var migrate_to_14 = function (SEC, legacy_state, hints, previous, legacy_schema_version) {
  if (legacy_schema_version < 13) legacy_state = previous(SEC, legacy_state, hints);
  var state = legacy_state; // for starter

  state = __assign(__assign({}, state), {
    t_state: __assign(__assign({}, state.t_state), {
      revision: 0 // new prop

    })
  });

  if (state.u_state.last_adventure) {
    state.u_state = __assign(__assign({}, state.u_state), {
      last_adventure: __assign(__assign({}, state.u_state.last_adventure), {
        encounter: state.u_state.last_adventure.encounter || null
      })
    });
  }

  state = __assign(__assign({}, state), {
    schema_version: 14,
    u_state: __assign(__assign({}, state.u_state), {
      schema_version: 14
    }),
    t_state: __assign(__assign({}, state.t_state), {
      schema_version: 14
    })
  });
  return state;
};

var migrate_to_13 = function (SEC, legacy_state, hints, previous, legacy_schema_version) {
  var _a, _b;

  if (legacy_schema_version < 12) legacy_state = previous(SEC, legacy_state, hints);
  var state = legacy_state; // for starter

  if (state.u_state.last_adventure) {
    state = __assign(__assign({}, state), {
      u_state: __assign(__assign({}, state.u_state), {
        last_adventure: __assign(__assign({}, state.u_state.last_adventure), {
          gains: __assign(__assign({}, state.u_state.last_adventure.gains), {
            improvementⵧarmor: legacy_state.u_state.last_adventure.gains.armor_improvement,
            improvementⵧweapon: legacy_state.u_state.last_adventure.gains.weapon_improvement
          })
        })
      })
    });
    (_a = state.u_state.last_adventure.gains) === null || _a === void 0 ? true : delete _a.armor_improvement;
    (_b = state.u_state.last_adventure.gains) === null || _b === void 0 ? true : delete _b.weapon_improvement;
  }

  state = __assign(__assign({}, state), {
    schema_version: 13,
    u_state: __assign(__assign({}, state.u_state), {
      schema_version: 13
    }),
    t_state: __assign(__assign({}, state.t_state), {
      schema_version: 13
    })
  });
  return state;
};

var migrate_to_12 = function (SEC, legacy_state, hints, previous, legacy_schema_version) {
  throw new Error('Alpha release outdated schema, won’t migrate, would take too much time and schema is still unstable!');
};
},{"@offirmo-private/state-utils":"PmVE","@offirmo-private/timestamps":"bMV2","@tbrpg/state--character":"oDfL","@oh-my-rpg/state-wallet":"V5wo","@tbrpg/state--inventory":"pmyL","@oh-my-rpg/state-prng":"rqPL","@oh-my-rpg/state-energy":"t3WS","@oh-my-rpg/state-engagement":"WEJP","@oh-my-rpg/state-codes":"HIvc","@tbrpg/state--progress":"Tgn1","@oh-my-rpg/state-meta":"GY73","../consts":"xaPH","../reducers/achievements":"rq93","./salvage":"bvlY"}],"LLWN":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEMO_STATE = exports.DEMO_ADVENTURE_04 = exports.DEMO_ADVENTURE_03 = exports.DEMO_ADVENTURE_02 = exports.DEMO_ADVENTURE_01 = void 0;

var state_utils_1 = require("@offirmo-private/state-utils");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var logic_monsters_1 = require("@oh-my-rpg/logic-monsters");

var migrations_1 = require("./migrations");

var sec_1 = require("./services/sec"); /////////////////////
// needed to test migrations, both here and in composing parents
// a full featured, non-trivial demo state
// with dev gain


var DEMO_ADVENTURE_01 = state_utils_1.enforce_immutability({
  hid: 'fight_lost_any',
  uuid: 'uu1~example~adventure~01',
  good: true,
  encounter: logic_monsters_1.DEMO_MONSTER_01,
  gains: {
    level: 0,
    health: 0,
    mana: 0,
    strength: 0,
    agility: 0,
    charisma: 0,
    wisdom: 0,
    luck: 1,
    coin: 0,
    token: 0,
    armor: null,
    weapon: null,
    improvementⵧarmor: false,
    improvementⵧweapon: false
  }
});
exports.DEMO_ADVENTURE_01 = DEMO_ADVENTURE_01; // with coin gain

var DEMO_ADVENTURE_02 = state_utils_1.enforce_immutability({
  hid: 'dying_man',
  uuid: 'uu1~example~adventure~02',
  good: true,
  encounter: null,
  gains: {
    level: 0,
    health: 0,
    mana: 0,
    strength: 0,
    agility: 0,
    charisma: 0,
    wisdom: 0,
    luck: 0,
    coin: 1234,
    token: 0,
    weapon: null,
    armor: null,
    improvementⵧweapon: false,
    improvementⵧarmor: false
  }
});
exports.DEMO_ADVENTURE_02 = DEMO_ADVENTURE_02; // with loot gain

var DEMO_ADVENTURE_03 = state_utils_1.enforce_immutability({
  hid: 'rare_goods_seller',
  uuid: 'uu1~example~adventure~03',
  good: true,
  encounter: null,
  gains: {
    level: 0,
    health: 0,
    mana: 0,
    strength: 0,
    agility: 0,
    charisma: 0,
    wisdom: 0,
    luck: 0,
    coin: 0,
    token: 0,
    weapon: logic_weapons_1.DEMO_WEAPON_1,
    armor: null,
    improvementⵧweapon: false,
    improvementⵧarmor: false
  }
});
exports.DEMO_ADVENTURE_03 = DEMO_ADVENTURE_03; // with weapon enhancement gain

var DEMO_ADVENTURE_04 = state_utils_1.enforce_immutability({
  hid: 'princess',
  uuid: 'uu1~example~adventure~04',
  good: true,
  encounter: null,
  gains: {
    level: 0,
    health: 0,
    mana: 0,
    strength: 0,
    agility: 0,
    charisma: 0,
    wisdom: 0,
    luck: 0,
    coin: 123,
    token: 0,
    weapon: null,
    armor: null,
    improvementⵧweapon: false,
    improvementⵧarmor: true
  }
});
exports.DEMO_ADVENTURE_04 = DEMO_ADVENTURE_04; // can't build an example from disconnected sample states.
// taken from a real savegame:

var DEMO_STATE = state_utils_1.enforce_immutability(migrations_1.cleanup(sec_1.get_lib_SEC(), {
  ⵙapp_id: 'tbrpg',
  'schema_version': 15,
  last_user_investment_tms: 1598854698575,
  't_state': {
    'schema_version': 15,
    revision: 0,
    'timestamp_ms': 1598854700150,
    'energy': {
      'schema_version': 4,
      'timestamp_ms': 1598854700150,
      revision: 0,
      'available_energy': {
        'd': 1,
        'n': 7
      }
    }
  },
  'u_state': {
    'schema_version': 15,
    'revision': 1185,
    'avatar': {
      'attributes': {
        'agility': 87,
        'charisma': 87,
        'health': 88,
        'level': 45,
        'luck': 91,
        'mana': 144,
        'strength': 95,
        'wisdom': 151
      },
      'klass': 'knight',
      'name': 'PerteProd',
      'revision': 785,
      'schema_version': 2
    },
    'codes': {
      'redeemed_codes': {
        'ALPHATWINK': {
          'last_redeem_date_minutes': '20190423_08h09',
          'redeem_count': 1
        }
      },
      'revision': 1,
      'schema_version': 1
    },
    'energy': {
      'max_energy': 7,
      'revision': 0,
      'schema_version': 4,
      'total_energy_consumed_so_far': 1035
    },
    'engagement': {
      'queue': [],
      'revision': 161,
      'schema_version': 1
    },
    'inventory': {
      'revision': 281,
      'schema_version': 1,
      'slotted': {
        'armor': {
          'base_hid': 'boots',
          'base_strength': 52236,
          'element_type': 'item',
          'enhancement_level': 4,
          'qualifier1_hid': 'simple',
          'qualifier2_hid': 'twink',
          'quality': 'artifact',
          'slot': 'armor',
          'uuid': 'uu1dVeWKOZSUO6TwAutd0gDr'
        },
        'weapon': {
          'base_hid': 'scythe',
          'base_strength': 41892,
          'element_type': 'item',
          'enhancement_level': 1,
          'qualifier1_hid': 'strange',
          'qualifier2_hid': 'twink',
          'quality': 'artifact',
          'slot': 'weapon',
          'uuid': 'uu1IM5DRoi1a14hvaLCPPltm'
        }
      },
      'unslotted': [{
        'base_hid': 'spoon',
        'base_strength': 1,
        'element_type': 'item',
        'enhancement_level': 0,
        'qualifier1_hid': 'used',
        'qualifier2_hid': 'noob',
        'quality': 'common',
        'slot': 'weapon',
        'uuid': 'uu1SCAdaa62Dv-QHaaDQ7Nwf'
      }, {
        'base_hid': 'shoes',
        'base_strength': 39841,
        'element_type': 'item',
        'enhancement_level': 0,
        'qualifier1_hid': 'emerald',
        'qualifier2_hid': 'mercenary',
        'quality': 'legendary',
        'slot': 'armor',
        'uuid': 'uu15ixnqBzBX_IMsvJ2WV-sS'
      }, {
        'base_hid': 'socks',
        'base_strength': 1,
        'element_type': 'item',
        'enhancement_level': 0,
        'qualifier1_hid': 'used',
        'qualifier2_hid': 'noob',
        'quality': 'common',
        'slot': 'armor',
        'uuid': 'uu1PJz7O5R5LLDmPYVUdGu77'
      }],
      'unslotted_capacity': 20
    },
    'last_adventure': {
      'gains': {
        'agility': 1,
        'armor': null,
        'charisma': 0,
        'coin': 0,
        'health': 0,
        'improvementⵧarmor': false,
        'improvementⵧweapon': false,
        'level': 0,
        'luck': 0,
        'mana': 0,
        'strength': 0,
        'token': 0,
        'weapon': null,
        'wisdom': 0
      },
      'good': true,
      encounter: null,
      'hid': 'found_random_mushroom',
      'uuid': 'uu1FXVTOup-drVDr9t-nXR3a'
    },
    'meta': {
      'is_logged_in': true,
      'is_web_diversity_supporter': false,
      slot_id: 0,
      'revision': 1,
      'roles': ['admin', 'tbrpg:alpha'],
      'schema_version': 3
    },
    'prng': {
      'recently_encountered_by_id': {
        'adventure_archetype--bad': ['bad_m4', 'bad_e1'],
        'adventure_archetype--good': ['magical_cooking_ragnaros', 'famous_stone_emerald', 'fight_lost_shortcoming', 'socketed_item', 'pet_squirrel', 'green_food', 'church_cellar_prisoner', 'fight_won_coins', 'rachel', 'fight_observe', 'found_silver_potion', 'unmatched_set', 'erika', 'always_keep_potions', 'found_fizzing_potion', 'side_quests', 'caravan_success', 'flying_rat', 'raining_dwarves', 'caravan_failure', 'bards', 'pet_black_cat', 'arrow_in_the_knee', 'sword_in_rock', 'refreshing_nap', 'chilies', 'vampire_castle', 'famous_stone_diamond', 'good_end', 'found_random_mushroom']
      },
      'revision': 2607,
      'schema_version': 3,
      'seed': -1163955302,
      'use_count': 6504,
      'uuid': 'uu1IZxPCefT_N5wrZtkgVg3Q'
    },
    'progress': {
      'achievements': {
        '49 times… It was 49 times…': 'unlocked',
        'Absolute Explorer': 'unlocked',
        'Addicted': 'unlocked',
        'Alpha Of The Wilderness': 'revealed',
        'Alpha player': 'unlocked',
        'Aspiring Explorer': 'unlocked',
        'Awoken': 'unlocked',
        'Beta player': 'revealed',
        'Blessed': 'unlocked',
        'Born To Be Wild': 'unlocked',
        'Bright': 'unlocked',
        'Bring It On': 'unlocked',
        'Divinely Touched': 'unlocked',
        'Emperor-Looking Adventurer': 'revealed',
        'Epic Smile': 'unlocked',
        'Faithful': 'unlocked',
        'Famous Gems Collector': 'unlocked',
        'First Blood': 'unlocked',
        'Folk Hero': 'unlocked',
        'Formal Adventurer': 'unlocked',
        'Frog In A Well': 'unlocked',
        'Golden tongue': 'unlocked',
        'Graduated': 'unlocked',
        'Grandmaster Explorer': 'unlocked',
        'Grey Haired Adventurer': 'revealed',
        'Hacker': 'secret',
        'Hello darkness my old friend': 'revealed',
        'Hooked': 'unlocked',
        'I Am A Legend': 'unlocked',
        'I Am Back': 'unlocked',
        'I Can Handle It': 'unlocked',
        'I Like Swords!': 'revealed',
        'I Was Born Ready': 'unlocked',
        'I am bored': 'unlocked',
        'I am dead bored': 'unlocked',
        'I am very bored': 'unlocked',
        'Into The Wild': 'unlocked',
        'It’s good to be bad': 'unlocked',
        'I’ll Be Back': 'unlocked',
        'I’m not that innocent': 'unlocked',
        'Just plain lucky': 'unlocked',
        'King-looking Adventurer': 'unlocked',
        'Light Punishment': 'unlocked',
        'Local Strongperson': 'unlocked',
        'Long Lived Adventurer': 'hidden',
        'Looking Like something': 'unlocked',
        'Master Explorer': 'unlocked',
        'Mushrooms Gourmet': 'unlocked',
        'Mushrooms Lover': 'unlocked',
        'Newbie Adventurer': 'unlocked',
        'No-life except for boredom': 'revealed',
        'Oops!... I Did It Again': 'unlocked',
        'Potions Sommelier': 'unlocked',
        'Potions Taster': 'unlocked',
        'Rare Sight': 'unlocked',
        'Reasonable Adventurer': 'unlocked',
        'Reborn!': 'secret',
        'Registered adventurer': 'unlocked',
        'Regular': 'unlocked',
        'Rookie Explorer': 'unlocked',
        'Sage': 'unlocked',
        'Seasoned Adventurer': 'unlocked',
        'Senior Explorer': 'unlocked',
        'Sharp tongue': 'unlocked',
        'Silver tongue': 'unlocked',
        'Small One': 'unlocked',
        'Smart': 'unlocked',
        'Sorry my hand slipped': 'unlocked',
        'Spirit Of The Cat': 'revealed',
        'Spirit Of The Elephant': 'revealed',
        'Spirit Of The Gorilla': 'revealed',
        'Spirit Of The Human': 'unlocked',
        'Spirit Of The Monkey': 'revealed',
        'Spirit Of The Owl': 'unlocked',
        'Spirit Of The Rabbit': 'revealed',
        'Spirit Of The Tortoise': 'hidden',
        'Sprinkled': 'unlocked',
        'Summoned': 'unlocked',
        'Supporter of diversity': 'revealed',
        'Swift One': 'unlocked',
        'TEST': 'secret',
        'Teenage Adventurer': 'unlocked',
        'The Power Of The Mind': 'unlocked',
        'The Wild One': 'unlocked',
        'There Is No Spoon': 'unlocked',
        'They Weren’t Matched Anyway': 'unlocked',
        'Tiny Adventurer': 'unlocked',
        'Titan': 'unlocked',
        'Turn it up to eleven': 'unlocked',
        'Twinkle Twinkle Little Star': 'unlocked',
        'U Got The Look': 'unlocked',
        'Untouchable': 'unlocked',
        'Usurper': 'secret',
        'Vast Consciousness': 'unlocked',
        'Well Built': 'unlocked',
        'What’s in a name?': 'unlocked',
        'Wild Like The Wind': 'unlocked',
        'Young Explorer': 'unlocked',
        'did I mention I was bored?': 'unlocked',
        'king of boredom': 'unlocked'
      },
      'flags': null,
      'revision': 1364,
      'schema_version': 3,
      'statistics': {
        'creation_date_hrtday': '20190423',
        'active_day_count': 915,
        'bad_play_count': 93,
        'bad_play_count_by_active_class': {
          'knight': 2,
          'summoner': 91
        },
        'coins_gained': 458582,
        'encountered_adventures': {
          'DQ_good_slime': true,
          'always_keep_potions': true,
          'arrow_in_the_knee': true,
          'ate_bacon': true,
          'ate_zombie': true,
          'bad_1': true,
          'bad_2': true,
          'bad_3': true,
          'bad_4': true,
          'bad_5': true,
          'bad_6': true,
          'bad_e1': true,
          'bad_e2': true,
          'bad_m1': true,
          'bad_m3': true,
          'bad_m4': true,
          'bad_m5': true,
          'bad_m6': true,
          'bad_s1': true,
          'bad_s2': true,
          'bad_village': true,
          'balrog': true,
          'bandits_punishment': true,
          'bards': true,
          'best_meal': true,
          'bored_log': true,
          'busking': true,
          'capital_castle': true,
          'capital_royal_amusement_park': true,
          'capital_royal_road': true,
          'caravan_failure': true,
          'caravan_success': true,
          'castle_summon': true,
          'cat_out_tree': true,
          'chasm_leap': true,
          'chicken_slayer': true,
          'chilies': true,
          'church_book': true,
          'church_cellar_prisoner': true,
          'class_grimoire': true,
          'class_master_coolidge': true,
          'class_master_dark_holocron': true,
          'class_master_forbidden_knowledge': true,
          'class_master_half_battle': true,
          'class_master_primary_attr_1': true,
          'class_master_primary_attr_2': true,
          'class_master_second_attr': true,
          'class_master_sharpest_weapon': true,
          'clean_wizard_tower': true,
          'clover': true,
          'coffee': true,
          'colossal_cave': true,
          'colossal_cave_maze': true,
          'conscripted': true,
          'cookies_grandmas': true,
          'critters': true,
          'demon_king': true,
          'dragon_kebab': true,
          'drown_in_holy_water': true,
          'duke_rescue': true,
          'dying_man': true,
          'elementals': true,
          'elven_hydromel': true,
          'erika': true,
          'escort': true,
          'exile_GIFTS': true,
          'explore_catacombs': true,
          'explore_ruins': true,
          'fabric_of_reality': true,
          'false_lake': true,
          'famous_stone_diamond': true,
          'famous_stone_emerald': true,
          'famous_stone_ruby': true,
          'famous_stone_sapphire': true,
          'fate_sword': true,
          'fight_lost_any': true,
          'fight_lost_shortcoming': true,
          'fight_observe': true,
          'fight_won_any': true,
          'fight_won_coins': true,
          'fight_won_loot': true,
          'flying_rat': true,
          'foodie_friend': true,
          'foreign_language': true,
          'found_black_mushroom': true,
          'found_blue_mushroom': true,
          'found_bubbly_potion': true,
          'found_fizzing_potion': true,
          'found_green_mushroom': true,
          'found_journal': true,
          'found_orange_mushroom': true,
          'found_rainbow_mushroom': true,
          'found_random_mushroom': true,
          'found_red_mushroom': true,
          'found_silver_potion': true,
          'found_swirling_potion': true,
          'found_vermilion_potion': true,
          'found_white_mushroom': true,
          'found_worn_out_potion': true,
          'found_yellow_mushroom': true,
          'gehennom': true,
          'give_a_shield': true,
          'gold_nugget': true,
          'good_end': true,
          'good_necromancer': true,
          'green_food': true,
          'grinding': true,
          'guild_party_food': true,
          'high_level_zone_1': true,
          'high_level_zone_2': true,
          'horseshoe': true,
          'huge_tower': true,
          'idiot_bandits': true,
          'inspect_sewers': true,
          'jig': true,
          'keep_watch': true,
          'king_reward': true,
          'last_night': true,
          'last_quest': true,
          'lost': true,
          'lost_mine': true,
          'magic_lamp': true,
          'magical_cooking_ragnaros': true,
          'make_friends': true,
          'mana_mana': true,
          'meet_old_wizard': true,
          'meteor': true,
          'meteor_metal': true,
          'milk': true,
          'murderer': true,
          'need_for_speed': true,
          'nuclear_fusion_paper': true,
          'older': true,
          'pet_badger_mushrooms': true,
          'pet_black_cat': true,
          'pet_rainbow_lorikeet': true,
          'pet_red_eyed_unicorn': true,
          'pet_squirrel': true,
          'pileup': true,
          'princess': true,
          'princess_castle': true,
          'progress_loop': true,
          'rabbit_foot': true,
          'rabbit_hole': true,
          'rachel': true,
          'raining_dwarves': true,
          'raining_elves': true,
          'random_blessing': true,
          'rare_goods_seller': true,
          'refreshing_nap': true,
          'rematch': true,
          'ribert': true,
          'riddle_of_steel': true,
          'rings_of_power': true,
          'save_world_again': true,
          'sentients_killing': true,
          'side_quests': true,
          'so_many_potions': true,
          'socketed_item': true,
          'soul_weapon_pet_zombie': true,
          'square_eggs': true,
          'stare_cup': true,
          'sword_in_a_lake': true,
          'sword_in_rock': true,
          'talk_to_all_villagers': true,
          'treasure_in_pots': true,
          'unmatched_set': true,
          'useless': true,
          'vampire_castle': true,
          'village_farmwork': true,
          'village_gifts_blacksmith': true,
          'village_lost_father': true,
          'village_lost_kid': true,
          'village_nice_daughter': true,
          'village_strongman': true,
          'walk_in_mordor': true,
          'waterfall': true,
          'weird_duck': true,
          'wise_wisewood_tree': true,
          'witch_riddle': true
        },
        'encountered_monsters': {
          'ant': true,
          'baby chick': true,
          'bat': true,
          'bear': true,
          'bee': true,
          'blowfish': true,
          'butterfly': true,
          'camel': true,
          'cat': true,
          'caterpillar': true,
          'chicken': true,
          'chipmunk': true,
          'crab': true,
          'dahu': true,
          'deer': true,
          'dolphin': true,
          'dove': true,
          'dragon': true,
          'dromedary': true,
          'drop bear': true,
          'eagle': true,
          'ewe': true,
          'fox': true,
          'frog': true,
          'fur-bearing truit': true,
          'ghost': true,
          'goat': true,
          'golem': true,
          'gorilla': true,
          'hamster': true,
          'hatching chick': true,
          'hoop snake': true,
          'horse': true,
          'joint snake': true,
          'koala': true,
          'lizard': true,
          'monkey': true,
          'octopus': true,
          'owl': true,
          'ox': true,
          'panda': true,
          'penguin': true,
          'pig': true,
          'pigeon': true,
          'poodle': true,
          'ram': true,
          'rat': true,
          'rhinoceros': true,
          'scorpion': true,
          'shark': true,
          'shrimp': true,
          'snail': true,
          'snake': true,
          'spider': true,
          'splintercat': true,
          'spreading adder': true,
          'squid': true,
          'tiger': true,
          'tropical fish': true,
          'turkey': true,
          'turtle': true,
          'unicorn': true,
          'water buffalo': true,
          'whale': true,
          'wolf': true
        },
        'fight_lost_count': 49,
        'fight_won_count': 73,
        'good_play_count': 1028,
        'good_play_count_by_active_class': {
          'knight': 7,
          'summoner': 1021
        },
        'has_account': false,
        'is_registered_alpha_player': false,
        'items_gained': 132,
        'last_visited_timestamp_hrtday': '20200804',
        'tokens_gained': 44
      },
      'wiki': null
    },
    'wallet': {
      'coin_count': 669470,
      'revision': 336,
      'schema_version': 1,
      'token_count': 44
    }
  }
}, {}));
exports.DEMO_STATE = DEMO_STATE; /////////////////////
},{"@offirmo-private/state-utils":"PmVE","@oh-my-rpg/logic-weapons":"qUBn","@oh-my-rpg/logic-monsters":"iTrv","./migrations":"ruPx","./services/sec":"YmLA"}],"lipS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GainType = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var GainType = typescript_string_enums_1.Enum( // Note: must match properties in Adventure['gains']
'level', 'health', 'mana', 'strength', 'agility', 'charisma', 'wisdom', 'luck', 'coin', 'token', 'weapon', 'armor', 'improvementⵧweapon', 'improvementⵧarmor');
exports.GainType = GainType; /////////////////////
},{"typescript-string-enums":"qyCc"}],"AY8x":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./build"), exports);

__exportStar(require("./consts"), exports);

__exportStar(require("./data/engagement"), exports);

__exportStar(require("./examples"), exports);

__exportStar(require("./migrations"), exports);

__exportStar(require("./reducers"), exports);

__exportStar(require("./selectors"), exports);

__exportStar(require("./services/logger"), exports);

__exportStar(require("./types"), exports);
},{"./build":"B7Ip","./consts":"xaPH","./data/engagement":"FZDX","./examples":"LLWN","./migrations":"ruPx","./reducers":"wKNL","./selectors":"iasm","./services/logger":"xcMS","./types":"lipS"}],"b6M3":[function(require,module,exports) {
'use strict';

var isMergeableObject = function isMergeableObject(value) {
  return isNonNullObject(value) && !isSpecial(value);
};

function isNonNullObject(value) {
  return !!value && typeof value === 'object';
}

function isSpecial(value) {
  var stringValue = Object.prototype.toString.call(value);
  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25


var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

function isReactElement(value) {
  return value.$$typeof === REACT_ELEMENT_TYPE;
}

function emptyTarget(val) {
  return Array.isArray(val) ? [] : {};
}

function cloneUnlessOtherwiseSpecified(value, options) {
  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
}

function defaultArrayMerge(target, source, options) {
  return target.concat(source).map(function (element) {
    return cloneUnlessOtherwiseSpecified(element, options);
  });
}

function getMergeFunction(key, options) {
  if (!options.customMerge) {
    return deepmerge;
  }

  var customMerge = options.customMerge(key);
  return typeof customMerge === 'function' ? customMerge : deepmerge;
}

function getEnumerableOwnPropertySymbols(target) {
  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {
    return target.propertyIsEnumerable(symbol);
  }) : [];
}

function getKeys(target) {
  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
}

function propertyIsOnObject(object, property) {
  try {
    return property in object;
  } catch (_) {
    return false;
  }
} // Protects from prototype poisoning and unexpected merging up the prototype chain.


function propertyIsUnsafe(target, key) {
  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.
}

function mergeObject(target, source, options) {
  var destination = {};

  if (options.isMergeableObject(target)) {
    getKeys(target).forEach(function (key) {
      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    });
  }

  getKeys(source).forEach(function (key) {
    if (propertyIsUnsafe(target, key)) {
      return;
    }

    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
    } else {
      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    }
  });
  return destination;
}

function deepmerge(target, source, options) {
  options = options || {};
  options.arrayMerge = options.arrayMerge || defaultArrayMerge;
  options.isMergeableObject = options.isMergeableObject || isMergeableObject; // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
  // implementations can use it. The caller may not replace it.

  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
  var sourceIsArray = Array.isArray(source);
  var targetIsArray = Array.isArray(target);
  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

  if (!sourceAndTargetTypesMatch) {
    return cloneUnlessOtherwiseSpecified(source, options);
  } else if (sourceIsArray) {
    return options.arrayMerge(target, source, options);
  } else {
    return mergeObject(target, source, options);
  }
}

deepmerge.all = function deepmergeAll(array, options) {
  if (!Array.isArray(array)) {
    throw new Error('first argument should be an array');
  }

  return array.reduce(function (prev, next) {
    return deepmerge(prev, next, options);
  }, {});
};

var deepmerge_1 = deepmerge;
module.exports = deepmerge_1;
},{}],"gY0c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VERSION = exports.LIB = void 0;
var LIB = '@tbrpg/flux';
exports.LIB = LIB;

var state_1 = require("@tbrpg/state");

Object.defineProperty(exports, "VERSION", {
  enumerable: true,
  get: function () {
    return state_1.VERSION;
  }
});
},{"@tbrpg/state":"AY8x"}],"hgGW":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var state_utils_1 = require("@offirmo-private/state-utils");

var dequal_1 = require("dequal");

var state_1 = require("@tbrpg/state");

function create(SEC) {
  var LIB = "Dispatcher";
  return SEC.xTry("creating " + LIB + "\u2026", function (_a) {
    var logger = _a.logger;
    logger.trace(LIB + ".create()");
    var stores = [];
    var seen_dispatches = false;
    var seen_set = false;

    function register_store(store) {
      logger.trace(LIB + ".register_store()\u2026");
      tiny_invariant_1.default(!seen_set, 'Dispatcher: adding stores after initialisation!');
      tiny_invariant_1.default(!seen_dispatches, 'Dispatcher: adding stores after dispatches began!');
      stores.push(store);
    }

    function dispatch(action, eventual_state_hint) {
      logger.trace(LIB + ".dispatch()\u2026");
      tiny_invariant_1.default(stores.length, 'Dispatcher: dispatching before registering any stores!');
      tiny_invariant_1.default(seen_set, 'Dispatcher: dispatching before initialising!');
      seen_dispatches = true;
      stores.forEach(function (store) {
        store.on_dispatch(action, eventual_state_hint);
        var store_state = store.get();

        if (eventual_state_hint) {
          tiny_invariant_1.default(dequal_1.dequal(eventual_state_hint, store_state), 'dispatcher: state hint = store state');
        }

        eventual_state_hint = eventual_state_hint || store_state;
      });
    }

    function set(state) {
      logger.trace(LIB + ".set()", {
        state: state_utils_1.get_base_loose(state)
      });
      tiny_invariant_1.default(stores.length, 'Dispatcher: set() before registering any stores!');
      tiny_invariant_1.default(state_utils_1.is_RootState(state), "Dispatcher: set() is_RootState()!");
      tiny_invariant_1.default(state_utils_1.get_schema_version_loose(state) === state_1.SCHEMA_VERSION, "Dispatcher: set() schema version === " + state_1.SCHEMA_VERSION + " (current)!");
      stores.forEach(function (store) {
        store.set(state);
      });
      seen_set = true;
    }

    return {
      dispatch: dispatch,
      register_store: register_store,
      set: set
    };
  });
}

exports.create = create;
},{"tiny-invariant":"VYmh","@offirmo-private/state-utils":"PmVE","dequal":"WcpC","@tbrpg/state":"AY8x"}],"n9wX":[function(require,module,exports) {
var at, // The index of the current character
    ch, // The current character
    escapee = {
        '"':  '"',
        '\\': '\\',
        '/':  '/',
        b:    '\b',
        f:    '\f',
        n:    '\n',
        r:    '\r',
        t:    '\t'
    },
    text,

    error = function (m) {
        // Call error when something is wrong.
        throw {
            name:    'SyntaxError',
            message: m,
            at:      at,
            text:    text
        };
    },
    
    next = function (c) {
        // If a c parameter is provided, verify that it matches the current character.
        if (c && c !== ch) {
            error("Expected '" + c + "' instead of '" + ch + "'");
        }
        
        // Get the next character. When there are no more characters,
        // return the empty string.
        
        ch = text.charAt(at);
        at += 1;
        return ch;
    },
    
    number = function () {
        // Parse a number value.
        var number,
            string = '';
        
        if (ch === '-') {
            string = '-';
            next('-');
        }
        while (ch >= '0' && ch <= '9') {
            string += ch;
            next();
        }
        if (ch === '.') {
            string += '.';
            while (next() && ch >= '0' && ch <= '9') {
                string += ch;
            }
        }
        if (ch === 'e' || ch === 'E') {
            string += ch;
            next();
            if (ch === '-' || ch === '+') {
                string += ch;
                next();
            }
            while (ch >= '0' && ch <= '9') {
                string += ch;
                next();
            }
        }
        number = +string;
        if (!isFinite(number)) {
            error("Bad number");
        } else {
            return number;
        }
    },
    
    string = function () {
        // Parse a string value.
        var hex,
            i,
            string = '',
            uffff;
        
        // When parsing for string values, we must look for " and \ characters.
        if (ch === '"') {
            while (next()) {
                if (ch === '"') {
                    next();
                    return string;
                } else if (ch === '\\') {
                    next();
                    if (ch === 'u') {
                        uffff = 0;
                        for (i = 0; i < 4; i += 1) {
                            hex = parseInt(next(), 16);
                            if (!isFinite(hex)) {
                                break;
                            }
                            uffff = uffff * 16 + hex;
                        }
                        string += String.fromCharCode(uffff);
                    } else if (typeof escapee[ch] === 'string') {
                        string += escapee[ch];
                    } else {
                        break;
                    }
                } else {
                    string += ch;
                }
            }
        }
        error("Bad string");
    },

    white = function () {

// Skip whitespace.

        while (ch && ch <= ' ') {
            next();
        }
    },

    word = function () {

// true, false, or null.

        switch (ch) {
        case 't':
            next('t');
            next('r');
            next('u');
            next('e');
            return true;
        case 'f':
            next('f');
            next('a');
            next('l');
            next('s');
            next('e');
            return false;
        case 'n':
            next('n');
            next('u');
            next('l');
            next('l');
            return null;
        }
        error("Unexpected '" + ch + "'");
    },

    value,  // Place holder for the value function.

    array = function () {

// Parse an array value.

        var array = [];

        if (ch === '[') {
            next('[');
            white();
            if (ch === ']') {
                next(']');
                return array;   // empty array
            }
            while (ch) {
                array.push(value());
                white();
                if (ch === ']') {
                    next(']');
                    return array;
                }
                next(',');
                white();
            }
        }
        error("Bad array");
    },

    object = function () {

// Parse an object value.

        var key,
            object = {};

        if (ch === '{') {
            next('{');
            white();
            if (ch === '}') {
                next('}');
                return object;   // empty object
            }
            while (ch) {
                key = string();
                white();
                next(':');
                if (Object.hasOwnProperty.call(object, key)) {
                    error('Duplicate key "' + key + '"');
                }
                object[key] = value();
                white();
                if (ch === '}') {
                    next('}');
                    return object;
                }
                next(',');
                white();
            }
        }
        error("Bad object");
    };

value = function () {

// Parse a JSON value. It could be an object, an array, a string, a number,
// or a word.

    white();
    switch (ch) {
    case '{':
        return object();
    case '[':
        return array();
    case '"':
        return string();
    case '-':
        return number();
    default:
        return ch >= '0' && ch <= '9' ? number() : word();
    }
};

// Return the json_parse function. It will have access to all of the above
// functions and variables.

module.exports = function (source, reviver) {
    var result;
    
    text = source;
    at = 0;
    ch = ' ';
    result = value();
    white();
    if (ch) {
        error("Syntax error");
    }

    // If there is a reviver function, we recursively walk the new structure,
    // passing each name/value pair to the reviver function for possible
    // transformation, starting with a temporary root object that holds the result
    // in an empty key. If there is not a reviver function, we simply return the
    // result.

    return typeof reviver === 'function' ? (function walk(holder, key) {
        var k, v, value = holder[key];
        if (value && typeof value === 'object') {
            for (k in value) {
                if (Object.prototype.hasOwnProperty.call(value, k)) {
                    v = walk(value, k);
                    if (v !== undefined) {
                        value[k] = v;
                    } else {
                        delete value[k];
                    }
                }
            }
        }
        return reviver.call(holder, key, value);
    }({'': result}, '')) : result;
};

},{}],"KR0a":[function(require,module,exports) {
var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    gap,
    indent,
    meta = {    // table of character substitutions
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"' : '\\"',
        '\\': '\\\\'
    },
    rep;

function quote(string) {
    // If the string contains no control characters, no quote characters, and no
    // backslash characters, then we can safely slap some quotes around it.
    // Otherwise we must also replace the offending characters with safe escape
    // sequences.
    
    escapable.lastIndex = 0;
    return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c :
            '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    }) + '"' : '"' + string + '"';
}

function str(key, holder) {
    // Produce a string from holder[key].
    var i,          // The loop counter.
        k,          // The member key.
        v,          // The member value.
        length,
        mind = gap,
        partial,
        value = holder[key];
    
    // If the value has a toJSON method, call it to obtain a replacement value.
    if (value && typeof value === 'object' &&
            typeof value.toJSON === 'function') {
        value = value.toJSON(key);
    }
    
    // If we were called with a replacer function, then call the replacer to
    // obtain a replacement value.
    if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
    }
    
    // What happens next depends on the value's type.
    switch (typeof value) {
        case 'string':
            return quote(value);
        
        case 'number':
            // JSON numbers must be finite. Encode non-finite numbers as null.
            return isFinite(value) ? String(value) : 'null';
        
        case 'boolean':
        case 'null':
            // If the value is a boolean or null, convert it to a string. Note:
            // typeof null does not produce 'null'. The case is included here in
            // the remote chance that this gets fixed someday.
            return String(value);
            
        case 'object':
            if (!value) return 'null';
            gap += indent;
            partial = [];
            
            // Array.isArray
            if (Object.prototype.toString.apply(value) === '[object Array]') {
                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }
                
                // Join all of the elements together, separated with commas, and
                // wrap them in brackets.
                v = partial.length === 0 ? '[]' : gap ?
                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
                    '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }
            
            // If the replacer is an array, use it to select the members to be
            // stringified.
            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === 'string') {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            else {
                // Otherwise, iterate through all of the keys in the object.
                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            
        // Join all of the member texts together, separated with commas,
        // and wrap them in braces.

        v = partial.length === 0 ? '{}' : gap ?
            '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
            '{' + partial.join(',') + '}';
        gap = mind;
        return v;
    }
}

module.exports = function (value, replacer, space) {
    var i;
    gap = '';
    indent = '';
    
    // If the space parameter is a number, make an indent string containing that
    // many spaces.
    if (typeof space === 'number') {
        for (i = 0; i < space; i += 1) {
            indent += ' ';
        }
    }
    // If the space parameter is a string, it will be used as the indent string.
    else if (typeof space === 'string') {
        indent = space;
    }

    // If there is a replacer, it must be a function or an array.
    // Otherwise, throw an error.
    rep = replacer;
    if (replacer && typeof replacer !== 'function'
    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
        throw new Error('JSON.stringify');
    }
    
    // Make a fake root object containing our value under the key of ''.
    // Return the result of stringifying the value.
    return str('', {'': value});
};

},{}],"dTQL":[function(require,module,exports) {
exports.parse = require('./lib/parse');
exports.stringify = require('./lib/stringify');

},{"./lib/parse":"n9wX","./lib/stringify":"KR0a"}],"lUru":[function(require,module,exports) {
var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');

module.exports = function (obj, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var space = opts.space || '';
    if (typeof space === 'number') space = Array(space+1).join(' ');
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;
    var replacer = opts.replacer || function(key, value) { return value; };

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (parent, key, node, level) {
        var indent = space ? ('\n' + new Array(level + 1).join(space)) : '';
        var colonSeparator = space ? ': ' : ':';

        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        node = replacer.call(parent, key, node);

        if (node === undefined) {
            return;
        }
        if (typeof node !== 'object' || node === null) {
            return json.stringify(node);
        }
        if (isArray(node)) {
            var out = [];
            for (var i = 0; i < node.length; i++) {
                var item = stringify(node, i, node[i], level+1) || json.stringify(null);
                out.push(indent + space + item);
            }
            return '[' + out.join(',') + indent + ']';
        }
        else {
            if (seen.indexOf(node) !== -1) {
                if (cycles) return json.stringify('__cycle__');
                throw new TypeError('Converting circular structure to JSON');
            }
            else seen.push(node);

            var keys = objectKeys(node).sort(cmp && cmp(node));
            var out = [];
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var value = stringify(node, key, node[key], level+1);

                if(!value) continue;

                var keyValue = json.stringify(key)
                    + colonSeparator
                    + value;
                ;
                out.push(indent + space + keyValue);
            }
            seen.splice(seen.indexOf(node), 1);
            return '{' + out.join(',') + indent + '}';
        }
    })({ '': obj }, '', obj, 0);
};

var isArray = Array.isArray || function (x) {
    return {}.toString.call(x) === '[object Array]';
};

var objectKeys = Object.keys || function (obj) {
    var has = Object.prototype.hasOwnProperty || function () { return true };
    var keys = [];
    for (var key in obj) {
        if (has.call(obj, key)) keys.push(key);
    }
    return keys;
};

},{"jsonify":"dTQL"}],"OXQ5":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create_action__set = exports.create_action_noop = exports.create_action = exports.create_base_action = exports.get_action_types = exports.ActionType = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var timestamps_1 = require("@offirmo-private/timestamps"); /////////////////////


exports.ActionType = typescript_string_enums_1.Enum('play', 'equip_item', 'sell_item', 'rename_avatar', 'change_avatar_class', 'redeem_code', 'start_game', 'on_start_session', 'on_logged_in_refresh', 'acknowledge_engagement_msg_seen', 'update_to_now', 'set', 'hack'); /////////////////////
// needed for some validations

function get_action_types() {
  return typescript_string_enums_1.Enum.keys(exports.ActionType);
}

exports.get_action_types = get_action_types; /////////////////////

function create_base_action(time) {
  if (time === void 0) {
    time = timestamps_1.get_UTC_timestamp_ms();
  }

  return {
    time: time,
    expected_revisions: {}
  };
}

exports.create_base_action = create_base_action;

function create_action(attributes, time) {
  if (time === void 0) {
    time = timestamps_1.get_UTC_timestamp_ms();
  }

  return __assign(__assign({}, create_base_action(time)), attributes);
}

exports.create_action = create_action;

function create_action_noop() {
  return create_action({
    type: exports.ActionType.hack,
    expected_revisions: {},
    custom_reducer: function (state) {
      return state;
    }
  });
}

exports.create_action_noop = create_action_noop;

function create_action__set(state) {
  return create_action({
    type: exports.ActionType.set,
    expected_revisions: {},
    state: state
  });
}

exports.create_action__set = create_action__set;
},{"typescript-string-enums":"qyCc","@offirmo-private/timestamps":"bMV2"}],"HAUK":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./actions"), exports);
},{"./actions":"OXQ5"}],"Uoli":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reduce_action = void 0;

var typescript_string_enums_1 = require("typescript-string-enums");

var state_utils_1 = require("@offirmo-private/state-utils");

var TBRPGState = __importStar(require("@tbrpg/state"));

var interfaces_1 = require("@tbrpg/interfaces");

var consts_1 = require("../consts");

var KNOWN_ACTIONS_COUNT = 13;
if (KNOWN_ACTIONS_COUNT !== typescript_string_enums_1.Enum.keys(interfaces_1.ActionType).length) throw new Error("[" + consts_1.LIB + "] reduce_action() is outdated! " + typescript_string_enums_1.Enum.keys(interfaces_1.ActionType).length + " vs. " + KNOWN_ACTIONS_COUNT);

function reduce_action(state, action) {
  if (!state_utils_1.are_ustate_revision_requirements_met(state, action.expected_revisions)) {
    throw new Error("Failed to execute an action \"" + action.type + "\": outdated!");
  }

  switch (action.type) {
    case interfaces_1.ActionType.play:
      return TBRPGState.play(state, action.time);

    case interfaces_1.ActionType.equip_item:
      return TBRPGState.equip_item(state, action.target_uuid, action.time);

    case interfaces_1.ActionType.sell_item:
      return TBRPGState.sell_item(state, action.target_uuid, action.time);

    case interfaces_1.ActionType.rename_avatar:
      return TBRPGState.rename_avatar(state, action.new_name, action.time);

    case interfaces_1.ActionType.change_avatar_class:
      return TBRPGState.change_avatar_class(state, action.new_class, action.time);

    case interfaces_1.ActionType.redeem_code:
      return TBRPGState.attempt_to_redeem_code(state, action.code, action.time);

    case interfaces_1.ActionType.start_game:
      throw new Error('Unexpected start game action dispatched!');

    case interfaces_1.ActionType.on_start_session:
      return TBRPGState.on_start_session(state, action.is_web_diversity_supporter, action.time);

    case interfaces_1.ActionType.on_logged_in_refresh:
      return TBRPGState.on_logged_in_refresh(state, action.is_logged_in, action.roles, action.time);

    case interfaces_1.ActionType.acknowledge_engagement_msg_seen:
      return TBRPGState.acknowledge_engagement_msg_seen(state, action.uid, action.time);

    case interfaces_1.ActionType.update_to_now:
      return TBRPGState.update_to_now(state, action.time);

    case interfaces_1.ActionType.set:
      return action.state;

    case interfaces_1.ActionType.hack:
      return action.custom_reducer( // auto update-to-now for convenience
      TBRPGState.update_to_now(state, action.time));

    default:
      throw new Error('reduce_action(): Unhandled switch value(s)!');
  }
}

exports.reduce_action = reduce_action;
},{"typescript-string-enums":"qyCc","@offirmo-private/state-utils":"PmVE","@tbrpg/state":"AY8x","@tbrpg/interfaces":"HAUK","../consts":"gY0c"}],"pwdD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function try_or_fallback(_a) {
  var code = _a.code,
      fallback = _a.fallback,
      _b = _a.on_error,
      on_error = _b === void 0 ? function () {} : _b;

  try {
    return code();
  } catch (err) {
    on_error(err);
    return fallback;
  }
}

exports.default = try_or_fallback;
},{}],"EXhC":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];

  return to;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = exports._safe_read_parse_and_validate_from_storage = exports.StorageKey = void 0;
/*import memoize_one from 'memoize-one'*/

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var emittery_1 = __importDefault(require("emittery"));

var json_stable_stringify_1 = __importDefault(require("json-stable-stringify"));

var state_utils_1 = require("@offirmo-private/state-utils");

var async_utils_1 = require("@offirmo-private/async-utils");

var state_1 = require("@tbrpg/state");

var reduce_action_1 = require("../../utils/reduce-action");

var try_or_fallback_1 = __importDefault(require("../../utils/try_or_fallback")); /////////////////////////////////////////////////


var EMITTER_EVT = 'change';
exports.StorageKey = {
  bkp_main: 'the-boring-rpg.savegame',
  bkp_minor: 'the-boring-rpg.savegame-bkp',
  bkp_major_old: 'the-boring-rpg.savegame-bkp-m1',
  bkp_major_older: 'the-boring-rpg.savegame-bkp-m2'
}; /////////////////////////////////////////////////

function _safe_read_parse_and_validate_from_storage(storage, key, on_error) {
  if (on_error === void 0) {
    on_error = function (err) {
      throw err;
    };
  }

  var fallback = undefined;
  return try_or_fallback_1.default({
    fallback: fallback,
    on_error: on_error,
    code: function () {
      // LS access can throw
      var ls_content = storage.getItem(key);
      if (!ls_content) return fallback; // can throw as well

      var json = JSON.parse(ls_content); //console.log('parsed', json)
      // need this check due to some serializations returning {} for empty

      var is_empty = !json || Object.keys(json).length === 0;
      if (is_empty) return fallback; // NOTE base/root was reworked over time, can be valid while not passing those type guards
      //const is_valid_state: boolean = is_BaseState(json) || is_RootState(json) || has_versioned_schema(json)

      return json;
    }
  });
}

exports._safe_read_parse_and_validate_from_storage = _safe_read_parse_and_validate_from_storage; /////////////////////////////////////////////////

function create(SEC, storage, migrate_to_latest, dispatcher) {
  var LIB = "\uD83D\uDDC3\u2D67\u26ABlocal";
  return SEC.xTry("creating " + LIB + "\u2026", function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    logger.trace("[" + LIB + "].create()\u2026");
    logger.verbose("[" + LIB + "] FYI storage keys = \"" + Object.values(exports.StorageKey).join(', ') + "\"");
    var state = undefined;
    var recovered_states_unmigrated_ordered_oldest_first = [];
    var restored_migrated = undefined; /////////////////////////////////////////////////

    function _on_error(err) {
      logger.warn("[" + LIB + "] Error while processing", err); // TODO report to dispatcher
    }

    function _store_key_value(key, json) {
      var value = json_stable_stringify_1.default(json);
      logger.trace("[" + LIB + "] \uD83D\uDCBE writing \"" + key + "\"\u2026", state_utils_1.get_base_loose(json));
      storage.setItem(key, value);
      logger.trace("[" + LIB + "] \uD83D\uDCBE written \"" + key + "\" \u2714", {
        /*snapshot: JSON.parse(value)*/
      });
    }

    function _optimized_store_key_value(key, json) {
      return new Promise(function (resolve, reject) {
        async_utils_1.schedule_when_idle_but_not_too_far(function () {
          try {
            resolve(_store_key_value(key, json));
          } catch (err) {
            reject(err);
          }
        });
      });
    }

    var emitter = new emittery_1.default(); /////////////////////////////////////////////////
    // bkp pipeline

    var bkp__current = _safe_read_parse_and_validate_from_storage(storage, exports.StorageKey.bkp_main, _on_error);

    var bkp__recent = _safe_read_parse_and_validate_from_storage(storage, exports.StorageKey.bkp_minor, _on_error);

    var bkp__older = [_safe_read_parse_and_validate_from_storage(storage, exports.StorageKey.bkp_major_old, _on_error), _safe_read_parse_and_validate_from_storage(storage, exports.StorageKey.bkp_major_older, _on_error)].filter(function (s) {
      return !!s;
    }); // TODO should allow any minor overwrite, in case manual revert
    // Return value: not used TODO review and clean

    function _enqueue_in_bkp_pipeline(some_state) {
      return __awaiter(this, void 0, Promise, function () {
        var has_valuable_difference, promises, some_legacy_state;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              logger.trace("[" + LIB + "] _enqueue_in_bkp_pipeline()", {
                candidate: state_utils_1.get_base_loose(some_state),
                current: state_utils_1.get_base_loose(state),
                bkp__current: state_utils_1.get_base_loose(bkp__current),
                'legacy.length': recovered_states_unmigrated_ordered_oldest_first.length //some_state,

              });
              tiny_invariant_1.default(state_utils_1.get_schema_version_loose(some_state) === state_1.SCHEMA_VERSION, "_enqueue_in_bkp_pipeline(): schema version === " + state_1.SCHEMA_VERSION + " (current)!");

              if (some_state === restored_migrated) {
                logger.trace("[" + LIB + "] _enqueue_in_bkp_pipeline(): echo from restoration, no change \u2714");
                return [2
                /*return*/
                , false];
              }

              has_valuable_difference = !bkp__current || state_utils_1.fluid_select(some_state).has_valuable_difference_with(bkp__current);

              if (!has_valuable_difference) {
                logger.trace("[" + LIB + "] _enqueue_in_bkp_pipeline(): no valuable change \u2714");
                return [2
                /*return*/
                , false];
              }

              logger.trace("[" + LIB + "] _enqueue_in_bkp_pipeline(): valuable change\u2026");
              promises = [];
              bkp__recent = bkp__current;
              bkp__current = some_state;
              promises.push(_optimized_store_key_value(exports.StorageKey.bkp_main, bkp__current));

              if (bkp__recent) {
                if (state_utils_1.get_schema_version_loose(bkp__recent) === state_1.SCHEMA_VERSION) promises.push(_optimized_store_key_value(exports.StorageKey.bkp_minor, bkp__recent));else {
                  // cleanup, we move it to the major pipeline, cf. lines below
                  storage.removeItem(exports.StorageKey.bkp_minor);
                  bkp__recent = undefined;
                }
              }

              if (recovered_states_unmigrated_ordered_oldest_first.length) logger.trace("[" + LIB + "] _enqueue_in_bkp_pipeline(): this is the first valuable change, moving restored states along the major bkp pipeline\u2026");

              while (recovered_states_unmigrated_ordered_oldest_first.length) {
                some_legacy_state = recovered_states_unmigrated_ordered_oldest_first.shift();
                if (state_utils_1.get_schema_version_loose(some_legacy_state) < state_1.SCHEMA_VERSION) promises.push(_enqueue_in_major_bkp_pipeline(some_legacy_state));
              }

              return [4
              /*yield*/
              , Promise.all(promises)];

            case 1:
              _a.sent();

              return [2
              /*return*/
              , true];
          }
        });
      });
    } // EXPECTED: values are presented from the oldest to the newest!


    function _enqueue_in_major_bkp_pipeline(legacy_state) {
      return __awaiter(this, void 0, Promise, function () {
        var most_recent_previous_major_version, is_major_update, has_valuable_difference;
        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              most_recent_previous_major_version = bkp__older[0];
              logger.trace("[" + LIB + "] _enqueue_in_major_bkp_pipeline()", __assign(__assign({}, state_utils_1.fluid_select(legacy_state).get_debug_infos_about_comparison_with(most_recent_previous_major_version, 'enqueued', 'most_recent_major')), {
                current_major_bkp_pipeline: JSON.parse(JSON.stringify(bkp__older))
              }));
              tiny_invariant_1.default(state_utils_1.fluid_select(legacy_state).has_higher_or_equal_schema_version_than(most_recent_previous_major_version), "_enqueue_in_major_bkp_pipeline() candidate should >= version than most recent major");
              is_major_update = state_utils_1.fluid_select(legacy_state).has_higher_schema_version_than(most_recent_previous_major_version);

              if (is_major_update) {
                bkp__older = [legacy_state, bkp__older[0]].filter(function (s) {
                  return !!s;
                });
              } else {
                has_valuable_difference = state_utils_1.fluid_select(legacy_state).has_valuable_difference_with(most_recent_previous_major_version);
                if (!has_valuable_difference) return [2
                /*return*/
                , false];
                bkp__older[0] = legacy_state;
              }

              logger.trace("[" + LIB + "] _enqueue_in_major_bkp_pipeline(): saving major", state_utils_1.get_base_loose(bkp__older[0]));
              return [4
              /*yield*/
              , _optimized_store_key_value(exports.StorageKey.bkp_major_old, bkp__older[0])];

            case 1:
              _a.sent();

              if (!bkp__older[1]) return [3
              /*break*/
              , 3];
              logger.trace("[" + LIB + "] _enqueue_in_major_bkp_pipeline(): saving major-1", state_utils_1.get_base_loose(bkp__older[1]));
              return [4
              /*yield*/
              , _optimized_store_key_value(exports.StorageKey.bkp_major_older, bkp__older[1])];

            case 2:
              _a.sent();

              _a.label = 3;

            case 3:
              return [2
              /*return*/
              , true];
          }
        });
      });
    } /////////////////////////////////////////////////
    // recover from bkp (we handle potentially sparse bkp pipeline)


    try {
      logger.verbose("[" + LIB + "] attempting to restore\u2026"); // XXX this code block is tricky, beware sync/async
      // read and store everything needed in memory

      recovered_states_unmigrated_ordered_oldest_first = __spreadArray(__spreadArray([], bkp__older), [bkp__current || bkp__recent]).filter(function (s) {
        return !!s;
      }).sort(state_utils_1.UNCLEAR_compare);
      bkp__older = []; // reset since we hold the backups in the var above now

      if (recovered_states_unmigrated_ordered_oldest_first.length) logger.trace("[" + LIB + "] found " + recovered_states_unmigrated_ordered_oldest_first.length + " past backups:", __assign(__assign(__assign(__assign({
        recovered_states_unmigrated_ordered_most_recent_first: JSON.parse(JSON.stringify(recovered_states_unmigrated_ordered_oldest_first))
      }, bkp__current && {
        main: bkp__current
      }), bkp__recent && {
        minor: bkp__recent
      }), bkp__older[0] && {
        major_1: bkp__older[0]
      }), bkp__older[1] && {
        major_2: bkp__older[1]
      }));
      var most_recent_unmigrated_bkp = recovered_states_unmigrated_ordered_oldest_first.slice(-1)[0];

      if (!most_recent_unmigrated_bkp) {
        logger.trace("[" + LIB + "] found NO candidate state to be restored.");
      } else {
        logger.trace("[" + LIB + "] found candidate state to be restored", state_utils_1.get_base_loose(most_recent_unmigrated_bkp));
        logger.trace("[" + LIB + "] automigrating and restoring this candidate state\u2026"); // memorize it for later

        restored_migrated = migrate_to_latest(SEC, // deep clone in case the migration is not immutable (seen!)
        JSON.parse(JSON.stringify(most_recent_unmigrated_bkp))); // immediate sync restoration

        set(restored_migrated);

        if (dispatcher) {// NO DISPATCH ON RESTORATION!
          // - We can't do it SYNC because all the stores may not be plugged in yet
          // - We can't do it ASYNC because dependents would need to wait with sth like a promise
          // Eventually, we let the caller (plugging stores to dispatcher) do it.
          //logger.trace(`[${LIB}] forwarding the restored state to the dispatcher…`)
          //dispatcher.dispatch(create_action__set(restored_migrated!))
        }
      }
    } catch (err) {
      _on_error(err);
    } /////////////////////////////////////////////////


    function set(new_state) {
      var has_valuable_difference = !state || state_utils_1.fluid_select(new_state).has_valuable_difference_with(state);
      logger.trace("[" + LIB + "].set()", {
        new_state: state_utils_1.get_base_loose(new_state),
        existing_state: state_utils_1.get_base_loose(state)
      });

      if (!state) {
        logger.trace("[" + LIB + "].set(): init \u2714");
      } else if (new_state === state) {
        logger.warn("[" + LIB + "].set(): echo ?");
        return;
      } else if (!has_valuable_difference) {
        logger.trace("[" + LIB + "].set(): no semantic change \u2714");
        return;
      }

      state = new_state;
      emitter.emit(EMITTER_EVT);

      _enqueue_in_bkp_pipeline(state).catch(_on_error);
    }

    function get() {
      tiny_invariant_1.default(state, "[" + LIB + "].get(): should be initialized");
      return state;
    }

    function on_dispatch(action, eventual_state_hint) {
      logger.trace("[" + LIB + "] \u26A1 action dispatched: " + action.type, {
        eventual_state_hint: state_utils_1.get_base_loose(eventual_state_hint)
      });
      tiny_invariant_1.default(state || eventual_state_hint, "[" + LIB + "].on_dispatch(): should be provided a hint or a previous state");
      tiny_invariant_1.default(!!eventual_state_hint, "[" + LIB + "].on_dispatch(): (upper level architectural invariant) hint is mandatory in this store");
      var previous_state = state;
      state = eventual_state_hint || reduce_action_1.reduce_action(state, action);
      var has_valuable_difference = !previous_state || state_utils_1.fluid_select(state).has_valuable_difference_with(previous_state);
      logger.trace("[" + LIB + "] \u26A1 action dispatched & reduced:", {
        current_rev: state_utils_1.get_revision_loose(previous_state),
        new_rev: state_utils_1.get_revision_loose(state),
        has_valuable_difference: has_valuable_difference
      });

      if (!has_valuable_difference) {
        return;
      }

      emitter.emit(EMITTER_EVT);

      _enqueue_in_bkp_pipeline(state).catch(_on_error);
    }

    function subscribe(debug_id, listener) {
      emitter.on(EMITTER_EVT, listener);
      if (state) listener(); // semantically disputable, but for convenience

      return function () {
        return emitter.off(EMITTER_EVT, listener);
      };
    }

    return {
      get: get,
      on_dispatch: on_dispatch,
      subscribe: subscribe,
      set: set
    };
  });
}

exports.create = create;
exports.default = create;
},{"tiny-invariant":"VYmh","emittery":"NksD","json-stable-stringify":"lUru","@offirmo-private/state-utils":"PmVE","@offirmo-private/async-utils":"i8Ln","@tbrpg/state":"AY8x","../../utils/reduce-action":"Uoli","../../utils/try_or_fallback":"pwdD"}],"Fg1V":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var emittery_1 = __importDefault(require("emittery"));

var state_utils_1 = require("@offirmo-private/state-utils");

var reduce_action_1 = require("../../utils/reduce-action"); /////////////////////////////////////////////////


var EMITTER_EVT = 'change';

function create(SEC) {
  var LIB = "\uD83D\uDDC3\u2D67\uD83D\uDD35in-mem";
  return SEC.xTry("creating " + LIB + "\u2026", function (_a) {
    var logger = _a.logger;
    logger.trace("[" + LIB + "].create()\u2026");
    var state = undefined;
    var emitter = new emittery_1.default(); /////////////////////////////////////////////////

    function set(new_state) {
      var has_valuable_difference = !state || state_utils_1.fluid_select(new_state).has_valuable_difference_with(state);
      logger.trace("[" + LIB + "].set()", {
        state: state_utils_1.get_base_loose(new_state),
        has_valuable_difference: has_valuable_difference
      });

      if (!state) {
        logger.trace("[" + LIB + "].set(): init \u2714");
      } else if (!has_valuable_difference) {
        logger.trace("[" + LIB + "].set(): no valuable change \u2714");
        return;
      }

      state = new_state;
      emitter.emit(EMITTER_EVT);
    }

    function get() {
      tiny_invariant_1.default(state, "[" + LIB + "].get(): should be initialized!");
      return state;
    }

    function on_dispatch(action, eventual_state_hint) {
      logger.trace("[" + LIB + "] \u26A1 action dispatched: " + action.type, {
        eventual_state_hint: state_utils_1.get_base_loose(eventual_state_hint)
      });
      tiny_invariant_1.default(state || eventual_state_hint, "[" + LIB + "].on_dispatch(): should be provided a hint or a previous state");
      tiny_invariant_1.default(!eventual_state_hint, "[" + LIB + "].on_dispatch(): (upper level architectural invariant) hint not expected in this store");
      var previous_state = state;
      state = eventual_state_hint || reduce_action_1.reduce_action(state, action);
      var has_valuable_difference = state !== previous_state;
      logger.trace("[" + LIB + "] \u26A1 action dispatched & reduced:", {
        current_rev: state_utils_1.get_revision_loose(previous_state),
        new_rev: state_utils_1.get_revision_loose(state),
        has_valuable_difference: has_valuable_difference
      });

      if (!has_valuable_difference) {
        return;
      }

      emitter.emit(EMITTER_EVT);
    }

    function subscribe(debug_id, listener) {
      emitter.on(EMITTER_EVT, listener);
      return function () {
        return emitter.off(EMITTER_EVT, listener);
      };
    }

    return {
      get: get,
      on_dispatch: on_dispatch,
      subscribe: subscribe,
      set: set
    };
  });
}

exports.create = create;
exports.default = create;
},{"tiny-invariant":"VYmh","emittery":"NksD","@offirmo-private/state-utils":"PmVE","../../utils/reduce-action":"Uoli"}],"kH2j":[function(require,module,exports) {
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

},{}],"NsA6":[function(require,module,exports) {
var global = arguments[3];
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

},{}],"lGgN":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

},{"./_freeGlobal":"NsA6"}],"qqTa":[function(require,module,exports) {
var root = require('./_root');

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;

},{"./_root":"lGgN"}],"Yi4Y":[function(require,module,exports) {
/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

module.exports = trimmedEndIndex;

},{}],"c3od":[function(require,module,exports) {
var trimmedEndIndex = require('./_trimmedEndIndex');

/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

module.exports = baseTrim;

},{"./_trimmedEndIndex":"Yi4Y"}],"pmHM":[function(require,module,exports) {
var root = require('./_root');

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;

},{"./_root":"lGgN"}],"R82n":[function(require,module,exports) {
var Symbol = require('./_Symbol');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

},{"./_Symbol":"pmHM"}],"p19t":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

},{}],"ZIss":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;

},{"./_Symbol":"pmHM","./_getRawTag":"R82n","./_objectToString":"p19t"}],"zdjG":[function(require,module,exports) {
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],"TDXl":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;

},{"./_baseGetTag":"ZIss","./isObjectLike":"zdjG"}],"zWxU":[function(require,module,exports) {
var baseTrim = require('./_baseTrim'),
    isObject = require('./isObject'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;

},{"./_baseTrim":"c3od","./isObject":"kH2j","./isSymbol":"TDXl"}],"IwFz":[function(require,module,exports) {
var isObject = require('./isObject'),
    now = require('./now'),
    toNumber = require('./toNumber');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;

},{"./isObject":"kH2j","./now":"qqTa","./toNumber":"zWxU"}],"wGzI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SERVER_RESPONSE_VERSION = exports.Endpoint = exports.HEADER_IMPERSONATE = exports.LIB = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////////////////////////////////


exports.LIB = '@online-adventur.es/api-interface'; /////////////////////////////////////////////////

exports.HEADER_IMPERSONATE = "X-OFFIRMO-IMPERSONATE".toLowerCase(); // tslint:disable-next-line: variable-name

exports.Endpoint = typescript_string_enums_1.Enum('whoami', 'report-error', 'key-value', // dev
'echo', 'hello-world', 'hello-world-advanced', 'test-error-handling', 'temp');
exports.SERVER_RESPONSE_VERSION = 1;
},{"typescript-string-enums":"qyCc"}],"vqnn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReleaseChannel = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); // tslint:disable-next-line: variable-name


exports.ReleaseChannel = typescript_string_enums_1.Enum('prod', 'staging', 'dev');
},{"typescript-string-enums":"qyCc"}],"zV3e":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_server_response_body = exports.create_server_response_body__data = exports.create_server_response_body__error = exports.create_server_response_body__blank = exports.get_api_base_url = exports.get_allowed_origin = void 0;

var universal_debug_api_placeholder_1 = require("@offirmo/universal-debug-api-placeholder");

var consts_1 = require("./consts"); /////////////////////////////////////////////////


function get_allowed_origin(channel) {
  switch (channel) {
    case 'dev':
      return 'http://localhost:8080';

    case 'staging':
      return 'https://offirmo-monorepo.netlify.app';

    case 'prod':
      return 'https://www.online-adventur.es';

    default:
      throw new Error("[" + consts_1.LIB + "] no allowed origin for channel \"" + channel + "\"!");
  }
}

exports.get_allowed_origin = get_allowed_origin;

function _get_api_base_url(channel) {
  switch (channel) {
    case 'dev':
      return 'http://localhost:9000';

    case 'staging':
      return 'https://offirmo-monorepo.netlify.app/.netlify/functions';

    case 'prod':
      return 'https://www.online-adventur.es/.netlify/functions';

    default:
      if (channel === 'unknown') return 'https://test.test';
      throw new Error("[" + consts_1.LIB + "] no base URL for channel \"" + channel + "\"!");
  }
}

function get_api_base_url(channel) {
  return universal_debug_api_placeholder_1.overrideHook('api-base-url', _get_api_base_url(channel));
}

exports.get_api_base_url = get_api_base_url;

function create_server_response_body__blank() {
  return {
    v: consts_1.SERVER_RESPONSE_VERSION,
    data: undefined,
    error: undefined,
    side: {},
    meta: {}
  };
}

exports.create_server_response_body__blank = create_server_response_body__blank;

function create_server_response_body__error(error) {
  var _a, _b;

  var body = create_server_response_body__blank();
  body.error = {
    message: error.message,
    code: error.code,
    logical_stack: (_b = (_a = error._temp) === null || _a === void 0 ? void 0 : _a.SEC) === null || _b === void 0 ? void 0 : _b.getLogicalStack()
  };
  return body;
}

exports.create_server_response_body__error = create_server_response_body__error;

function create_server_response_body__data(data) {
  var body = create_server_response_body__blank();
  body.data = data;
  return body;
}

exports.create_server_response_body__data = create_server_response_body__data;

function is_server_response_body(body) {
  return body && body.v && body.side && body.meta && (body.data || body.error);
}

exports.is_server_response_body = is_server_response_body;
},{"@offirmo/universal-debug-api-placeholder":"sw2i","./consts":"wGzI"}],"sroZ":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./consts"), exports);

__exportStar(require("./types"), exports);

__exportStar(require("./utils"), exports);
},{"./consts":"wGzI","./types":"vqnn","./utils":"zV3e"}],"W6m3":[function(require,module,exports) {
var global = arguments[3];
var define;
(function (global) {
  'use strict';

  function fetchPonyfill(options) {
    var Promise = options && options.Promise || global.Promise;
    var XMLHttpRequest = options && options.XMLHttpRequest || global.XMLHttpRequest;

    return (function () {
      var globalThis = Object.create(global, {
        fetch: {
          value: undefined,
          writable: true
        }
      });

      (function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
        typeof define === 'function' && define.amd ? define(['exports'], factory) :
        (factory((global.WHATWGFetch = {})));
      }(this, (function (exports) { 'use strict';

        var global =
          (typeof globalThis !== 'undefined' && globalThis) ||
          (typeof self !== 'undefined' && self) ||
          (typeof global !== 'undefined' && global);

        var support = {
          searchParams: 'URLSearchParams' in global,
          iterable: 'Symbol' in global && 'iterator' in Symbol,
          blob:
            'FileReader' in global &&
            'Blob' in global &&
            (function() {
              try {
                new Blob();
                return true
              } catch (e) {
                return false
              }
            })(),
          formData: 'FormData' in global,
          arrayBuffer: 'ArrayBuffer' in global
        };

        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj)
        }

        if (support.arrayBuffer) {
          var viewClasses = [
            '[object Int8Array]',
            '[object Uint8Array]',
            '[object Uint8ClampedArray]',
            '[object Int16Array]',
            '[object Uint16Array]',
            '[object Int32Array]',
            '[object Uint32Array]',
            '[object Float32Array]',
            '[object Float64Array]'
          ];

          var isArrayBufferView =
            ArrayBuffer.isView ||
            function(obj) {
              return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
            };
        }

        function normalizeName(name) {
          if (typeof name !== 'string') {
            name = String(name);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {
            throw new TypeError('Invalid character in header field name')
          }
          return name.toLowerCase()
        }

        function normalizeValue(value) {
          if (typeof value !== 'string') {
            value = String(value);
          }
          return value
        }

        // Build a destructive iterator for the value list
        function iteratorFor(items) {
          var iterator = {
            next: function() {
              var value = items.shift();
              return {done: value === undefined, value: value}
            }
          };

          if (support.iterable) {
            iterator[Symbol.iterator] = function() {
              return iterator
            };
          }

          return iterator
        }

        function Headers(headers) {
          this.map = {};

          if (headers instanceof Headers) {
            headers.forEach(function(value, name) {
              this.append(name, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function(header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function(name) {
              this.append(name, headers[name]);
            }, this);
          }
        }

        Headers.prototype.append = function(name, value) {
          name = normalizeName(name);
          value = normalizeValue(value);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ', ' + value : value;
        };

        Headers.prototype['delete'] = function(name) {
          delete this.map[normalizeName(name)];
        };

        Headers.prototype.get = function(name) {
          name = normalizeName(name);
          return this.has(name) ? this.map[name] : null
        };

        Headers.prototype.has = function(name) {
          return this.map.hasOwnProperty(normalizeName(name))
        };

        Headers.prototype.set = function(name, value) {
          this.map[normalizeName(name)] = normalizeValue(value);
        };

        Headers.prototype.forEach = function(callback, thisArg) {
          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
        };

        Headers.prototype.keys = function() {
          var items = [];
          this.forEach(function(value, name) {
            items.push(name);
          });
          return iteratorFor(items)
        };

        Headers.prototype.values = function() {
          var items = [];
          this.forEach(function(value) {
            items.push(value);
          });
          return iteratorFor(items)
        };

        Headers.prototype.entries = function() {
          var items = [];
          this.forEach(function(value, name) {
            items.push([name, value]);
          });
          return iteratorFor(items)
        };

        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }

        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError('Already read'))
          }
          body.bodyUsed = true;
        }

        function fileReaderReady(reader) {
          return new Promise(function(resolve, reject) {
            reader.onload = function() {
              resolve(reader.result);
            };
            reader.onerror = function() {
              reject(reader.error);
            };
          })
        }

        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise
        }

        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise
        }

        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);

          for (var i = 0; i < view.length; i++) {
            chars[i] = String.fromCharCode(view[i]);
          }
          return chars.join('')
        }

        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0)
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer
          }
        }

        function Body() {
          this.bodyUsed = false;

          this._initBody = function(body) {
            /*
              fetch-mock wraps the Response object in an ES6 Proxy to
              provide useful test harness features such as flush. However, on
              ES5 browsers without fetch or Proxy support pollyfills must be used;
              the proxy-pollyfill is unable to proxy an attribute unless it exists
              on the object before the Proxy is created. This change ensures
              Response.bodyUsed exists on the instance, while maintaining the
              semantic of setting Request.bodyUsed in the constructor before
              _initBody is called.
            */
            this.bodyUsed = this.bodyUsed;
            this._bodyInit = body;
            if (!body) {
              this._bodyText = '';
            } else if (typeof body === 'string') {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              // IE 10-11 can't handle a DataView body.
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }

            if (!this.headers.get('content-type')) {
              if (typeof body === 'string') {
                this.headers.set('content-type', 'text/plain;charset=UTF-8');
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set('content-type', this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
              }
            }
          };

          if (support.blob) {
            this.blob = function() {
              var rejected = consumed(this);
              if (rejected) {
                return rejected
              }

              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob)
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]))
              } else if (this._bodyFormData) {
                throw new Error('could not read FormData body as blob')
              } else {
                return Promise.resolve(new Blob([this._bodyText]))
              }
            };

            this.arrayBuffer = function() {
              if (this._bodyArrayBuffer) {
                var isConsumed = consumed(this);
                if (isConsumed) {
                  return isConsumed
                }
                if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
                  return Promise.resolve(
                    this._bodyArrayBuffer.buffer.slice(
                      this._bodyArrayBuffer.byteOffset,
                      this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                    )
                  )
                } else {
                  return Promise.resolve(this._bodyArrayBuffer)
                }
              } else {
                return this.blob().then(readBlobAsArrayBuffer)
              }
            };
          }

          this.text = function() {
            var rejected = consumed(this);
            if (rejected) {
              return rejected
            }

            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob)
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
            } else if (this._bodyFormData) {
              throw new Error('could not read FormData body as text')
            } else {
              return Promise.resolve(this._bodyText)
            }
          };

          if (support.formData) {
            this.formData = function() {
              return this.text().then(decode)
            };
          }

          this.json = function() {
            return this.text().then(JSON.parse)
          };

          return this
        }

        // HTTP methods whose capitalization should be normalized
        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method
        }

        function Request(input, options) {
          if (!(this instanceof Request)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
          }

          options = options || {};
          var body = options.body;

          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError('Already read')
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }

          this.credentials = options.credentials || this.credentials || 'same-origin';
          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || 'GET');
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal;
          this.referrer = null;

          if ((this.method === 'GET' || this.method === 'HEAD') && body) {
            throw new TypeError('Body not allowed for GET or HEAD requests')
          }
          this._initBody(body);

          if (this.method === 'GET' || this.method === 'HEAD') {
            if (options.cache === 'no-store' || options.cache === 'no-cache') {
              // Search for a '_' parameter in the query string
              var reParamSearch = /([?&])_=[^&]*/;
              if (reParamSearch.test(this.url)) {
                // If it already exists then set the value with the current time
                this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());
              } else {
                // Otherwise add a new '_' parameter to the end with the current time
                var reQueryString = /\?/;
                this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();
              }
            }
          }
        }

        Request.prototype.clone = function() {
          return new Request(this, {body: this._bodyInit})
        };

        function decode(body) {
          var form = new FormData();
          body
            .trim()
            .split('&')
            .forEach(function(bytes) {
              if (bytes) {
                var split = bytes.split('=');
                var name = split.shift().replace(/\+/g, ' ');
                var value = split.join('=').replace(/\+/g, ' ');
                form.append(decodeURIComponent(name), decodeURIComponent(value));
              }
            });
          return form
        }

        function parseHeaders(rawHeaders) {
          var headers = new Headers();
          // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
          // https://tools.ietf.org/html/rfc7230#section-3.2
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
          // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
          // https://github.com/github/fetch/issues/748
          // https://github.com/zloirock/core-js/issues/751
          preProcessedHeaders
            .split('\r')
            .map(function(header) {
              return header.indexOf('\n') === 0 ? header.substr(1, header.length) : header
            })
            .forEach(function(line) {
              var parts = line.split(':');
              var key = parts.shift().trim();
              if (key) {
                var value = parts.join(':').trim();
                headers.append(key, value);
              }
            });
          return headers
        }

        Body.call(Request.prototype);

        function Response(bodyInit, options) {
          if (!(this instanceof Response)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.')
          }
          if (!options) {
            options = {};
          }

          this.type = 'default';
          this.status = options.status === undefined ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = 'statusText' in options ? options.statusText : '';
          this.headers = new Headers(options.headers);
          this.url = options.url || '';
          this._initBody(bodyInit);
        }

        Body.call(Response.prototype);

        Response.prototype.clone = function() {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          })
        };

        Response.error = function() {
          var response = new Response(null, {status: 0, statusText: ''});
          response.type = 'error';
          return response
        };

        var redirectStatuses = [301, 302, 303, 307, 308];

        Response.redirect = function(url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError('Invalid status code')
          }

          return new Response(null, {status: status, headers: {location: url}})
        };

        exports.DOMException = global.DOMException;
        try {
          new exports.DOMException();
        } catch (err) {
          exports.DOMException = function(message, name) {
            this.message = message;
            this.name = name;
            var error = Error(message);
            this.stack = error.stack;
          };
          exports.DOMException.prototype = Object.create(Error.prototype);
          exports.DOMException.prototype.constructor = exports.DOMException;
        }

        function fetch(input, init) {
          return new Promise(function(resolve, reject) {
            var request = new Request(input, init);

            if (request.signal && request.signal.aborted) {
              return reject(new exports.DOMException('Aborted', 'AbortError'))
            }

            var xhr = new XMLHttpRequest();

            function abortXhr() {
              xhr.abort();
            }

            xhr.onload = function() {
              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || '')
              };
              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
              var body = 'response' in xhr ? xhr.response : xhr.responseText;
              setTimeout(function() {
                resolve(new Response(body, options));
              }, 0);
            };

            xhr.onerror = function() {
              setTimeout(function() {
                reject(new TypeError('Network request failed'));
              }, 0);
            };

            xhr.ontimeout = function() {
              setTimeout(function() {
                reject(new TypeError('Network request failed'));
              }, 0);
            };

            xhr.onabort = function() {
              setTimeout(function() {
                reject(new exports.DOMException('Aborted', 'AbortError'));
              }, 0);
            };

            function fixUrl(url) {
              try {
                return url === '' && global.location.href ? global.location.href : url
              } catch (e) {
                return url
              }
            }

            xhr.open(request.method, fixUrl(request.url), true);

            if (request.credentials === 'include') {
              xhr.withCredentials = true;
            } else if (request.credentials === 'omit') {
              xhr.withCredentials = false;
            }

            if ('responseType' in xhr) {
              if (support.blob) {
                xhr.responseType = 'blob';
              } else if (
                support.arrayBuffer &&
                request.headers.get('Content-Type') &&
                request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1
              ) {
                xhr.responseType = 'arraybuffer';
              }
            }

            if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {
              Object.getOwnPropertyNames(init.headers).forEach(function(name) {
                xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
              });
            } else {
              request.headers.forEach(function(value, name) {
                xhr.setRequestHeader(name, value);
              });
            }

            if (request.signal) {
              request.signal.addEventListener('abort', abortXhr);

              xhr.onreadystatechange = function() {
                // DONE (success or failure)
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener('abort', abortXhr);
                }
              };
            }

            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
          })
        }

        fetch.polyfill = true;

        if (!global.fetch) {
          global.fetch = fetch;
          global.Headers = Headers;
          global.Request = Request;
          global.Response = Response;
        }

        exports.Headers = Headers;
        exports.Request = Request;
        exports.Response = Response;
        exports.fetch = fetch;

        Object.defineProperty(exports, '__esModule', { value: true });

      })));


      return {
        fetch: globalThis.fetch,
        Headers: globalThis.Headers,
        Request: globalThis.Request,
        Response: globalThis.Response,
        DOMException: globalThis.DOMException
      };
    }());
  }

  if (typeof define === 'function' && define.amd) {
    define(function () {
      return fetchPonyfill;
    });
  } else if (typeof exports === 'object') {
    module.exports = fetchPonyfill;
  } else {
    global.fetchPonyfill = fetchPonyfill;
  }
}(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof global !== 'undefined' ? global : this));


},{}],"Y62H":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetch_oa = exports.HeadersV = void 0;

var fetch_ponyfill_1 = __importDefault(require("fetch-ponyfill"));

var error_utils_1 = require("@offirmo/error-utils");

var soft_execution_context_1 = require("@offirmo-private/soft-execution-context");

var state_utils_1 = require("@offirmo-private/state-utils");

var api_interface_1 = require("@online-adventur.es/api-interface"); /////////////////////////////////////////////////


var _a = fetch_ponyfill_1.default(),
    fetch = _a.fetch,
    ResponseV = _a.Response,
    HeadersV = _a.Headers;

exports.HeadersV = HeadersV; /////////////////////////////////////////////////

var _state = {
  request_count: 0,
  error_count: 0 // circuit breaker to avoid killing Netlify free tier

};

function fetch_oa(_a) {
  var _b = _a === void 0 ? {} : _a,
      _c = _b.SEC,
      SEC = _c === void 0 ? soft_execution_context_1.getRootSEC() : _c,
      url = _b.url,
      _d = _b.method,
      method = _d === void 0 ? 'GET' : _d,
      _e = _b.headers,
      headers = _e === void 0 ? {} : _e,
      body = _b.body,
      _f = _b.timeout_ms,
      timeout_ms = _f === void 0 ? 10000 : _f;

  return __awaiter(this, void 0, Promise, function () {
    var _this = this;

    return __generator(this, function (_g) {
      return [2
      /*return*/
      , SEC.xPromiseTry('fetch_oa', function (_a) {
        var SEC = _a.SEC,
            logger = _a.logger,
            CHANNEL = _a.CHANNEL;
        return __awaiter(_this, void 0, void 0, function () {
          var request_id, channel, headers_from_SEC, fetch_response, response_for_logging, candidate_error;
          return __generator(this, function (_b) {
            request_id = ++_state.request_count;
            channel = CHANNEL;
            logger.trace("fetch_oa() #" + request_id + "\u2026", {
              method: method,
              url: url,
              body: body,
              headers: headers
            });
            headers_from_SEC = SEC.getInjectedDependencies().shared_fetch_headers || {};
            if (_state.error_count > 25) throw new Error("fetch_oa(): too many errors in the past, circuit breaker!"); // TODO improve with debounce

            url = [api_interface_1.get_api_base_url(channel), url].join('/');
            headers = __assign(__assign(__assign({}, headers_from_SEC), headers), {
              'Content-Type': 'application/json'
            });
            fetch_response = undefined;
            candidate_error = null;
            return [2
            /*return*/
            , Promise.race([new Promise(function (resolve, reject) {
              return setTimeout(function () {
                reject(new Error('Timeout!'));
              }, timeout_ms);
            }), fetch(url, {
              method: method,
              headers: headers,
              body: JSON.stringify(body)
            })]).then(function (response) {
              logger.trace("fetch_oa() #" + request_id + ": got fetch response", {
                method: method,
                url: url,
                ok: response.ok,
                response: response
              });
              response_for_logging = fetch_response = response.clone(); // reminder: we can't destructure response because .json() needs a binding to response

              if (!response.ok) {
                candidate_error = error_utils_1.createError("HTTP error " + response.status + " \"" + response.statusText + "\"!", {
                  statusCode: response.status
                });
              } // even if the response has an error status, we still need to attempt decoding the json
              // since it can hold error data


              if (response.status === 404) {
                // no way to have an OA response if there is no answering endpoint
                return;
              } else {
                return response.json().then(function (response) {
                  return response;
                }, function (err) {
                  // failure in decoding
                  candidate_error = candidate_error || err;
                  return; // will pick the candidate error
                });
              }
            }).then(function (response) {
              logger.trace("fetch_oa() #" + request_id + ": got json body", {
                method: method,
                url: url,
                response: response
              });
              response_for_logging = response;
              if (!response) throw candidate_error || new Error('No response data!');
              var v = response.v,
                  error = response.error,
                  data = response.data,
                  _a = response.side,
                  side = _a === void 0 ? {} : _a,
                  _b = response.meta,
                  meta = _b === void 0 ? {} : _b;
              if (!v) throw new Error('body doesnt have the expected OA response format!');
              if (v !== 1) throw new Error('Invalid OA response format version!');

              if (error) {
                throw error_utils_1.createError('', error);
              } // now that we handled the possible error in body, we can fall back to the auto one


              if (!fetch_response.ok) {
                throw candidate_error;
              }

              logger.trace("fetch_oa() #" + request_id + ": got OA response body", {
                method: method,
                url: url,
                v: v,
                error: error,
                data: data,
                side: side,
                meta: meta
              });

              if (!data) {
                throw new Error('No response data!');
              }

              return state_utils_1.enforce_immutability({
                data: data,
                side: side
              });
            }).catch(function (err) {
              logger.warn("fetch_oa() #" + request_id + " ended with an error!", {
                method: method,
                url: url,
                response: response_for_logging,
                err: err,
                err_message: err.message
              });
              _state.error_count++;
              throw err;
            })];
          });
        });
      })];
    });
  });
}

exports.fetch_oa = fetch_oa;
},{"fetch-ponyfill":"W6m3","@offirmo/error-utils":"Ugq1","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/state-utils":"PmVE","@online-adventur.es/api-interface":"sroZ"}],"rRLw":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("@online-adventur.es/api-interface"), exports);

__exportStar(require("./fetch"), exports);
},{"@online-adventur.es/api-interface":"sroZ","./fetch":"Y62H"}],"pTv2":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create = void 0;

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var emittery_1 = __importDefault(require("emittery"));

var debounce_1 = __importDefault(require("lodash/debounce"));

var universal_debug_api_placeholder_1 = require("@offirmo/universal-debug-api-placeholder");

var timestamps_1 = require("@offirmo-private/timestamps");

var state_utils_1 = require("@offirmo-private/state-utils");

var globalthis_ponyfill_1 = require("@offirmo/globalthis-ponyfill");

var TBRPGState = __importStar(require("@tbrpg/state"));

var state_1 = require("@tbrpg/state");

var interfaces_1 = require("@tbrpg/interfaces");

var api_client_1 = require("@online-adventur.es/api-client");

var reduce_action_1 = require("../../utils/reduce-action"); /////////////////////////////////////////////////


var EMITTER_EVT = 'change';

function get_cloud_key(state) {
  var slot_id = state === null || state === void 0 ? void 0 : state.u_state.meta.slot_id;
  return 'the-boring-rpg.savegame' + (slot_id ? "#" + slot_id : '');
}

function is_online(state) {
  var _a, _b;

  if (!((_b = (_a = globalthis_ponyfill_1.getGlobalThis().navigator) === null || _a === void 0 ? void 0 : _a.onLine) !== null && _b !== void 0 ? _b : true)) return false;
  return true;
}

function is_healthy(state) {
  if (state.error_count > 5) return false;
  return true;
}

function has_recent_sync(state) {
  var now = timestamps_1.get_UTC_timestamp_ms();
  if (now - state.last_successful_sync_tms >= 30 * 60 * 1000) return false;
  return true;
}

function on_network_error(state, err) {
  // TODO snoop offline?
  return __assign(__assign({}, state), {
    error_count: state.error_count + 1
  });
}

function on_sync_result(state) {
  return __assign(__assign({}, state), {
    last_successful_sync_tms: timestamps_1.get_UTC_timestamp_ms(),
    error_count: 0
  });
} /////////////////////////////////////////////////


function create(SEC, storage, migrate_to_latest, dispatcher) {
  var LIB = "\uD83D\uDDC3\u2D67\uD83D\uDD34cloud";
  return SEC.xTry("creating " + LIB + "\u2026", function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger,
        CHANNEL = _a.CHANNEL;
    logger.trace("[" + LIB + "].create()\u2026");
    var cloud_sync_state = {
      last_successful_sync_tms: 0,
      error_count: 0
    };
    logger.verbose("[" + LIB + "] FYI API URL = \"" + api_client_1.get_api_base_url(CHANNEL) + "\""); /////////////////////////////////////////////////

    var state = undefined; /////////////////////////////////////////////////

    function _on_error(err) {
      logger.warn("[" + LIB + "] Error while processing", err); // TODO report to dispatcher
    } /////////////////////////////////////////////////


    var emitter = new emittery_1.default(); /////////////////////////////////////////////////

    var is_enabled = universal_debug_api_placeholder_1.overrideHook('cloud_save_enabled', false);
    var is_logged_in = false; // AFAWK

    var last_known_cloud_state = undefined;
    var is_sync_in_flight = false;
    var update_suggested = false;
    var warned_unhealthy = false;

    function should_sync() {
      var _is_initialised = !!state;

      var _is_online = is_online(cloud_sync_state);

      var _is_healthy = is_healthy(cloud_sync_state);

      var _has_valuable_difference = state && (!last_known_cloud_state || state_utils_1.fluid_select(state).has_valuable_difference_with(last_known_cloud_state));

      var _has_recent_sync = has_recent_sync(cloud_sync_state);

      var _should_sync = is_enabled && _is_initialised && _is_online && _is_healthy && (_has_valuable_difference || !_has_recent_sync) && !is_sync_in_flight;

      logger.trace("[" + LIB + "] thinking about a sync\u2026 Is it appropriate?", {
        should_sync: _should_sync,
        details: {
          is_enabled: is_enabled,
          _is_initialised: _is_initialised,
          _is_online: _is_online,
          _is_healthy: _is_healthy,
          candidate_rev: state_utils_1.get_revision_loose(state),
          last_known_cloud_rev: state_utils_1.get_revision_loose(last_known_cloud_state),
          _has_valuable_difference: _has_valuable_difference,
          _has_recent_sync: _has_recent_sync,
          is_sync_in_flight: is_sync_in_flight
        }
      });

      if (!_is_healthy) {
        // To avoid polluting the logs every tick
        logger[warned_unhealthy ? 'log' : 'warn']("[" + LIB + "] no longer syncing with the cloud, too many errors!");
        warned_unhealthy = true;
      }

      return _should_sync;
    } // TODO handle offline
    // TODO retries?
    // TODO spontaneous periodic sync -> for now we rely on periodic "time" sets


    function _NON_DEBOUNCED_sync_with_cloud() {
      return __awaiter(this, void 0, Promise, function () {
        var cloud_key, _should_sync, revision_on_last_sync_start, result, data, side, current_version, new_version, is_major, cloud_schema_version, has_valuable_difference, err_1;

        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              logger.warn("[" + LIB + "] [FYI debounce waking up or direct call]"); // temp for debug, exiting group

              cloud_key = get_cloud_key(state);
              _should_sync = should_sync();
              logger.trace("[" + LIB + "] _sync_with_cloud() [actual]\u2026", {
                _should_sync: _should_sync
              });

              if (!_should_sync) {
                logger.trace("[" + LIB + "] skipping cloud sync: there are reasons not to.");
                return [2
                /*return*/
                ];
              }

              _a.label = 1;

            case 1:
              _a.trys.push([1, 3,, 4]);

              logger.info("[" + LIB + "] _sync_with_cloud() initiating call\u2026");
              is_sync_in_flight = true;
              revision_on_last_sync_start = state_utils_1.get_revision_loose(state);
              return [4
              /*yield*/
              , api_client_1.fetch_oa({
                SEC: SEC,
                method: 'PATCH',
                url: api_client_1.Endpoint['key-value'] + '/' + cloud_key,
                body: state
              })];

            case 2:
              result = _a.sent();
              is_sync_in_flight = false;
              cloud_sync_state = on_sync_result(cloud_sync_state);
              logger.info("[" + LIB + "] _sync_with_cloud() got result:", result);

              try {
                data = result.data, side = result.side;

                if (side.tbrpg) {
                  if (side.tbrpg.NUMERIC_VERSION > state_1.NUMERIC_VERSION) {
                    if (!update_suggested) {
                      update_suggested = true;
                      current_version = state_1.NUMERIC_VERSION;
                      new_version = side.tbrpg.NUMERIC_VERSION;
                      is_major = new_version < 1 ? new_version - current_version >= 0.01 : new_version - current_version >= 1;
                      logger.warn("[" + LIB + "] outdated client! TODO suggest update", {
                        current_version: current_version,
                        new_version: new_version,
                        is_major: is_major
                      }); // bc we are using a stable API endpoint, updates should not be really needed
                      // TODO find an isomorphic way to suggest an update

                      /*if (getGlobalThis().confirm) {
                          const should_reload = getGlobalThis().confirm(
                              `A ${is_major ? 'major ' : ''}game update is available, do you want to update now?`
                          )
                          if (should_reload) {
                              execute_from_top(() => 	window.location.reload())
                          }
                      }*/
                    }
                  } else if (side.tbrpg.latest_news.length) {// TODO handle
                  }
                }

                last_known_cloud_state = data;

                if (state_utils_1.get_revision_loose(state) !== revision_on_last_sync_start) {
                  // the local state changed since we initiated the sync
                  // this result is outdated.
                  // we need to re-attempt to sync asap
                  _schedule_sync_with_cloud_if_needed_and_possible();

                  return [2
                  /*return*/
                  ];
                } // sync result should always be >= by design


                logger.trace("[" + LIB + "] _sync_with_cloud() got savegame:", __assign(__assign({}, state_utils_1.fluid_select(state).get_debug_infos_about_comparison_with(last_known_cloud_state, 'local', 'cloud')), {
                  semantic_difference: state_utils_1.UNCLEAR_get_difference__full(last_known_cloud_state, state)
                }));
                cloud_schema_version = state_utils_1.get_schema_version_loose(last_known_cloud_state);

                if (cloud_schema_version > state_1.SCHEMA_VERSION) {
                  // TODO trigger an update
                  tiny_invariant_1.default(cloud_schema_version <= state_1.SCHEMA_VERSION, "[" + LIB + "] schema version of cloud state should match");
                }

                if (cloud_schema_version < state_1.SCHEMA_VERSION) {
                  // either:
                  // - this is a new client (reinstall?) and the existing cloud save is old
                  // - a legacy client (ex. mobile app not up to date due to offline or store validation) is still active with higher involvement
                  // no worries, we can migrate it
                  last_known_cloud_state = migrate_to_latest(SEC, last_known_cloud_state);
                  cloud_schema_version = state_utils_1.get_schema_version_loose(last_known_cloud_state);
                  tiny_invariant_1.default(cloud_schema_version === state_1.SCHEMA_VERSION, "[" + LIB + "] schema version of cloud state should match after migration");
                }

                has_valuable_difference = !state || state_utils_1.fluid_select(last_known_cloud_state).has_valuable_difference_with(state);

                if (has_valuable_difference) {
                  if (dispatcher) {
                    dispatcher.dispatch(interfaces_1.create_action__set(TBRPGState.update_to_now(last_known_cloud_state)));
                  }
                } else {
                  // irrelevant diff, don't care
                  logger.verbose("[" + LIB + "] _sync_with_cloud() = we are in sync with the cloud \u2714");
                }
              } catch (err) {
                _on_error(err);
                /* swallow */

              }

              return [3
              /*break*/
              , 4];

            case 3:
              err_1 = _a.sent();
              is_sync_in_flight = false;
              cloud_sync_state = on_network_error(cloud_sync_state, err_1);
              return [3
              /*break*/
              , 4];

            case 4:
              return [2
              /*return*/
              ];
          }
        });
      });
    }

    var _DEBOUNCED_sync_with_cloud = debounce_1.default(function () {
      _NON_DEBOUNCED_sync_with_cloud().catch(_on_error);
    }, 5000, {
      maxWait: 30000,
      leading: true,
      trailing: true
    });

    function _schedule_sync_with_cloud_if_needed_and_possible() {
      logger.trace("[" + LIB + "] thinking about scheduling a sync\u2026");

      var _should_sync = should_sync();

      if (!_should_sync) {
        logger.trace("[" + LIB + "] skipping scheduling a cloud sync: there are no reasons to or reasons not to.");
        return;
      }

      logger.info("[" + LIB + "] scheduling a cloud sync\u2026 (debounced)");

      _DEBOUNCED_sync_with_cloud();
    } /////////////////////////////////////////////////


    logger.trace("[" + LIB + "] store is empty, waiting for an init+being logged in before triggering a sync.");

    if (globalthis_ponyfill_1.getGlobalThis().addEventListener) {
      globalthis_ponyfill_1.getGlobalThis().addEventListener('online', function () {
        if (state && is_logged_in && !has_recent_sync(cloud_sync_state)) _schedule_sync_with_cloud_if_needed_and_possible();
      });
    } /////////////////////////////////////////////////


    function set(new_state) {
      var has_valuable_difference = !state || state_utils_1.fluid_select(new_state).has_valuable_difference_with(state);
      logger.trace("[" + LIB + "].set()", {
        'new': state_utils_1.get_base_loose(new_state),
        existing: state_utils_1.get_base_loose(state),
        has_valuable_difference: has_valuable_difference
      });

      if (!state) {
        logger.trace("[" + LIB + "].set(): init \u2714");
      } else if (!has_valuable_difference) {
        logger.trace("[" + LIB + "].set(): no valuable change \u2714");
        return;
      }

      state = new_state;
      emitter.emit(EMITTER_EVT);
      if (!is_logged_in) return;

      _schedule_sync_with_cloud_if_needed_and_possible();
    }

    function get() {
      tiny_invariant_1.default(state, "[" + LIB + "].get(): never initialized");
      return state;
    }

    function on_dispatch(action, eventual_state_hint) {
      logger.trace("[" + LIB + "] \u26A1 action dispatched: " + action.type, {
        eventual_state_hint: state_utils_1.get_base_loose(eventual_state_hint)
      });
      tiny_invariant_1.default(state || eventual_state_hint, "[" + LIB + "].on_dispatch(): should be provided a hint or a previous state");
      tiny_invariant_1.default(!!eventual_state_hint, "[" + LIB + "].on_dispatch(): (upper level architectural invariant) hint is mandatory in this store");
      var previous_state = state;
      state = eventual_state_hint || reduce_action_1.reduce_action(state, action);
      var has_valuable_difference = !previous_state || state_utils_1.fluid_select(state).has_valuable_difference_with(previous_state);
      logger.trace("[" + LIB + "] \u26A1 action dispatched & reduced:", {
        current_rev: state_utils_1.get_revision_loose(previous_state),
        new_rev: state_utils_1.get_revision_loose(state),
        has_valuable_difference: has_valuable_difference
      }); // snoop on some actions

      switch (action.type) {
        case interfaces_1.ActionType.on_logged_in_refresh:
          {
            if (is_logged_in !== action.is_logged_in) {
              is_logged_in = action.is_logged_in;
              logger.verbose("[" + LIB + "] new logged-in status snooped:", {
                is_logged_in: is_logged_in
              });

              if (is_logged_in) {
                // not using the debounced one, this is urgent
                _NON_DEBOUNCED_sync_with_cloud().catch(_on_error);
              }
            }

            break;
          }

        default:
          break;
      }

      if (has_valuable_difference) {
        emitter.emit(EMITTER_EVT);
      } // whether or not the state passed to us is valuable, we take the opportunity to check if a sync is needed
      // TODO review into a dedicated periodic check?


      if (!is_logged_in) {
        logger.trace("[" + LIB + "] still not logged in, no sync for now.");
        return;
      }

      _schedule_sync_with_cloud_if_needed_and_possible();
    }

    function subscribe(debug_id, listener) {
      emitter.on(EMITTER_EVT, listener);
      if (state) listener(); // semantically disputable, but for convenience

      return function () {
        return emitter.off(EMITTER_EVT, listener);
      };
    }

    return {
      get: get,
      on_dispatch: on_dispatch,
      subscribe: subscribe,
      set: set
    };
  });
}

exports.create = create;
exports.default = create;
},{"tiny-invariant":"VYmh","emittery":"NksD","lodash/debounce":"IwFz","@offirmo/universal-debug-api-placeholder":"sw2i","@offirmo-private/timestamps":"bMV2","@offirmo-private/state-utils":"PmVE","@offirmo/globalthis-ponyfill":"ehj8","@tbrpg/state":"AY8x","@tbrpg/interfaces":"HAUK","@online-adventur.es/api-client":"rRLw","../../utils/reduce-action":"Uoli"}],"gafd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_commands = void 0;

var timestamps_1 = require("@offirmo-private/timestamps");

var interfaces_1 = require("@tbrpg/interfaces");

var consts_1 = require("../consts");

var KNOWN_ACTIONS_COUNT = interfaces_1.get_action_types().length;

function get_commands(dispatch) {
  var commands = {
    play: function (time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.play,
        expected_revisions: {// no need for this one
        }
      };
      dispatch(action);
    },
    equip_item: function (target_uuid, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.equip_item,
        expected_revisions: {
          inventory: -1 // will be filled at a later stage

        },
        target_uuid: target_uuid
      };
      dispatch(action);
    },
    sell_item: function (target_uuid, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.sell_item,
        expected_revisions: {
          inventory: -1 // will be filled at a later stage

        },
        target_uuid: target_uuid
      };
      dispatch(action);
    },
    rename_avatar: function (new_name, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.rename_avatar,
        expected_revisions: {
          avatar: -1 // will be filled at a later stage

        },
        new_name: new_name
      };
      dispatch(action);
    },
    change_avatar_class: function (new_class, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.change_avatar_class,
        expected_revisions: {
          avatar: -1 // will be filled at a later stage

        },
        new_class: new_class
      };
      dispatch(action);
    },
    attempt_to_redeem_code: function (code, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.redeem_code,
        expected_revisions: {},
        code: code
      };
      dispatch(action);
    },
    start_game: function () {
      throw new Error("[" + consts_1.LIB + "] unexpected start_game !");
    },
    on_start_session: function (is_web_diversity_supporter, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.on_start_session,
        expected_revisions: {},
        is_web_diversity_supporter: is_web_diversity_supporter
      };
      dispatch(action);
    },
    on_logged_in_refresh: function (is_logged_in, roles, time) {
      if (roles === void 0) {
        roles = [];
      }

      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.on_logged_in_refresh,
        expected_revisions: {},
        is_logged_in: is_logged_in,
        roles: roles
      };
      dispatch(action);
    },
    acknowledge_engagement_msg_seen: function (uid, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.acknowledge_engagement_msg_seen,
        expected_revisions: {},
        uid: uid
      };
      dispatch(action);
    },
    update_to_now: function (time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.update_to_now,
        expected_revisions: {}
      };
      dispatch(action);
    },
    set: function (state) {
      dispatch(interfaces_1.create_action__set(state));
    },
    custom: function (custom_reducer, time) {
      if (time === void 0) {
        time = timestamps_1.get_UTC_timestamp_ms();
      }

      var action = {
        time: time,
        type: interfaces_1.ActionType.hack,
        expected_revisions: {},
        custom_reducer: custom_reducer
      };
      dispatch(action);
    }
  };
  if (Object.keys(commands).length !== KNOWN_ACTIONS_COUNT) throw new Error("[" + consts_1.LIB + "] commands are outdated!");
  return commands;
}

exports.get_commands = get_commands;
},{"@offirmo-private/timestamps":"bMV2","@tbrpg/interfaces":"HAUK","../consts":"gY0c"}],"xb5T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_actions_for_element = void 0;

var state__inventory_1 = require("@tbrpg/state--inventory");

var interfaces_1 = require("@tbrpg/interfaces"); /////////////////////


function get_actions_for_unslotted_item(u_state, uuid) {
  var actions = [];
  var equip = {
    time: 0,
    type: interfaces_1.ActionType.equip_item,
    expected_revisions: {
      inventory: u_state.inventory.revision
    },
    target_uuid: uuid
  };
  actions.push(equip);
  var sell = {
    time: 0,
    type: interfaces_1.ActionType.sell_item,
    expected_revisions: {
      inventory: u_state.inventory.revision
    },
    target_uuid: uuid
  };
  actions.push(sell);
  return actions;
}

function get_actions_for_element(u_state, uuid) {
  var actions = [];
  var as_unslotted_item = state__inventory_1.get_unslotted_item(u_state.inventory, uuid);
  if (as_unslotted_item) actions.push.apply(actions, get_actions_for_unslotted_item(u_state, uuid));
  return actions;
}

exports.get_actions_for_element = get_actions_for_element;
},{"@tbrpg/state--inventory":"pmyL","@tbrpg/interfaces":"HAUK"}],"Md5M":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_queries = exports.Document = void 0;

var rich_text_format_1 = require("@offirmo-private/rich-text-format");

Object.defineProperty(exports, "Document", {
  enumerable: true,
  get: function () {
    return rich_text_format_1.Document;
  }
});

var selectors = __importStar(require("@tbrpg/state"));

var get_actions_1 = require("./get_actions");

function get_queries(store) {
  return {
    get_item: function (uuid, state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_item(state.u_state, uuid);
    },
    appraise_item_value: function (uuid, state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.appraise_item_value(state.u_state, uuid);
    },
    appraise_item_power: function (uuid, state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.appraise_item_power(state.u_state, uuid);
    },
    find_element: function (uuid, state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.find_element(state.u_state, uuid);
    },
    get_actions_for_element: function (uuid, state) {
      if (state === void 0) {
        state = store.get();
      }

      return get_actions_1.get_actions_for_element(state.u_state, uuid);
    },
    get_oldest_pending_flow_engagement: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_oldest_pending_flow_engagement(state.u_state);
    },
    get_oldest_pending_non_flow_engagement: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_oldest_pending_non_flow_engagement(state.u_state);
    },
    get_achievements_snapshot: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_achievements_snapshot(state.u_state);
    },
    get_available_energy_float: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_available_energy_float(state.t_state);
    },
    get_human_time_to_next_energy: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_human_time_to_next_energy(state);
    },
    get_achievements_completion: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_achievements_completion(state.u_state);
    },
    get_last_adventure: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return state.u_state.last_adventure;
    },
    get_recap: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_recap(state.u_state);
    },
    is_inventory_full: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.is_inventory_full(state.u_state);
    },
    get_available_classes: function (state) {
      if (state === void 0) {
        state = store.get();
      }

      return selectors.get_available_classes(state.u_state);
    },
    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html
    get_sub_state: function (key, state) {
      if (state === void 0) {
        state = store.get();
      }

      return state.u_state[key];
    }
  };
}

exports.get_queries = get_queries;
},{"@offirmo-private/rich-text-format":"aepI","@tbrpg/state":"AY8x","./get_actions":"xb5T"}],"j17b":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.create_game_instance = void 0;
/* A helper for actual games using this model
 */

var tiny_invariant_1 = __importDefault(require("tiny-invariant"));

var emittery_1 = __importDefault(require("emittery"));

var deepmerge_1 = __importDefault(require("deepmerge"));

var typescript_string_enums_1 = require("typescript-string-enums");

var timestamps_1 = require("@offirmo-private/timestamps");

var TBRPGState = __importStar(require("@tbrpg/state"));

var async_utils_1 = require("@offirmo-private/async-utils");

var state_utils_1 = require("@offirmo-private/state-utils");

var consts_1 = require("./consts");

var dispatcher_1 = require("./dispatcher");

var local_storage_1 = __importDefault(require("./stores/local-storage"));

var in_memory_1 = __importDefault(require("./stores/in-memory"));

var cloud_1 = __importDefault(require("./stores/cloud"));

var sugar_1 = require("./dispatcher/sugar");

var selectors_1 = require("./selectors"); // tslint:disable-next-line: variable-name


var Event = typescript_string_enums_1.Enum('model_change', 'view_change');

function overwriteMerge(destination, source) {
  return source;
}

function create_game_instance(_a) {
  var SEC = _a.SEC,
      local_storage = _a.local_storage,
      app_state = _a.app_state;
  return SEC.xTry('creating tbrpg instance', function (_a) {
    var SEC = _a.SEC,
        logger = _a.logger;
    logger.trace(consts_1.LIB + ".create_game_instance()\u2026");
    var emitter = new emittery_1.default(); /////////////////////////////////////////////////

    logger.trace("[" + consts_1.LIB + "] linking the flux architecture = dispatcher and stores\u2026");

    var _dispatcher = dispatcher_1.create(SEC);

    var in_memory_store = in_memory_1.default(SEC);

    _dispatcher.register_store(in_memory_store); // this special store will auto un-persist a potentially existing savegame
    // but may end up empty if none existing so far
    // the savegame may also be outdated.


    var persistent_store = local_storage_1.default(SEC, local_storage, TBRPGState.migrate_to_latest, _dispatcher);

    _dispatcher.register_store(persistent_store);

    var cloud_store = cloud_1.default(SEC, local_storage, TBRPGState.migrate_to_latest, _dispatcher);

    _dispatcher.register_store(cloud_store); /////////////////////////////////////////////////


    try {
      // arguably this is not 100% flux
      // but this should be good enough
      var recovered_state = persistent_store.get();
      tiny_invariant_1.default(!!recovered_state, 'ls get defined');
      logger.trace("[" + consts_1.LIB + "] restoring the state from the content of persistent store\u2026 (incl. update to now)"); // TODO should we update to now?

      _dispatcher.set(TBRPGState.update_to_now(recovered_state));
    } catch (err) {
      var new_game = TBRPGState.reseed(TBRPGState.create(SEC));
      logger.verbose("[" + consts_1.LIB + "] Clean savegame created from scratch.");

      _dispatcher.set(new_game);
    }

    logger.silly("[" + consts_1.LIB + "] state initialised:", in_memory_store.get()); ////////////////////////////////////

    app_state = app_state || {};
    in_memory_store.subscribe('game-instance', function () {
      emitter.emit(Event.model_change, "[in-mem-v2]");
    });
    emitter.on(Event.model_change, function (src) {
      app_state = __assign(__assign({}, app_state), {
        model: in_memory_store.get()
      });
      emitter.emit(Event.view_change, "model." + src);
    });
    emitter.emit(Event.model_change, 'init'); ////////////////////////////////////

    function dispatch(action) {
      if (action.type !== 'update_to_now') console.groupEnd();
      console.groupCollapsed("\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \u26A1 action dispatched: " + action.type + " \u26A1 \u2014\u2014\u2014\u2014\u2014\u2014\u2014");
      async_utils_1.schedule_when_idle_but_not_too_far(console.groupEnd); //logger.trace('current state:', { action: debug })

      var time = action.time,
          debug = __rest(action, ["time"]);

      logger.log('⚡ action dispatched:', {
        action: debug
      }); // complete "action" object that may be missing some parts

      action.time = action.time || timestamps_1.get_UTC_timestamp_ms();
      var state = in_memory_store.get();
      Object.keys(action.expected_revisions).forEach(function (sub_state_key) {
        if (action.expected_revisions[sub_state_key] === -1) {
          action.expected_revisions[sub_state_key] = state.u_state[sub_state_key].revision;
        }
      });

      _dispatcher.dispatch(action);
    }

    return {
      commands: __assign(__assign({}, sugar_1.get_commands(dispatch)), {
        dispatch: dispatch
      }),
      queries: __assign({}, selectors_1.get_queries(in_memory_store)),
      model: {
        get: in_memory_store.get,
        //set,
        // currently used by the savegame editor
        reset: function () {
          var new_state = TBRPGState.reseed(TBRPGState.create());
          logger.info('Savegame reseted:', {
            new_state: new_state
          });

          _dispatcher.set(new_state);
        },
        subscribe: function (id, fn) {
          var unbind = emitter.on(Event.model_change, function (src) {
            var revision = in_memory_store.get().u_state.revision;
            console.log("\uD83C\uDF00 model change #" + revision + " reported to subscriber \"" + id + "\" (source: " + src + ")");
            fn();
          });
          return unbind;
        }
      },
      view: {
        // allow managing a transient state
        get: function () {
          return app_state;
        },
        // "set_state" because we mirror the similar React fn
        set_state: function (fn) {
          var changed = fn(app_state);
          logger.trace('⚡ view change requested', changed);
          tiny_invariant_1.default(!changed.model, 'no model change allowed in view.set_state()');
          app_state = __assign(__assign({}, deepmerge_1.default(app_state, changed, {
            arrayMerge: overwriteMerge
          })), {
            model: in_memory_store.get()
          });
          emitter.emit(Event.view_change, 'set_state(…)');
        },
        subscribe: function (id, fn) {
          var unbind = emitter.on(Event.view_change, function (src) {
            logger.trace("\uD83C\uDF00\uD83C\uDF00 root/view change reported to subscriber \"" + id + "\" (model: rev#" + state_utils_1.get_revision(in_memory_store.get()) + ", source: view/" + src + ")");
            fn();
          });
          return unbind;
        }
      },
      _libs: {
        '@tbrpg/state': TBRPGState
      }
    };
  });
}

exports.create_game_instance = create_game_instance;
},{"tiny-invariant":"VYmh","emittery":"NksD","deepmerge":"b6M3","typescript-string-enums":"qyCc","@offirmo-private/timestamps":"bMV2","@tbrpg/state":"AY8x","@offirmo-private/async-utils":"i8Ln","@offirmo-private/state-utils":"PmVE","./consts":"gY0c","./dispatcher":"hgGW","./stores/local-storage":"EXhC","./stores/in-memory":"Fg1V","./stores/cloud":"pTv2","./dispatcher/sugar":"gafd","./selectors":"Md5M"}],"Xawf":[function(require,module,exports) {
var define;
/* jshint -W086: true */
// +----------------------------------------------------------------------+
// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js
// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |
// |----------------------------------------------------------------------|
// | Copyright (c) 2012-2015 Karan Lyons                                       |
// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |
// | Freely distributable under the MIT license.                          |
// +----------------------------------------------------------------------+
;

(function (root, undefined) {
  'use strict'; // Create a local object that'll be exported or referenced globally.

  var library = {
    'version': '3.0.0',
    'x86': {},
    'x64': {},
    'inputValidation': true
  }; // PRIVATE FUNCTIONS
  // -----------------

  function _validBytes(bytes) {
    // check the input is an array or a typed array
    if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {
      return false;
    } // check all bytes are actually bytes


    for (var i = 0; i < bytes.length; i++) {
      if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {
        return false;
      }
    }

    return true;
  }

  function _x86Multiply(m, n) {
    //
    // Given two 32bit ints, returns the two multiplied together as a
    // 32bit int.
    //
    return (m & 0xffff) * n + (((m >>> 16) * n & 0xffff) << 16);
  }

  function _x86Rotl(m, n) {
    //
    // Given a 32bit int and an int representing a number of bit positions,
    // returns the 32bit int rotated left by that number of positions.
    //
    return m << n | m >>> 32 - n;
  }

  function _x86Fmix(h) {
    //
    // Given a block, returns murmurHash3's final x86 mix of that block.
    //
    h ^= h >>> 16;
    h = _x86Multiply(h, 0x85ebca6b);
    h ^= h >>> 13;
    h = _x86Multiply(h, 0xc2b2ae35);
    h ^= h >>> 16;
    return h;
  }

  function _x64Add(m, n) {
    //
    // Given two 64bit ints (as an array of two 32bit ints) returns the two
    // added together as a 64bit int (as an array of two 32bit ints).
    //
    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];
    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];
    var o = [0, 0, 0, 0];
    o[3] += m[3] + n[3];
    o[2] += o[3] >>> 16;
    o[3] &= 0xffff;
    o[2] += m[2] + n[2];
    o[1] += o[2] >>> 16;
    o[2] &= 0xffff;
    o[1] += m[1] + n[1];
    o[0] += o[1] >>> 16;
    o[1] &= 0xffff;
    o[0] += m[0] + n[0];
    o[0] &= 0xffff;
    return [o[0] << 16 | o[1], o[2] << 16 | o[3]];
  }

  function _x64Multiply(m, n) {
    //
    // Given two 64bit ints (as an array of two 32bit ints) returns the two
    // multiplied together as a 64bit int (as an array of two 32bit ints).
    //
    m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];
    n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];
    var o = [0, 0, 0, 0];
    o[3] += m[3] * n[3];
    o[2] += o[3] >>> 16;
    o[3] &= 0xffff;
    o[2] += m[2] * n[3];
    o[1] += o[2] >>> 16;
    o[2] &= 0xffff;
    o[2] += m[3] * n[2];
    o[1] += o[2] >>> 16;
    o[2] &= 0xffff;
    o[1] += m[1] * n[3];
    o[0] += o[1] >>> 16;
    o[1] &= 0xffff;
    o[1] += m[2] * n[2];
    o[0] += o[1] >>> 16;
    o[1] &= 0xffff;
    o[1] += m[3] * n[1];
    o[0] += o[1] >>> 16;
    o[1] &= 0xffff;
    o[0] += m[0] * n[3] + m[1] * n[2] + m[2] * n[1] + m[3] * n[0];
    o[0] &= 0xffff;
    return [o[0] << 16 | o[1], o[2] << 16 | o[3]];
  }

  function _x64Rotl(m, n) {
    //
    // Given a 64bit int (as an array of two 32bit ints) and an int
    // representing a number of bit positions, returns the 64bit int (as an
    // array of two 32bit ints) rotated left by that number of positions.
    //
    n %= 64;

    if (n === 32) {
      return [m[1], m[0]];
    } else if (n < 32) {
      return [m[0] << n | m[1] >>> 32 - n, m[1] << n | m[0] >>> 32 - n];
    } else {
      n -= 32;
      return [m[1] << n | m[0] >>> 32 - n, m[0] << n | m[1] >>> 32 - n];
    }
  }

  function _x64LeftShift(m, n) {
    //
    // Given a 64bit int (as an array of two 32bit ints) and an int
    // representing a number of bit positions, returns the 64bit int (as an
    // array of two 32bit ints) shifted left by that number of positions.
    //
    n %= 64;

    if (n === 0) {
      return m;
    } else if (n < 32) {
      return [m[0] << n | m[1] >>> 32 - n, m[1] << n];
    } else {
      return [m[1] << n - 32, 0];
    }
  }

  function _x64Xor(m, n) {
    //
    // Given two 64bit ints (as an array of two 32bit ints) returns the two
    // xored together as a 64bit int (as an array of two 32bit ints).
    //
    return [m[0] ^ n[0], m[1] ^ n[1]];
  }

  function _x64Fmix(h) {
    //
    // Given a block, returns murmurHash3's final x64 mix of that block.
    // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the
    // only place where we need to right shift 64bit ints.)
    //
    h = _x64Xor(h, [0, h[0] >>> 1]);
    h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);
    h = _x64Xor(h, [0, h[0] >>> 1]);
    h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);
    h = _x64Xor(h, [0, h[0] >>> 1]);
    return h;
  } // PUBLIC FUNCTIONS
  // ----------------


  library.x86.hash32 = function (bytes, seed) {
    //
    // Given a string and an optional seed as an int, returns a 32 bit hash
    // using the x86 flavor of MurmurHash3, as an unsigned int.
    //
    if (library.inputValidation && !_validBytes(bytes)) {
      return undefined;
    }

    seed = seed || 0;
    var remainder = bytes.length % 4;
    var blocks = bytes.length - remainder;
    var h1 = seed;
    var k1 = 0;
    var c1 = 0xcc9e2d51;
    var c2 = 0x1b873593;

    for (var i = 0; i < blocks; i = i + 4) {
      k1 = bytes[i] | bytes[i + 1] << 8 | bytes[i + 2] << 16 | bytes[i + 3] << 24;
      k1 = _x86Multiply(k1, c1);
      k1 = _x86Rotl(k1, 15);
      k1 = _x86Multiply(k1, c2);
      h1 ^= k1;
      h1 = _x86Rotl(h1, 13);
      h1 = _x86Multiply(h1, 5) + 0xe6546b64;
    }

    k1 = 0;

    switch (remainder) {
      case 3:
        k1 ^= bytes[i + 2] << 16;

      case 2:
        k1 ^= bytes[i + 1] << 8;

      case 1:
        k1 ^= bytes[i];
        k1 = _x86Multiply(k1, c1);
        k1 = _x86Rotl(k1, 15);
        k1 = _x86Multiply(k1, c2);
        h1 ^= k1;
    }

    h1 ^= bytes.length;
    h1 = _x86Fmix(h1);
    return h1 >>> 0;
  };

  library.x86.hash128 = function (bytes, seed) {
    //
    // Given a string and an optional seed as an int, returns a 128 bit
    // hash using the x86 flavor of MurmurHash3, as an unsigned hex.
    //
    if (library.inputValidation && !_validBytes(bytes)) {
      return undefined;
    }

    seed = seed || 0;
    var remainder = bytes.length % 16;
    var blocks = bytes.length - remainder;
    var h1 = seed;
    var h2 = seed;
    var h3 = seed;
    var h4 = seed;
    var k1 = 0;
    var k2 = 0;
    var k3 = 0;
    var k4 = 0;
    var c1 = 0x239b961b;
    var c2 = 0xab0e9789;
    var c3 = 0x38b34ae5;
    var c4 = 0xa1e38b93;

    for (var i = 0; i < blocks; i = i + 16) {
      k1 = bytes[i] | bytes[i + 1] << 8 | bytes[i + 2] << 16 | bytes[i + 3] << 24;
      k2 = bytes[i + 4] | bytes[i + 5] << 8 | bytes[i + 6] << 16 | bytes[i + 7] << 24;
      k3 = bytes[i + 8] | bytes[i + 9] << 8 | bytes[i + 10] << 16 | bytes[i + 11] << 24;
      k4 = bytes[i + 12] | bytes[i + 13] << 8 | bytes[i + 14] << 16 | bytes[i + 15] << 24;
      k1 = _x86Multiply(k1, c1);
      k1 = _x86Rotl(k1, 15);
      k1 = _x86Multiply(k1, c2);
      h1 ^= k1;
      h1 = _x86Rotl(h1, 19);
      h1 += h2;
      h1 = _x86Multiply(h1, 5) + 0x561ccd1b;
      k2 = _x86Multiply(k2, c2);
      k2 = _x86Rotl(k2, 16);
      k2 = _x86Multiply(k2, c3);
      h2 ^= k2;
      h2 = _x86Rotl(h2, 17);
      h2 += h3;
      h2 = _x86Multiply(h2, 5) + 0x0bcaa747;
      k3 = _x86Multiply(k3, c3);
      k3 = _x86Rotl(k3, 17);
      k3 = _x86Multiply(k3, c4);
      h3 ^= k3;
      h3 = _x86Rotl(h3, 15);
      h3 += h4;
      h3 = _x86Multiply(h3, 5) + 0x96cd1c35;
      k4 = _x86Multiply(k4, c4);
      k4 = _x86Rotl(k4, 18);
      k4 = _x86Multiply(k4, c1);
      h4 ^= k4;
      h4 = _x86Rotl(h4, 13);
      h4 += h1;
      h4 = _x86Multiply(h4, 5) + 0x32ac3b17;
    }

    k1 = 0;
    k2 = 0;
    k3 = 0;
    k4 = 0;

    switch (remainder) {
      case 15:
        k4 ^= bytes[i + 14] << 16;

      case 14:
        k4 ^= bytes[i + 13] << 8;

      case 13:
        k4 ^= bytes[i + 12];
        k4 = _x86Multiply(k4, c4);
        k4 = _x86Rotl(k4, 18);
        k4 = _x86Multiply(k4, c1);
        h4 ^= k4;

      case 12:
        k3 ^= bytes[i + 11] << 24;

      case 11:
        k3 ^= bytes[i + 10] << 16;

      case 10:
        k3 ^= bytes[i + 9] << 8;

      case 9:
        k3 ^= bytes[i + 8];
        k3 = _x86Multiply(k3, c3);
        k3 = _x86Rotl(k3, 17);
        k3 = _x86Multiply(k3, c4);
        h3 ^= k3;

      case 8:
        k2 ^= bytes[i + 7] << 24;

      case 7:
        k2 ^= bytes[i + 6] << 16;

      case 6:
        k2 ^= bytes[i + 5] << 8;

      case 5:
        k2 ^= bytes[i + 4];
        k2 = _x86Multiply(k2, c2);
        k2 = _x86Rotl(k2, 16);
        k2 = _x86Multiply(k2, c3);
        h2 ^= k2;

      case 4:
        k1 ^= bytes[i + 3] << 24;

      case 3:
        k1 ^= bytes[i + 2] << 16;

      case 2:
        k1 ^= bytes[i + 1] << 8;

      case 1:
        k1 ^= bytes[i];
        k1 = _x86Multiply(k1, c1);
        k1 = _x86Rotl(k1, 15);
        k1 = _x86Multiply(k1, c2);
        h1 ^= k1;
    }

    h1 ^= bytes.length;
    h2 ^= bytes.length;
    h3 ^= bytes.length;
    h4 ^= bytes.length;
    h1 += h2;
    h1 += h3;
    h1 += h4;
    h2 += h1;
    h3 += h1;
    h4 += h1;
    h1 = _x86Fmix(h1);
    h2 = _x86Fmix(h2);
    h3 = _x86Fmix(h3);
    h4 = _x86Fmix(h4);
    h1 += h2;
    h1 += h3;
    h1 += h4;
    h2 += h1;
    h3 += h1;
    h4 += h1;
    return ("00000000" + (h1 >>> 0).toString(16)).slice(-8) + ("00000000" + (h2 >>> 0).toString(16)).slice(-8) + ("00000000" + (h3 >>> 0).toString(16)).slice(-8) + ("00000000" + (h4 >>> 0).toString(16)).slice(-8);
  };

  library.x64.hash128 = function (bytes, seed) {
    //
    // Given a string and an optional seed as an int, returns a 128 bit
    // hash using the x64 flavor of MurmurHash3, as an unsigned hex.
    //
    if (library.inputValidation && !_validBytes(bytes)) {
      return undefined;
    }

    seed = seed || 0;
    var remainder = bytes.length % 16;
    var blocks = bytes.length - remainder;
    var h1 = [0, seed];
    var h2 = [0, seed];
    var k1 = [0, 0];
    var k2 = [0, 0];
    var c1 = [0x87c37b91, 0x114253d5];
    var c2 = [0x4cf5ad43, 0x2745937f];

    for (var i = 0; i < blocks; i = i + 16) {
      k1 = [bytes[i + 4] | bytes[i + 5] << 8 | bytes[i + 6] << 16 | bytes[i + 7] << 24, bytes[i] | bytes[i + 1] << 8 | bytes[i + 2] << 16 | bytes[i + 3] << 24];
      k2 = [bytes[i + 12] | bytes[i + 13] << 8 | bytes[i + 14] << 16 | bytes[i + 15] << 24, bytes[i + 8] | bytes[i + 9] << 8 | bytes[i + 10] << 16 | bytes[i + 11] << 24];
      k1 = _x64Multiply(k1, c1);
      k1 = _x64Rotl(k1, 31);
      k1 = _x64Multiply(k1, c2);
      h1 = _x64Xor(h1, k1);
      h1 = _x64Rotl(h1, 27);
      h1 = _x64Add(h1, h2);
      h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);
      k2 = _x64Multiply(k2, c2);
      k2 = _x64Rotl(k2, 33);
      k2 = _x64Multiply(k2, c1);
      h2 = _x64Xor(h2, k2);
      h2 = _x64Rotl(h2, 31);
      h2 = _x64Add(h2, h1);
      h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);
    }

    k1 = [0, 0];
    k2 = [0, 0];

    switch (remainder) {
      case 15:
        k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));

      case 14:
        k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));

      case 13:
        k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));

      case 12:
        k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));

      case 11:
        k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));

      case 10:
        k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));

      case 9:
        k2 = _x64Xor(k2, [0, bytes[i + 8]]);
        k2 = _x64Multiply(k2, c2);
        k2 = _x64Rotl(k2, 33);
        k2 = _x64Multiply(k2, c1);
        h2 = _x64Xor(h2, k2);

      case 8:
        k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));

      case 7:
        k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));

      case 6:
        k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));

      case 5:
        k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));

      case 4:
        k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));

      case 3:
        k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));

      case 2:
        k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));

      case 1:
        k1 = _x64Xor(k1, [0, bytes[i]]);
        k1 = _x64Multiply(k1, c1);
        k1 = _x64Rotl(k1, 31);
        k1 = _x64Multiply(k1, c2);
        h1 = _x64Xor(h1, k1);
    }

    h1 = _x64Xor(h1, [0, bytes.length]);
    h2 = _x64Xor(h2, [0, bytes.length]);
    h1 = _x64Add(h1, h2);
    h2 = _x64Add(h2, h1);
    h1 = _x64Fmix(h1);
    h2 = _x64Fmix(h2);
    h1 = _x64Add(h1, h2);
    h2 = _x64Add(h2, h1);
    return ("00000000" + (h1[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (h1[1] >>> 0).toString(16)).slice(-8) + ("00000000" + (h2[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (h2[1] >>> 0).toString(16)).slice(-8);
  }; // INITIALIZATION
  // --------------
  // Export murmurHash3 for CommonJS, either as an AMD module or just as part
  // of the global object.


  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = library;
    }

    exports.murmurHash3 = library;
  } else if (typeof define === 'function' && define.amd) {
    define([], function () {
      return library;
    });
  } else {
    // Use murmurHash3.noConflict to restore `murmurHash3` back to its
    // original value. Returns a reference to the library object, to allow
    // it to be used under a different name.
    library._murmurHash3 = root.murmurHash3;

    library.noConflict = function () {
      root.murmurHash3 = library._murmurHash3;
      library._murmurHash3 = undefined;
      library.noConflict = undefined;
      return library;
    };

    root.murmurHash3 = library;
  }
})(this);
},{}],"mEUa":[function(require,module,exports) {
module.exports = require('./lib/murmurHash3js');
},{"./lib/murmurHash3js":"Xawf"}],"vItg":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MurmurHash3 = exports.setTextEncoder = exports.create = void 0; // https://cimi.io/murmurhash3js-revisited/

var murmurhash3js_revisited_1 = __importDefault(require("murmurhash3js-revisited"));

exports.MurmurHash3 = murmurhash3js_revisited_1.default;

var json_stable_stringify_1 = __importDefault(require("json-stable-stringify"));

var tec = undefined;

function setTextEncoder(c) {
  tec = c;
}

exports.setTextEncoder = setTextEncoder;

function create(TextEncoder) {
  if (TextEncoder === void 0) {
    TextEncoder = tec;
  }

  if (!TextEncoder) throw new Error('@offirmo-private/murmurhash: a textEncoder implementation must be provided!');
  return {
    v3: {
      x64: {
        hash_string_to_128: function (str) {
          var bytes = new TextEncoder().encode(str);
          return murmurhash3js_revisited_1.default.x64.hash128(bytes);
        },
        hash_object_to_128: function (o) {
          var str = json_stable_stringify_1.default(o);
          var bytes = new TextEncoder().encode(str);
          return murmurhash3js_revisited_1.default.x64.hash128(bytes);
        }
      }
    }
  };
}

exports.create = create;
exports.default = create;
},{"murmurhash3js-revisited":"mEUa","json-stable-stringify":"lUru"}],"kQ36":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StorageKey = exports.setTextEncoder = exports.Store = exports.get_logger = exports.BUILD_DATE = exports.SCHEMA_VERSION = exports.NUMERIC_VERSION = exports.VERSION = void 0;

var state_1 = require("@tbrpg/state");

Object.defineProperty(exports, "VERSION", {
  enumerable: true,
  get: function () {
    return state_1.VERSION;
  }
});
Object.defineProperty(exports, "NUMERIC_VERSION", {
  enumerable: true,
  get: function () {
    return state_1.NUMERIC_VERSION;
  }
});
Object.defineProperty(exports, "SCHEMA_VERSION", {
  enumerable: true,
  get: function () {
    return state_1.SCHEMA_VERSION;
  }
});
Object.defineProperty(exports, "BUILD_DATE", {
  enumerable: true,
  get: function () {
    return state_1.BUILD_DATE;
  }
});
Object.defineProperty(exports, "get_logger", {
  enumerable: true,
  get: function () {
    return state_1.get_logger;
  }
});

__exportStar(require("./game-instance"), exports);

var types_1 = require("./stores/types");

Object.defineProperty(exports, "Store", {
  enumerable: true,
  get: function () {
    return types_1.Store;
  }
});

var murmurhash_1 = require("@offirmo-private/murmurhash"); // due to parcel duplicating the packages :-/


Object.defineProperty(exports, "setTextEncoder", {
  enumerable: true,
  get: function () {
    return murmurhash_1.setTextEncoder;
  }
});

var local_storage_1 = require("./stores/local-storage");

Object.defineProperty(exports, "StorageKey", {
  enumerable: true,
  get: function () {
    return local_storage_1.StorageKey;
  }
});
},{"@tbrpg/state":"AY8x","./game-instance":"j17b","./stores/types":"MKE5","@offirmo-private/murmurhash":"vItg","./stores/local-storage":"EXhC"}],"gI4e":[function(require,module,exports) {
"use strict"; // 1. copied from https://github.com/Microsoft/TypeScript/issues/15202#issuecomment-318900991
// 2. then improved to match the latest Promise typings

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Deferred =
/** @class */
function () {
  function Deferred(_a) {
    var _this = this;

    var _b = _a === void 0 ? {} : _a,
        _c = _b.uncatch,
        uncatch = _c === void 0 ? true : _c;

    this.promise = new Promise(function (resolve, reject) {
      _this._resolve = resolve;
      _this._reject = reject;
    });

    if (uncatch) {
      this.promise.catch(function () {// swallow to disable uncaught promise rejection messages.
        // The whole point of this lib is to attach stuff later.
      });
    }
  }

  Deferred.prototype.then = function (onfulfilled, onrejected) {
    return this.promise.then(onfulfilled, onrejected);
  };

  Deferred.prototype.catch = function (onrejected) {
    return this.promise.catch(onrejected);
  };

  Deferred.prototype.resolve = function (value) {
    return this._resolve(value);
  };

  Deferred.prototype.reject = function (reason) {
    return this._reject(reason);
  };

  Deferred.prototype.finally = function (onfinally) {
    return this.promise.finally(onfinally);
  };

  Object.defineProperty(Deferred.prototype, Symbol.toStringTag, {
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag
    get: function () {
      return 'Deferred';
    },
    enumerable: false,
    configurable: true
  });
  return Deferred;
}();

exports.default = Deferred;
},{}],"xqeo":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_loaded_from_cordova = is_loaded_from_cordova;
exports.default = init;
exports.ↆcordova = void 0;

var _deferred = _interopRequireDefault(require("@offirmo/deferred"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function is_loaded_from_cordova() {
  return window.location.protocol === 'file:' && new URLSearchParams(location.search).get('container') === 'cordova';
}

const ↆcordova = new _deferred.default();
exports.ↆcordova = ↆcordova;

function init() {
  if (!is_loaded_from_cordova()) {
    ↆcordova.reject(new Error('Not loaded from Cordova!'));
  } else {
    const el = document.createElement('script');
    el.type = 'text/javascript';
    el.src = 'cordova.js';
    document.body.appendChild(el);
    document.addEventListener('deviceready', () => {
      ↆcordova.resolve();
    }, false);
    ↆcordova.then(() => console.info('Cordova deviceready!'), () => {});
  }
}
},{"@offirmo/deferred":"gI4e"}],"skGu":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CHANNEL = void 0;

var _cordova = require("./cordova");

function is_prod() {
  return window.location.hostname === 'www.online-adventur.es' || (0, _cordova.is_loaded_from_cordova)();
}

const CHANNEL = is_prod() ? 'prod' : window.location.hostname === 'offirmo-monorepo.netlify.com' || window.location.hostname === 'offirmo-monorepo.netlify.app' ? 'staging' : 'dev';
exports.CHANNEL = CHANNEL;
},{"./cordova":"xqeo"}],"TByb":[function(require,module,exports) {
module.exports = {
  "VERSION": "0.67.2",
  "NUMERIC_VERSION": 0.6702,
  "BUILD_DATE": "20210609_11h09"
};
},{}],"FhkN":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = init;

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _xoff = require("@offirmo-private/xoff");

var _universalDebugApiBrowser = require("@offirmo/universal-debug-api-browser");

var _asyncUtils = require("@offirmo-private/async-utils");

var _build = require("../build.json");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* simple init code, should not be too intensive
 */
function _initialize_google_analytics_phase_1() {
  (0, _softExecutionContext.getRootSEC)().xTry('configuring ga (1/2)…', ({
    IS_DEV_MODE,
    CHANNEL,
    logger
  }) => {
    logger.groupCollapsed('🕴setting up ga… (1/2)', {
      IS_DEV_MODE,
      CHANNEL
    });
    (0, _tinyInvariant.default)(ga && ga.l, 'ga global variables ok'); // REMINDER: those calls are just enqueuing into an array, very cheap

    ga('create', 'UA-103238291-2', 'auto');
    ga(tracker => logger.info('(🕴callback) ga loaded!', {
      clientId: tracker.get('clientId')
    }));
    const default_should_send_ga = !IS_DEV_MODE && CHANNEL === 'prod';
    const actual_should_send_ga = (0, _universalDebugApiBrowser.overrideHook)('should_send_ga', default_should_send_ga) === true;

    if (!actual_should_send_ga) {
      ga('set', 'sendHitTask', null);
      if ((0, _universalDebugApiBrowser.overrideHook)('should_trace_ga', false)) window.ga_debug = {
        trace: true
      };
    }

    logger.trace('🕴configuring ga', {
      default_should_send_ga,
      actual_should_send_ga,
      ov_should_send_ga: (0, _universalDebugApiBrowser.overrideHook)('should_send_ga', undefined),
      ov_should_trace_ga: (0, _universalDebugApiBrowser.overrideHook)('should_trace_ga', undefined)
    });
    ga(() => logger.log('(🕴callback) ga configured!'));
    ga('set', 'appName', 'The Boring RPG');
    ga('set', 'appId', 'com.OffirmoOnlineAdventures.TheBoringRPG');
    ga('set', 'appVersion', _build.VERSION);
    ga(() => logger.log('🕴ga informed!'));
    ga('send', 'pageview');
    logger.groupEnd();
  });
}

function _initialize_google_analytics_phase_2() {
  (0, _softExecutionContext.getRootSEC)().xTry('configuring ga (2/2)…', ({
    IS_DEV_MODE,
    CHANNEL,
    logger
  }) => {
    let ga_script_url = 'https://www.google-analytics.com/analytics.js';

    if (IS_DEV_MODE || CHANNEL !== 'prod') {
      // https://developers.google.com/analytics/devguides/collection/analyticsjs/debugging
      ga_script_url = ga_script_url.slice(0, -3) + '_debug.js';
    }

    logger.trace('🕴setting up ga… (2/2)', {
      ga_script_url
    });
    (0, _xoff.load_script_from_top)(ga_script_url, window).then(script => {
      logger.log(`✅ analytics script loaded from top`, {
        script,
        window
      });
    }).catch(err => {
      logger.warn('analytics script failed to load:', {
        err
      }); // swallow
    });
  });
}

function init() {
  (0, _asyncUtils.asap_but_out_of_immediate_execution)(_initialize_google_analytics_phase_1);
  (0, _asyncUtils.schedule_when_idle_but_not_too_far)(_initialize_google_analytics_phase_2);
}
},{"tiny-invariant":"VYmh","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/xoff":"lQpO","@offirmo/universal-debug-api-browser":"M3Pi","@offirmo-private/async-utils":"i8Ln","../build.json":"TByb"}],"UBDq":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = init;

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _xoff = require("@offirmo-private/xoff");

var _universalDebugApiBrowser = require("@offirmo/universal-debug-api-browser");

var _asyncUtils = require("@offirmo-private/async-utils");

var _build = require("../build.json");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const MEASUREMENT_ID = 'G-VG46HT6WBJ';
/* simple init code, should not be too intensive
 */

function _initialize_google_analytics_phase_1() {
  (0, _softExecutionContext.getRootSEC)().xTry('configuring ga4 (1/2)…', ({
    IS_DEV_MODE,
    CHANNEL,
    logger
  }) => {
    logger.groupCollapsed('🕴setting up ga4… (1/2)', {
      IS_DEV_MODE,
      CHANNEL
    });
    (0, _tinyInvariant.default)(gtag, 'gtag global variables ok');
    logger.trace('🕴configuring ga4', {});
    gtag('js', new Date());
    gtag('set', {
      // https://developers.google.com/analytics/devguides/collection/gtagjs/screens
      app_name: 'The Boring RPG',
      app_id: 'com.OffirmoOnlineAdventures.TheBoringRPG',
      app_version: _build.VERSION // TODO screen_name 	string 	Yes 	The name of the screen.

    });
    gtag('config', MEASUREMENT_ID);
    logger.groupEnd();
  });
}

function _initialize_google_analytics_phase_2() {
  (0, _softExecutionContext.getRootSEC)().xTry('configuring ga4 (2/2)…', ({
    IS_DEV_MODE,
    CHANNEL,
    logger
  }) => {
    let ga_script_url = `https://www.googletagmanager.com/gtag/js?id=${MEASUREMENT_ID}`;
    logger.trace('🕴setting up ga4… (2/2)', {
      ga_script_url
    });
    (0, _xoff.load_script_from_top)(ga_script_url, window).then(script => {
      logger.log(`✅ ga4 analytics script loaded from top`, {
        script,
        window
      });
    }).catch(err => {
      logger.warn('ga4 analytics script failed to load:', {
        err
      }); // swallow
    });
  });
}

function init() {
  (0, _asyncUtils.asap_but_out_of_immediate_execution)(_initialize_google_analytics_phase_1);
  (0, _asyncUtils.schedule_when_idle_but_not_too_far)(_initialize_google_analytics_phase_2);
}
},{"tiny-invariant":"VYmh","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/xoff":"lQpO","@offirmo/universal-debug-api-browser":"M3Pi","@offirmo-private/async-utils":"i8Ln","../build.json":"TByb"}],"v1tg":[function(require,module,exports) {
var define;
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=90)}({17:function(e,t,r){"use strict";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||""},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||""},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case"NT":return"NT";case"XP":return"XP";case"NT 5.0":return"2000";case"NT 5.1":return"XP";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}},e.getMacOSVersionName=function(e){var t=e.split(".").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return"Leopard";case 6:return"Snow Leopard";case 7:return"Lion";case 8:return"Mountain Lion";case 9:return"Mavericks";case 10:return"Yosemite";case 11:return"El Capitan";case 12:return"Sierra";case 13:return"High Sierra";case 14:return"Mojave";case 15:return"Catalina";default:return}},e.getAndroidVersionName=function(e){var t=e.split(".").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?"Cupcake":1===t[0]&&t[1]>=6?"Donut":2===t[0]&&t[1]<2?"Eclair":2===t[0]&&2===t[1]?"Froyo":2===t[0]&&t[1]>2?"Gingerbread":3===t[0]?"Honeycomb":4===t[0]&&t[1]<1?"Ice Cream Sandwich":4===t[0]&&t[1]<4?"Jelly Bean":4===t[0]&&t[1]>=4?"KitKat":5===t[0]?"Lollipop":6===t[0]?"Marshmallow":7===t[0]?"Nougat":8===t[0]?"Oreo":9===t[0]?"Pie":void 0},e.getVersionPrecision=function(e){return e.split(".").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(".0");return e.map(n.split("."),(function(e){return new Array(20-e.length).join("0")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];"object"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||""},e}();t.default=i,e.exports=t.default},18:function(e,t,r){"use strict";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"};t.BROWSER_MAP={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"};t.PLATFORMS_MAP={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"};t.OS_MAP={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"};t.ENGINE_MAP={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"}},90:function(e,t,r){"use strict";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),"string"!=typeof e)throw new Error("UserAgent should be a string");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:"BROWSER_MAP",get:function(){return s.BROWSER_MAP}},{key:"ENGINE_MAP",get:function(){return s.ENGINE_MAP}},{key:"OS_MAP",get:function(){return s.OS_MAP}},{key:"PLATFORMS_MAP",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){"use strict";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||""===e)throw new Error("UserAgent parameter can't be empty");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||"":t||""},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||"":t||""},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];"string"==typeof a?(i[t]=a,s+=1):"object"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if("string"==typeof i)return">"===e[0]||"<"===e[0]?(r=e.substr(1),"="===e[1]?(n=!0,r=e.substr(2)):t=[],">"===e[0]?t.push(1):t.push(-1)):"="===e[0]?r=e.substr(1):"~"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){"use strict";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\/(\d+(\.?_?\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:"Googlebot"},r=i.default.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:"Opera"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\/|opios/i],describe:function(e){var t={name:"Opera"},r=i.default.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:"Samsung Internet for Android"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:"NAVER Whale Browser"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:"MZ Browser"},r=i.default.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:"Focus"},r=i.default.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:"Swing"},r=i.default.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:"Opera Coast"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe:function(e){var t={name:"Opera Touch"},r=i.default.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:"Yandex Browser"},r=i.default.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:"UC Browser"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:"Maxthon"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:"Epiphany"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:"Puffin"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:"Sleipnir"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:"K-Meleon"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:"WeChat"},r=i.default.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?"QQ Browser Lite":"QQ Browser"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:"Internet Explorer"},r=i.default.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\sedg\//i],describe:function(e){var t={name:"Microsoft Edge"},r=i.default.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:"Microsoft Edge"},r=i.default.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:"Vivaldi"},r=i.default.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:"SeaMonkey"},r=i.default.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:"Sailfish"},r=i.default.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:"Amazon Silk"},r=i.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:"PhantomJS"},r=i.default.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:"SlimerJS"},r=i.default.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe:function(e){var t={name:"BlackBerry"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:"WebOS Browser"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:"Bada"},r=i.default.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:"Tizen"},r=i.default.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:"QupZilla"},r=i.default.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:"Firefox"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:"Electron"},r=i.default.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:"Miui"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:"Chromium"},r=i.default.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:"Chrome"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:"Google Search"},r=i.default.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:"Android Browser"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:"PlayStation 4"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:"Safari"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search("\\(")?/^(.*)\/(.*)[ \t]\((.*)/:/^(.*)\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){"use strict";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\/)(\d[\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,e).replace(/[_\s]/g,"."),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,e).replace(/[_\s]/g,".");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,e)||i.default.getFirstMatch(/\bbb(\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){"use strict";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:"bot",vendor:"Google"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&"Nova",r={type:s.PLATFORMS_MAP.mobile,vendor:"Huawei"};return t&&(r.model=t),r}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:"Nexus"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:"Apple",model:"iPad"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:"Apple",model:"iPad"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:"Amazon"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:"Apple",model:t}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:"Nexus"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return"blackberry"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:"BlackBerry"}}},{test:function(e){return"bada"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return"windows phone"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:"Microsoft"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(".")[0]);return"android"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return"android"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return"macos"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:"Apple"}}},{test:function(e){return"windows"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return"linux"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return"playstation 4"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return"roku"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){"use strict";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return"microsoft edge"===e.getBrowserName(!0)},describe:function(e){if(/\sedg\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\/537\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));
},{}],"JyH1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ensureDeviceUUID;
exports.LS_KEY = void 0;

var _uuid = require("@offirmo-private/uuid");

const LS_KEY = 'XOF.device_uuid';
exports.LS_KEY = LS_KEY;

function ensureDeviceUUID({
  storage = window.localStorage
} = {}) {
  let UUID = storage.getItem(LS_KEY);

  if (!UUID || UUID.length < 20) {
    UUID = (0, _uuid.generate_uuid)();

    try {
      storage.setItem(LS_KEY, UUID);
    } catch (err) {
      // may happen if storage full or rare case where blocked
      UUID = "uu1cantwritetolocalstor8";
    }
  }

  return UUID;
}
},{"@offirmo-private/uuid":"Im4b"}],"TqJU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LS_KEYS = exports.PREFIX = void 0;
const PREFIX = 'XOF';
exports.PREFIX = PREFIX;
const LS_KEYS = {
  dev_mode: `${PREFIX}.dev_mode`,
  verbose: `${PREFIX}.verbose`
};
exports.LS_KEYS = LS_KEYS;
},{}],"yaWW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  listenToErrorEvents: true,
  listenToUnhandledRejections: true,
  decorateWithDetectedEnv: true
};
exports.listenToErrorEvents = listenToErrorEvents;
exports.listenToUnhandledRejections = listenToUnhandledRejections;
exports.decorateWithDetectedEnv = decorateWithDetectedEnv;

var _bowser = _interopRequireDefault(require("bowser"));

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

Object.keys(_softExecutionContext).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _softExecutionContext[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _softExecutionContext[key];
    }
  });
});

var _ensureDeviceUuidBrowser = _interopRequireDefault(require("@offirmo-private/ensure-device-uuid-browser"));

var _consts = require("./consts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// XXX redundant, next one is better (?rly)
// https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror

/*
function listenToErrors() {
	const SEC = getRootSEC()

	window.onerror = function (msg, url, line, colno, err) {
		console.log('DEBUG', arguments)
		err = err || new Error(`Error "${msg}" from "${url}", line ${line}!`)

		SEC._handleError({
			SEC,
			debugId: 'browser/onError',
			shouldRethrow: false,
		}, err)

		return true // same as preventDefault XXX should we?
	}
}
*/
function listenToErrorEvents() {
  const SEC = (0, _softExecutionContext.getRootSEC)().createChild().setLogicalStack({
    operation: '(browser/on error event)'
  });
  SEC.xTry('SEC/browser/listenToErrorEvents', ({
    logger
  }) => {
    window.addEventListener('error', function (evt) {
      // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent
      //console.log('DEBUG SEC browser debug: error event', arguments)
      const err = evt && evt.message === 'Script error.' ? new Error('Unreadable error from another origin!') : evt.error || new Error(`Error "${evt.message}" from "${evt.filename}", line ${evt.lineno}.${evt.colno}!`);

      SEC._handleError({
        SEC,
        debugId: 'browser/onError',
        shouldRethrow: false
      }, err); //evt.preventDefault() // XXX should we?

    });
    logger.verbose('Root SEC is now listening to error events ✔');
  });
}

function listenToUnhandledRejections() {
  const SEC = (0, _softExecutionContext.getRootSEC)().createChild().setLogicalStack({
    operation: '(browser/unhandled rejection)'
  });
  SEC.xTry('SEC/browser/listenToUnhandledRejections', ({
    logger
  }) => {
    //window.onunhandledrejection = function(evt) {
    window.addEventListener('unhandledrejection', function (evt) {
      // https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent
      //console.log('DEBUG SEC browser debug: onunhandledrejection', arguments)
      //console.log(evt.reason)
      const err = evt.reason || new Error('Error: uncaught promise rejection!');

      SEC._handleError({
        SEC,
        debugId: 'browser/unhandled rejection',
        shouldRethrow: false
      }, err);
    });
    logger.verbose('Root SEC is now listening to unhandled rejection events ✔');
  });
}

function decorateWithDetectedEnv(SEC) {
  SEC = SEC || (0, _softExecutionContext.getRootSEC)();
  const IS_DEV_MODE = localStorage.getItem(_consts.LS_KEYS.dev_mode) === 'true';
  const IS_VERBOSE = localStorage.getItem(_consts.LS_KEYS.verbose) === 'true';
  SEC.injectDependencies({
    IS_DEV_MODE,
    IS_VERBOSE
  });

  const browser = _bowser.default.getParser(window.navigator.userAgent);

  const details = {
    DEVICE_UUID: (0, _ensureDeviceUuidBrowser.default)(),
    // TODO normalize browser/os detection!
    OS_NAME: browser.getOSName(),
    OS_RELEASE: browser.getOSVersion(),
    BROWSER_NAME: browser.getBrowserName(),
    BROWSER_VERSION: browser.getBrowserVersion(),
    DEVICE_TYPE: browser.getPlatformType()
  };
  SEC.setAnalyticsAndErrorDetails(details); //xxx.logger.verbose('Root SEC is now decorated with env infos ✔', { Bowser: browser.getResult(), details: SEC.getAnalyticsDetails() })
}
},{"bowser":"v1tg","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/ensure-device-uuid-browser":"JyH1","./consts":"TqJU"}],"h9V3":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LS_KEYS = exports.LIB = void 0;

var _flux = require("@tbrpg/flux");

/////////////////////////////////////////////////
const LIB = 'the-boring-rpg';
exports.LIB = LIB;
const LS_KEYS = {
  last_version_seen: `${LIB}.last_version_seen`,
  savegame: _flux.StorageKey['bkp_main']
};
exports.LS_KEYS = LS_KEYS;
},{"@tbrpg/flux":"kQ36"}],"qVJl":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _universalDebugApiBrowser = require("@offirmo/universal-debug-api-browser");

var _consts = require("./consts");

var _flux = require("@tbrpg/flux");

/////////////////////////////////////////////////
const logger = (0, _universalDebugApiBrowser.getLogger)({
  name: _consts.LIB,
  suggestedLevel: 'error'
});
logger.verbose(`Hello from "${_consts.LIB}" v${_flux.VERSION} from ${_flux.BUILD_DATE}! Logger up with level = "${logger.getLevel()}" ✔`); // test

if (false) {
  console.group('Testing log levels...');
  ['fatal', 'emerg', 'alert', 'crit', 'error', 'warning', 'warn', 'notice', 'info', 'verbose', 'log', 'debug', 'trace', 'silly'].forEach(level => {
    console.log(`logger demo with level "${level}":`);
    logger[level](`logger demo with level "${level}"`, {
      level
    });
  });
  console.groupEnd();
}

var _default = logger;
exports.default = _default;
},{"@offirmo/universal-debug-api-browser":"M3Pi","./consts":"h9V3","@tbrpg/flux":"kQ36"}],"AZhB":[function(require,module,exports) {
/*
 json-stringify-safe
 Like JSON.stringify, but doesn't throw on circular references.

 Originally forked from https://github.com/isaacs/json-stringify-safe
 version 5.0.1 on 3/8/2017 and modified to handle Errors serialization
 and IE8 compatibility. Tests for this are in test/vendor.

 ISC license: https://github.com/isaacs/json-stringify-safe/blob/master/LICENSE
*/

exports = module.exports = stringify;
exports.getSerialize = serializer;

function indexOf(haystack, needle) {
  for (var i = 0; i < haystack.length; ++i) {
    if (haystack[i] === needle) return i;
  }
  return -1;
}

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);
}

// https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106
function stringifyError(value) {
  var err = {
    // These properties are implemented as magical getters and don't show up in for in
    stack: value.stack,
    message: value.message,
    name: value.name
  };

  for (var i in value) {
    if (Object.prototype.hasOwnProperty.call(value, i)) {
      err[i] = value[i];
    }
  }

  return err;
}

function serializer(replacer, cycleReplacer) {
  var stack = [];
  var keys = [];

  if (cycleReplacer == null) {
    cycleReplacer = function(key, value) {
      if (stack[0] === value) {
        return '[Circular ~]';
      }
      return '[Circular ~.' + keys.slice(0, indexOf(stack, value)).join('.') + ']';
    };
  }

  return function(key, value) {
    if (stack.length > 0) {
      var thisPos = indexOf(stack, this);
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);

      if (~indexOf(stack, value)) {
        value = cycleReplacer.call(this, key, value);
      }
    } else {
      stack.push(value);
    }

    return replacer == null
      ? value instanceof Error ? stringifyError(value) : value
      : replacer.call(this, key, value);
  };
}

},{}],"E705":[function(require,module,exports) {
var global = arguments[3];
var stringify = require('../vendor/json-stringify-safe/stringify');

var _window =
  typeof window !== 'undefined'
    ? window
    : typeof global !== 'undefined'
      ? global
      : typeof self !== 'undefined'
        ? self
        : {};

function isObject(what) {
  return typeof what === 'object' && what !== null;
}

// Yanked from https://git.io/vS8DV re-used under CC0
// with some tiny modifications
function isError(value) {
  switch (Object.prototype.toString.call(value)) {
    case '[object Error]':
      return true;
    case '[object Exception]':
      return true;
    case '[object DOMException]':
      return true;
    default:
      return value instanceof Error;
  }
}

function isErrorEvent(value) {
  return Object.prototype.toString.call(value) === '[object ErrorEvent]';
}

function isDOMError(value) {
  return Object.prototype.toString.call(value) === '[object DOMError]';
}

function isDOMException(value) {
  return Object.prototype.toString.call(value) === '[object DOMException]';
}

function isUndefined(what) {
  return what === void 0;
}

function isFunction(what) {
  return typeof what === 'function';
}

function isPlainObject(what) {
  return Object.prototype.toString.call(what) === '[object Object]';
}

function isString(what) {
  return Object.prototype.toString.call(what) === '[object String]';
}

function isArray(what) {
  return Object.prototype.toString.call(what) === '[object Array]';
}

function isEmptyObject(what) {
  if (!isPlainObject(what)) return false;

  for (var _ in what) {
    if (what.hasOwnProperty(_)) {
      return false;
    }
  }
  return true;
}

function supportsErrorEvent() {
  try {
    new ErrorEvent(''); // eslint-disable-line no-new
    return true;
  } catch (e) {
    return false;
  }
}

function supportsDOMError() {
  try {
    new DOMError(''); // eslint-disable-line no-new
    return true;
  } catch (e) {
    return false;
  }
}

function supportsDOMException() {
  try {
    new DOMException(''); // eslint-disable-line no-new
    return true;
  } catch (e) {
    return false;
  }
}

function supportsFetch() {
  if (!('fetch' in _window)) return false;

  try {
    new Headers(); // eslint-disable-line no-new
    new Request(''); // eslint-disable-line no-new
    new Response(); // eslint-disable-line no-new
    return true;
  } catch (e) {
    return false;
  }
}

// Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default
// https://caniuse.com/#feat=referrer-policy
// It doesn't. And it throw exception instead of ignoring this parameter...
// REF: https://github.com/getsentry/raven-js/issues/1233
function supportsReferrerPolicy() {
  if (!supportsFetch()) return false;

  try {
    // eslint-disable-next-line no-new
    new Request('pickleRick', {
      referrerPolicy: 'origin'
    });
    return true;
  } catch (e) {
    return false;
  }
}

function supportsPromiseRejectionEvent() {
  return typeof PromiseRejectionEvent === 'function';
}

function wrappedCallback(callback) {
  function dataCallback(data, original) {
    var normalizedData = callback(data) || data;
    if (original) {
      return original(normalizedData) || normalizedData;
    }
    return normalizedData;
  }

  return dataCallback;
}

function each(obj, callback) {
  var i, j;

  if (isUndefined(obj.length)) {
    for (i in obj) {
      if (hasKey(obj, i)) {
        callback.call(null, i, obj[i]);
      }
    }
  } else {
    j = obj.length;
    if (j) {
      for (i = 0; i < j; i++) {
        callback.call(null, i, obj[i]);
      }
    }
  }
}

function objectMerge(obj1, obj2) {
  if (!obj2) {
    return obj1;
  }
  each(obj2, function(key, value) {
    obj1[key] = value;
  });
  return obj1;
}

/**
 * This function is only used for react-native.
 * react-native freezes object that have already been sent over the
 * js bridge. We need this function in order to check if the object is frozen.
 * So it's ok that objectFrozen returns false if Object.isFrozen is not
 * supported because it's not relevant for other "platforms". See related issue:
 * https://github.com/getsentry/react-native-sentry/issues/57
 */
function objectFrozen(obj) {
  if (!Object.isFrozen) {
    return false;
  }
  return Object.isFrozen(obj);
}

function truncate(str, max) {
  if (typeof max !== 'number') {
    throw new Error('2nd argument to `truncate` function should be a number');
  }
  if (typeof str !== 'string' || max === 0) {
    return str;
  }
  return str.length <= max ? str : str.substr(0, max) + '\u2026';
}

/**
 * hasKey, a better form of hasOwnProperty
 * Example: hasKey(MainHostObject, property) === true/false
 *
 * @param {Object} host object to check property
 * @param {string} key to check
 */
function hasKey(object, key) {
  return Object.prototype.hasOwnProperty.call(object, key);
}

function joinRegExp(patterns) {
  // Combine an array of regular expressions and strings into one large regexp
  // Be mad.
  var sources = [],
    i = 0,
    len = patterns.length,
    pattern;

  for (; i < len; i++) {
    pattern = patterns[i];
    if (isString(pattern)) {
      // If it's a string, we need to escape it
      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
      sources.push(pattern.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, '\\$1'));
    } else if (pattern && pattern.source) {
      // If it's a regexp already, we want to extract the source
      sources.push(pattern.source);
    }
    // Intentionally skip other cases
  }
  return new RegExp(sources.join('|'), 'i');
}

function urlencode(o) {
  var pairs = [];
  each(o, function(key, value) {
    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
  });
  return pairs.join('&');
}

// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B
// intentionally using regex and not <a/> href parsing trick because React Native and other
// environments where DOM might not be available
function parseUrl(url) {
  if (typeof url !== 'string') return {};
  var match = url.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);

  // coerce to undefined values to empty string so we don't get 'undefined'
  var query = match[6] || '';
  var fragment = match[8] || '';
  return {
    protocol: match[2],
    host: match[4],
    path: match[5],
    relative: match[5] + query + fragment // everything minus origin
  };
}
function uuid4() {
  var crypto = _window.crypto || _window.msCrypto;

  if (!isUndefined(crypto) && crypto.getRandomValues) {
    // Use window.crypto API if available
    // eslint-disable-next-line no-undef
    var arr = new Uint16Array(8);
    crypto.getRandomValues(arr);

    // set 4 in byte 7
    arr[3] = (arr[3] & 0xfff) | 0x4000;
    // set 2 most significant bits of byte 9 to '10'
    arr[4] = (arr[4] & 0x3fff) | 0x8000;

    var pad = function(num) {
      var v = num.toString(16);
      while (v.length < 4) {
        v = '0' + v;
      }
      return v;
    };

    return (
      pad(arr[0]) +
      pad(arr[1]) +
      pad(arr[2]) +
      pad(arr[3]) +
      pad(arr[4]) +
      pad(arr[5]) +
      pad(arr[6]) +
      pad(arr[7])
    );
  } else {
    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523
    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      var r = (Math.random() * 16) | 0,
        v = c === 'x' ? r : (r & 0x3) | 0x8;
      return v.toString(16);
    });
  }
}

/**
 * Given a child DOM element, returns a query-selector statement describing that
 * and its ancestors
 * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]
 * @param elem
 * @returns {string}
 */
function htmlTreeAsString(elem) {
  /* eslint no-extra-parens:0*/
  var MAX_TRAVERSE_HEIGHT = 5,
    MAX_OUTPUT_LEN = 80,
    out = [],
    height = 0,
    len = 0,
    separator = ' > ',
    sepLength = separator.length,
    nextStr;

  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {
    nextStr = htmlElementAsString(elem);
    // bail out if
    // - nextStr is the 'html' element
    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN
    //   (ignore this limit if we are on the first iteration)
    if (
      nextStr === 'html' ||
      (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)
    ) {
      break;
    }

    out.push(nextStr);

    len += nextStr.length;
    elem = elem.parentNode;
  }

  return out.reverse().join(separator);
}

/**
 * Returns a simple, query-selector representation of a DOM element
 * e.g. [HTMLElement] => input#foo.btn[name=baz]
 * @param HTMLElement
 * @returns {string}
 */
function htmlElementAsString(elem) {
  var out = [],
    className,
    classes,
    key,
    attr,
    i;

  if (!elem || !elem.tagName) {
    return '';
  }

  out.push(elem.tagName.toLowerCase());
  if (elem.id) {
    out.push('#' + elem.id);
  }

  className = elem.className;
  if (className && isString(className)) {
    classes = className.split(/\s+/);
    for (i = 0; i < classes.length; i++) {
      out.push('.' + classes[i]);
    }
  }
  var attrWhitelist = ['type', 'name', 'title', 'alt'];
  for (i = 0; i < attrWhitelist.length; i++) {
    key = attrWhitelist[i];
    attr = elem.getAttribute(key);
    if (attr) {
      out.push('[' + key + '="' + attr + '"]');
    }
  }
  return out.join('');
}

/**
 * Returns true if either a OR b is truthy, but not both
 */
function isOnlyOneTruthy(a, b) {
  return !!(!!a ^ !!b);
}

/**
 * Returns true if both parameters are undefined
 */
function isBothUndefined(a, b) {
  return isUndefined(a) && isUndefined(b);
}

/**
 * Returns true if the two input exception interfaces have the same content
 */
function isSameException(ex1, ex2) {
  if (isOnlyOneTruthy(ex1, ex2)) return false;

  ex1 = ex1.values[0];
  ex2 = ex2.values[0];

  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;

  // in case both stacktraces are undefined, we can't decide so default to false
  if (isBothUndefined(ex1.stacktrace, ex2.stacktrace)) return false;

  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);
}

/**
 * Returns true if the two input stack trace interfaces have the same content
 */
function isSameStacktrace(stack1, stack2) {
  if (isOnlyOneTruthy(stack1, stack2)) return false;

  var frames1 = stack1.frames;
  var frames2 = stack2.frames;

  // Exit early if stacktrace is malformed
  if (frames1 === undefined || frames2 === undefined) return false;

  // Exit early if frame count differs
  if (frames1.length !== frames2.length) return false;

  // Iterate through every frame; bail out if anything differs
  var a, b;
  for (var i = 0; i < frames1.length; i++) {
    a = frames1[i];
    b = frames2[i];
    if (
      a.filename !== b.filename ||
      a.lineno !== b.lineno ||
      a.colno !== b.colno ||
      a['function'] !== b['function']
    )
      return false;
  }
  return true;
}

/**
 * Polyfill a method
 * @param obj object e.g. `document`
 * @param name method name present on object e.g. `addEventListener`
 * @param replacement replacement function
 * @param track {optional} record instrumentation to an array
 */
function fill(obj, name, replacement, track) {
  if (obj == null) return;
  var orig = obj[name];
  obj[name] = replacement(orig);
  obj[name].__raven__ = true;
  obj[name].__orig__ = orig;
  if (track) {
    track.push([obj, name, orig]);
  }
}

/**
 * Join values in array
 * @param input array of values to be joined together
 * @param delimiter string to be placed in-between values
 * @returns {string}
 */
function safeJoin(input, delimiter) {
  if (!isArray(input)) return '';

  var output = [];

  for (var i = 0; i < input.length; i++) {
    try {
      output.push(String(input[i]));
    } catch (e) {
      output.push('[value cannot be serialized]');
    }
  }

  return output.join(delimiter);
}

// Default Node.js REPL depth
var MAX_SERIALIZE_EXCEPTION_DEPTH = 3;
// 50kB, as 100kB is max payload size, so half sounds reasonable
var MAX_SERIALIZE_EXCEPTION_SIZE = 50 * 1024;
var MAX_SERIALIZE_KEYS_LENGTH = 40;

function utf8Length(value) {
  return ~-encodeURI(value).split(/%..|./).length;
}

function jsonSize(value) {
  return utf8Length(JSON.stringify(value));
}

function serializeValue(value) {
  if (typeof value === 'string') {
    var maxLength = 40;
    return truncate(value, maxLength);
  } else if (
    typeof value === 'number' ||
    typeof value === 'boolean' ||
    typeof value === 'undefined'
  ) {
    return value;
  }

  var type = Object.prototype.toString.call(value);

  // Node.js REPL notation
  if (type === '[object Object]') return '[Object]';
  if (type === '[object Array]') return '[Array]';
  if (type === '[object Function]')
    return value.name ? '[Function: ' + value.name + ']' : '[Function]';

  return value;
}

function serializeObject(value, depth) {
  if (depth === 0) return serializeValue(value);

  if (isPlainObject(value)) {
    return Object.keys(value).reduce(function(acc, key) {
      acc[key] = serializeObject(value[key], depth - 1);
      return acc;
    }, {});
  } else if (Array.isArray(value)) {
    return value.map(function(val) {
      return serializeObject(val, depth - 1);
    });
  }

  return serializeValue(value);
}

function serializeException(ex, depth, maxSize) {
  if (!isPlainObject(ex)) return ex;

  depth = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_DEPTH : depth;
  maxSize = typeof depth !== 'number' ? MAX_SERIALIZE_EXCEPTION_SIZE : maxSize;

  var serialized = serializeObject(ex, depth);

  if (jsonSize(stringify(serialized)) > maxSize) {
    return serializeException(ex, depth - 1);
  }

  return serialized;
}

function serializeKeysForMessage(keys, maxLength) {
  if (typeof keys === 'number' || typeof keys === 'string') return keys.toString();
  if (!Array.isArray(keys)) return '';

  keys = keys.filter(function(key) {
    return typeof key === 'string';
  });
  if (keys.length === 0) return '[object has no keys]';

  maxLength = typeof maxLength !== 'number' ? MAX_SERIALIZE_KEYS_LENGTH : maxLength;
  if (keys[0].length >= maxLength) return keys[0];

  for (var usedKeys = keys.length; usedKeys > 0; usedKeys--) {
    var serialized = keys.slice(0, usedKeys).join(', ');
    if (serialized.length > maxLength) continue;
    if (usedKeys === keys.length) return serialized;
    return serialized + '\u2026';
  }

  return '';
}

function sanitize(input, sanitizeKeys) {
  if (!isArray(sanitizeKeys) || (isArray(sanitizeKeys) && sanitizeKeys.length === 0))
    return input;

  var sanitizeRegExp = joinRegExp(sanitizeKeys);
  var sanitizeMask = '********';
  var safeInput;

  try {
    safeInput = JSON.parse(stringify(input));
  } catch (o_O) {
    return input;
  }

  function sanitizeWorker(workerInput) {
    if (isArray(workerInput)) {
      return workerInput.map(function(val) {
        return sanitizeWorker(val);
      });
    }

    if (isPlainObject(workerInput)) {
      return Object.keys(workerInput).reduce(function(acc, k) {
        if (sanitizeRegExp.test(k)) {
          acc[k] = sanitizeMask;
        } else {
          acc[k] = sanitizeWorker(workerInput[k]);
        }
        return acc;
      }, {});
    }

    return workerInput;
  }

  return sanitizeWorker(safeInput);
}

module.exports = {
  isObject: isObject,
  isError: isError,
  isErrorEvent: isErrorEvent,
  isDOMError: isDOMError,
  isDOMException: isDOMException,
  isUndefined: isUndefined,
  isFunction: isFunction,
  isPlainObject: isPlainObject,
  isString: isString,
  isArray: isArray,
  isEmptyObject: isEmptyObject,
  supportsErrorEvent: supportsErrorEvent,
  supportsDOMError: supportsDOMError,
  supportsDOMException: supportsDOMException,
  supportsFetch: supportsFetch,
  supportsReferrerPolicy: supportsReferrerPolicy,
  supportsPromiseRejectionEvent: supportsPromiseRejectionEvent,
  wrappedCallback: wrappedCallback,
  each: each,
  objectMerge: objectMerge,
  truncate: truncate,
  objectFrozen: objectFrozen,
  hasKey: hasKey,
  joinRegExp: joinRegExp,
  urlencode: urlencode,
  uuid4: uuid4,
  htmlTreeAsString: htmlTreeAsString,
  htmlElementAsString: htmlElementAsString,
  isSameException: isSameException,
  isSameStacktrace: isSameStacktrace,
  parseUrl: parseUrl,
  fill: fill,
  safeJoin: safeJoin,
  serializeException: serializeException,
  serializeKeysForMessage: serializeKeysForMessage,
  sanitize: sanitize
};

},{"../vendor/json-stringify-safe/stringify":"AZhB"}],"yrbz":[function(require,module,exports) {
var global = arguments[3];
var utils = require('../../src/utils');

/*
 TraceKit - Cross brower stack traces

 This was originally forked from github.com/occ/TraceKit, but has since been
 largely re-written and is now maintained as part of raven-js.  Tests for
 this are in test/vendor.

 MIT license
*/

var TraceKit = {
  collectWindowErrors: true,
  debug: false
};

// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)
var _window =
  typeof window !== 'undefined'
    ? window
    : typeof global !== 'undefined'
    ? global
    : typeof self !== 'undefined'
    ? self
    : {};

// global reference to slice
var _slice = [].slice;
var UNKNOWN_FUNCTION = '?';

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types
var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;

function getLocationHref() {
  if (typeof document === 'undefined' || document.location == null) return '';
  return document.location.href;
}

function getLocationOrigin() {
  if (typeof document === 'undefined' || document.location == null) return '';

  // Oh dear IE10...
  if (!document.location.origin) {
    return (
      document.location.protocol +
      '//' +
      document.location.hostname +
      (document.location.port ? ':' + document.location.port : '')
    );
  }

  return document.location.origin;
}

/**
 * TraceKit.report: cross-browser processing of unhandled exceptions
 *
 * Syntax:
 *   TraceKit.report.subscribe(function(stackInfo) { ... })
 *   TraceKit.report.unsubscribe(function(stackInfo) { ... })
 *   TraceKit.report(exception)
 *   try { ...code... } catch(ex) { TraceKit.report(ex); }
 *
 * Supports:
 *   - Firefox: full stack trace with line numbers, plus column number
 *              on top frame; column number is not guaranteed
 *   - Opera:   full stack trace with line and column numbers
 *   - Chrome:  full stack trace with line and column numbers
 *   - Safari:  line and column number for the top frame only; some frames
 *              may be missing, and column number is not guaranteed
 *   - IE:      line and column number for the top frame only; some frames
 *              may be missing, and column number is not guaranteed
 *
 * In theory, TraceKit should work on all of the following versions:
 *   - IE5.5+ (only 8.0 tested)
 *   - Firefox 0.9+ (only 3.5+ tested)
 *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require
 *     Exceptions Have Stacktrace to be enabled in opera:config)
 *   - Safari 3+ (only 4+ tested)
 *   - Chrome 1+ (only 5+ tested)
 *   - Konqueror 3.5+ (untested)
 *
 * Requires TraceKit.computeStackTrace.
 *
 * Tries to catch all unhandled exceptions and report them to the
 * subscribed handlers. Please note that TraceKit.report will rethrow the
 * exception. This is REQUIRED in order to get a useful stack trace in IE.
 * If the exception does not reach the top of the browser, you will only
 * get a stack trace from the point where TraceKit.report was called.
 *
 * Handlers receive a stackInfo object as described in the
 * TraceKit.computeStackTrace docs.
 */
TraceKit.report = (function reportModuleWrapper() {
  var handlers = [],
    lastArgs = null,
    lastException = null,
    lastExceptionStack = null;

  /**
   * Add a crash handler.
   * @param {Function} handler
   */
  function subscribe(handler) {
    installGlobalHandler();
    handlers.push(handler);
  }

  /**
   * Remove a crash handler.
   * @param {Function} handler
   */
  function unsubscribe(handler) {
    for (var i = handlers.length - 1; i >= 0; --i) {
      if (handlers[i] === handler) {
        handlers.splice(i, 1);
      }
    }
  }

  /**
   * Remove all crash handlers.
   */
  function unsubscribeAll() {
    uninstallGlobalHandler();
    handlers = [];
  }

  /**
   * Dispatch stack information to all handlers.
   * @param {Object.<string, *>} stack
   */
  function notifyHandlers(stack, isWindowError) {
    var exception = null;
    if (isWindowError && !TraceKit.collectWindowErrors) {
      return;
    }
    for (var i in handlers) {
      if (handlers.hasOwnProperty(i)) {
        try {
          handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));
        } catch (inner) {
          exception = inner;
        }
      }
    }

    if (exception) {
      throw exception;
    }
  }

  var _oldOnerrorHandler, _onErrorHandlerInstalled;

  /**
   * Ensures all global unhandled exceptions are recorded.
   * Supported by Gecko and IE.
   * @param {string} msg Error message.
   * @param {string} url URL of script that generated the exception.
   * @param {(number|string)} lineNo The line number at which the error
   * occurred.
   * @param {?(number|string)} colNo The column number at which the error
   * occurred.
   * @param {?Error} ex The actual Error object.
   */
  function traceKitWindowOnError(msg, url, lineNo, colNo, ex) {
    var stack = null;
    // If 'ex' is ErrorEvent, get real Error from inside
    var exception = utils.isErrorEvent(ex) ? ex.error : ex;
    // If 'msg' is ErrorEvent, get real message from inside
    var message = utils.isErrorEvent(msg) ? msg.message : msg;

    if (lastExceptionStack) {
      TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(
        lastExceptionStack,
        url,
        lineNo,
        message
      );
      processLastException();
    } else if (exception && utils.isError(exception)) {
      // non-string `exception` arg; attempt to extract stack trace

      // New chrome and blink send along a real error object
      // Let's just report that like a normal error.
      // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror
      stack = TraceKit.computeStackTrace(exception);
      notifyHandlers(stack, true);
    } else {
      var location = {
        url: url,
        line: lineNo,
        column: colNo
      };

      var name = undefined;
      var groups;

      if ({}.toString.call(message) === '[object String]') {
        var groups = message.match(ERROR_TYPES_RE);
        if (groups) {
          name = groups[1];
          message = groups[2];
        }
      }

      location.func = UNKNOWN_FUNCTION;

      stack = {
        name: name,
        message: message,
        url: getLocationHref(),
        stack: [location]
      };
      notifyHandlers(stack, true);
    }

    if (_oldOnerrorHandler) {
      return _oldOnerrorHandler.apply(this, arguments);
    }

    return false;
  }

  function installGlobalHandler() {
    if (_onErrorHandlerInstalled) {
      return;
    }
    _oldOnerrorHandler = _window.onerror;
    _window.onerror = traceKitWindowOnError;
    _onErrorHandlerInstalled = true;
  }

  function uninstallGlobalHandler() {
    if (!_onErrorHandlerInstalled) {
      return;
    }
    _window.onerror = _oldOnerrorHandler;
    _onErrorHandlerInstalled = false;
    _oldOnerrorHandler = undefined;
  }

  function processLastException() {
    var _lastExceptionStack = lastExceptionStack,
      _lastArgs = lastArgs;
    lastArgs = null;
    lastExceptionStack = null;
    lastException = null;
    notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));
  }

  /**
   * Reports an unhandled Error to TraceKit.
   * @param {Error} ex
   * @param {?boolean} rethrow If false, do not re-throw the exception.
   * Only used for window.onerror to not cause an infinite loop of
   * rethrowing.
   */
  function report(ex, rethrow) {
    var args = _slice.call(arguments, 1);
    if (lastExceptionStack) {
      if (lastException === ex) {
        return; // already caught by an inner catch block, ignore
      } else {
        processLastException();
      }
    }

    var stack = TraceKit.computeStackTrace(ex);
    lastExceptionStack = stack;
    lastException = ex;
    lastArgs = args;

    // If the stack trace is incomplete, wait for 2 seconds for
    // slow slow IE to see if onerror occurs or not before reporting
    // this exception; otherwise, we will end up with an incomplete
    // stack trace
    setTimeout(
      function() {
        if (lastException === ex) {
          processLastException();
        }
      },
      stack.incomplete ? 2000 : 0
    );

    if (rethrow !== false) {
      throw ex; // re-throw to propagate to the top level (and cause window.onerror)
    }
  }

  report.subscribe = subscribe;
  report.unsubscribe = unsubscribe;
  report.uninstall = unsubscribeAll;
  return report;
})();

/**
 * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript
 *
 * Syntax:
 *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)
 * Returns:
 *   s.name              - exception name
 *   s.message           - exception message
 *   s.stack[i].url      - JavaScript or HTML file URL
 *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)
 *   s.stack[i].args     - arguments passed to the function, if known
 *   s.stack[i].line     - line number, if known
 *   s.stack[i].column   - column number, if known
 *
 * Supports:
 *   - Firefox:  full stack trace with line numbers and unreliable column
 *               number on top frame
 *   - Opera 10: full stack trace with line and column numbers
 *   - Opera 9-: full stack trace with line numbers
 *   - Chrome:   full stack trace with line and column numbers
 *   - Safari:   line and column number for the topmost stacktrace element
 *               only
 *   - IE:       no line numbers whatsoever
 *
 * Tries to guess names of anonymous functions by looking for assignments
 * in the source code. In IE and Safari, we have to guess source file names
 * by searching for function bodies inside all page scripts. This will not
 * work for scripts that are loaded cross-domain.
 * Here be dragons: some function names may be guessed incorrectly, and
 * duplicate functions may be mismatched.
 *
 * TraceKit.computeStackTrace should only be used for tracing purposes.
 * Logging of unhandled exceptions should be done with TraceKit.report,
 * which builds on top of TraceKit.computeStackTrace and provides better
 * IE support by utilizing the window.onerror event to retrieve information
 * about the top of the stack.
 *
 * Note: In IE and Safari, no stack trace is recorded on the Error object,
 * so computeStackTrace instead walks its *own* chain of callers.
 * This means that:
 *  * in Safari, some methods may be missing from the stack trace;
 *  * in IE, the topmost function in the stack trace will always be the
 *    caller of computeStackTrace.
 *
 * This is okay for tracing (because you are likely to be calling
 * computeStackTrace from the function you want to be the topmost element
 * of the stack trace anyway), but not okay for logging unhandled
 * exceptions (because your catch block will likely be far away from the
 * inner function that actually caused the exception).
 *
 */
TraceKit.computeStackTrace = (function computeStackTraceWrapper() {
  // Contents of Exception in various browsers.
  //
  // SAFARI:
  // ex.message = Can't find variable: qq
  // ex.line = 59
  // ex.sourceId = 580238192
  // ex.sourceURL = http://...
  // ex.expressionBeginOffset = 96
  // ex.expressionCaretOffset = 98
  // ex.expressionEndOffset = 98
  // ex.name = ReferenceError
  //
  // FIREFOX:
  // ex.message = qq is not defined
  // ex.fileName = http://...
  // ex.lineNumber = 59
  // ex.columnNumber = 69
  // ex.stack = ...stack trace... (see the example below)
  // ex.name = ReferenceError
  //
  // CHROME:
  // ex.message = qq is not defined
  // ex.name = ReferenceError
  // ex.type = not_defined
  // ex.arguments = ['aa']
  // ex.stack = ...stack trace...
  //
  // INTERNET EXPLORER:
  // ex.message = ...
  // ex.name = ReferenceError
  //
  // OPERA:
  // ex.message = ...message... (see the example below)
  // ex.name = ReferenceError
  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)
  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'

  /**
   * Computes stack trace information from the stack property.
   * Chrome and Gecko use this property.
   * @param {Error} ex
   * @return {?Object.<string, *>} Stack trace information.
   */
  function computeStackTraceFromStackProp(ex) {
    if (typeof ex.stack === 'undefined' || !ex.stack) return;

    var chrome = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
    var winjs = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx(?:-web)|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
    // NOTE: blob urls are now supposed to always have an origin, therefore it's format
    // which is `blob:http://url/path/with-some-uuid`, is matched by `blob.*?:\/` as well
    var gecko = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i;
    // Used to additionally parse URL/line/column from eval frames
    var geckoEval = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
    var chromeEval = /\((\S*)(?::(\d+))(?::(\d+))\)/;
    var lines = ex.stack.split('\n');
    var stack = [];
    var submatch;
    var parts;
    var element;
    var reference = /^(.*) is undefined$/.exec(ex.message);

    for (var i = 0, j = lines.length; i < j; ++i) {
      if ((parts = chrome.exec(lines[i]))) {
        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line
        var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line
        if (isEval && (submatch = chromeEval.exec(parts[2]))) {
          // throw out eval line/column and use top-most line/column number
          parts[2] = submatch[1]; // url
          parts[3] = submatch[2]; // line
          parts[4] = submatch[3]; // column
        }
        element = {
          url: !isNative ? parts[2] : null,
          func: parts[1] || UNKNOWN_FUNCTION,
          args: isNative ? [parts[2]] : [],
          line: parts[3] ? +parts[3] : null,
          column: parts[4] ? +parts[4] : null
        };
      } else if ((parts = winjs.exec(lines[i]))) {
        element = {
          url: parts[2],
          func: parts[1] || UNKNOWN_FUNCTION,
          args: [],
          line: +parts[3],
          column: parts[4] ? +parts[4] : null
        };
      } else if ((parts = gecko.exec(lines[i]))) {
        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
        if (isEval && (submatch = geckoEval.exec(parts[3]))) {
          // throw out eval line/column and use top-most line number
          parts[3] = submatch[1];
          parts[4] = submatch[2];
          parts[5] = null; // no column when eval
        } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {
          // FireFox uses this awesome columnNumber property for its top frame
          // Also note, Firefox's column number is 0-based and everything else expects 1-based,
          // so adding 1
          // NOTE: this hack doesn't work if top-most frame is eval
          stack[0].column = ex.columnNumber + 1;
        }
        element = {
          url: parts[3],
          func: parts[1] || UNKNOWN_FUNCTION,
          args: parts[2] ? parts[2].split(',') : [],
          line: parts[4] ? +parts[4] : null,
          column: parts[5] ? +parts[5] : null
        };
      } else {
        continue;
      }

      if (!element.func && element.line) {
        element.func = UNKNOWN_FUNCTION;
      }

      if (element.url && element.url.substr(0, 5) === 'blob:') {
        // Special case for handling JavaScript loaded into a blob.
        // We use a synchronous AJAX request here as a blob is already in
        // memory - it's not making a network request.  This will generate a warning
        // in the browser console, but there has already been an error so that's not
        // that much of an issue.
        var xhr = new XMLHttpRequest();
        xhr.open('GET', element.url, false);
        xhr.send(null);

        // If we failed to download the source, skip this patch
        if (xhr.status === 200) {
          var source = xhr.responseText || '';

          // We trim the source down to the last 300 characters as sourceMappingURL is always at the end of the file.
          // Why 300? To be in line with: https://github.com/getsentry/sentry/blob/4af29e8f2350e20c28a6933354e4f42437b4ba42/src/sentry/lang/javascript/processor.py#L164-L175
          source = source.slice(-300);

          // Now we dig out the source map URL
          var sourceMaps = source.match(/\/\/# sourceMappingURL=(.*)$/);

          // If we don't find a source map comment or we find more than one, continue on to the next element.
          if (sourceMaps) {
            var sourceMapAddress = sourceMaps[1];

            // Now we check to see if it's a relative URL.
            // If it is, convert it to an absolute one.
            if (sourceMapAddress.charAt(0) === '~') {
              sourceMapAddress = getLocationOrigin() + sourceMapAddress.slice(1);
            }

            // Now we strip the '.map' off of the end of the URL and update the
            // element so that Sentry can match the map to the blob.
            element.url = sourceMapAddress.slice(0, -4);
          }
        }
      }

      stack.push(element);
    }

    if (!stack.length) {
      return null;
    }

    return {
      name: ex.name,
      message: ex.message,
      url: getLocationHref(),
      stack: stack
    };
  }

  /**
   * Adds information about the first frame to incomplete stack traces.
   * Safari and IE require this to get complete data on the first frame.
   * @param {Object.<string, *>} stackInfo Stack trace information from
   * one of the compute* methods.
   * @param {string} url The URL of the script that caused an error.
   * @param {(number|string)} lineNo The line number of the script that
   * caused an error.
   * @param {string=} message The error generated by the browser, which
   * hopefully contains the name of the object that caused the error.
   * @return {boolean} Whether or not the stack information was
   * augmented.
   */
  function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {
    var initial = {
      url: url,
      line: lineNo
    };

    if (initial.url && initial.line) {
      stackInfo.incomplete = false;

      if (!initial.func) {
        initial.func = UNKNOWN_FUNCTION;
      }

      if (stackInfo.stack.length > 0) {
        if (stackInfo.stack[0].url === initial.url) {
          if (stackInfo.stack[0].line === initial.line) {
            return false; // already in stack trace
          } else if (
            !stackInfo.stack[0].line &&
            stackInfo.stack[0].func === initial.func
          ) {
            stackInfo.stack[0].line = initial.line;
            return false;
          }
        }
      }

      stackInfo.stack.unshift(initial);
      stackInfo.partial = true;
      return true;
    } else {
      stackInfo.incomplete = true;
    }

    return false;
  }

  /**
   * Computes stack trace information by walking the arguments.caller
   * chain at the time the exception occurred. This will cause earlier
   * frames to be missed but is the only way to get any stack trace in
   * Safari and IE. The top frame is restored by
   * {@link augmentStackTraceWithInitialElement}.
   * @param {Error} ex
   * @return {?Object.<string, *>} Stack trace information.
   */
  function computeStackTraceByWalkingCallerChain(ex, depth) {
    var functionName = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,
      stack = [],
      funcs = {},
      recursion = false,
      parts,
      item,
      source;

    for (
      var curr = computeStackTraceByWalkingCallerChain.caller;
      curr && !recursion;
      curr = curr.caller
    ) {
      if (curr === computeStackTrace || curr === TraceKit.report) {
        // console.log('skipping internal function');
        continue;
      }

      item = {
        url: null,
        func: UNKNOWN_FUNCTION,
        line: null,
        column: null
      };

      if (curr.name) {
        item.func = curr.name;
      } else if ((parts = functionName.exec(curr.toString()))) {
        item.func = parts[1];
      }

      if (typeof item.func === 'undefined') {
        try {
          item.func = parts.input.substring(0, parts.input.indexOf('{'));
        } catch (e) {}
      }

      if (funcs['' + curr]) {
        recursion = true;
      } else {
        funcs['' + curr] = true;
      }

      stack.push(item);
    }

    if (depth) {
      // console.log('depth is ' + depth);
      // console.log('stack is ' + stack.length);
      stack.splice(0, depth);
    }

    var result = {
      name: ex.name,
      message: ex.message,
      url: getLocationHref(),
      stack: stack
    };
    augmentStackTraceWithInitialElement(
      result,
      ex.sourceURL || ex.fileName,
      ex.line || ex.lineNumber,
      ex.message || ex.description
    );
    return result;
  }

  /**
   * Computes a stack trace for an exception.
   * @param {Error} ex
   * @param {(string|number)=} depth
   */
  function computeStackTrace(ex, depth) {
    var stack = null;
    depth = depth == null ? 0 : +depth;

    try {
      stack = computeStackTraceFromStackProp(ex);
      if (stack) {
        return stack;
      }
    } catch (e) {
      if (TraceKit.debug) {
        throw e;
      }
    }

    try {
      stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);
      if (stack) {
        return stack;
      }
    } catch (e) {
      if (TraceKit.debug) {
        throw e;
      }
    }
    return {
      name: ex.name,
      message: ex.message,
      url: getLocationHref()
    };
  }

  computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;
  computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;

  return computeStackTrace;
})();

module.exports = TraceKit;

},{"../../src/utils":"E705"}],"jUPa":[function(require,module,exports) {
/*
 * JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/*
* Add integers, wrapping at 2^32. This uses 16-bit operations internally
* to work around bugs in some JS interpreters.
*/
function safeAdd(x, y) {
  var lsw = (x & 0xffff) + (y & 0xffff);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xffff);
}

/*
* Bitwise rotate a 32-bit number to the left.
*/
function bitRotateLeft(num, cnt) {
  return (num << cnt) | (num >>> (32 - cnt));
}

/*
* These functions implement the four basic operations the algorithm uses.
*/
function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}
function md5ff(a, b, c, d, x, s, t) {
  return md5cmn((b & c) | (~b & d), a, b, x, s, t);
}
function md5gg(a, b, c, d, x, s, t) {
  return md5cmn((b & d) | (c & ~d), a, b, x, s, t);
}
function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}

/*
* Calculate the MD5 of an array of little-endian words, and a bit length.
*/
function binlMD5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << (len % 32);
  x[(((len + 64) >>> 9) << 4) + 14] = len;

  var i;
  var olda;
  var oldb;
  var oldc;
  var oldd;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (i = 0; i < x.length; i += 16) {
    olda = a;
    oldb = b;
    oldc = c;
    oldd = d;

    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);

    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);

    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);

    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);

    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }
  return [a, b, c, d];
}

/*
* Convert an array of little-endian words to a string
*/
function binl2rstr(input) {
  var i;
  var output = '';
  var length32 = input.length * 32;
  for (i = 0; i < length32; i += 8) {
    output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff);
  }
  return output;
}

/*
* Convert a raw string to an array of little-endian words
* Characters >255 have their high-byte silently ignored.
*/
function rstr2binl(input) {
  var i;
  var output = [];
  output[(input.length >> 2) - 1] = undefined;
  for (i = 0; i < output.length; i += 1) {
    output[i] = 0;
  }
  var length8 = input.length * 8;
  for (i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32);
  }
  return output;
}

/*
* Calculate the MD5 of a raw string
*/
function rstrMD5(s) {
  return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));
}

/*
* Calculate the HMAC-MD5, of a key and some data (raw strings)
*/
function rstrHMACMD5(key, data) {
  var i;
  var bkey = rstr2binl(key);
  var ipad = [];
  var opad = [];
  var hash;
  ipad[15] = opad[15] = undefined;
  if (bkey.length > 16) {
    bkey = binlMD5(bkey, key.length * 8);
  }
  for (i = 0; i < 16; i += 1) {
    ipad[i] = bkey[i] ^ 0x36363636;
    opad[i] = bkey[i] ^ 0x5c5c5c5c;
  }
  hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
  return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));
}

/*
* Convert a raw string to a hex string
*/
function rstr2hex(input) {
  var hexTab = '0123456789abcdef';
  var output = '';
  var x;
  var i;
  for (i = 0; i < input.length; i += 1) {
    x = input.charCodeAt(i);
    output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);
  }
  return output;
}

/*
* Encode a string as utf-8
*/
function str2rstrUTF8(input) {
  return unescape(encodeURIComponent(input));
}

/*
* Take string arguments and return either raw or hex encoded strings
*/
function rawMD5(s) {
  return rstrMD5(str2rstrUTF8(s));
}
function hexMD5(s) {
  return rstr2hex(rawMD5(s));
}
function rawHMACMD5(k, d) {
  return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));
}
function hexHMACMD5(k, d) {
  return rstr2hex(rawHMACMD5(k, d));
}

function md5(string, key, raw) {
  if (!key) {
    if (!raw) {
      return hexMD5(string);
    }
    return rawMD5(string);
  }
  if (!raw) {
    return hexHMACMD5(key, string);
  }
  return rawHMACMD5(key, string);
}

module.exports = md5;

},{}],"zPe6":[function(require,module,exports) {
function RavenConfigError(message) {
  this.name = 'RavenConfigError';
  this.message = message;
}
RavenConfigError.prototype = new Error();
RavenConfigError.prototype.constructor = RavenConfigError;

module.exports = RavenConfigError;

},{}],"YqTo":[function(require,module,exports) {
var utils = require('./utils');

var wrapMethod = function(console, level, callback) {
  var originalConsoleLevel = console[level];
  var originalConsole = console;

  if (!(level in console)) {
    return;
  }

  var sentryLevel = level === 'warn' ? 'warning' : level;

  console[level] = function() {
    var args = [].slice.call(arguments);

    var msg = utils.safeJoin(args, ' ');
    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};

    if (level === 'assert') {
      if (args[0] === false) {
        // Default browsers message
        msg =
          'Assertion failed: ' + (utils.safeJoin(args.slice(1), ' ') || 'console.assert');
        data.extra.arguments = args.slice(1);
        callback && callback(msg, data);
      }
    } else {
      callback && callback(msg, data);
    }

    // this fails for some browsers. :(
    if (originalConsoleLevel) {
      // IE9 doesn't allow calling apply on console functions directly
      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193
      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);
    }
  };
};

module.exports = {
  wrapMethod: wrapMethod
};

},{"./utils":"E705"}],"sJ2O":[function(require,module,exports) {
var global = arguments[3];
/*global XDomainRequest:false */

var TraceKit = require('../vendor/TraceKit/tracekit');
var stringify = require('../vendor/json-stringify-safe/stringify');
var md5 = require('../vendor/md5/md5');
var RavenConfigError = require('./configError');

var utils = require('./utils');
var isErrorEvent = utils.isErrorEvent;
var isDOMError = utils.isDOMError;
var isDOMException = utils.isDOMException;
var isError = utils.isError;
var isObject = utils.isObject;
var isPlainObject = utils.isPlainObject;
var isUndefined = utils.isUndefined;
var isFunction = utils.isFunction;
var isString = utils.isString;
var isArray = utils.isArray;
var isEmptyObject = utils.isEmptyObject;
var each = utils.each;
var objectMerge = utils.objectMerge;
var truncate = utils.truncate;
var objectFrozen = utils.objectFrozen;
var hasKey = utils.hasKey;
var joinRegExp = utils.joinRegExp;
var urlencode = utils.urlencode;
var uuid4 = utils.uuid4;
var htmlTreeAsString = utils.htmlTreeAsString;
var isSameException = utils.isSameException;
var isSameStacktrace = utils.isSameStacktrace;
var parseUrl = utils.parseUrl;
var fill = utils.fill;
var supportsFetch = utils.supportsFetch;
var supportsReferrerPolicy = utils.supportsReferrerPolicy;
var serializeKeysForMessage = utils.serializeKeysForMessage;
var serializeException = utils.serializeException;
var sanitize = utils.sanitize;

var wrapConsoleMethod = require('./console').wrapMethod;

var dsnKeys = 'source protocol user pass host port path'.split(' '),
  dsnPattern = /^(?:(\w+):)?\/\/(?:(\w+)(:\w+)?@)?([\w\.-]+)(?::(\d+))?(\/.*)/;

function now() {
  return +new Date();
}

// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)
var _window =
  typeof window !== 'undefined'
    ? window
    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
var _document = _window.document;
var _navigator = _window.navigator;

function keepOriginalCallback(original, callback) {
  return isFunction(callback)
    ? function(data) {
        return callback(data, original);
      }
    : callback;
}

// First, check for JSON support
// If there is no JSON, we no-op the core features of Raven
// since JSON is required to encode the payload
function Raven() {
  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);
  // Raven can run in contexts where there's no document (react-native)
  this._hasDocument = !isUndefined(_document);
  this._hasNavigator = !isUndefined(_navigator);
  this._lastCapturedException = null;
  this._lastData = null;
  this._lastEventId = null;
  this._globalServer = null;
  this._globalKey = null;
  this._globalProject = null;
  this._globalContext = {};
  this._globalOptions = {
    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin
    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,
    logger: 'javascript',
    ignoreErrors: [],
    ignoreUrls: [],
    whitelistUrls: [],
    includePaths: [],
    headers: null,
    collectWindowErrors: true,
    captureUnhandledRejections: true,
    maxMessageLength: 0,
    // By default, truncates URL values to 250 chars
    maxUrlLength: 250,
    stackTraceLimit: 50,
    autoBreadcrumbs: true,
    instrument: true,
    sampleRate: 1,
    sanitizeKeys: []
  };
  this._fetchDefaults = {
    method: 'POST',
    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default
    // https://caniuse.com/#feat=referrer-policy
    // It doesn't. And it throw exception instead of ignoring this parameter...
    // REF: https://github.com/getsentry/raven-js/issues/1233
    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''
  };
  this._ignoreOnError = 0;
  this._isRavenInstalled = false;
  this._originalErrorStackTraceLimit = Error.stackTraceLimit;
  // capture references to window.console *and* all its methods first
  // before the console plugin has a chance to monkey patch
  this._originalConsole = _window.console || {};
  this._originalConsoleMethods = {};
  this._plugins = [];
  this._startTime = now();
  this._wrappedBuiltIns = [];
  this._breadcrumbs = [];
  this._lastCapturedEvent = null;
  this._keypressTimeout;
  this._location = _window.location;
  this._lastHref = this._location && this._location.href;
  this._resetBackoff();

  // eslint-disable-next-line guard-for-in
  for (var method in this._originalConsole) {
    this._originalConsoleMethods[method] = this._originalConsole[method];
  }
}

/*
 * The core Raven singleton
 *
 * @this {Raven}
 */

Raven.prototype = {
  // Hardcode version string so that raven source can be loaded directly via
  // webpack (using a build step causes webpack #1617). Grunt verifies that
  // this value matches package.json during build.
  //   See: https://github.com/getsentry/raven-js/issues/465
  VERSION: '3.27.2',

  debug: false,

  TraceKit: TraceKit, // alias to TraceKit

  /*
     * Configure Raven with a DSN and extra options
     *
     * @param {string} dsn The public Sentry DSN
     * @param {object} options Set of global options [optional]
     * @return {Raven}
     */
  config: function(dsn, options) {
    var self = this;

    if (self._globalServer) {
      this._logDebug('error', 'Error: Raven has already been configured');
      return self;
    }
    if (!dsn) return self;

    var globalOptions = self._globalOptions;

    // merge in options
    if (options) {
      each(options, function(key, value) {
        // tags and extra are special and need to be put into context
        if (key === 'tags' || key === 'extra' || key === 'user') {
          self._globalContext[key] = value;
        } else {
          globalOptions[key] = value;
        }
      });
    }

    self.setDSN(dsn);

    // "Script error." is hard coded into browsers for errors that it can't read.
    // this is the result of a script being pulled in from an external domain and CORS.
    globalOptions.ignoreErrors.push(/^Script error\.?$/);
    globalOptions.ignoreErrors.push(/^Javascript error: Script error\.? on line 0$/);

    // join regexp rules into one big rule
    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);
    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length
      ? joinRegExp(globalOptions.ignoreUrls)
      : false;
    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length
      ? joinRegExp(globalOptions.whitelistUrls)
      : false;
    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);
    globalOptions.maxBreadcrumbs = Math.max(
      0,
      Math.min(globalOptions.maxBreadcrumbs || 100, 100)
    ); // default and hard limit is 100

    var autoBreadcrumbDefaults = {
      xhr: true,
      console: true,
      dom: true,
      location: true,
      sentry: true
    };

    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;
    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {
      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);
    } else if (autoBreadcrumbs !== false) {
      autoBreadcrumbs = autoBreadcrumbDefaults;
    }
    globalOptions.autoBreadcrumbs = autoBreadcrumbs;

    var instrumentDefaults = {
      tryCatch: true
    };

    var instrument = globalOptions.instrument;
    if ({}.toString.call(instrument) === '[object Object]') {
      instrument = objectMerge(instrumentDefaults, instrument);
    } else if (instrument !== false) {
      instrument = instrumentDefaults;
    }
    globalOptions.instrument = instrument;

    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;

    // return for chaining
    return self;
  },

  /*
     * Installs a global window.onerror error handler
     * to capture and report uncaught exceptions.
     * At this point, install() is required to be called due
     * to the way TraceKit is set up.
     *
     * @return {Raven}
     */
  install: function() {
    var self = this;
    if (self.isSetup() && !self._isRavenInstalled) {
      TraceKit.report.subscribe(function() {
        self._handleOnErrorStackInfo.apply(self, arguments);
      });

      if (self._globalOptions.captureUnhandledRejections) {
        self._attachPromiseRejectionHandler();
      }

      self._patchFunctionToString();

      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {
        self._instrumentTryCatch();
      }

      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();

      // Install all of the plugins
      self._drainPlugins();

      self._isRavenInstalled = true;
    }

    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;
    return this;
  },

  /*
     * Set the DSN (can be called multiple time unlike config)
     *
     * @param {string} dsn The public Sentry DSN
     */
  setDSN: function(dsn) {
    var self = this,
      uri = self._parseDSN(dsn),
      lastSlash = uri.path.lastIndexOf('/'),
      path = uri.path.substr(1, lastSlash);

    self._dsn = dsn;
    self._globalKey = uri.user;
    self._globalSecret = uri.pass && uri.pass.substr(1);
    self._globalProject = uri.path.substr(lastSlash + 1);

    self._globalServer = self._getGlobalServer(uri);

    self._globalEndpoint =
      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';

    // Reset backoff state since we may be pointing at a
    // new project/server
    this._resetBackoff();
  },

  /*
     * Wrap code within a context so Raven can capture errors
     * reliably across domains that is executed immediately.
     *
     * @param {object} options A specific set of options for this context [optional]
     * @param {function} func The callback to be immediately executed within the context
     * @param {array} args An array of arguments to be called with the callback [optional]
     */
  context: function(options, func, args) {
    if (isFunction(options)) {
      args = func || [];
      func = options;
      options = {};
    }

    return this.wrap(options, func).apply(this, args);
  },

  /*
     * Wrap code within a context and returns back a new function to be executed
     *
     * @param {object} options A specific set of options for this context [optional]
     * @param {function} func The function to be wrapped in a new context
     * @param {function} _before A function to call before the try/catch wrapper [optional, private]
     * @return {function} The newly wrapped functions with a context
     */
  wrap: function(options, func, _before) {
    var self = this;
    // 1 argument has been passed, and it's not a function
    // so just return it
    if (isUndefined(func) && !isFunction(options)) {
      return options;
    }

    // options is optional
    if (isFunction(options)) {
      func = options;
      options = undefined;
    }

    // At this point, we've passed along 2 arguments, and the second one
    // is not a function either, so we'll just return the second argument.
    if (!isFunction(func)) {
      return func;
    }

    // We don't wanna wrap it twice!
    try {
      if (func.__raven__) {
        return func;
      }

      // If this has already been wrapped in the past, return that
      if (func.__raven_wrapper__) {
        return func.__raven_wrapper__;
      }
    } catch (e) {
      // Just accessing custom props in some Selenium environments
      // can cause a "Permission denied" exception (see raven-js#495).
      // Bail on wrapping and return the function as-is (defers to window.onerror).
      return func;
    }

    function wrapped() {
      var args = [],
        i = arguments.length,
        deep = !options || (options && options.deep !== false);

      if (_before && isFunction(_before)) {
        _before.apply(this, arguments);
      }

      // Recursively wrap all of a function's arguments that are
      // functions themselves.
      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];

      try {
        // Attempt to invoke user-land function
        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it
        //       means Raven caught an error invoking your application code. This is
        //       expected behavior and NOT indicative of a bug with Raven.js.
        return func.apply(this, args);
      } catch (e) {
        self._ignoreNextOnError();
        self.captureException(e, options);
        throw e;
      }
    }

    // copy over properties of the old function
    for (var property in func) {
      if (hasKey(func, property)) {
        wrapped[property] = func[property];
      }
    }
    wrapped.prototype = func.prototype;

    func.__raven_wrapper__ = wrapped;
    // Signal that this function has been wrapped/filled already
    // for both debugging and to prevent it to being wrapped/filled twice
    wrapped.__raven__ = true;
    wrapped.__orig__ = func;

    return wrapped;
  },

  /**
   * Uninstalls the global error handler.
   *
   * @return {Raven}
   */
  uninstall: function() {
    TraceKit.report.uninstall();

    this._detachPromiseRejectionHandler();
    this._unpatchFunctionToString();
    this._restoreBuiltIns();
    this._restoreConsole();

    Error.stackTraceLimit = this._originalErrorStackTraceLimit;
    this._isRavenInstalled = false;

    return this;
  },

  /**
   * Callback used for `unhandledrejection` event
   *
   * @param {PromiseRejectionEvent} event An object containing
   *   promise: the Promise that was rejected
   *   reason: the value with which the Promise was rejected
   * @return void
   */
  _promiseRejectionHandler: function(event) {
    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);
    this.captureException(event.reason, {
      mechanism: {
        type: 'onunhandledrejection',
        handled: false
      }
    });
  },

  /**
   * Installs the global promise rejection handler.
   *
   * @return {raven}
   */
  _attachPromiseRejectionHandler: function() {
    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);
    _window.addEventListener &&
      _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);
    return this;
  },

  /**
   * Uninstalls the global promise rejection handler.
   *
   * @return {raven}
   */
  _detachPromiseRejectionHandler: function() {
    _window.removeEventListener &&
      _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);
    return this;
  },

  /**
   * Manually capture an exception and send it over to Sentry
   *
   * @param {error} ex An exception to be logged
   * @param {object} options A specific set of options for this error [optional]
   * @return {Raven}
   */
  captureException: function(ex, options) {
    options = objectMerge({trimHeadFrames: 0}, options ? options : {});

    if (isErrorEvent(ex) && ex.error) {
      // If it is an ErrorEvent with `error` property, extract it to get actual Error
      ex = ex.error;
    } else if (isDOMError(ex) || isDOMException(ex)) {
      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)
      // then we just extract the name and message, as they don't provide anything else
      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError
      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException
      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');
      var message = ex.message ? name + ': ' + ex.message : name;

      return this.captureMessage(
        message,
        objectMerge(options, {
          // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well
          // but it's barely any overhead so we may at least try
          stacktrace: true,
          trimHeadFrames: options.trimHeadFrames + 1
        })
      );
    } else if (isError(ex)) {
      // we have a real Error object
      ex = ex;
    } else if (isPlainObject(ex)) {
      // If it is plain Object, serialize it manually and extract options
      // This will allow us to group events based on top-level keys
      // which is much better than creating new group when any key/value change
      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);
      ex = new Error(options.message);
    } else {
      // If none of previous checks were valid, then it means that
      // it's not a DOMError/DOMException
      // it's not a plain Object
      // it's not a valid ErrorEvent (one with an error property)
      // it's not an Error
      // So bail out and capture it as a simple message:
      return this.captureMessage(
        ex,
        objectMerge(options, {
          stacktrace: true, // if we fall back to captureMessage, default to attempting a new trace
          trimHeadFrames: options.trimHeadFrames + 1
        })
      );
    }

    // Store the raw exception object for potential debugging and introspection
    this._lastCapturedException = ex;

    // TraceKit.report will re-raise any exception passed to it,
    // which means you have to wrap it in try/catch. Instead, we
    // can wrap it here and only re-raise if TraceKit.report
    // raises an exception different from the one we asked to
    // report on.
    try {
      var stack = TraceKit.computeStackTrace(ex);
      this._handleStackInfo(stack, options);
    } catch (ex1) {
      if (ex !== ex1) {
        throw ex1;
      }
    }

    return this;
  },

  _getCaptureExceptionOptionsFromPlainObject: function(currentOptions, ex) {
    var exKeys = Object.keys(ex).sort();
    var options = objectMerge(currentOptions, {
      message:
        'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),
      fingerprint: [md5(exKeys)],
      extra: currentOptions.extra || {}
    });
    options.extra.__serialized__ = serializeException(ex);

    return options;
  },

  /*
     * Manually send a message to Sentry
     *
     * @param {string} msg A plain message to be captured in Sentry
     * @param {object} options A specific set of options for this message [optional]
     * @return {Raven}
     */
  captureMessage: function(msg, options) {
    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an
    // early call; we'll error on the side of logging anything called before configuration since it's
    // probably something you should see:
    if (
      !!this._globalOptions.ignoreErrors.test &&
      this._globalOptions.ignoreErrors.test(msg)
    ) {
      return;
    }

    options = options || {};
    msg = msg + ''; // Make sure it's actually a string

    var data = objectMerge(
      {
        message: msg
      },
      options
    );

    var ex;
    // Generate a "synthetic" stack trace from this point.
    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative
    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,
    //       or if it catches a thrown object without a "stack" property.
    try {
      throw new Error(msg);
    } catch (ex1) {
      ex = ex1;
    }

    // null exception name so `Error` isn't prefixed to msg
    ex.name = null;
    var stack = TraceKit.computeStackTrace(ex);

    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]
    var initialCall = isArray(stack.stack) && stack.stack[1];

    // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call
    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd
    // initialCall => captureException(string) => captureMessage(string)
    if (initialCall && initialCall.func === 'Raven.captureException') {
      initialCall = stack.stack[2];
    }

    var fileurl = (initialCall && initialCall.url) || '';

    if (
      !!this._globalOptions.ignoreUrls.test &&
      this._globalOptions.ignoreUrls.test(fileurl)
    ) {
      return;
    }

    if (
      !!this._globalOptions.whitelistUrls.test &&
      !this._globalOptions.whitelistUrls.test(fileurl)
    ) {
      return;
    }

    // Always attempt to get stacktrace if message is empty.
    // It's the only way to provide any helpful information to the user.
    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {
      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)
      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;

      options = objectMerge(
        {
          trimHeadFrames: 0
        },
        options
      );
      // Since we know this is a synthetic trace, the top frame (this function call)
      // MUST be from Raven.js, so mark it for trimming
      // We add to the trim counter so that callers can choose to trim extra frames, such
      // as utility functions.
      options.trimHeadFrames += 1;

      var frames = this._prepareFrames(stack, options);
      data.stacktrace = {
        // Sentry expects frames oldest to newest
        frames: frames.reverse()
      };
    }

    // Make sure that fingerprint is always wrapped in an array
    if (data.fingerprint) {
      data.fingerprint = isArray(data.fingerprint)
        ? data.fingerprint
        : [data.fingerprint];
    }

    // Fire away!
    this._send(data);

    return this;
  },

  captureBreadcrumb: function(obj) {
    var crumb = objectMerge(
      {
        timestamp: now() / 1000
      },
      obj
    );

    if (isFunction(this._globalOptions.breadcrumbCallback)) {
      var result = this._globalOptions.breadcrumbCallback(crumb);

      if (isObject(result) && !isEmptyObject(result)) {
        crumb = result;
      } else if (result === false) {
        return this;
      }
    }

    this._breadcrumbs.push(crumb);
    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {
      this._breadcrumbs.shift();
    }
    return this;
  },

  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {
    var pluginArgs = [].slice.call(arguments, 1);

    this._plugins.push([plugin, pluginArgs]);
    if (this._isRavenInstalled) {
      this._drainPlugins();
    }

    return this;
  },

  /*
     * Set/clear a user to be sent along with the payload.
     *
     * @param {object} user An object representing user data [optional]
     * @return {Raven}
     */
  setUserContext: function(user) {
    // Intentionally do not merge here since that's an unexpected behavior.
    this._globalContext.user = user;

    return this;
  },

  /*
     * Merge extra attributes to be sent along with the payload.
     *
     * @param {object} extra An object representing extra data [optional]
     * @return {Raven}
     */
  setExtraContext: function(extra) {
    this._mergeContext('extra', extra);

    return this;
  },

  /*
     * Merge tags to be sent along with the payload.
     *
     * @param {object} tags An object representing tags [optional]
     * @return {Raven}
     */
  setTagsContext: function(tags) {
    this._mergeContext('tags', tags);

    return this;
  },

  /*
     * Clear all of the context.
     *
     * @return {Raven}
     */
  clearContext: function() {
    this._globalContext = {};

    return this;
  },

  /*
     * Get a copy of the current context. This cannot be mutated.
     *
     * @return {object} copy of context
     */
  getContext: function() {
    // lol javascript
    return JSON.parse(stringify(this._globalContext));
  },

  /*
     * Set environment of application
     *
     * @param {string} environment Typically something like 'production'.
     * @return {Raven}
     */
  setEnvironment: function(environment) {
    this._globalOptions.environment = environment;

    return this;
  },

  /*
     * Set release version of application
     *
     * @param {string} release Typically something like a git SHA to identify version
     * @return {Raven}
     */
  setRelease: function(release) {
    this._globalOptions.release = release;

    return this;
  },

  /*
     * Set the dataCallback option
     *
     * @param {function} callback The callback to run which allows the
     *                            data blob to be mutated before sending
     * @return {Raven}
     */
  setDataCallback: function(callback) {
    var original = this._globalOptions.dataCallback;
    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);
    return this;
  },

  /*
     * Set the breadcrumbCallback option
     *
     * @param {function} callback The callback to run which allows filtering
     *                            or mutating breadcrumbs
     * @return {Raven}
     */
  setBreadcrumbCallback: function(callback) {
    var original = this._globalOptions.breadcrumbCallback;
    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);
    return this;
  },

  /*
     * Set the shouldSendCallback option
     *
     * @param {function} callback The callback to run which allows
     *                            introspecting the blob before sending
     * @return {Raven}
     */
  setShouldSendCallback: function(callback) {
    var original = this._globalOptions.shouldSendCallback;
    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);
    return this;
  },

  /**
   * Override the default HTTP transport mechanism that transmits data
   * to the Sentry server.
   *
   * @param {function} transport Function invoked instead of the default
   *                             `makeRequest` handler.
   *
   * @return {Raven}
   */
  setTransport: function(transport) {
    this._globalOptions.transport = transport;

    return this;
  },

  /*
     * Get the latest raw exception that was captured by Raven.
     *
     * @return {error}
     */
  lastException: function() {
    return this._lastCapturedException;
  },

  /*
     * Get the last event id
     *
     * @return {string}
     */
  lastEventId: function() {
    return this._lastEventId;
  },

  /*
     * Determine if Raven is setup and ready to go.
     *
     * @return {boolean}
     */
  isSetup: function() {
    if (!this._hasJSON) return false; // needs JSON support
    if (!this._globalServer) {
      if (!this.ravenNotConfiguredError) {
        this.ravenNotConfiguredError = true;
        this._logDebug('error', 'Error: Raven has not been configured.');
      }
      return false;
    }
    return true;
  },

  afterLoad: function() {
    // TODO: remove window dependence?

    // Attempt to initialize Raven on load
    var RavenConfig = _window.RavenConfig;
    if (RavenConfig) {
      this.config(RavenConfig.dsn, RavenConfig.config).install();
    }
  },

  showReportDialog: function(options) {
    if (
      !_document // doesn't work without a document (React native)
    )
      return;

    options = objectMerge(
      {
        eventId: this.lastEventId(),
        dsn: this._dsn,
        user: this._globalContext.user || {}
      },
      options
    );

    if (!options.eventId) {
      throw new RavenConfigError('Missing eventId');
    }

    if (!options.dsn) {
      throw new RavenConfigError('Missing DSN');
    }

    var encode = encodeURIComponent;
    var encodedOptions = [];

    for (var key in options) {
      if (key === 'user') {
        var user = options.user;
        if (user.name) encodedOptions.push('name=' + encode(user.name));
        if (user.email) encodedOptions.push('email=' + encode(user.email));
      } else {
        encodedOptions.push(encode(key) + '=' + encode(options[key]));
      }
    }
    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));

    var script = _document.createElement('script');
    script.async = true;
    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');
    (_document.head || _document.body).appendChild(script);
  },

  /**** Private functions ****/
  _ignoreNextOnError: function() {
    var self = this;
    this._ignoreOnError += 1;
    setTimeout(function() {
      // onerror should trigger before setTimeout
      self._ignoreOnError -= 1;
    });
  },

  _triggerEvent: function(eventType, options) {
    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it
    var evt, key;

    if (!this._hasDocument) return;

    options = options || {};

    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);

    if (_document.createEvent) {
      evt = _document.createEvent('HTMLEvents');
      evt.initEvent(eventType, true, true);
    } else {
      evt = _document.createEventObject();
      evt.eventType = eventType;
    }

    for (key in options)
      if (hasKey(options, key)) {
        evt[key] = options[key];
      }

    if (_document.createEvent) {
      // IE9 if standards
      _document.dispatchEvent(evt);
    } else {
      // IE8 regardless of Quirks or Standards
      // IE9 if quirks
      try {
        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);
      } catch (e) {
        // Do nothing
      }
    }
  },

  /**
   * Wraps addEventListener to capture UI breadcrumbs
   * @param evtName the event name (e.g. "click")
   * @returns {Function}
   * @private
   */
  _breadcrumbEventHandler: function(evtName) {
    var self = this;
    return function(evt) {
      // reset keypress timeout; e.g. triggering a 'click' after
      // a 'keypress' will reset the keypress debounce so that a new
      // set of keypresses can be recorded
      self._keypressTimeout = null;

      // It's possible this handler might trigger multiple times for the same
      // event (e.g. event propagation through node ancestors). Ignore if we've
      // already captured the event.
      if (self._lastCapturedEvent === evt) return;

      self._lastCapturedEvent = evt;

      // try/catch both:
      // - accessing evt.target (see getsentry/raven-js#838, #768)
      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly
      //   can throw an exception in some circumstances.
      var target;
      try {
        target = htmlTreeAsString(evt.target);
      } catch (e) {
        target = '<unknown>';
      }

      self.captureBreadcrumb({
        category: 'ui.' + evtName, // e.g. ui.click, ui.input
        message: target
      });
    };
  },

  /**
   * Wraps addEventListener to capture keypress UI events
   * @returns {Function}
   * @private
   */
  _keypressEventHandler: function() {
    var self = this,
      debounceDuration = 1000; // milliseconds

    // TODO: if somehow user switches keypress target before
    //       debounce timeout is triggered, we will only capture
    //       a single breadcrumb from the FIRST target (acceptable?)
    return function(evt) {
      var target;
      try {
        target = evt.target;
      } catch (e) {
        // just accessing event properties can throw an exception in some rare circumstances
        // see: https://github.com/getsentry/raven-js/issues/838
        return;
      }
      var tagName = target && target.tagName;

      // only consider keypress events on actual input elements
      // this will disregard keypresses targeting body (e.g. tabbing
      // through elements, hotkeys, etc)
      if (
        !tagName ||
        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)
      )
        return;

      // record first keypress in a series, but ignore subsequent
      // keypresses until debounce clears
      var timeout = self._keypressTimeout;
      if (!timeout) {
        self._breadcrumbEventHandler('input')(evt);
      }
      clearTimeout(timeout);
      self._keypressTimeout = setTimeout(function() {
        self._keypressTimeout = null;
      }, debounceDuration);
    };
  },

  /**
   * Captures a breadcrumb of type "navigation", normalizing input URLs
   * @param to the originating URL
   * @param from the target URL
   * @private
   */
  _captureUrlChange: function(from, to) {
    var parsedLoc = parseUrl(this._location.href);
    var parsedTo = parseUrl(to);
    var parsedFrom = parseUrl(from);

    // because onpopstate only tells you the "new" (to) value of location.href, and
    // not the previous (from) value, we need to track the value of the current URL
    // state ourselves
    this._lastHref = to;

    // Use only the path component of the URL if the URL matches the current
    // document (almost all the time when using pushState)
    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)
      to = parsedTo.relative;
    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)
      from = parsedFrom.relative;

    this.captureBreadcrumb({
      category: 'navigation',
      data: {
        to: to,
        from: from
      }
    });
  },

  _patchFunctionToString: function() {
    var self = this;
    self._originalFunctionToString = Function.prototype.toString;
    // eslint-disable-next-line no-extend-native
    Function.prototype.toString = function() {
      if (typeof this === 'function' && this.__raven__) {
        return self._originalFunctionToString.apply(this.__orig__, arguments);
      }
      return self._originalFunctionToString.apply(this, arguments);
    };
  },

  _unpatchFunctionToString: function() {
    if (this._originalFunctionToString) {
      // eslint-disable-next-line no-extend-native
      Function.prototype.toString = this._originalFunctionToString;
    }
  },

  /**
   * Wrap timer functions and event targets to catch errors and provide
   * better metadata.
   */
  _instrumentTryCatch: function() {
    var self = this;

    var wrappedBuiltIns = self._wrappedBuiltIns;

    function wrapTimeFn(orig) {
      return function(fn, t) {
        // preserve arity
        // Make a copy of the arguments to prevent deoptimization
        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i) {
          args[i] = arguments[i];
        }
        var originalCallback = args[0];
        if (isFunction(originalCallback)) {
          args[0] = self.wrap(
            {
              mechanism: {
                type: 'instrument',
                data: {function: orig.name || '<anonymous>'}
              }
            },
            originalCallback
          );
        }

        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it
        // also supports only two arguments and doesn't care what this is, so we
        // can just call the original function directly.
        if (orig.apply) {
          return orig.apply(this, args);
        } else {
          return orig(args[0], args[1]);
        }
      };
    }

    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;

    function wrapEventTarget(global) {
      var proto = _window[global] && _window[global].prototype;
      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {
        fill(
          proto,
          'addEventListener',
          function(orig) {
            return function(evtName, fn, capture, secure) {
              // preserve arity
              try {
                if (fn && fn.handleEvent) {
                  fn.handleEvent = self.wrap(
                    {
                      mechanism: {
                        type: 'instrument',
                        data: {
                          target: global,
                          function: 'handleEvent',
                          handler: (fn && fn.name) || '<anonymous>'
                        }
                      }
                    },
                    fn.handleEvent
                  );
                }
              } catch (err) {
                // can sometimes get 'Permission denied to access property "handle Event'
              }

              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`
              // so that we don't have more than one wrapper function
              var before, clickHandler, keypressHandler;

              if (
                autoBreadcrumbs &&
                autoBreadcrumbs.dom &&
                (global === 'EventTarget' || global === 'Node')
              ) {
                // NOTE: generating multiple handlers per addEventListener invocation, should
                //       revisit and verify we can just use one (almost certainly)
                clickHandler = self._breadcrumbEventHandler('click');
                keypressHandler = self._keypressEventHandler();
                before = function(evt) {
                  // need to intercept every DOM event in `before` argument, in case that
                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)
                  // see #724
                  if (!evt) return;

                  var eventType;
                  try {
                    eventType = evt.type;
                  } catch (e) {
                    // just accessing event properties can throw an exception in some rare circumstances
                    // see: https://github.com/getsentry/raven-js/issues/838
                    return;
                  }
                  if (eventType === 'click') return clickHandler(evt);
                  else if (eventType === 'keypress') return keypressHandler(evt);
                };
              }
              return orig.call(
                this,
                evtName,
                self.wrap(
                  {
                    mechanism: {
                      type: 'instrument',
                      data: {
                        target: global,
                        function: 'addEventListener',
                        handler: (fn && fn.name) || '<anonymous>'
                      }
                    }
                  },
                  fn,
                  before
                ),
                capture,
                secure
              );
            };
          },
          wrappedBuiltIns
        );
        fill(
          proto,
          'removeEventListener',
          function(orig) {
            return function(evt, fn, capture, secure) {
              try {
                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);
              } catch (e) {
                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments
              }
              return orig.call(this, evt, fn, capture, secure);
            };
          },
          wrappedBuiltIns
        );
      }
    }

    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);
    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);
    if (_window.requestAnimationFrame) {
      fill(
        _window,
        'requestAnimationFrame',
        function(orig) {
          return function(cb) {
            return orig(
              self.wrap(
                {
                  mechanism: {
                    type: 'instrument',
                    data: {
                      function: 'requestAnimationFrame',
                      handler: (orig && orig.name) || '<anonymous>'
                    }
                  }
                },
                cb
              )
            );
          };
        },
        wrappedBuiltIns
      );
    }

    // event targets borrowed from bugsnag-js:
    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666
    var eventTargets = [
      'EventTarget',
      'Window',
      'Node',
      'ApplicationCache',
      'AudioTrackList',
      'ChannelMergerNode',
      'CryptoOperation',
      'EventSource',
      'FileReader',
      'HTMLUnknownElement',
      'IDBDatabase',
      'IDBRequest',
      'IDBTransaction',
      'KeyOperation',
      'MediaController',
      'MessagePort',
      'ModalWindow',
      'Notification',
      'SVGElementInstance',
      'Screen',
      'TextTrack',
      'TextTrackCue',
      'TextTrackList',
      'WebSocket',
      'WebSocketWorker',
      'Worker',
      'XMLHttpRequest',
      'XMLHttpRequestEventTarget',
      'XMLHttpRequestUpload'
    ];
    for (var i = 0; i < eventTargets.length; i++) {
      wrapEventTarget(eventTargets[i]);
    }
  },

  /**
   * Instrument browser built-ins w/ breadcrumb capturing
   *  - XMLHttpRequests
   *  - DOM interactions (click/typing)
   *  - window.location changes
   *  - console
   *
   * Can be disabled or individually configured via the `autoBreadcrumbs` config option
   */
  _instrumentBreadcrumbs: function() {
    var self = this;
    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;

    var wrappedBuiltIns = self._wrappedBuiltIns;

    function wrapProp(prop, xhr) {
      if (prop in xhr && isFunction(xhr[prop])) {
        fill(xhr, prop, function(orig) {
          return self.wrap(
            {
              mechanism: {
                type: 'instrument',
                data: {function: prop, handler: (orig && orig.name) || '<anonymous>'}
              }
            },
            orig
          );
        }); // intentionally don't track filled methods on XHR instances
      }
    }

    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {
      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;
      fill(
        xhrproto,
        'open',
        function(origOpen) {
          return function(method, url) {
            // preserve arity

            // if Sentry key appears in URL, don't capture
            if (isString(url) && url.indexOf(self._globalKey) === -1) {
              this.__raven_xhr = {
                method: method,
                url: url,
                status_code: null
              };
            }

            return origOpen.apply(this, arguments);
          };
        },
        wrappedBuiltIns
      );

      fill(
        xhrproto,
        'send',
        function(origSend) {
          return function() {
            // preserve arity
            var xhr = this;

            function onreadystatechangeHandler() {
              if (xhr.__raven_xhr && xhr.readyState === 4) {
                try {
                  // touching statusCode in some platforms throws
                  // an exception
                  xhr.__raven_xhr.status_code = xhr.status;
                } catch (e) {
                  /* do nothing */
                }

                self.captureBreadcrumb({
                  type: 'http',
                  category: 'xhr',
                  data: xhr.__raven_xhr
                });
              }
            }

            var props = ['onload', 'onerror', 'onprogress'];
            for (var j = 0; j < props.length; j++) {
              wrapProp(props[j], xhr);
            }

            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {
              fill(
                xhr,
                'onreadystatechange',
                function(orig) {
                  return self.wrap(
                    {
                      mechanism: {
                        type: 'instrument',
                        data: {
                          function: 'onreadystatechange',
                          handler: (orig && orig.name) || '<anonymous>'
                        }
                      }
                    },
                    orig,
                    onreadystatechangeHandler
                  );
                } /* intentionally don't track this instrumentation */
              );
            } else {
              // if onreadystatechange wasn't actually set by the page on this xhr, we
              // are free to set our own and capture the breadcrumb
              xhr.onreadystatechange = onreadystatechangeHandler;
            }

            return origSend.apply(this, arguments);
          };
        },
        wrappedBuiltIns
      );
    }

    if (autoBreadcrumbs.xhr && supportsFetch()) {
      fill(
        _window,
        'fetch',
        function(origFetch) {
          return function() {
            // preserve arity
            // Make a copy of the arguments to prevent deoptimization
            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
            var args = new Array(arguments.length);
            for (var i = 0; i < args.length; ++i) {
              args[i] = arguments[i];
            }

            var fetchInput = args[0];
            var method = 'GET';
            var url;

            if (typeof fetchInput === 'string') {
              url = fetchInput;
            } else if ('Request' in _window && fetchInput instanceof _window.Request) {
              url = fetchInput.url;
              if (fetchInput.method) {
                method = fetchInput.method;
              }
            } else {
              url = '' + fetchInput;
            }

            // if Sentry key appears in URL, don't capture, as it's our own request
            if (url.indexOf(self._globalKey) !== -1) {
              return origFetch.apply(this, args);
            }

            if (args[1] && args[1].method) {
              method = args[1].method;
            }

            var fetchData = {
              method: method,
              url: url,
              status_code: null
            };

            return origFetch
              .apply(this, args)
              .then(function(response) {
                fetchData.status_code = response.status;

                self.captureBreadcrumb({
                  type: 'http',
                  category: 'fetch',
                  data: fetchData
                });

                return response;
              })
              ['catch'](function(err) {
                // if there is an error performing the request
                self.captureBreadcrumb({
                  type: 'http',
                  category: 'fetch',
                  data: fetchData,
                  level: 'error'
                });

                throw err;
              });
          };
        },
        wrappedBuiltIns
      );
    }

    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way
    // to the document. Do this before we instrument addEventListener.
    if (autoBreadcrumbs.dom && this._hasDocument) {
      if (_document.addEventListener) {
        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);
        _document.addEventListener('keypress', self._keypressEventHandler(), false);
      } else if (_document.attachEvent) {
        // IE8 Compatibility
        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));
        _document.attachEvent('onkeypress', self._keypressEventHandler());
      }
    }

    // record navigation (URL) changes
    // NOTE: in Chrome App environment, touching history.pushState, *even inside
    //       a try/catch block*, will cause Chrome to output an error to console.error
    // borrowed from: https://github.com/angular/angular.js/pull/13945/files
    var chrome = _window.chrome;
    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;
    var hasPushAndReplaceState =
      !isChromePackagedApp &&
      _window.history &&
      _window.history.pushState &&
      _window.history.replaceState;
    if (autoBreadcrumbs.location && hasPushAndReplaceState) {
      // TODO: remove onpopstate handler on uninstall()
      var oldOnPopState = _window.onpopstate;
      _window.onpopstate = function() {
        var currentHref = self._location.href;
        self._captureUrlChange(self._lastHref, currentHref);

        if (oldOnPopState) {
          return oldOnPopState.apply(this, arguments);
        }
      };

      var historyReplacementFunction = function(origHistFunction) {
        // note history.pushState.length is 0; intentionally not declaring
        // params to preserve 0 arity
        return function(/* state, title, url */) {
          var url = arguments.length > 2 ? arguments[2] : undefined;

          // url argument is optional
          if (url) {
            // coerce to string (this is what pushState does)
            self._captureUrlChange(self._lastHref, url + '');
          }

          return origHistFunction.apply(this, arguments);
        };
      };

      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);
      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);
    }

    if (autoBreadcrumbs.console && 'console' in _window && console.log) {
      // console
      var consoleMethodCallback = function(msg, data) {
        self.captureBreadcrumb({
          message: msg,
          level: data.level,
          category: 'console'
        });
      };

      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {
        wrapConsoleMethod(console, level, consoleMethodCallback);
      });
    }
  },

  _restoreBuiltIns: function() {
    // restore any wrapped builtins
    var builtin;
    while (this._wrappedBuiltIns.length) {
      builtin = this._wrappedBuiltIns.shift();

      var obj = builtin[0],
        name = builtin[1],
        orig = builtin[2];

      obj[name] = orig;
    }
  },

  _restoreConsole: function() {
    // eslint-disable-next-line guard-for-in
    for (var method in this._originalConsoleMethods) {
      this._originalConsole[method] = this._originalConsoleMethods[method];
    }
  },

  _drainPlugins: function() {
    var self = this;

    // FIX ME TODO
    each(this._plugins, function(_, plugin) {
      var installer = plugin[0];
      var args = plugin[1];
      installer.apply(self, [self].concat(args));
    });
  },

  _parseDSN: function(str) {
    var m = dsnPattern.exec(str),
      dsn = {},
      i = 7;

    try {
      while (i--) dsn[dsnKeys[i]] = m[i] || '';
    } catch (e) {
      throw new RavenConfigError('Invalid DSN: ' + str);
    }

    if (dsn.pass && !this._globalOptions.allowSecretKey) {
      throw new RavenConfigError(
        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'
      );
    }

    return dsn;
  },

  _getGlobalServer: function(uri) {
    // assemble the endpoint from the uri pieces
    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');

    if (uri.protocol) {
      globalServer = uri.protocol + ':' + globalServer;
    }
    return globalServer;
  },

  _handleOnErrorStackInfo: function(stackInfo, options) {
    options = options || {};
    options.mechanism = options.mechanism || {
      type: 'onerror',
      handled: false
    };

    // if we are intentionally ignoring errors via onerror, bail out
    if (!this._ignoreOnError) {
      this._handleStackInfo(stackInfo, options);
    }
  },

  _handleStackInfo: function(stackInfo, options) {
    var frames = this._prepareFrames(stackInfo, options);

    this._triggerEvent('handle', {
      stackInfo: stackInfo,
      options: options
    });

    this._processException(
      stackInfo.name,
      stackInfo.message,
      stackInfo.url,
      stackInfo.lineno,
      frames,
      options
    );
  },

  _prepareFrames: function(stackInfo, options) {
    var self = this;
    var frames = [];
    if (stackInfo.stack && stackInfo.stack.length) {
      each(stackInfo.stack, function(i, stack) {
        var frame = self._normalizeFrame(stack, stackInfo.url);
        if (frame) {
          frames.push(frame);
        }
      });

      // e.g. frames captured via captureMessage throw
      if (options && options.trimHeadFrames) {
        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {
          frames[j].in_app = false;
        }
      }
    }
    frames = frames.slice(0, this._globalOptions.stackTraceLimit);
    return frames;
  },

  _normalizeFrame: function(frame, stackInfoUrl) {
    // normalize the frames data
    var normalized = {
      filename: frame.url,
      lineno: frame.line,
      colno: frame.column,
      function: frame.func || '?'
    };

    // Case when we don't have any information about the error
    // E.g. throwing a string or raw object, instead of an `Error` in Firefox
    // Generating synthetic error doesn't add any value here
    //
    // We should probably somehow let a user know that they should fix their code
    if (!frame.url) {
      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler
    }

    normalized.in_app = !// determine if an exception came from outside of our app
    // first we check the global includePaths list.
    (
      (!!this._globalOptions.includePaths.test &&
        !this._globalOptions.includePaths.test(normalized.filename)) ||
      // Now we check for fun, if the function name is Raven or TraceKit
      /(Raven|TraceKit)\./.test(normalized['function']) ||
      // finally, we do a last ditch effort and check for raven.min.js
      /raven\.(min\.)?js$/.test(normalized.filename)
    );

    return normalized;
  },

  _processException: function(type, message, fileurl, lineno, frames, options) {
    var prefixedMessage = (type ? type + ': ' : '') + (message || '');
    if (
      !!this._globalOptions.ignoreErrors.test &&
      (this._globalOptions.ignoreErrors.test(message) ||
        this._globalOptions.ignoreErrors.test(prefixedMessage))
    ) {
      return;
    }

    var stacktrace;

    if (frames && frames.length) {
      fileurl = frames[0].filename || fileurl;
      // Sentry expects frames oldest to newest
      // and JS sends them as newest to oldest
      frames.reverse();
      stacktrace = {frames: frames};
    } else if (fileurl) {
      stacktrace = {
        frames: [
          {
            filename: fileurl,
            lineno: lineno,
            in_app: true
          }
        ]
      };
    }

    if (
      !!this._globalOptions.ignoreUrls.test &&
      this._globalOptions.ignoreUrls.test(fileurl)
    ) {
      return;
    }

    if (
      !!this._globalOptions.whitelistUrls.test &&
      !this._globalOptions.whitelistUrls.test(fileurl)
    ) {
      return;
    }

    var data = objectMerge(
      {
        // sentry.interfaces.Exception
        exception: {
          values: [
            {
              type: type,
              value: message,
              stacktrace: stacktrace
            }
          ]
        },
        transaction: fileurl
      },
      options
    );

    var ex = data.exception.values[0];
    if (ex.type == null && ex.value === '') {
      ex.value = 'Unrecoverable error caught';
    }

    // Move mechanism from options to exception interface
    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be
    // too much
    if (!data.exception.mechanism && data.mechanism) {
      data.exception.mechanism = data.mechanism;
      delete data.mechanism;
    }

    data.exception.mechanism = objectMerge(
      {
        type: 'generic',
        handled: true
      },
      data.exception.mechanism || {}
    );

    // Fire away!
    this._send(data);
  },

  _trimPacket: function(data) {
    // For now, we only want to truncate the two different messages
    // but this could/should be expanded to just trim everything
    var max = this._globalOptions.maxMessageLength;
    if (data.message) {
      data.message = truncate(data.message, max);
    }
    if (data.exception) {
      var exception = data.exception.values[0];
      exception.value = truncate(exception.value, max);
    }

    var request = data.request;
    if (request) {
      if (request.url) {
        request.url = truncate(request.url, this._globalOptions.maxUrlLength);
      }
      if (request.Referer) {
        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);
      }
    }

    if (data.breadcrumbs && data.breadcrumbs.values)
      this._trimBreadcrumbs(data.breadcrumbs);

    return data;
  },

  /**
   * Truncate breadcrumb values (right now just URLs)
   */
  _trimBreadcrumbs: function(breadcrumbs) {
    // known breadcrumb properties with urls
    // TODO: also consider arbitrary prop values that start with (https?)?://
    var urlProps = ['to', 'from', 'url'],
      urlProp,
      crumb,
      data;

    for (var i = 0; i < breadcrumbs.values.length; ++i) {
      crumb = breadcrumbs.values[i];
      if (
        !crumb.hasOwnProperty('data') ||
        !isObject(crumb.data) ||
        objectFrozen(crumb.data)
      )
        continue;

      data = objectMerge({}, crumb.data);
      for (var j = 0; j < urlProps.length; ++j) {
        urlProp = urlProps[j];
        if (data.hasOwnProperty(urlProp) && data[urlProp]) {
          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);
        }
      }
      breadcrumbs.values[i].data = data;
    }
  },

  _getHttpData: function() {
    if (!this._hasNavigator && !this._hasDocument) return;
    var httpData = {};

    if (this._hasNavigator && _navigator.userAgent) {
      httpData.headers = {
        'User-Agent': _navigator.userAgent
      };
    }

    // Check in `window` instead of `document`, as we may be in ServiceWorker environment
    if (_window.location && _window.location.href) {
      httpData.url = _window.location.href;
    }

    if (this._hasDocument && _document.referrer) {
      if (!httpData.headers) httpData.headers = {};
      httpData.headers.Referer = _document.referrer;
    }

    return httpData;
  },

  _resetBackoff: function() {
    this._backoffDuration = 0;
    this._backoffStart = null;
  },

  _shouldBackoff: function() {
    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;
  },

  /**
   * Returns true if the in-process data payload matches the signature
   * of the previously-sent data
   *
   * NOTE: This has to be done at this level because TraceKit can generate
   *       data from window.onerror WITHOUT an exception object (IE8, IE9,
   *       other old browsers). This can take the form of an "exception"
   *       data object with a single frame (derived from the onerror args).
   */
  _isRepeatData: function(current) {
    var last = this._lastData;

    if (
      !last ||
      current.message !== last.message || // defined for captureMessage
      current.transaction !== last.transaction // defined for captureException/onerror
    )
      return false;

    // Stacktrace interface (i.e. from captureMessage)
    if (current.stacktrace || last.stacktrace) {
      return isSameStacktrace(current.stacktrace, last.stacktrace);
    } else if (current.exception || last.exception) {
      // Exception interface (i.e. from captureException/onerror)
      return isSameException(current.exception, last.exception);
    } else if (current.fingerprint || last.fingerprint) {
      return Boolean(current.fingerprint && last.fingerprint) &&
        JSON.stringify(current.fingerprint) === JSON.stringify(last.fingerprint)
    }

    return true;
  },

  _setBackoffState: function(request) {
    // If we are already in a backoff state, don't change anything
    if (this._shouldBackoff()) {
      return;
    }

    var status = request.status;

    // 400 - project_id doesn't exist or some other fatal
    // 401 - invalid/revoked dsn
    // 429 - too many requests
    if (!(status === 400 || status === 401 || status === 429)) return;

    var retry;
    try {
      // If Retry-After is not in Access-Control-Expose-Headers, most
      // browsers will throw an exception trying to access it
      if (supportsFetch()) {
        retry = request.headers.get('Retry-After');
      } else {
        retry = request.getResponseHeader('Retry-After');
      }

      // Retry-After is returned in seconds
      retry = parseInt(retry, 10) * 1000;
    } catch (e) {
      /* eslint no-empty:0 */
    }

    this._backoffDuration = retry
      ? // If Sentry server returned a Retry-After value, use it
        retry
      : // Otherwise, double the last backoff duration (starts at 1 sec)
        this._backoffDuration * 2 || 1000;

    this._backoffStart = now();
  },

  _send: function(data) {
    var globalOptions = this._globalOptions;

    var baseData = {
        project: this._globalProject,
        logger: globalOptions.logger,
        platform: 'javascript'
      },
      httpData = this._getHttpData();

    if (httpData) {
      baseData.request = httpData;
    }

    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload
    if (data.trimHeadFrames) delete data.trimHeadFrames;

    data = objectMerge(baseData, data);

    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge
    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);
    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);

    // Send along our own collected metadata with extra
    data.extra['session:duration'] = now() - this._startTime;

    if (this._breadcrumbs && this._breadcrumbs.length > 0) {
      // intentionally make shallow copy so that additions
      // to breadcrumbs aren't accidentally sent in this request
      data.breadcrumbs = {
        values: [].slice.call(this._breadcrumbs, 0)
      };
    }

    if (this._globalContext.user) {
      // sentry.interfaces.User
      data.user = this._globalContext.user;
    }

    // Include the environment if it's defined in globalOptions
    if (globalOptions.environment) data.environment = globalOptions.environment;

    // Include the release if it's defined in globalOptions
    if (globalOptions.release) data.release = globalOptions.release;

    // Include server_name if it's defined in globalOptions
    if (globalOptions.serverName) data.server_name = globalOptions.serverName;

    data = this._sanitizeData(data);

    // Cleanup empty properties before sending them to the server
    Object.keys(data).forEach(function(key) {
      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {
        delete data[key];
      }
    });

    if (isFunction(globalOptions.dataCallback)) {
      data = globalOptions.dataCallback(data) || data;
    }

    // Why??????????
    if (!data || isEmptyObject(data)) {
      return;
    }

    // Check if the request should be filtered or not
    if (
      isFunction(globalOptions.shouldSendCallback) &&
      !globalOptions.shouldSendCallback(data)
    ) {
      return;
    }

    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),
    // so drop requests until "cool-off" period has elapsed.
    if (this._shouldBackoff()) {
      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);
      return;
    }

    if (typeof globalOptions.sampleRate === 'number') {
      if (Math.random() < globalOptions.sampleRate) {
        this._sendProcessedPayload(data);
      }
    } else {
      this._sendProcessedPayload(data);
    }
  },

  _sanitizeData: function(data) {
    return sanitize(data, this._globalOptions.sanitizeKeys);
  },

  _getUuid: function() {
    return uuid4();
  },

  _sendProcessedPayload: function(data, callback) {
    var self = this;
    var globalOptions = this._globalOptions;

    if (!this.isSetup()) return;

    // Try and clean up the packet before sending by truncating long values
    data = this._trimPacket(data);

    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,
    // but this would require copying an un-truncated copy of the data packet, which can be
    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit
    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {
      this._logDebug('warn', 'Raven dropped repeat event: ', data);
      return;
    }

    // Send along an event_id if not explicitly passed.
    // This event_id can be used to reference the error within Sentry itself.
    // Set lastEventId after we know the error should actually be sent
    this._lastEventId = data.event_id || (data.event_id = this._getUuid());

    // Store outbound payload after trim
    this._lastData = data;

    this._logDebug('debug', 'Raven about to send:', data);

    var auth = {
      sentry_version: '7',
      sentry_client: 'raven-js/' + this.VERSION,
      sentry_key: this._globalKey
    };

    if (this._globalSecret) {
      auth.sentry_secret = this._globalSecret;
    }

    var exception = data.exception && data.exception.values[0];

    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy
    if (
      this._globalOptions.autoBreadcrumbs &&
      this._globalOptions.autoBreadcrumbs.sentry
    ) {
      this.captureBreadcrumb({
        category: 'sentry',
        message: exception
          ? (exception.type ? exception.type + ': ' : '') + exception.value
          : data.message,
        event_id: data.event_id,
        level: data.level || 'error' // presume error unless specified
      });
    }

    var url = this._globalEndpoint;
    (globalOptions.transport || this._makeRequest).call(this, {
      url: url,
      auth: auth,
      data: data,
      options: globalOptions,
      onSuccess: function success() {
        self._resetBackoff();

        self._triggerEvent('success', {
          data: data,
          src: url
        });
        callback && callback();
      },
      onError: function failure(error) {
        self._logDebug('error', 'Raven transport failed to send: ', error);

        if (error.request) {
          self._setBackoffState(error.request);
        }

        self._triggerEvent('failure', {
          data: data,
          src: url
        });
        error = error || new Error('Raven send failed (no additional details provided)');
        callback && callback(error);
      }
    });
  },

  _makeRequest: function(opts) {
    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests
    var url = opts.url + '?' + urlencode(opts.auth);

    var evaluatedHeaders = null;
    var evaluatedFetchParameters = {};

    if (opts.options.headers) {
      evaluatedHeaders = this._evaluateHash(opts.options.headers);
    }

    if (opts.options.fetchParameters) {
      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);
    }

    if (supportsFetch()) {
      evaluatedFetchParameters.body = stringify(opts.data);

      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);
      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);

      if (evaluatedHeaders) {
        fetchOptions.headers = evaluatedHeaders;
      }

      return _window
        .fetch(url, fetchOptions)
        .then(function(response) {
          if (response.ok) {
            opts.onSuccess && opts.onSuccess();
          } else {
            var error = new Error('Sentry error code: ' + response.status);
            // It's called request only to keep compatibility with XHR interface
            // and not add more redundant checks in setBackoffState method
            error.request = response;
            opts.onError && opts.onError(error);
          }
        })
        ['catch'](function() {
          opts.onError &&
            opts.onError(new Error('Sentry error code: network unavailable'));
        });
    }

    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();
    if (!request) return;

    // if browser doesn't support CORS (e.g. IE7), we are out of luck
    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';

    if (!hasCORS) return;

    if ('withCredentials' in request) {
      request.onreadystatechange = function() {
        if (request.readyState !== 4) {
          return;
        } else if (request.status === 200) {
          opts.onSuccess && opts.onSuccess();
        } else if (opts.onError) {
          var err = new Error('Sentry error code: ' + request.status);
          err.request = request;
          opts.onError(err);
        }
      };
    } else {
      request = new XDomainRequest();
      // xdomainrequest cannot go http -> https (or vice versa),
      // so always use protocol relative
      url = url.replace(/^https?:/, '');

      // onreadystatechange not supported by XDomainRequest
      if (opts.onSuccess) {
        request.onload = opts.onSuccess;
      }
      if (opts.onError) {
        request.onerror = function() {
          var err = new Error('Sentry error code: XDomainRequest');
          err.request = request;
          opts.onError(err);
        };
      }
    }

    request.open('POST', url);

    if (evaluatedHeaders) {
      each(evaluatedHeaders, function(key, value) {
        request.setRequestHeader(key, value);
      });
    }

    request.send(stringify(opts.data));
  },

  _evaluateHash: function(hash) {
    var evaluated = {};

    for (var key in hash) {
      if (hash.hasOwnProperty(key)) {
        var value = hash[key];
        evaluated[key] = typeof value === 'function' ? value() : value;
      }
    }

    return evaluated;
  },

  _logDebug: function(level) {
    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change
    if (
      this._originalConsoleMethods[level] &&
      (this.debug || this._globalOptions.debug)
    ) {
      // In IE<10 console methods do not have their own 'apply' method
      Function.prototype.apply.call(
        this._originalConsoleMethods[level],
        this._originalConsole,
        [].slice.call(arguments, 1)
      );
    }
  },

  _mergeContext: function(key, context) {
    if (isUndefined(context)) {
      delete this._globalContext[key];
    } else {
      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);
    }
  }
};

// Deprecations
Raven.prototype.setUser = Raven.prototype.setUserContext;
Raven.prototype.setReleaseContext = Raven.prototype.setRelease;

module.exports = Raven;

},{"../vendor/TraceKit/tracekit":"yrbz","../vendor/json-stringify-safe/stringify":"AZhB","../vendor/md5/md5":"jUPa","./configError":"zPe6","./utils":"E705","./console":"YqTo"}],"AVc0":[function(require,module,exports) {
var global = arguments[3];
/**
 * Enforces a single instance of the Raven client, and the
 * main entry point for Raven. If you are a consumer of the
 * Raven library, you SHOULD load this file (vs raven.js).
 **/

var RavenConstructor = require('./raven');

// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)
var _window =
  typeof window !== 'undefined'
    ? window
    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
var _Raven = _window.Raven;

var Raven = new RavenConstructor();

/*
 * Allow multiple versions of Raven to be installed.
 * Strip Raven from the global context and returns the instance.
 *
 * @return {Raven}
 */
Raven.noConflict = function() {
  _window.Raven = _Raven;
  return Raven;
};

Raven.afterLoad();

module.exports = Raven;

/**
 * DISCLAIMER:
 *
 * Expose `Client` constructor for cases where user want to track multiple "sub-applications" in one larger app.
 * It's not meant to be used by a wide audience, so pleaaase make sure that you know what you're doing before using it.
 * Accidentally calling `install` multiple times, may result in an unexpected behavior that's very hard to debug.
 *
 * It's called `Client' to be in-line with Raven Node implementation.
 *
 * HOWTO:
 *
 * import Raven from 'raven-js';
 *
 * const someAppReporter = new Raven.Client();
 * const someOtherAppReporter = new Raven.Client();
 *
 * someAppReporter.config('__DSN__', {
 *   ...config goes here
 * });
 *
 * someOtherAppReporter.config('__OTHER_DSN__', {
 *   ...config goes here
 * });
 *
 * someAppReporter.captureMessage(...);
 * someAppReporter.captureException(...);
 * someAppReporter.captureBreadcrumb(...);
 *
 * someOtherAppReporter.captureMessage(...);
 * someOtherAppReporter.captureException(...);
 * someOtherAppReporter.captureBreadcrumb(...);
 *
 * It should "just work".
 */
module.exports.Client = RavenConstructor;

},{"./raven":"sJ2O"}],"aGiY":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_raven_client = get_raven_client;
exports.set_user_context = set_user_context;
exports.report_error = report_error;
exports.set_imminent_captured_error = set_imminent_captured_error;

var _ravenJs = _interopRequireDefault(require("raven-js"));

var _ensureDeviceUuidBrowser = _interopRequireDefault(require("@offirmo-private/ensure-device-uuid-browser"));

var _flux = require("@tbrpg/flux");

var _channel = require("./channel");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/////////////////////////////////////////////////
const DEVICE_UUID = (0, _ensureDeviceUuidBrowser.default)(); /////////////////////////////////////////////////

let _raven_client;

const MAX_ERROR_REPORTS = 10;
let _error_report_count = 0; // to avoid killing Sentry free tier

function get_raven_client() {
  if (!_raven_client) {
    _raven_client = new _ravenJs.default.Client();

    _raven_client.config('https://ac5806cad5534bcf82f23d857a1ffce5@sentry.io/1235383', {
      // https://docs.sentry.io/clients/javascript/config/
      // logger ?
      release: _flux.VERSION,
      environment: "production",
      // TOCHECK
      serverName: DEVICE_UUID,
      tags: {
        //git_commit: 'c0deb10c4',
        BUILD_DATE: _flux.BUILD_DATE,
        CHANNEL: _channel.CHANNEL
      },
      // whitelistUrls: [...],
      // ignoreErrors: [...],
      // ignoreUrls: [...],
      // includePaths: [...],
      // sampleRate:
      // sanitizeKeys:
      dataCallback: function (data) {
        //console.log('raven dataCallback(…)', data)
        // do something to data
        if (!imminent_error) {
          console.error('raven dataCallback(…): set_imminent_captured_error() wasn’t called!');
        } else {
          const all_details = imminent_error.details || {}; // clean up some unneeded details, redundant with Raven or already set above

          const {
            ENV,
            CHANNEL,
            DEVICE_UUID,
            OS_NAME,
            BROWSER_NAME,
            VERSION,
            ...details
          } = all_details;
          data.tags = { ...data.tags,
            ...details
          };
          imminent_error = null;
        }

        console.log('(this error has been reported)');
        return data;
      },

      /*breadcrumbCallback: function(crumb) {
      	console.log('raven breadcrumbCallback(…)', crumb)
      	// do something to data
      	return crumb
      },*/

      /*shouldSendCallback: function(data) {
      	//console.log('raven shouldSendCallback(…)', data)
      	return true
      },*/
      // maxMessageLength
      // maxUrlLength
      // autoBreadcrumbs
      // maxBreadcrumbs
      captureUnhandledRejections: false
      /* transport: function (options) {
      	... send data
      },*/
      // allowDuplicates
      // allowSecretKey
      //debug: true,
      //instrument:

    }); //.install()

  }

  return _raven_client;
} /////////////////////////////////////////////////
// https://docs.sentry.io/clients/javascript/usage/#tracking-users


function set_user_context({
  email,
  id,
  name
}) {
  console.info('set_user_context', {
    email,
    id,
    name
  });

  _ravenJs.default.setUserContext({
    email,
    id,
    name
  });
}

function report_error(err) {
  _error_report_count++;
  if (_error_report_count > MAX_ERROR_REPORTS) return;
  if (_error_report_count === MAX_ERROR_REPORTS) err = new Error(`Too many errors!`);

  _ravenJs.default.captureException(err);
}

let imminent_error = null;

function set_imminent_captured_error(err) {
  if (imminent_error) {
    console.error('set_imminent_captured_error(): previous error wasn’t handled!');
  }

  imminent_error = err;
}
/*
Raven.captureException(new Error('Oops!')

Raven.wrap({
		tags: {git_commit: 'c0deb10c4'}
	}, function () { … })

Raven.captureMessage('Test captureMessage1')
Raven.captureMessage('Test captureMessage2', {
	level: 'info' // one of 'info', 'warning', or 'error'
})

Raven.showReportDialog()
*/
},{"raven-js":"AVc0","@offirmo-private/ensure-device-uuid-browser":"JyH1","@tbrpg/flux":"kQ36","./channel":"skGu"}],"bMEn":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = init;

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _softExecutionContextBrowser = require("@offirmo-private/soft-execution-context-browser");

var _definitions = require("@tbrpg/definitions");

var _consts = require("./consts");

var _flux = require("@tbrpg/flux");

var _channel = require("./channel");

var _logger = _interopRequireDefault(require("./logger"));

var _raven = require("./raven");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//console.log(__filename)
/////////////////////////////////////////////////
function init() {
  const SEC = (0, _softExecutionContext.getRootSEC)().setLogicalStack({
    module: _consts.LIB
  }).injectDependencies({
    logger: _logger.default
  });
  (0, _definitions.decorate_SEC)(SEC);
  (0, _softExecutionContextBrowser.decorateWithDetectedEnv)(SEC);
  SEC.injectDependencies({
    CHANNEL: _channel.CHANNEL,
    VERSION: _flux.VERSION
  });
  SEC.setAnalyticsAndErrorDetails({
    product: 'tbrpg',
    VERSION: _flux.VERSION,
    CHANNEL: _channel.CHANNEL
  }); /////////////////////////////////////////////////

  SEC.emitter.on('final-error', function onError({
    SEC,
    err
  }) {
    // ignore some
    console.warn('TBRPG SEC final-error handler:', err);

    if (err.message === 'the-boring-rpg›(browser/on error event): Failed to execute \'removeChild\' on \'Node\': The node to be removed is not a child of this node.') {
      _logger.default.info('(↑ error in the ignore list)');

      return;
    }

    if (_channel.CHANNEL === 'dev') {
      _logger.default.fatal('↑ error! (no report since dev)', {
        SEC,
        err
      });

      return;
    }

    console.log('(this error will be reported)');
    (0, _raven.set_imminent_captured_error)(err);
    (0, _raven.get_raven_client)().captureException(err);
  });
  SEC.emitter.on('analytics', function onAnalytics({
    SEC,
    eventId,
    details
  }) {
    // TODO analytics
    console.groupCollapsed(`⚡  [TODO] Analytics! ⚡  ${eventId}`);
    console.table('details', details);
    console.groupEnd();
  });
  (0, _softExecutionContextBrowser.listenToErrorEvents)();
  (0, _softExecutionContextBrowser.listenToUnhandledRejections)();
  SEC.xTry('SEC/init', ({
    logger
  }) => {
    logger.trace('Root Soft Execution Context initialized.', {
      SEC
    });
  });
  const {
    ENV
  } = SEC.getInjectedDependencies();

  if (ENV !== "production") {
    _logger.default.error('ENV detection mismatch!', {
      'SEC.ENV': ENV,
      'process.env.NODE_ENV': "production"
    });
  }
} /////////////////////////////////////////////////
// no, should be accessed with getRootSEC
//export default SEC
},{"@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/soft-execution-context-browser":"yaWW","@tbrpg/definitions":"PTCd","./consts":"h9V3","@tbrpg/flux":"kQ36","./channel":"skGu","./logger":"qVJl","./raven":"aGiY"}],"FiSv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const DEFAULT_OPTIONS = {
  periodMs: 100,
  // check every 100ms
  timeoutMs: 10 * 1000,
  // after 10 seconds, timeout
  debugId: 'an unnamed predicate'
};

function poll(predicate, options) {
  // early check to save an initial poll period
  let result = predicate();
  if (result) return Promise.resolve(result);
  const {
    periodMs,
    timeoutMs,
    debugId
  } = Object.assign(DEFAULT_OPTIONS, options || {});
  return new Promise((resolve, reject) => {
    const waitForElement = setInterval(() => {
      result = predicate();
      if (!result) return;
      clearTimeout(waitForTimeout);
      clearInterval(waitForElement);
      resolve(result);
    }, periodMs);
    const waitForTimeout = setTimeout(() => {
      clearInterval(waitForElement);
      reject(new Error(`@offirmo-private/poll: Timed out while waiting for "${debugId}"`));
    }, timeoutMs);
  });
}

var _default = poll;
exports.default = _default;
},{}],"vrke":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "poll", {
  enumerable: true,
  get: function () {
    return _poll.default;
  }
});
exports.default = void 0;

var _poll = _interopRequireDefault(require("@offirmo-private/poll"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function pollWindowVariable(varname, options) {
  options = Object.assign({}, {
    debugId: `window.${varname}`
  }, options || {});
  return (0, _poll.default)(() => window[varname], options);
}

var _default = pollWindowVariable; // for convenience

exports.default = _default;
},{"@offirmo-private/poll":"FiSv"}],"r81V":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ACCOUNT_STATE = void 0;

var _typescriptStringEnums = require("typescript-string-enums");

var _bowser = _interopRequireDefault(require("bowser"));

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

var _flux = require("@tbrpg/flux");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/////////////////////////////////////////////////
const ACCOUNT_STATE = (0, _typescriptStringEnums.Enum)('waiting_for_lib', // needed?
'pending', 'not_logged_in', 'logged_in', 'error' // needed?
);
exports.ACCOUNT_STATE = ACCOUNT_STATE;
const get = (0, _memoizeOne.default)(() => (0, _softExecutionContext.getRootSEC)().xTry('creating game instance', ({
  SEC,
  logger
}) => {
  const INITIAL_APP_STATE = {
    // can change:
    mode: 'explore',
    recap_displayed: false,
    last_displayed_adventure_uuid: '(see below)',
    model: null,
    // will be initialized on instance creation
    login_state: ACCOUNT_STATE.waiting_for_lib,
    logged_in_user: null,
    // so far
    // TODO improve to a new declarative chat
    changing_character_class: false,
    changing_character_name: false,
    redeeming_code: false
  };
  const storage = {
    async warm_up() {},

    async cool_down() {},

    set_item(key, value) {
      localStorage.setItem(`the-boring-rpg.${key}`, value);
    },

    get_item(key) {
      let temp = localStorage.getItem(`the-boring-rpg.${key}`);
      if (key === 'savegame' && !temp) // migration, TODO remove after a while
        temp = localStorage.getItem('the-boring-rpg.savegame-bkp.v11');
      if (key === 'savegame' && !temp) // migration, TODO remove after a while
        temp = localStorage.getItem('the-boring-rpg.savegame-bkp.v10');
      if (key === 'savegame' && !temp) // migration, TODO remove after a while
        temp = localStorage.getItem('the-boring-rpg.savegame-bkp.v9');
      if (key === 'savegame' && !temp) // migration, TODO remove after a while
        temp = localStorage.getItem('the-boring-rpg.savegame-bkp.v8');
      if (key === 'savegame' && !temp) // migration, TODO remove after a while
        temp = localStorage.getItem('the-boring-rpg.savegame-bkp.v7');
      if (key === 'savegame' && !temp) // migration, TODO remove after a while
        temp = localStorage.getItem('the-boring-rpg.savegame-bkp.v6');
      return temp;
    }

  };
  const game_instance = (0, _flux.create_game_instance)({
    SEC,
    local_storage: localStorage,
    storage,
    app_state: { ...INITIAL_APP_STATE
    }
  }); // TODO clean that up later

  localStorage.removeItem('the-boring-rpg.savegame-bkp.v11');
  localStorage.removeItem('the-boring-rpg.savegame-bkp.v10');
  localStorage.removeItem('the-boring-rpg.savegame-bkp.v9');
  localStorage.removeItem('the-boring-rpg.savegame-bkp.v8');
  localStorage.removeItem('the-boring-rpg.savegame-bkp.v7');
  localStorage.removeItem('the-boring-rpg.savegame-bkp.v6'); // init view model

  game_instance.view.set_state(state => {
    const last_adventure = game_instance.queries.get_last_adventure();
    return {
      last_displayed_adventure_uuid: last_adventure && last_adventure.uuid
    };
  });

  const browser = _bowser.default.getParser(window.navigator.userAgent);

  const is_web_diversity_supporter = browser.getBrowserName().toLowerCase().includes('firefox');
  logger.info('Current browser details', {
    is_web_diversity_supporter,
    Bowser: browser.getResult()
  });
  game_instance.commands.on_start_session(is_web_diversity_supporter);
  window.ga && window.ga('send', 'event', {
    eventCategory: 'boot',
    eventAction: 'restoring-savegame',
    //eventValue: game_instance.queries.get_sub_state('avatar').name,
    eventLabel: 'Loading...' //hitCallback: () => console.log('GA restoring-savegame sent!'),

  });
  return game_instance;
}));
var _default = get;
exports.default = _default;
},{"typescript-string-enums":"qyCc","bowser":"v1tg","@offirmo-private/soft-execution-context":"cjhL","memoize-one":"lvkj","tiny-invariant":"VYmh","@tbrpg/flux":"kQ36"}],"S34u":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.init = exports.default = init;
exports.open_ui = open_ui;
exports.log_out = log_out;
exports.get_netlify_user_name = get_netlify_user_name;

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

var _asyncUtils = require("@offirmo-private/async-utils");

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _pollWindowVariable = require("@offirmo-private/poll-window-variable");

var _deferred = _interopRequireDefault(require("@offirmo/deferred"));

var _xoff = require("@offirmo-private/xoff");

var _apiClient = require("@online-adventur.es/api-client");

var _channel = require("./channel");

var _gameInstanceBrowser = _interopRequireWildcard(require("./game-instance-browser"));

var _raven = require("./raven");

var _logger = _interopRequireDefault(require("./logger"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import fetch from '@tbrpg/flux/src/utils/fetch'
//console.log(__filename)
/////////////////////////////////////////////////
function get_netlify_user_name(user) {
  if (user.user_metadata && user.user_metadata.full_name) return user.user_metadata.full_name;
  return user.email;
} ////////////////////////


const REDIRECT_LS_KEY = 'OA.pending_redirect';

function request_redirect(url) {
  const redirect_request = {
    url,
    timestamp_ms: Date.now()
  };
  localStorage.setItem(REDIRECT_LS_KEY, JSON.stringify(redirect_request));
} ////////////////////////


const ↆNetlifyIdentity = new _deferred.default();
ↆNetlifyIdentity.catch(err => {
  console.warn('Netlify failed to load, won’t be able to login.', {
    err
  }, err);
});

function _ↆrefresh_login_state() {
  (0, _gameInstanceBrowser.default)().view.set_state(_ => ({
    login_state: _gameInstanceBrowser.ACCOUNT_STATE.pending,
    logged_in_user: null
  }));
  let user;
  const ↆfully_loaded = ↆNetlifyIdentity.then(function _refresh_login_state(NetlifyIdentity) {
    user = NetlifyIdentity.currentUser();
    if (!user) return; // refresh token, https://github.com/netlify/netlify-identity-widget/issues/108

    return user.jwt().then(function _wait_for_user_constructed() {
      _logger.default.info('NetlifyIdentity: user refreshed (1/2)', JSON.parse(JSON.stringify(user))); // seen that user is not immediately fully populated
      // we need to wait a bit


      return (0, _pollWindowVariable.poll)(() => !!user.user_metadata && !!user.app_metadata && !!user.token && !!user.token.access_token, {
        timeoutMs: 30 * 1000
      });
    }).then(function _log() {
      _logger.default.info('NetlifyIdentity: user refreshed (2/2)', JSON.parse(JSON.stringify(user)));
    }).catch(err => {
      _logger.default.warn('NetlifyIdentity⚡ error on trying to finalize user', {
        err,
        user
      });

      (0, _raven.report_error)(new Error(`NetlifyIdentity⚡ error on trying to finalize user! (${!user.user_metadata},${!!user.app_metadata},${!!user.token},${!!(user.token || {}).access_token},)`));
      /* swallow the error */
      // TODO ??
      // ↆNetlifyIdentity.logout()
    });
  });
  ↆfully_loaded.then(function register_user_for_raven(user) {
    const avatar_name = (0, _gameInstanceBrowser.default)().queries.get_sub_state('avatar').name;

    if (!user) {
      // initial call when not logged in
      (0, _raven.set_user_context)({
        name: avatar_name,
        id: avatar_name
      });
      return;
    }

    (0, _raven.set_user_context)({
      email: user.email,
      name: avatar_name,
      id: avatar_name // TODO change

    });
  });
  ↆfully_loaded.then(function _forward_logged_in_details_to_game_state() {
    if (!user) {
      (0, _gameInstanceBrowser.default)().commands.on_logged_in_refresh(false);
      return;
    }

    (0, _gameInstanceBrowser.default)().commands.on_logged_in_refresh(true, user.app_metadata.roles);
  });
  ↆfully_loaded.then(function _update_logged_in_view() {
    if (!user) {
      (0, _gameInstanceBrowser.default)().view.set_state(_ => ({
        login_state: _gameInstanceBrowser.ACCOUNT_STATE.not_logged_in,
        logged_in_user: null
      }));
      return;
    }

    (0, _gameInstanceBrowser.default)().view.set_state(_ => ({
      login_state: _gameInstanceBrowser.ACCOUNT_STATE.logged_in,
      logged_in_user: user
    }));
  });
  ↆfully_loaded.then(function _phone_home() {
    // TODO use sth else
    (0, _softExecutionContext.getRootSEC)().injectDependencies({
      shared_fetch_headers: { ...(user && {
          'Authorization': `Bearer ${user.token.access_token}`
        })
      }
    });
    if (!user) return;
    return (0, _apiClient.fetch_oa)({
      SEC: (0, _softExecutionContext.getRootSEC)(),
      url: _apiClient.Endpoint["whoami"]
    });
    /*const enpoint_url = get_api_base_url(CHANNEL) + '/' + Endpoint["whoami"]
    fetch(enpoint_url, {
    	headers: {
    		'Content-Type': 'application/json',
    		'Authorization': `Bearer ${user.token.access_token}`,
    	},
    })*/
  });
}

function init(SEC = (0, _softExecutionContext.getRootSEC)()) {
  SEC.xTry('initializing user account', ({
    logger
  }) => {
    (0, _asyncUtils.schedule_when_idle_but_not_too_far)(() => {
      (0, _xoff.load_script_from_top)('https://identity.netlify.com/v1/netlify-identity-widget.js').then(function _attach_netlify_to_global_scope() {
        console.log('✅ netlify script loaded from top');
        const ↆattachment_to_global_scope_scheduled = (0, _xoff.execute_from_top)(prefix => {
          console.log(`${prefix} following netlify loaded…`, window, window.netlifyIdentity, window.oᐧextra);

          if (!window.netlifyIdentity || !window.oᐧextra) {
            console.log('following netlify loaded: incorrect environment! Can’t finish loading!');
            return;
          }

          window.oᐧextra.netlifyIdentity = window.oᐧextra.netlifyIdentity || window.netlifyIdentity;
        }, (0, _xoff.get_log_symbol)((0, _xoff.get_top_ish_window)()) + ' ← ' + (0, _xoff.get_log_symbol)()); // setTimeout() should suffice but give extra margin

        const ↆattachment_to_global_scope_executed_and_succeeded = ↆattachment_to_global_scope_scheduled.then(() => {
          return (0, _pollWindowVariable.poll)(() => !!oᐧextra.netlifyIdentity, {
            timeoutMs: 2 * 1000
          });
        });
        return ↆattachment_to_global_scope_executed_and_succeeded;
      }).then(() => ↆNetlifyIdentity.resolve(window.oᐧextra.netlifyIdentity), (err = new Error('load_script_from_top() netlify failed!')) => ↆNetlifyIdentity.reject(err));
    });
    ↆNetlifyIdentity.then(() => {
      logger.verbose('NetlifyIdentity lib loaded and installed ✅');

      _ↆrefresh_login_state(); // needed if the user is already logged in

    }, () => {}); // listen to future events

    ↆNetlifyIdentity.then(function attach_listeners(NetlifyIdentity) {
      NetlifyIdentity.on('init', user => logger.info('NetlifyIdentity⚡ init', user)); // note: called only on FRESH login

      NetlifyIdentity.on('login', user => {
        logger.info('NetlifyIdentity⚡ new login', user);

        _ↆrefresh_login_state();
      });
      NetlifyIdentity.on('logout', () => {
        logger.info('NetlifyIdentity⚡ Logged out');

        _ↆrefresh_login_state();
      });
      NetlifyIdentity.on('error', (err = new Error('Unknown NetlifyIdentity error!')) => {
        logger.warn('NetlifyIdentity⚡ on(error)', err); // TODO state to error?
        // let's see in Sentry reports if this to happen

        (0, _raven.report_error)(err);
      });
      NetlifyIdentity.on('open', () => {
        logger.info('NetlifyIdentity⚡ Widget opened');
      });
      NetlifyIdentity.on('close', () => {
        logger.info('NetlifyIdentity⚡ Widget closed');
      });
    }, () => {});
  });
} ////////////////////////


function open_ui() {
  ↆNetlifyIdentity.then(() => {
    request_redirect(window.location.href); // needed for social logins

    (0, _xoff.execute_from_top)(prefix => {
      console.log(`${prefix} netlify open…`);
      window.netlifyIdentity.open();
    }, (0, _xoff.get_log_symbol)((0, _xoff.get_top_ish_window)()) + ' ← ' + (0, _xoff.get_log_symbol)());
  }, () => {}); // any event will be handled in the handlers above
}

function log_out() {
  ↆNetlifyIdentity.then(() => {
    (0, _xoff.execute_from_top)(prefix => {
      console.log(`${prefix} netlify logout…`);
      window.netlifyIdentity.logout();
    }, (0, _xoff.get_log_symbol)((0, _xoff.get_top_ish_window)()) + ' ← ' + (0, _xoff.get_log_symbol)());
  }, () => {}); // any event will be handled in the handlers above
} ////////////////////////
},{"tiny-invariant":"VYmh","@offirmo-private/async-utils":"i8Ln","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/poll-window-variable":"vrke","@offirmo/deferred":"gI4e","@offirmo-private/xoff":"lQpO","@online-adventur.es/api-client":"rRLw","./channel":"skGu","./game-instance-browser":"r81V","./raven":"aGiY","./logger":"qVJl"}],"lQLq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _setPrototypeOf;

function _setPrototypeOf(o, p) {
  exports.default = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
},{}],"N1sf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _inheritsLoose;

var _setPrototypeOf = _interopRequireDefault(require("./setPrototypeOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0, _setPrototypeOf.default)(subClass, superClass);
}
},{"./setPrototypeOf.js":"lQLq"}],"Em0B":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _extends;

function _extends() {
  exports.default = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}
},{}],"bYp6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
} // About 1.5x faster than the two-arg version of Array#splice()


function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
} // This implementation is based heavily on node's url.parse


function resolvePathname(to, from) {
  if (from === undefined) from = '';
  var toParts = to && to.split('/') || [];
  var fromParts = from && from.split('/') || [];
  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';
  var hasTrailingSlash;

  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;

  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');
  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');
  var result = fromParts.join('/');
  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';
  return result;
}

var _default = resolvePathname;
exports.default = _default;
},{}],"v3tG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function valueOf(obj) {
  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);
}

function valueEqual(a, b) {
  // Test for strict equality first.
  if (a === b) return true; // Otherwise, if either of them == null they are not equal.

  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
      return valueEqual(item, b[index]);
    });
  }

  if (typeof a === 'object' || typeof b === 'object') {
    var aValue = valueOf(a);
    var bValue = valueOf(b);
    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);
    return Object.keys(Object.assign({}, a, b)).every(function (key) {
      return valueEqual(a[key], b[key]);
    });
  }

  return false;
}

var _default = valueEqual;
exports.default = _default;
},{}],"e3Sy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var isProduction = "production" === 'production';

function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }

    var text = "Warning: " + message;

    if (typeof console !== 'undefined') {
      console.warn(text);
    }

    try {
      throw Error(text);
    } catch (x) {}
  }
}

var _default = warning;
exports.default = _default;
},{}],"YjoO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createBrowserHistory = createBrowserHistory;
exports.createHashHistory = createHashHistory;
exports.createMemoryHistory = createMemoryHistory;
exports.createLocation = createLocation;
exports.locationsAreEqual = locationsAreEqual;
exports.parsePath = parsePath;
exports.createPath = createPath;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _resolvePathname = _interopRequireDefault(require("resolve-pathname"));

var _valueEqual = _interopRequireDefault(require("value-equal"));

var _tinyWarning = _interopRequireDefault(require("tiny-warning"));

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}

function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}

function hasBasename(path, prefix) {
  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;
}

function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}

function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}

function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}

function createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}

function createLocation(path, state, key, currentLocation) {
  var location;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = (0, _extends2.default)({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = (0, _resolvePathname.default)(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
}

function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual.default)(a.state, b.state);
}

function createTransitionManager() {
  var prompt = null;

  function setPrompt(nextPrompt) {
    "production" !== "production" ? (0, _tinyWarning.default)(prompt == null, 'A history supports only one prompt at a time') : void 0;
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }

  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
          "production" !== "production" ? (0, _tinyWarning.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }

  var listeners = [];

  function appendListener(fn) {
    var isActive = true;

    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

function getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */


function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */


function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */


function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */


function isExtraneousPopstateEvent(event) {
  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}

var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';

function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? "production" !== "production" ? (0, _tinyInvariant.default)(false, 'Browser history needs a DOM') : (0, _tinyInvariant.default)(false) : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props,
      _props$forceRefresh = _props.forceRefresh,
      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';

  function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
    "production" !== "production" ? (0, _tinyWarning.default)(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path, state, key);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    (0, _extends2.default)(history, nextState);
    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }

  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }

  var forceNextPop = false;

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }

  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + createPath(location);
  }

  function push(path, state) {
    "production" !== "production" ? (0, _tinyWarning.default)(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        "production" !== "production" ? (0, _tinyWarning.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;
        window.location.href = href;
      }
    });
  }

  function replace(path, state) {
    "production" !== "production" ? (0, _tinyWarning.default)(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        "production" !== "production" ? (0, _tinyWarning.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;
        window.location.replace(href);
      }
    });
  }

  function go(n) {
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

var HashChangeEvent$1 = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};

function stripHash(url) {
  var hashIndex = url.indexOf('#');
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}

function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}

function pushHashPath(path) {
  window.location.hash = path;
}

function replaceHashPath(path) {
  window.location.replace(stripHash(window.location.href) + '#' + path);
}

function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? "production" !== "production" ? (0, _tinyInvariant.default)(false, 'Hash history needs a DOM') : (0, _tinyInvariant.default)(false) : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$hashType = _props.hashType,
      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  function getDOMLocation() {
    var path = decodePath(getHashPath());
    "production" !== "production" ? (0, _tinyWarning.default)(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".') : void 0;
    if (basename) path = stripBasename(path, basename);
    return createLocation(path);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    (0, _extends2.default)(history, nextState);
    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  var forceNextPop = false;
  var ignorePath = null;

  function locationsAreEqual$$1(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;
  }

  function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.


  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)]; // Public interface

  function createHref(location) {
    var baseTag = document.querySelector('base');
    var href = '';

    if (baseTag && baseTag.getAttribute('href')) {
      href = stripHash(window.location.href);
    }

    return href + '#' + encodePath(basename + createPath(location));
  }

  function push(path, state) {
    "production" !== "production" ? (0, _tinyWarning.default)(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
        "production" !== "production" ? (0, _tinyWarning.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;
        setState();
      }
    });
  }

  function replace(path, state) {
    "production" !== "production" ? (0, _tinyWarning.default)(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    "production" !== "production" ? (0, _tinyWarning.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */


function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      getUserConfirmation = _props.getUserConfirmation,
      _props$initialEntries = _props.initialEntries,
      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
      _props$initialIndex = _props.initialIndex,
      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();

  function setState(nextState) {
    (0, _extends2.default)(history, nextState);
    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = createPath;

  function push(path, state) {
    "production" !== "production" ? (0, _tinyWarning.default)(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }

  function replace(path, state) {
    "production" !== "production" ? (0, _tinyWarning.default)(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    return transitionManager.setPrompt(prompt);
  }

  function listen(listener) {
    return transitionManager.appendListener(listener);
  }

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}
},{"@babel/runtime/helpers/esm/extends":"Em0B","resolve-pathname":"bYp6","value-equal":"v3tG","tiny-warning":"e3Sy","tiny-invariant":"VYmh"}],"ppG3":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/inheritsLoose"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _tinyWarning = _interopRequireDefault(require("tiny-warning"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var MAX_SIGNED_31_BIT_INT = 1073741823;
var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};

function getUniqueId() {
  var key = '__global_unique_id__';
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
}

function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}

function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}

function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;

  var contextProp = '__create-react-context-' + getUniqueId() + '__';

  var Provider = /*#__PURE__*/function (_Component) {
    (0, _inheritsLoose2.default)(Provider, _Component);

    function Provider() {
      var _this;

      _this = _Component.apply(this, arguments) || this;
      _this.emitter = createEventEmitter(_this.props.value);
      return _this;
    }

    var _proto = Provider.prototype;

    _proto.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };

    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;

        if (objectIs(oldValue, newValue)) {
          changedBits = 0;
        } else {
          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

          if ("production" !== 'production') {
            (0, _tinyWarning.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);
          }

          changedBits |= 0;

          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };

    _proto.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(_react.Component);

  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes.default.object.isRequired, _Provider$childContex);

  var Consumer = /*#__PURE__*/function (_Component2) {
    (0, _inheritsLoose2.default)(Consumer, _Component2);

    function Consumer() {
      var _this2;

      _this2 = _Component2.apply(this, arguments) || this;
      _this2.state = {
        value: _this2.getValue()
      };

      _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;

        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };

      return _this2;
    }

    var _proto2 = Consumer.prototype;

    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }

      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
    };

    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };

    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };

    _proto2.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };

    return Consumer;
  }(_react.Component);

  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes.default.object, _Consumer$contextType);
  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

var index = _react.default.createContext || createReactContext;
var _default = index;
exports.default = _default;
},{"react":"dmLA","@babel/runtime/helpers/esm/inheritsLoose":"N1sf","prop-types":"X9bF","tiny-warning":"e3Sy"}],"tLoS":[function(require,module,exports) {
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],"w6mg":[function(require,module,exports) {
var isarray = require('isarray')

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = res[2] || defaultDelimiter
    var pattern = capture || group

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options), options)
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}

},{"isarray":"tLoS"}],"rni4":[function(require,module,exports) {
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;

},{}],"lbnJ":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react-is.production.min.js');
} else {
  module.exports = require('./cjs/react-is.development.js');
}
},{"./cjs/react-is.production.min.js":"rni4"}],"AsUn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _objectWithoutPropertiesLoose;

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
},{}],"JJLn":[function(require,module,exports) {
'use strict';

var reactIs = require('react-is');

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;

},{"react-is":"lbnJ"}],"AFYx":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Prompt = Prompt;
exports.Redirect = Redirect;
exports.generatePath = generatePath;
exports.matchPath = matchPath;
exports.useHistory = useHistory;
exports.useLocation = useLocation;
exports.useParams = useParams;
exports.useRouteMatch = useRouteMatch;
exports.withRouter = withRouter;
exports.__RouterContext = exports.__HistoryContext = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.MemoryRouter = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/inheritsLoose"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _history = require("history");

var _tinyWarning = _interopRequireDefault(require("tiny-warning"));

var _miniCreateReactContext = _interopRequireDefault(require("mini-create-react-context"));

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _pathToRegexp = _interopRequireDefault(require("path-to-regexp"));

var _reactIs = require("react-is");

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: Replace with React.createContext once we can assume React 16+
var createNamedContext = function createNamedContext(name) {
  var context = (0, _miniCreateReactContext.default)();
  context.displayName = name;
  return context;
};

var historyContext = /*#__PURE__*/createNamedContext("Router-History"); // TODO: Replace with React.createContext once we can assume React 16+

exports.__HistoryContext = historyContext;

var createNamedContext$1 = function createNamedContext(name) {
  var context = (0, _miniCreateReactContext.default)();
  context.displayName = name;
  return context;
};

var context = /*#__PURE__*/createNamedContext$1("Router");
/**
 * The public API for putting history on context.
 */

exports.__RouterContext = context;

var Router = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(Router, _React$Component);

  Router.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  function Router(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    }; // This is a bit of a hack. We have to start listening for location
    // changes here in the constructor in case there are any <Redirect>s
    // on the initial render. If there are, they will replace/push when
    // they mount and since cDM fires in children before parents, we may
    // get a new location before the <Router> is mounted.

    _this._isMounted = false;
    _this._pendingLocation = null;

    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function (location) {
        if (_this._isMounted) {
          _this.setState({
            location: location
          });
        } else {
          _this._pendingLocation = location;
        }
      });
    }

    return _this;
  }

  var _proto = Router.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;

    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) this.unlisten();
  };

  _proto.render = function render() {
    return _react.default.createElement(context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, _react.default.createElement(historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };

  return Router;
}(_react.default.Component);

exports.Router = Router;

if ("production" !== "production") {
  Router.propTypes = {
    children: _propTypes.default.node,
    history: _propTypes.default.object.isRequired,
    staticContext: _propTypes.default.object
  };

  Router.prototype.componentDidUpdate = function (prevProps) {
    "production" !== "production" ? (0, _tinyWarning.default)(prevProps.history === this.props.history, "You cannot change <Router history>") : void 0;
  };
}
/**
 * The public API for a <Router> that stores location in memory.
 */


var MemoryRouter = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = (0, _history.createMemoryHistory)(_this.props);
    return _this;
  }

  var _proto = MemoryRouter.prototype;

  _proto.render = function render() {
    return _react.default.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return MemoryRouter;
}(_react.default.Component);

exports.MemoryRouter = MemoryRouter;

if ("production" !== "production") {
  MemoryRouter.propTypes = {
    initialEntries: _propTypes.default.array,
    initialIndex: _propTypes.default.number,
    getUserConfirmation: _propTypes.default.func,
    keyLength: _propTypes.default.number,
    children: _propTypes.default.node
  };

  MemoryRouter.prototype.componentDidMount = function () {
    "production" !== "production" ? (0, _tinyWarning.default)(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.") : void 0;
  };
}

var Lifecycle = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(Lifecycle, _React$Component);

  function Lifecycle() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Lifecycle.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount) this.props.onMount.call(this, this);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount) this.props.onUnmount.call(this, this);
  };

  _proto.render = function render() {
    return null;
  };

  return Lifecycle;
}(_react.default.Component);
/**
 * The public API for prompting the user before navigating away from a screen.
 */


function Prompt(_ref) {
  var message = _ref.message,
      _ref$when = _ref.when,
      when = _ref$when === void 0 ? true : _ref$when;
  return _react.default.createElement(context.Consumer, null, function (context) {
    !context ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You should not use <Prompt> outside a <Router>") : (0, _tinyInvariant.default)(false) : void 0;
    if (!when || context.staticContext) return null;
    var method = context.history.block;
    return _react.default.createElement(Lifecycle, {
      onMount: function onMount(self) {
        self.release = method(message);
      },
      onUpdate: function onUpdate(self, prevProps) {
        if (prevProps.message !== message) {
          self.release();
          self.release = method(message);
        }
      },
      onUnmount: function onUnmount(self) {
        self.release();
      },
      message: message
    });
  });
}

if ("production" !== "production") {
  var messageType = _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.string]);

  Prompt.propTypes = {
    when: _propTypes.default.bool,
    message: messageType.isRequired
  };
}

var cache = {};
var cacheLimit = 10000;
var cacheCount = 0;

function compilePath(path) {
  if (cache[path]) return cache[path];

  var generator = _pathToRegexp.default.compile(path);

  if (cacheCount < cacheLimit) {
    cache[path] = generator;
    cacheCount++;
  }

  return generator;
}
/**
 * Public API for generating a URL pathname from a path and parameters.
 */


function generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }

  if (params === void 0) {
    params = {};
  }

  return path === "/" ? path : compilePath(path)(params, {
    pretty: true
  });
}
/**
 * The public API for navigating programmatically with a component.
 */


function Redirect(_ref) {
  var computedMatch = _ref.computedMatch,
      to = _ref.to,
      _ref$push = _ref.push,
      push = _ref$push === void 0 ? false : _ref$push;
  return _react.default.createElement(context.Consumer, null, function (context) {
    !context ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You should not use <Redirect> outside a <Router>") : (0, _tinyInvariant.default)(false) : void 0;
    var history = context.history,
        staticContext = context.staticContext;
    var method = push ? history.push : history.replace;
    var location = (0, _history.createLocation)(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : (0, _extends2.default)({}, to, {
      pathname: generatePath(to.pathname, computedMatch.params)
    }) : to); // When rendering in a static context,
    // set the new location immediately.

    if (staticContext) {
      method(location);
      return null;
    }

    return _react.default.createElement(Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self, prevProps) {
        var prevLocation = (0, _history.createLocation)(prevProps.to);

        if (!(0, _history.locationsAreEqual)(prevLocation, (0, _extends2.default)({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to: to
    });
  });
}

if ("production" !== "production") {
  Redirect.propTypes = {
    push: _propTypes.default.bool,
    from: _propTypes.default.string,
    to: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]).isRequired
  };
}

var cache$1 = {};
var cacheLimit$1 = 10000;
var cacheCount$1 = 0;

function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path]) return pathCache[path];
  var keys = [];
  var regexp = (0, _pathToRegexp.default)(path, keys, options);
  var result = {
    regexp: regexp,
    keys: keys
  };

  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }

  return result;
}
/**
 * Public API for matching a URL pathname to a path.
 */


function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }

  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }

  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === void 0 ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === void 0 ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function (matched, path) {
    if (!path && path !== "") return null;
    if (matched) return matched;

    var _compilePath = compilePath$1(path, {
      end: exact,
      strict: strict,
      sensitive: sensitive
    }),
        regexp = _compilePath.regexp,
        keys = _compilePath.keys;

    var match = regexp.exec(pathname);
    if (!match) return null;
    var url = match[0],
        values = match.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact) return null;
    return {
      path: path,
      // the path used to match
      url: path === "/" && url === "" ? "/" : url,
      // the matched portion of the URL
      isExact: isExact,
      // whether or not we matched exactly
      params: keys.reduce(function (memo, key, index) {
        memo[key.name] = values[index];
        return memo;
      }, {})
    };
  }, null);
}

function isEmptyChildren(children) {
  return _react.default.Children.count(children) === 0;
}

function evalChildrenDev(children, props, path) {
  var value = children(props);
  "production" !== "production" ? (0, _tinyWarning.default)(value !== undefined, "You returned `undefined` from the `children` function of " + ("<Route" + (path ? " path=\"" + path + "\"" : "") + ">, but you ") + "should have returned a React element or `null`") : void 0;
  return value || null;
}
/**
 * The public API for matching a single path and rendering.
 */


var Route = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(Route, _React$Component);

  function Route() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Route.prototype;

  _proto.render = function render() {
    var _this = this;

    return _react.default.createElement(context.Consumer, null, function (context$1) {
      !context$1 ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You should not use <Route> outside a <Router>") : (0, _tinyInvariant.default)(false) : void 0;
      var location = _this.props.location || context$1.location;
      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us
      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;
      var props = (0, _extends2.default)({}, context$1, {
        location: location,
        match: match
      });
      var _this$props = _this.props,
          children = _this$props.children,
          component = _this$props.component,
          render = _this$props.render; // Preact uses an empty array as children by
      // default, so use null if that's the case.

      if (Array.isArray(children) && children.length === 0) {
        children = null;
      }

      return _react.default.createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ? "production" !== "production" ? evalChildrenDev(children, props, _this.props.path) : children(props) : children : component ? _react.default.createElement(component, props) : render ? render(props) : null : typeof children === "function" ? "production" !== "production" ? evalChildrenDev(children, props, _this.props.path) : children(props) : null);
    });
  };

  return Route;
}(_react.default.Component);

exports.Route = Route;

if ("production" !== "production") {
  Route.propTypes = {
    children: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),
    component: function component(props, propName) {
      if (props[propName] && !(0, _reactIs.isValidElementType)(props[propName])) {
        return new Error("Invalid prop 'component' supplied to 'Route': the prop is not a valid React component");
      }
    },
    exact: _propTypes.default.bool,
    location: _propTypes.default.object,
    path: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),
    render: _propTypes.default.func,
    sensitive: _propTypes.default.bool,
    strict: _propTypes.default.bool
  };

  Route.prototype.componentDidMount = function () {
    "production" !== "production" ? (0, _tinyWarning.default)(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), "You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored") : void 0;
    "production" !== "production" ? (0, _tinyWarning.default)(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), "You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored") : void 0;
    "production" !== "production" ? (0, _tinyWarning.default)(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored") : void 0;
  };

  Route.prototype.componentDidUpdate = function (prevProps) {
    "production" !== "production" ? (0, _tinyWarning.default)(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    "production" !== "production" ? (0, _tinyWarning.default)(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}

function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}

function addBasename(basename, location) {
  if (!basename) return location;
  return (0, _extends2.default)({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
}

function stripBasename(basename, location) {
  if (!basename) return location;
  var base = addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0) return location;
  return (0, _extends2.default)({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}

function createURL(location) {
  return typeof location === "string" ? location : (0, _history.createPath)(location);
}

function staticHandler(methodName) {
  return function () {
    "production" !== "production" ? (0, _tinyInvariant.default)(false, "You cannot %s with <StaticRouter>", methodName) : (0, _tinyInvariant.default)(false);
  };
}

function noop() {}
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */


var StaticRouter = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(StaticRouter, _React$Component);

  function StaticRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.handlePush = function (location) {
      return _this.navigateTo(location, "PUSH");
    };

    _this.handleReplace = function (location) {
      return _this.navigateTo(location, "REPLACE");
    };

    _this.handleListen = function () {
      return noop;
    };

    _this.handleBlock = function () {
      return noop;
    };

    return _this;
  }

  var _proto = StaticRouter.prototype;

  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props,
        _this$props$basename = _this$props.basename,
        basename = _this$props$basename === void 0 ? "" : _this$props$basename,
        _this$props$context = _this$props.context,
        context = _this$props$context === void 0 ? {} : _this$props$context;
    context.action = action;
    context.location = addBasename(basename, (0, _history.createLocation)(location));
    context.url = createURL(context.location);
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        _this$props2$basename = _this$props2.basename,
        basename = _this$props2$basename === void 0 ? "" : _this$props2$basename,
        _this$props2$context = _this$props2.context,
        context = _this$props2$context === void 0 ? {} : _this$props2$context,
        _this$props2$location = _this$props2.location,
        location = _this$props2$location === void 0 ? "/" : _this$props2$location,
        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, ["basename", "context", "location"]);
    var history = {
      createHref: function createHref(path) {
        return addLeadingSlash(basename + createURL(path));
      },
      action: "POP",
      location: stripBasename(basename, (0, _history.createLocation)(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return _react.default.createElement(Router, (0, _extends2.default)({}, rest, {
      history: history,
      staticContext: context
    }));
  };

  return StaticRouter;
}(_react.default.Component);

exports.StaticRouter = StaticRouter;

if ("production" !== "production") {
  StaticRouter.propTypes = {
    basename: _propTypes.default.string,
    context: _propTypes.default.object,
    location: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object])
  };

  StaticRouter.prototype.componentDidMount = function () {
    "production" !== "production" ? (0, _tinyWarning.default)(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.") : void 0;
  };
}
/**
 * The public API for rendering the first <Route> that matches.
 */


var Switch = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(Switch, _React$Component);

  function Switch() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Switch.prototype;

  _proto.render = function render() {
    var _this = this;

    return _react.default.createElement(context.Consumer, null, function (context) {
      !context ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You should not use <Switch> outside a <Router>") : (0, _tinyInvariant.default)(false) : void 0;
      var location = _this.props.location || context.location;
      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()
      // here because toArray adds keys to all child elements and we do not want
      // to trigger an unmount/remount for two <Route>s that render the same
      // component at different URLs.

      _react.default.Children.forEach(_this.props.children, function (child) {
        if (match == null && _react.default.isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match = path ? matchPath(location.pathname, (0, _extends2.default)({}, child.props, {
            path: path
          })) : context.match;
        }
      });

      return match ? _react.default.cloneElement(element, {
        location: location,
        computedMatch: match
      }) : null;
    });
  };

  return Switch;
}(_react.default.Component);

exports.Switch = Switch;

if ("production" !== "production") {
  Switch.propTypes = {
    children: _propTypes.default.node,
    location: _propTypes.default.object
  };

  Switch.prototype.componentDidUpdate = function (prevProps) {
    "production" !== "production" ? (0, _tinyWarning.default)(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.') : void 0;
    "production" !== "production" ? (0, _tinyWarning.default)(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.') : void 0;
  };
}
/**
 * A public higher-order component to access the imperative API
 */


function withRouter(Component) {
  var displayName = "withRouter(" + (Component.displayName || Component.name) + ")";

  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = (0, _objectWithoutPropertiesLoose2.default)(props, ["wrappedComponentRef"]);
    return _react.default.createElement(context.Consumer, null, function (context) {
      !context ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You should not use <" + displayName + " /> outside a <Router>") : (0, _tinyInvariant.default)(false) : void 0;
      return _react.default.createElement(Component, (0, _extends2.default)({}, remainingProps, context, {
        ref: wrappedComponentRef
      }));
    });
  };

  C.displayName = displayName;
  C.WrappedComponent = Component;

  if ("production" !== "production") {
    C.propTypes = {
      wrappedComponentRef: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object])
    };
  }

  return (0, _hoistNonReactStatics.default)(C, Component);
}

var useContext = _react.default.useContext;

function useHistory() {
  if ("production" !== "production") {
    !(typeof useContext === "function") ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You must use React >= 16.8 in order to use useHistory()") : (0, _tinyInvariant.default)(false) : void 0;
  }

  return useContext(historyContext);
}

function useLocation() {
  if ("production" !== "production") {
    !(typeof useContext === "function") ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You must use React >= 16.8 in order to use useLocation()") : (0, _tinyInvariant.default)(false) : void 0;
  }

  return useContext(context).location;
}

function useParams() {
  if ("production" !== "production") {
    !(typeof useContext === "function") ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You must use React >= 16.8 in order to use useParams()") : (0, _tinyInvariant.default)(false) : void 0;
  }

  var match = useContext(context).match;
  return match ? match.params : {};
}

function useRouteMatch(path) {
  if ("production" !== "production") {
    !(typeof useContext === "function") ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You must use React >= 16.8 in order to use useRouteMatch()") : (0, _tinyInvariant.default)(false) : void 0;
  }

  var location = useLocation();
  var match = useContext(context).match;
  return path ? matchPath(location.pathname, path) : match;
}

if ("production" !== "production") {
  if (typeof window !== "undefined") {
    var global = window;
    var key = "__react_router_build__";
    var buildNames = {
      cjs: "CommonJS",
      esm: "ES modules",
      umd: "UMD"
    };

    if (global[key] && global[key] !== "esm") {
      var initialBuildName = buildNames[global[key]];
      var secondaryBuildName = buildNames["esm"]; // TODO: Add link to article that explains in detail how to avoid
      // loading 2 different builds.

      throw new Error("You are loading the " + secondaryBuildName + " build of React Router " + ("on a page that is already running the " + initialBuildName + " ") + "build, so things won't work right.");
    }

    global[key] = "esm";
  }
}
},{"@babel/runtime/helpers/esm/inheritsLoose":"N1sf","react":"dmLA","prop-types":"X9bF","history":"YjoO","tiny-warning":"e3Sy","mini-create-react-context":"ppG3","tiny-invariant":"VYmh","@babel/runtime/helpers/esm/extends":"Em0B","path-to-regexp":"w6mg","react-is":"lbnJ","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","hoist-non-react-statics":"JJLn"}],"eu5S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MemoryRouter", {
  enumerable: true,
  get: function () {
    return _reactRouter.MemoryRouter;
  }
});
Object.defineProperty(exports, "Prompt", {
  enumerable: true,
  get: function () {
    return _reactRouter.Prompt;
  }
});
Object.defineProperty(exports, "Redirect", {
  enumerable: true,
  get: function () {
    return _reactRouter.Redirect;
  }
});
Object.defineProperty(exports, "Route", {
  enumerable: true,
  get: function () {
    return _reactRouter.Route;
  }
});
Object.defineProperty(exports, "Router", {
  enumerable: true,
  get: function () {
    return _reactRouter.Router;
  }
});
Object.defineProperty(exports, "StaticRouter", {
  enumerable: true,
  get: function () {
    return _reactRouter.StaticRouter;
  }
});
Object.defineProperty(exports, "Switch", {
  enumerable: true,
  get: function () {
    return _reactRouter.Switch;
  }
});
Object.defineProperty(exports, "generatePath", {
  enumerable: true,
  get: function () {
    return _reactRouter.generatePath;
  }
});
Object.defineProperty(exports, "matchPath", {
  enumerable: true,
  get: function () {
    return _reactRouter.matchPath;
  }
});
Object.defineProperty(exports, "useHistory", {
  enumerable: true,
  get: function () {
    return _reactRouter.useHistory;
  }
});
Object.defineProperty(exports, "useLocation", {
  enumerable: true,
  get: function () {
    return _reactRouter.useLocation;
  }
});
Object.defineProperty(exports, "useParams", {
  enumerable: true,
  get: function () {
    return _reactRouter.useParams;
  }
});
Object.defineProperty(exports, "useRouteMatch", {
  enumerable: true,
  get: function () {
    return _reactRouter.useRouteMatch;
  }
});
Object.defineProperty(exports, "withRouter", {
  enumerable: true,
  get: function () {
    return _reactRouter.withRouter;
  }
});
exports.NavLink = exports.Link = exports.HashRouter = exports.BrowserRouter = void 0;

var _reactRouter = require("react-router");

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/inheritsLoose"));

var _react = _interopRequireDefault(require("react"));

var _history = require("history");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _tinyWarning = _interopRequireDefault(require("tiny-warning"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _tinyInvariant = _interopRequireDefault(require("tiny-invariant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The public API for a <Router> that uses HTML5 history.
 */
var BrowserRouter = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(BrowserRouter, _React$Component);

  function BrowserRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = (0, _history.createBrowserHistory)(_this.props);
    return _this;
  }

  var _proto = BrowserRouter.prototype;

  _proto.render = function render() {
    return _react.default.createElement(_reactRouter.Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return BrowserRouter;
}(_react.default.Component);

exports.BrowserRouter = BrowserRouter;

if ("production" !== "production") {
  BrowserRouter.propTypes = {
    basename: _propTypes.default.string,
    children: _propTypes.default.node,
    forceRefresh: _propTypes.default.bool,
    getUserConfirmation: _propTypes.default.func,
    keyLength: _propTypes.default.number
  };

  BrowserRouter.prototype.componentDidMount = function () {
    "production" !== "production" ? (0, _tinyWarning.default)(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.") : void 0;
  };
}
/**
 * The public API for a <Router> that uses window.location.hash.
 */


var HashRouter = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(HashRouter, _React$Component);

  function HashRouter() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = (0, _history.createHashHistory)(_this.props);
    return _this;
  }

  var _proto = HashRouter.prototype;

  _proto.render = function render() {
    return _react.default.createElement(_reactRouter.Router, {
      history: this.history,
      children: this.props.children
    });
  };

  return HashRouter;
}(_react.default.Component);

exports.HashRouter = HashRouter;

if ("production" !== "production") {
  HashRouter.propTypes = {
    basename: _propTypes.default.string,
    children: _propTypes.default.node,
    getUserConfirmation: _propTypes.default.func,
    hashType: _propTypes.default.oneOf(["hashbang", "noslash", "slash"])
  };

  HashRouter.prototype.componentDidMount = function () {
    "production" !== "production" ? (0, _tinyWarning.default)(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.") : void 0;
  };
}

var resolveToLocation = function resolveToLocation(to, currentLocation) {
  return typeof to === "function" ? to(currentLocation) : to;
};

var normalizeToLocation = function normalizeToLocation(to, currentLocation) {
  return typeof to === "string" ? (0, _history.createLocation)(to, null, null, currentLocation) : to;
};

var forwardRefShim = function forwardRefShim(C) {
  return C;
};

var forwardRef = _react.default.forwardRef;

if (typeof forwardRef === "undefined") {
  forwardRef = forwardRefShim;
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

var LinkAnchor = forwardRef(function (_ref, forwardedRef) {
  var innerRef = _ref.innerRef,
      navigate = _ref.navigate,
      _onClick = _ref.onClick,
      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["innerRef", "navigate", "onClick"]);
  var target = rest.target;
  var props = (0, _extends2.default)({}, rest, {
    onClick: function onClick(event) {
      try {
        if (_onClick) _onClick(event);
      } catch (ex) {
        event.preventDefault();
        throw ex;
      }

      if (!event.defaultPrevented && // onClick prevented default
      event.button === 0 && ( // ignore everything but left clicks
      !target || target === "_self") && // let browser handle "target=_blank" etc.
      !isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
          event.preventDefault();
          navigate();
        }
    }
  }); // React 15 compat

  if (forwardRefShim !== forwardRef) {
    props.ref = forwardedRef || innerRef;
  } else {
    props.ref = innerRef;
  }
  /* eslint-disable-next-line jsx-a11y/anchor-has-content */


  return _react.default.createElement("a", props);
});

if ("production" !== "production") {
  LinkAnchor.displayName = "LinkAnchor";
}
/**
 * The public API for rendering a history-aware <a>.
 */


var Link = forwardRef(function (_ref2, forwardedRef) {
  var _ref2$component = _ref2.component,
      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,
      replace = _ref2.replace,
      to = _ref2.to,
      innerRef = _ref2.innerRef,
      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["component", "replace", "to", "innerRef"]);
  return _react.default.createElement(_reactRouter.__RouterContext.Consumer, null, function (context) {
    !context ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You should not use <Link> outside a <Router>") : (0, _tinyInvariant.default)(false) : void 0;
    var history = context.history;
    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);
    var href = location ? history.createHref(location) : "";
    var props = (0, _extends2.default)({}, rest, {
      href: href,
      navigate: function navigate() {
        var location = resolveToLocation(to, context.location);
        var method = replace ? history.replace : history.push;
        method(location);
      }
    }); // React 15 compat

    if (forwardRefShim !== forwardRef) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return _react.default.createElement(component, props);
  });
});
exports.Link = Link;

if ("production" !== "production") {
  var toType = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.func]);

  var refType = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.shape({
    current: _propTypes.default.any
  })]);

  Link.displayName = "Link";
  Link.propTypes = {
    innerRef: refType,
    onClick: _propTypes.default.func,
    replace: _propTypes.default.bool,
    target: _propTypes.default.string,
    to: toType.isRequired
  };
}

var forwardRefShim$1 = function forwardRefShim(C) {
  return C;
};

var forwardRef$1 = _react.default.forwardRef;

if (typeof forwardRef$1 === "undefined") {
  forwardRef$1 = forwardRefShim$1;
}

function joinClassnames() {
  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {
    classnames[_key] = arguments[_key];
  }

  return classnames.filter(function (i) {
    return i;
  }).join(" ");
}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */


var NavLink = forwardRef$1(function (_ref, forwardedRef) {
  var _ref$ariaCurrent = _ref["aria-current"],
      ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent,
      _ref$activeClassName = _ref.activeClassName,
      activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName,
      activeStyle = _ref.activeStyle,
      classNameProp = _ref.className,
      exact = _ref.exact,
      isActiveProp = _ref.isActive,
      locationProp = _ref.location,
      sensitive = _ref.sensitive,
      strict = _ref.strict,
      styleProp = _ref.style,
      to = _ref.to,
      innerRef = _ref.innerRef,
      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);
  return _react.default.createElement(_reactRouter.__RouterContext.Consumer, null, function (context) {
    !context ? "production" !== "production" ? (0, _tinyInvariant.default)(false, "You should not use <NavLink> outside a <Router>") : (0, _tinyInvariant.default)(false) : void 0;
    var currentLocation = locationProp || context.location;
    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);
    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202

    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    var match = escapedPath ? (0, _reactRouter.matchPath)(currentLocation.pathname, {
      path: escapedPath,
      exact: exact,
      sensitive: sensitive,
      strict: strict
    }) : null;
    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);
    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;
    var style = isActive ? (0, _extends2.default)({}, styleProp, {}, activeStyle) : styleProp;
    var props = (0, _extends2.default)({
      "aria-current": isActive && ariaCurrent || null,
      className: className,
      style: style,
      to: toLocation
    }, rest); // React 15 compat

    if (forwardRefShim$1 !== forwardRef$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }

    return _react.default.createElement(Link, props);
  });
});
exports.NavLink = NavLink;

if ("production" !== "production") {
  NavLink.displayName = "NavLink";

  var ariaCurrentType = _propTypes.default.oneOf(["page", "step", "location", "date", "time", "true"]);

  NavLink.propTypes = (0, _extends2.default)({}, Link.propTypes, {
    "aria-current": ariaCurrentType,
    activeClassName: _propTypes.default.string,
    activeStyle: _propTypes.default.object,
    className: _propTypes.default.string,
    exact: _propTypes.default.bool,
    isActive: _propTypes.default.func,
    location: _propTypes.default.object,
    sensitive: _propTypes.default.bool,
    strict: _propTypes.default.bool,
    style: _propTypes.default.object
  });
}
},{"react-router":"AFYx","@babel/runtime/helpers/esm/inheritsLoose":"N1sf","react":"dmLA","history":"YjoO","prop-types":"X9bF","tiny-warning":"e3Sy","@babel/runtime/helpers/esm/extends":"Em0B","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","tiny-invariant":"VYmh"}],"Mjxh":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_base_route = get_base_route;
exports.ROUTES = void 0;

var _logger = _interopRequireDefault(require("./logger"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// auto-detect basename, correctly ignoring dynamic routes
function get_base_route() {
  const pathname = window.location.pathname; //console.log(`computing BASE_ROUTE from pathname = "${pathname}"…`)
  // stable point, everything after is likely to be a route

  const TOP_SEGMENT_WE_ASSUME_WELL_BE_ALWAYS_SERVED_UNDER = (() => {
    if (pathname.includes('/the-boring-rpg/client--browser')) return '/the-boring-rpg/client--browser'; // when served by GitHub = "dev+" setup + netlify

    if (pathname.includes('/the-boring-rpg-preprod')) return '/the-boring-rpg-preprod';
    if (pathname.includes('/the-boring-rpg')) return '/the-boring-rpg'; // prod setup

    return ''; // dev setup
  })();

  const splitted = pathname.split(TOP_SEGMENT_WE_ASSUME_WELL_BE_ALWAYS_SERVED_UNDER);
  const parent_segment = splitted[0];
  let base_route = parent_segment + TOP_SEGMENT_WE_ASSUME_WELL_BE_ALWAYS_SERVED_UNDER; // special dev/staging case where we are served under an additional /dist

  if (splitted[1] && splitted[1].startsWith('/dist')) base_route += '/dist';
  /*console.log('BASE_ROUTE computation', {
  	TOP_SEGMENT_WE_ASSUME_WELL_BE_ALWAYS_SERVED_UNDER,
  	splitted,
  	parent_segment,
  	base_route,
  })*/

  _logger.default.verbose(`BASE_ROUTE = "${base_route}"`);

  return base_route;
}

const ROUTES = {
  // special routes
  index: '/index-2.html',
  // technical route for redirection TODO auto from current file?
  // navigable routes
  home: '/index-2.html',
  savegame: '/savegame',
  dev: '/dev',
  diagnostic: '/diag',
  x: '/x'
};
exports.ROUTES = ROUTES;
},{"./logger":"qVJl"}],"RHzJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppStateListenerAndProvider = exports.AppStateContext = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _stateUtils = require("@offirmo-private/state-utils");

var _gameInstanceBrowser = _interopRequireDefault(require("../services/game-instance-browser"));

var _logger = _interopRequireDefault(require("../services/logger"));

var _src = require("@offirmo-private/state-utils/src");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// https://reactjs.org/docs/context.html
const DEFAULT_VALUE = null;
const AppStateContext = /*#__PURE__*/React.createContext(DEFAULT_VALUE);
exports.AppStateContext = AppStateContext;

class AppStateListenerAndProvider extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {});

    _defineProperty(this, "unsubscribeAppStateListener", null);
  }

  componentDidMount() {
    this.unsubscribeAppStateListener = (0, _gameInstanceBrowser.default)().view.subscribe('app-state', () => {
      //console.log(`▶ AppStateListenerAndProvider: updating on app state change`/*, game_instance.view.get()*/)
      this.setState({
        app_state: (0, _gameInstanceBrowser.default)().view.get()
      });
    });
  }

  componentWillUnmount() {
    this.unsubscribeAppStateListener();
    this.unsubscribeAppStateListener = null;
  }

  render() {
    // yes, we shortcut React and make sure to pick the latest version
    // Without that, there is a delay while setState get propagated
    const latest_app_state = (0, _gameInstanceBrowser.default)().view.get();
    const latest_model_revision = latest_app_state ? (0, _stateUtils.get_revision)(latest_app_state.model) : -1;

    _logger.default.trace(`🔄 AppStateListenerAndProvider (model is rev#${latest_model_revision},T=${(0, _src.get_timestamp)(latest_app_state.model)})`
    /*, {app_state: this.state.app_state}*/
    );
    /* Yes this triggers
    const local_revision = this.state.app_state ? get_revision(this.state.app_state.model) : -1
    if (latest_model_revision !== local_revision)
    	console.warn(`FYI App State Context discrepancy: local = ${local_revision}, latest = ${latest_model_revision}`)
    */


    return /*#__PURE__*/(0, _jsxRuntime.jsx)(AppStateContext.Provider, {
      value: latest_app_state,
      children: this.props.children
    });
  }

}

exports.AppStateListenerAndProvider = AppStateListenerAndProvider;

_defineProperty(AppStateListenerAndProvider, "propTypes", {
  children: _propTypes.default.node.isRequired
});

var _default = AppStateContext;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@offirmo-private/state-utils":"PmVE","../services/game-instance-browser":"r81V","../services/logger":"qVJl","@offirmo-private/state-utils/src":"PmVE","react/jsx-runtime":"qEpl"}],"Tz8l":[function(require,module,exports) {
var debounce = require('./debounce'),
    isObject = require('./isObject');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

module.exports = throttle;

},{"./debounce":"IwFz","./isObject":"kH2j"}],"ewNC":[function(require,module,exports) {
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');

module.exports = function AnimationFrameComponent(InnerComponent, throttleMs) {
    return function (_React$Component) {
        _inherits(AnimatedComponent, _React$Component);

        function AnimatedComponent() {
            _classCallCheck(this, AnimatedComponent);

            var _this = _possibleConstructorReturn(this, (AnimatedComponent.__proto__ || Object.getPrototypeOf(AnimatedComponent)).call(this));

            _this.loop = _this.loop.bind(_this);
            _this.endAnimation = _this.endAnimation.bind(_this);
            _this.startAnimation = _this.startAnimation.bind(_this);

            _this.isActive = true;
            _this.rafId = 0;
            _this.lastInvocationMs = 0;
            return _this;
        }

        _createClass(AnimatedComponent, [{
            key: 'loop',
            value: function loop(time) {
                var lastInvocationMs = this.lastInvocationMs,
                    isActive = this.isActive;

                var isAnimatable = !!(this.innerComponent && this.innerComponent.onAnimationFrame);

                // Latter const is defensive check for React Native unmount (issues/#3)
                if (!isActive || !isAnimatable) return;

                var hasTimeElapsed = !throttleMs || time - lastInvocationMs >= throttleMs;

                if (hasTimeElapsed) {
                    this.lastInvocationMs = time;
                    this.innerComponent.onAnimationFrame(time, lastInvocationMs);
                }

                this.rafId = requestAnimationFrame(this.loop);
            }
        }, {
            key: 'endAnimation',
            value: function endAnimation() {
                cancelAnimationFrame(this.rafId);

                this.isActive = false;
            }
        }, {
            key: 'startAnimation',
            value: function startAnimation() {
                if (!this.isActive) {
                    this.isActive = true;
                    this.rafId = requestAnimationFrame(this.loop);
                }
            }
        }, {
            key: 'componentDidMount',
            value: function componentDidMount() {
                if (!this.innerComponent.onAnimationFrame) {
                    throw new Error('The component passed to AnimationFrameComponent does not implement onAnimationFrame');
                }

                this.rafId = requestAnimationFrame(this.loop);
            }
        }, {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
                this.endAnimation();
            }
        }, {
            key: 'render',
            value: function render() {
                var _this2 = this;

                return React.createElement(InnerComponent, _extends({ ref: function ref(node) {
                        return _this2.innerComponent = node;
                    },
                    endAnimation: this.endAnimation,
                    startAnimation: this.startAnimation
                }, this.props));
            }
        }]);

        return AnimatedComponent;
    }(React.Component);
};
},{"react":"dmLA"}],"ZDtl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _throttle = _interopRequireDefault(require("lodash/throttle"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _asyncUtils = require("@offirmo-private/async-utils");

var _reactAnimationFrame = _interopRequireDefault(require("react-animation-frame"));

var _timestamps = require("@offirmo-private/timestamps");

var _gameInstanceBrowser = _interopRequireDefault(require("../services/game-instance-browser"));

var _logger = _interopRequireDefault(require("../services/logger"));

var _appState = require("./app-state");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const MAX_FPS = 1.; // TODO load from prefs?

const MIN_FPS = .1; // ex. for a background tab

const MIN_FPS_FRAME_PERIOD_MS = Math.trunc(1000. / MIN_FPS);
const MAX_FPS_FRAME_PERIOD_MS = Math.trunc(1000. / MAX_FPS);
const MAX_ITERATIONS = 0; //10 // debug

class AppStateListenerAndProviderRAF extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "iteration_count", 0);

    _defineProperty(this, "raf_time_start", 0);

    _defineProperty(this, "time_1st_iteration", null);

    _defineProperty(this, "time_last_iteration", null);

    _defineProperty(this, "intervalId", null);

    _defineProperty(this, "update_to_now", (0, _throttle.default)(time => {
      if (window.oᐧextra.flagꓽis_paused) return;
      const now_ms = (0, _timestamps.get_UTC_timestamp_ms)();

      if (!this.time_1st_iteration) {
        // debug
        this.time_1st_iteration = this.time_last_iteration = now_ms;

        _logger.default.debug('++++++++++++ starting animation frame ++++++++++++', {
          now_ms,
          time
        });
      }

      _logger.default.groupEnd();

      _logger.default.groupCollapsed(`——————— onInterval/onAnimationFrame #${this.iteration_count} / ${now_ms} (+${((now_ms - this.time_last_iteration) / 1000.).toFixed()}s) ———————`);

      this.iteration_count++;
      (0, _asyncUtils.asap_but_out_of_current_event_loop)(_logger.default.groupEnd);
      (0, _gameInstanceBrowser.default)().commands.update_to_now();
      this.time_last_iteration = now_ms;

      if (MAX_ITERATIONS) {
        if (this.iteration_count > MAX_ITERATIONS) {
          const elapsed = now_ms - this.time_1st_iteration;

          _logger.default.warn('stopping animation frame for safety', {
            raf_time_start: this.raf_time_start,
            time_1st_iteration: this.time_1st_iteration,
            now_ms,
            elapsed
          });

          console.log('measured fps =', 1000 * MAX_ITERATIONS / elapsed);
          return this.props.endAnimation();
        }
      }
    }, MAX_FPS_FRAME_PERIOD_MS));

    _defineProperty(this, "onAnimationFrame", this.update_to_now);
  }

  componentDidMount() {
    // we use Animation Frame for a smooth, adaptable framerate
    // however, since AF pauses when background,
    // we need to back it up with a slow interval.
    this.intervalId = setInterval(this.update_to_now, MIN_FPS_FRAME_PERIOD_MS);
  }

  componentWillUnmount() {
    clearInterval(this.intervalId);
    this.intervalId = null;
  }

  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 AppStateListenerAndProviderRAF');
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_appState.AppStateListenerAndProvider, {
      children: this.props.children
    });
  }

}

_defineProperty(AppStateListenerAndProviderRAF, "propTypes", {
  children: _propTypes.default.node.isRequired
});

const AppStateListenerAndProviderRAF2 = (0, _reactAnimationFrame.default)(AppStateListenerAndProviderRAF);
var _default = AppStateListenerAndProviderRAF2;
exports.default = _default;
},{"lodash/throttle":"Tz8l","react":"dmLA","prop-types":"X9bF","@offirmo-private/async-utils":"i8Ln","react-animation-frame":"ewNC","@offirmo-private/timestamps":"bMV2","../services/game-instance-browser":"r81V","../services/logger":"qVJl","./app-state":"RHzJ","react/jsx-runtime":"qEpl"}],"LM1s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactErrorBoundary = require("@offirmo-private/react-error-boundary");

var _gameInstanceBrowser = _interopRequireDefault(require("../services/game-instance-browser"));

var _appState = require("./app-state");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function UStateListenerAndProvider({
  children,
  render
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_appState.AppStateContext.Consumer, {
    children: local_app_state => {
      const {
        u_state
      } = (0, _gameInstanceBrowser.default)().model.get();
      return (0, _reactErrorBoundary.render_any_m)({
        children,
        render,
        u_state
      });
    }
  });
}

var _default = UStateListenerAndProvider;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@offirmo-private/react-error-boundary":"UTEF","../services/game-instance-browser":"r81V","./app-state":"RHzJ","react/jsx-runtime":"qEpl"}],"DUKA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AppStateContext", {
  enumerable: true,
  get: function () {
    return _appState.default;
  }
});
Object.defineProperty(exports, "AppStateListenerAndProvider", {
  enumerable: true,
  get: function () {
    return _framerateRefresh.default;
  }
});
Object.defineProperty(exports, "UStateListenerAndProvider", {
  enumerable: true,
  get: function () {
    return _ustate.default;
  }
});

var _appState = _interopRequireDefault(require("./app-state"));

var _framerateRefresh = _interopRequireDefault(require("./framerate-refresh"));

var _ustate = _interopRequireDefault(require("./ustate"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./app-state":"RHzJ","./framerate-refresh":"ZDtl","./ustate":"LM1s"}],"L8Fy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OhMyRPGUIContext = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

////////////
const FLAGS_POSITION_TO_3RD_PARTY = {
  'top-center': 'tc',
  'bottom-center': 'bc'
};
let flag_count = 0;
const DEFAULT_FLAG_SETTINGS = {
  level: 'info',
  position: 'bottom-center',
  auto_dismiss_delay_ms: 0
};
const DEFAULT_STATE = {
  isBurgerMenuOpen: false,
  isAboutOpen: false,
  screenIndex: 0,
  isChatPanelVisible: false,
  popup: false,
  // TODO
  pendingFlags: [] // TODO

};
const OhMyRPGUIContext = /*#__PURE__*/React.createContext({ ...DEFAULT_STATE
});
exports.OhMyRPGUIContext = OhMyRPGUIContext;

class ContextProvider extends React.Component {
  constructor(props) {
    super(props);
    this.state = { ...DEFAULT_STATE
    };
    this._notificationSystem = null;
    this.notificationSystem = new Promise((resolve, reject) => {
      this.resolveNotificationSystem = resolve;
      this.rejectNotificationSystem = reject;
    }); //this.notificationSystem.then(() => console.info('OMR notifications system ready ✅'))
    // TODO clean up in future iterations

    this.state._registerNotificationSystem = notificationSystem => {
      //console.log('_registerNotificationSystem', notificationSystem)
      if (this._notificationSystem) {
        // cleanups (should happen only in dev / HMR)
        this._notificationSystem.clearNotifications();

        this._notificationSystem = null;
        this.rejectNotificationSystem(new Error('notif reloaded!'));
        this.notificationSystem = new Promise((resolve, reject) => {
          this.resolveNotificationSystem = resolve;
          this.rejectNotificationSystem = reject;
        }); //this.notificationSystem.then(() => console.info('OMR notifications system ready ✅'))
      }

      if (!notificationSystem) return;
      this._notificationSystem = notificationSystem; // intentionally giving some room to let the app load

      setTimeout(() => {
        if (!this.resolveNotificationSystem) return;
        this.resolveNotificationSystem(this._notificationSystem);
        this.resolveNotificationSystem = null;
      }, 1000);
    };

    this.state.enqueueNotification = (options = {}) => {
      flag_count++; //console.log(`OMR enqueueNotification #${flag_count}`, options)

      let {
        level,
        title,
        message,
        children,
        position,
        auto_dismiss_delay_ms,
        uid = flag_count
      } = { ...DEFAULT_FLAG_SETTINGS,
        ...options
      };
      if (!title && !message && !children) title = 'OMR notification: ERROR: no title nor message nor children'; // normalize content

      children = /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactErrorBoundary.default, {
        name: `omr:flag:${uid}`,
        children: [title && /*#__PURE__*/(0, _jsxRuntime.jsx)("h4", {
          className: "notification-title",
          children: title
        }), message && /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
          className: "notification-message",
          children: message
        }), children]
      });
      position = FLAGS_POSITION_TO_3RD_PARTY[position] || position;
      this.notificationSystem.then(notificationSystem => notificationSystem.addNotification({
        uid,
        level,

        /*title, message,*/
        children,
        position,
        autoDismiss: auto_dismiss_delay_ms / 1000.
      }));
    };

    this.state.openBurgerMenu = () => {
      //console.log('openBurgerMenu')
      this.setState(state => ({
        isBurgerMenuOpen: true,
        isAboutOpen: false
      }));
    }; // called by react-burger-menu


    this.state.onUpdateBurgerMenu = state => {
      //console.log('onUpdateBurgerMenu', state)
      // Note:
      // 1. state is not immutable (shame on react-burger-menu) that's why we copy the value ASAP (or bug)
      const new_value = state.isOpen; // 2. when opening, it may be unneeded, causing an extra render

      if (new_value === this.state.isBurgerMenuOpen) return; // not 100% orthodox but ok

      this.setState({
        isBurgerMenuOpen: new_value
      });
    };

    this.state.toggleAbout = () => {
      this.setState(state => ({
        isAboutOpen: !state.isAboutOpen
      }));
    };

    this.state.goToScreenIndex = this.state.onScreenIndexChange = index => {
      this.setState(state => ({
        screenIndex: index
      }));
    };
  }

  render() {
    //console.log(`--- Provider ---`, JSON.parse(JSON.stringify(this.state)))
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(OhMyRPGUIContext.Provider, {
      value: this.state,
      children: this.props.children
    });
  }

}

var _default = ContextProvider;
exports.default = _default;
},{"react":"dmLA","@offirmo-private/react-error-boundary":"UTEF","react/jsx-runtime":"qEpl"}],"g2RQ":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var styles = {
  overlay: function overlay(isOpen) {
    return {
      position: 'fixed',
      zIndex: 1000,
      width: '100%',
      height: '100%',
      background: 'rgba(0, 0, 0, 0.3)',
      opacity: isOpen ? 1 : 0,
      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',
      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',
      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',
      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',
      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',
      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'
    };
  },
  menuWrap: function menuWrap(isOpen, width, right) {
    return {
      position: 'fixed',
      right: right ? 0 : 'inherit',
      zIndex: 1100,
      width: width,
      height: '100%',
      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',
      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',
      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',
      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',
      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',
      transition: 'all 0.5s'
    };
  },
  menu: function menu() {
    return {
      height: '100%',
      boxSizing: 'border-box',
      overflow: 'auto'
    };
  },
  itemList: function itemList() {
    return {
      height: '100%'
    };
  },
  item: function item() {
    return {
      display: 'block'
    };
  }
};
exports['default'] = styles;
module.exports = exports['default'];
},{}],"jE3m":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _get = function get(_x, _x2, _x3) {
  var _again = true;

  _function: while (_again) {
    var object = _x,
        property = _x2,
        receiver = _x3;
    _again = false;
    if (object === null) object = Function.prototype;
    var desc = Object.getOwnPropertyDescriptor(object, property);

    if (desc === undefined) {
      var parent = Object.getPrototypeOf(object);

      if (parent === null) {
        return undefined;
      } else {
        _x = parent;
        _x2 = property;
        _x3 = receiver;
        _again = true;
        desc = parent = undefined;
        continue _function;
      }
    } else if ('value' in desc) {
      return desc.value;
    } else {
      var getter = desc.get;

      if (getter === undefined) {
        return undefined;
      }

      return getter.call(receiver);
    }
  }
};

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== 'function' && superClass !== null) {
    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var BurgerIcon = function (_Component) {
  _inherits(BurgerIcon, _Component);

  function BurgerIcon(props) {
    _classCallCheck(this, BurgerIcon);

    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);

    this.state = {
      hover: false
    };
  }

  _createClass(BurgerIcon, [{
    key: 'getLineStyle',
    value: function getLineStyle(index) {
      return _extends({
        position: 'absolute',
        height: '20%',
        left: 0,
        right: 0,
        top: 20 * (index * 2) + '%',
        opacity: this.state.hover ? 0.6 : 1
      }, this.state.hover && this.props.styles.bmBurgerBarsHover);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      var icon = undefined;
      var buttonStyle = {
        position: 'absolute',
        left: 0,
        top: 0,
        zIndex: 1,
        width: '100%',
        height: '100%',
        margin: 0,
        padding: 0,
        border: 'none',
        fontSize: 0,
        background: 'transparent',
        cursor: 'pointer'
      };

      if (this.props.customIcon) {
        var extraProps = {
          className: ('bm-icon ' + (this.props.customIcon.props.className || '')).trim(),
          style: _extends({
            width: '100%',
            height: '100%'
          }, this.props.styles.bmIcon)
        };
        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);
      } else {
        icon = _react2['default'].createElement('span', null, [0, 1, 2].map(function (bar) {
          return _react2['default'].createElement('span', {
            key: bar,
            className: ('bm-burger-bars ' + _this.props.barClassName + ' ' + (_this.state.hover ? 'bm-burger-bars-hover' : '')).trim(),
            style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)
          });
        }));
      }

      return _react2['default'].createElement('div', {
        className: ('bm-burger-button ' + this.props.className).trim(),
        style: _extends({
          zIndex: 1000
        }, this.props.styles.bmBurgerButton)
      }, _react2['default'].createElement('button', {
        id: 'react-burger-menu-btn',
        onClick: this.props.onClick,
        onMouseOver: function () {
          _this.setState({
            hover: true
          });

          if (_this.props.onIconHoverChange) {
            _this.props.onIconHoverChange({
              isMouseIn: true
            });
          }
        },
        onMouseOut: function () {
          _this.setState({
            hover: false
          });

          if (_this.props.onIconHoverChange) {
            _this.props.onIconHoverChange({
              isMouseIn: false
            });
          }
        },
        style: buttonStyle
      }, 'Open Menu'), icon);
    }
  }]);

  return BurgerIcon;
}(_react.Component);

exports['default'] = BurgerIcon;
BurgerIcon.propTypes = {
  barClassName: _propTypes2['default'].string,
  customIcon: _propTypes2['default'].element,
  styles: _propTypes2['default'].object
};
BurgerIcon.defaultProps = {
  barClassName: '',
  className: '',
  styles: {}
};
module.exports = exports['default'];
},{"react":"dmLA","prop-types":"X9bF"}],"u2Bw":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _get = function get(_x, _x2, _x3) {
  var _again = true;

  _function: while (_again) {
    var object = _x,
        property = _x2,
        receiver = _x3;
    _again = false;
    if (object === null) object = Function.prototype;
    var desc = Object.getOwnPropertyDescriptor(object, property);

    if (desc === undefined) {
      var parent = Object.getPrototypeOf(object);

      if (parent === null) {
        return undefined;
      } else {
        _x = parent;
        _x2 = property;
        _x3 = receiver;
        _again = true;
        desc = parent = undefined;
        continue _function;
      }
    } else if ('value' in desc) {
      return desc.value;
    } else {
      var getter = desc.get;

      if (getter === undefined) {
        return undefined;
      }

      return getter.call(receiver);
    }
  }
};

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== 'function' && superClass !== null) {
    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var CrossIcon = function (_Component) {
  _inherits(CrossIcon, _Component);

  function CrossIcon() {
    _classCallCheck(this, CrossIcon);

    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(CrossIcon, [{
    key: 'getCrossStyle',
    value: function getCrossStyle(type) {
      return {
        position: 'absolute',
        width: 3,
        height: 14,
        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      var icon;
      var buttonWrapperStyle = {
        position: 'absolute',
        width: 24,
        height: 24,
        right: 8,
        top: 8
      };
      var buttonStyle = {
        position: 'absolute',
        left: 0,
        top: 0,
        zIndex: 1,
        width: '100%',
        height: '100%',
        margin: 0,
        padding: 0,
        border: 'none',
        fontSize: 0,
        background: 'transparent',
        cursor: 'pointer'
      };

      if (this.props.customIcon) {
        var extraProps = {
          className: ('bm-cross ' + (this.props.customIcon.props.className || '')).trim(),
          style: _extends({
            width: '100%',
            height: '100%'
          }, this.props.styles.bmCross)
        };
        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);
      } else {
        icon = _react2['default'].createElement('span', {
          style: {
            position: 'absolute',
            top: '6px',
            right: '14px'
          }
        }, ['before', 'after'].map(function (type, i) {
          return _react2['default'].createElement('span', {
            key: i,
            className: ('bm-cross ' + _this.props.crossClassName).trim(),
            style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)
          });
        }));
      }

      return _react2['default'].createElement('div', {
        className: ('bm-cross-button ' + this.props.className).trim(),
        style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)
      }, _react2['default'].createElement('button', {
        id: 'react-burger-cross-btn',
        onClick: this.props.onClick,
        style: buttonStyle,
        tabIndex: -1
      }, 'Close Menu'), icon);
    }
  }]);

  return CrossIcon;
}(_react.Component);

exports['default'] = CrossIcon;
CrossIcon.propTypes = {
  crossClassName: _propTypes2['default'].string,
  customIcon: _propTypes2['default'].element,
  styles: _propTypes2['default'].object
};
CrossIcon.defaultProps = {
  crossClassName: '',
  className: '',
  styles: {}
};
module.exports = exports['default'];
},{"react":"dmLA","prop-types":"X9bF"}],"evcu":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _get = function get(_x3, _x4, _x5) {
  var _again = true;

  _function: while (_again) {
    var object = _x3,
        property = _x4,
        receiver = _x5;
    _again = false;
    if (object === null) object = Function.prototype;
    var desc = Object.getOwnPropertyDescriptor(object, property);

    if (desc === undefined) {
      var parent = Object.getPrototypeOf(object);

      if (parent === null) {
        return undefined;
      } else {
        _x3 = parent;
        _x4 = property;
        _x5 = receiver;
        _again = true;
        desc = parent = undefined;
        continue _function;
      }
    } else if ('value' in desc) {
      return desc.value;
    } else {
      var getter = desc.get;

      if (getter === undefined) {
        return undefined;
      }

      return getter.call(receiver);
    }
  }
};

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== 'function' && superClass !== null) {
    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _baseStyles = require('./baseStyles');

var _baseStyles2 = _interopRequireDefault(_baseStyles);

var _BurgerIcon = require('./BurgerIcon');

var _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);

var _CrossIcon = require('./CrossIcon');

var _CrossIcon2 = _interopRequireDefault(_CrossIcon);

exports['default'] = function (styles) {
  var Menu = function (_Component) {
    _inherits(Menu, _Component);

    function Menu(props) {
      _classCallCheck(this, Menu);

      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);

      this.state = {
        isOpen: false
      };

      if (!styles) {
        throw new Error('No styles supplied');
      }
    }

    _createClass(Menu, [{
      key: 'focusOnFirstMenuItem',
      value: function focusOnFirstMenuItem() {
        var firstItem = Array.from(document.getElementsByClassName('bm-item')).shift();

        if (firstItem) {
          firstItem.focus();
        }
      }
    }, {
      key: 'focusOnLastMenuItem',
      value: function focusOnLastMenuItem() {
        var lastItem = Array.from(document.getElementsByClassName('bm-item')).pop();

        if (lastItem) {
          lastItem.focus();
        }
      }
    }, {
      key: 'focusOnCrossButton',
      value: function focusOnCrossButton() {
        var crossButton = document.getElementById('react-burger-cross-btn');

        if (crossButton) {
          crossButton.focus();
        }
      }
    }, {
      key: 'focusOnMenuButton',
      value: function focusOnMenuButton() {
        var menuButton = document.getElementById('react-burger-menu-btn');

        if (menuButton) {
          menuButton.focus();
        }
      }
    }, {
      key: 'focusOnMenuItem',
      value: function focusOnMenuItem(siblingType) {
        if (document.activeElement.className.includes('bm-item')) {
          var sibling = document.activeElement[siblingType];

          if (sibling) {
            sibling.focus();
          } else {
            this.focusOnCrossButton();
          }
        } else {
          if (siblingType === 'previousElementSibling') {
            this.focusOnLastMenuItem();
          } else {
            this.focusOnFirstMenuItem();
          }
        }
      }
    }, {
      key: 'focusOnNextMenuItem',
      value: function focusOnNextMenuItem() {
        this.focusOnMenuItem('nextElementSibling');
      }
    }, {
      key: 'focusOnPreviousMenuItem',
      value: function focusOnPreviousMenuItem() {
        this.focusOnMenuItem('previousElementSibling');
      }
    }, {
      key: 'toggleMenu',
      value: function toggleMenu() {
        var _this = this;

        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        var isOpen = options.isOpen;
        var noStateChange = options.noStateChange;
        var focusOnLastItem = options.focusOnLastItem;
        var newState = {
          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen
        };
        this.applyWrapperStyles();
        this.setState(newState, function () {
          !noStateChange && _this.props.onStateChange(newState);

          if (!_this.props.disableAutoFocus) {
            // For accessibility reasons, ensures that when we toggle open,
            // we focus the first or last menu item according to given parameter.
            if (newState.isOpen) {
              focusOnLastItem ? _this.focusOnLastMenuItem() : _this.focusOnFirstMenuItem();
            } else {
              if (document.activeElement) {
                document.activeElement.blur();
              } else {
                document.body.blur(); // Needed for IE
              }
            }
          } // Timeout ensures wrappers are cleared after animation finishes.


          _this.timeoutId && clearTimeout(_this.timeoutId);
          _this.timeoutId = setTimeout(function () {
            _this.timeoutId = null;

            if (!newState.isOpen) {
              _this.applyWrapperStyles(false);
            }
          }, 500);
        });
      }
    }, {
      key: 'open',
      value: function open() {
        if (typeof this.props.onOpen === 'function') {
          this.props.onOpen();
        } else {
          this.toggleMenu();
        }
      }
    }, {
      key: 'close',
      value: function close() {
        if (typeof this.props.onClose === 'function') {
          this.props.onClose();
        } else {
          this.toggleMenu();
        }
      }
    }, {
      key: 'overlayClick',
      value: function overlayClick() {
        if (this.props.disableOverlayClick === true || typeof this.props.disableOverlayClick === 'function' && this.props.disableOverlayClick()) {
          return;
        } else {
          this.close();
        }
      } // Applies component-specific styles to external wrapper elements.

    }, {
      key: 'applyWrapperStyles',
      value: function applyWrapperStyles() {
        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

        var applyClass = function applyClass(el, className) {
          return el.classList[set ? 'add' : 'remove'](className);
        };

        if (this.props.htmlClassName) {
          applyClass(document.querySelector('html'), this.props.htmlClassName);
        }

        if (this.props.bodyClassName) {
          applyClass(document.querySelector('body'), this.props.bodyClassName);
        }

        if (styles.pageWrap && this.props.pageWrapId) {
          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);
        }

        if (styles.outerContainer && this.props.outerContainerId) {
          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);
        }
      } // Sets or unsets styles on DOM elements outside the menu component.
      // This is necessary for correct page interaction with some of the menus.
      // Throws and returns if the required external elements don't exist,
      // which means any external page animations won't be applied.

    }, {
      key: 'handleExternalWrapper',
      value: function handleExternalWrapper(id, wrapperStyles, set) {
        var wrapper = document.getElementById(id);

        if (!wrapper) {
          console.error("Element with ID '" + id + "' not found");
          return;
        }

        var builtStyles = this.getStyle(wrapperStyles);

        for (var prop in builtStyles) {
          if (builtStyles.hasOwnProperty(prop)) {
            wrapper.style[prop] = set ? builtStyles[prop] : '';
          }
        } // Prevent any horizontal scroll.
        // Only set overflow-x as an inline style if htmlClassName or
        // bodyClassName is not passed in. Otherwise, it is up to the caller to
        // decide if they want to set the overflow style in CSS using the custom
        // class names.


        var applyOverflow = function applyOverflow(el) {
          return el.style['overflow-x'] = set ? 'hidden' : '';
        };

        if (!this.props.htmlClassName) {
          applyOverflow(document.querySelector('html'));
        }

        if (!this.props.bodyClassName) {
          applyOverflow(document.querySelector('body'));
        }
      } // Builds styles incrementally for a given element.

    }, {
      key: 'getStyles',
      value: function getStyles(el, index, inline) {
        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase()); // Set base styles.

        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {}; // Add animation-specific styles.

        if (styles[el]) {
          output = _extends({}, output, this.getStyle(styles[el], index + 1));
        } // Add custom styles.


        if (this.props.styles[propName]) {
          output = _extends({}, output, this.props.styles[propName]);
        } // Add element inline styles.


        if (inline) {
          output = _extends({}, output, inline);
        } // Remove transition if required
        // (useful if rendering open initially).


        if (this.props.noTransition) {
          delete output.transition;
        }

        return output;
      }
    }, {
      key: 'getStyle',
      value: function getStyle(style, index) {
        var width = this.props.width;
        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;
        return style(this.state.isOpen, formattedWidth, this.props.right, index);
      }
    }, {
      key: 'listenForKeyDowns',
      value: function listenForKeyDowns(e) {
        e = e || window.event;
        var ARROW_DOWN = 'ArrowDown';
        var ARROW_UP = 'ArrowUp';
        var ENTER = 'Enter';
        var ESCAPE = 'Escape';
        var SPACE = ' ';
        var HOME = 'Home';
        var END = 'End';

        if (this.state.isOpen) {
          switch (e.key) {
            case ESCAPE:
              // Close on ESC, unless disabled
              if (!this.props.disableCloseOnEsc) {
                this.close();
                this.focusOnMenuButton();
              }

              break;

            case ARROW_DOWN:
              this.focusOnNextMenuItem();
              break;

            case ARROW_UP:
              this.focusOnPreviousMenuItem();
              break;

            case HOME:
              this.focusOnFirstMenuItem();
              break;

            case END:
              this.focusOnLastMenuItem();
              break;
          }
        } else {
          // Key downs came from menu button
          if (e.target === document.getElementById('react-burger-menu-btn')) {
            switch (e.key) {
              case ARROW_DOWN:
              case ENTER:
              case SPACE:
                // If down arrow, space or enter, open menu and focus on first menuitem
                this.toggleMenu();
                break;

              case ARROW_UP:
                // If arrow up, open menu and focus on last menuitem
                this.toggleMenu({
                  focusOnLastItem: true
                });
                break;
            }
          }
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.onKeyDown = this.props.customOnKeyDown ? this.props.customOnKeyDown : this.listenForKeyDowns.bind(this); // Bind keydown handlers (or custom function if supplied).

        window.addEventListener('keydown', this.onKeyDown); // Allow initial open state to be set by props.

        if (this.props.isOpen) {
          this.toggleMenu({
            isOpen: true,
            noStateChange: true
          });
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        window.removeEventListener('keydown', this.onKeyDown);
        this.applyWrapperStyles(false); // Avoid potentially attempting to update an unmounted component.

        this.timeoutId && clearTimeout(this.timeoutId);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        var _this2 = this;

        var wasToggled = typeof this.props.isOpen !== 'undefined' && this.props.isOpen !== this.state.isOpen && this.props.isOpen !== prevProps.isOpen;

        if (wasToggled) {
          this.toggleMenu(); // Toggling changes SVG animation requirements, so we defer these until the next componentDidUpdate

          return;
        }

        if (styles.svg) {
          (function () {
            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');

            var path = styles.svg.lib(morphShape).select('path');

            if (_this2.state.isOpen) {
              // Animate SVG path.
              styles.svg.animate(path);
            } else {
              // Reset path (timeout ensures animation happens off screen).
              setTimeout(function () {
                path.attr('d', styles.svg.pathInitial);
              }, 300);
            }
          })();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this3 = this;

        return _react2['default'].createElement('div', null, !this.props.noOverlay && _react2['default'].createElement('div', {
          className: ('bm-overlay ' + this.props.overlayClassName).trim(),
          onClick: function () {
            return _this3.overlayClick();
          },
          style: this.getStyles('overlay')
        }), this.props.customBurgerIcon !== false && _react2['default'].createElement('div', {
          style: this.getStyles('burgerIcon')
        }, _react2['default'].createElement(_BurgerIcon2['default'], {
          onClick: function () {
            return _this3.open();
          },
          styles: this.props.styles,
          customIcon: this.props.customBurgerIcon,
          className: this.props.burgerButtonClassName,
          barClassName: this.props.burgerBarClassName,
          onIconStateChange: this.props.onIconStateChange
        })), _react2['default'].createElement('div', {
          id: this.props.id,
          className: ('bm-menu-wrap ' + this.props.className).trim(),
          style: this.getStyles('menuWrap'),
          'aria-hidden': !this.state.isOpen
        }, styles.svg && _react2['default'].createElement('div', {
          className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),
          style: this.getStyles('morphShape')
        }, _react2['default'].createElement('svg', {
          width: '100%',
          height: '100%',
          viewBox: '0 0 100 800',
          preserveAspectRatio: 'none'
        }, _react2['default'].createElement('path', {
          d: styles.svg.pathInitial
        }))), _react2['default'].createElement('div', {
          className: ('bm-menu ' + this.props.menuClassName).trim(),
          style: this.getStyles('menu')
        }, _react2['default'].createElement(this.props.itemListElement, {
          className: ('bm-item-list ' + this.props.itemListClassName).trim(),
          style: this.getStyles('itemList')
        }, _react2['default'].Children.map(this.props.children, function (item, index) {
          if (item) {
            var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {
              return !!className;
            }).join(' ');
            var extraProps = {
              key: index,
              className: classList,
              style: _this3.getStyles('item', index, item.props.style),
              tabIndex: -1
            };
            return _react2['default'].cloneElement(item, extraProps);
          }
        }))), this.props.customCrossIcon !== false && _react2['default'].createElement('div', {
          style: this.getStyles('closeButton')
        }, _react2['default'].createElement(_CrossIcon2['default'], {
          onClick: function () {
            return _this3.close();
          },
          styles: this.props.styles,
          customIcon: this.props.customCrossIcon,
          className: this.props.crossButtonClassName,
          crossClassName: this.props.crossClassName
        }))));
      }
    }]);

    return Menu;
  }(_react.Component);

  Menu.propTypes = {
    bodyClassName: _propTypes2['default'].string,
    burgerBarClassName: _propTypes2['default'].string,
    burgerButtonClassName: _propTypes2['default'].string,
    className: _propTypes2['default'].string,
    crossButtonClassName: _propTypes2['default'].string,
    crossClassName: _propTypes2['default'].string,
    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),
    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),
    customOnKeyDown: _propTypes2['default'].func,
    disableAutoFocus: _propTypes2['default'].bool,
    disableCloseOnEsc: _propTypes2['default'].bool,
    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),
    htmlClassName: _propTypes2['default'].string,
    id: _propTypes2['default'].string,
    isOpen: _propTypes2['default'].bool,
    itemClassName: _propTypes2['default'].string,
    itemListClassName: _propTypes2['default'].string,
    itemListElement: _propTypes2['default'].oneOf(['div', 'nav']),
    menuClassName: _propTypes2['default'].string,
    morphShapeClassName: _propTypes2['default'].string,
    noOverlay: _propTypes2['default'].bool,
    noTransition: _propTypes2['default'].bool,
    onClose: _propTypes2['default'].func,
    onIconHoverChange: _propTypes2['default'].func,
    onOpen: _propTypes2['default'].func,
    onStateChange: _propTypes2['default'].func,
    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,
    overlayClassName: _propTypes2['default'].string,
    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,
    right: _propTypes2['default'].bool,
    styles: _propTypes2['default'].object,
    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])
  };
  Menu.defaultProps = {
    bodyClassName: '',
    burgerBarClassName: '',
    burgerButtonClassName: '',
    className: '',
    crossButtonClassName: '',
    crossClassName: '',
    disableAutoFocus: false,
    disableCloseOnEsc: false,
    htmlClassName: '',
    id: '',
    itemClassName: '',
    itemListClassName: '',
    menuClassName: '',
    morphShapeClassName: '',
    noOverlay: false,
    noTransition: false,
    onStateChange: function onStateChange() {},
    outerContainerId: '',
    overlayClassName: '',
    pageWrapId: '',
    styles: {},
    width: 300,
    onIconHoverChange: function onIconHoverChange() {},
    itemListElement: 'nav'
  };
  return Menu;
};

module.exports = exports['default'];
},{"react":"dmLA","react-dom":"kUqu","prop-types":"X9bF","./baseStyles":"g2RQ","./BurgerIcon":"jE3m","./CrossIcon":"u2Bw"}],"KGNC":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    'default': obj
  };
}

var _menuFactory = require('../menuFactory');

var _menuFactory2 = _interopRequireDefault(_menuFactory);

var styles = {
  pageWrap: function pageWrap(isOpen, width) {
    return {
      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',
      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',
      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',
      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',
      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',
      transformOrigin: '100%',
      transformStyle: 'preserve-3d',
      transition: 'all 0.5s'
    };
  },
  outerContainer: function outerContainer() {
    return {
      perspective: '1500px'
    };
  }
};
exports['default'] = (0, _menuFactory2['default'])(styles);
module.exports = exports['default'];
},{"../menuFactory":"evcu"}],"zo8d":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

var _scaleDown = _interopRequireDefault(require("react-burger-menu/lib/menus/scaleDown"));

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// technical elements needed by burger-menu scale down
// https://github.com/negomi/react-burger-menu#properties
const PAGE_WRAP_ID = 'oh-my-rpg-ui__page-wrap';
const OUTER_CONTAINER_ID = 'oh-my-rpg-ui__outer-container';
const BurgerMenuWrapperViewM = /*#__PURE__*/React.memo(function BurgerMenuWrapperView({
  isBurgerMenuOpen,
  onUpdateBurgerMenu,
  mainContent,
  logo,
  burgerPanelContent
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 [OMR]BurgerMenuWrapperView');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    id: OUTER_CONTAINER_ID,
    className: "o\u22C4top-container",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_scaleDown.default, {
      isOpen: isBurgerMenuOpen,
      pageWrapId: PAGE_WRAP_ID,
      outerContainerId: OUTER_CONTAINER_ID,
      onStateChange: onUpdateBurgerMenu,
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactErrorBoundary.default, {
        name: 'omr:burger-menu:menu',
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "omr-auto-logo",
          children: logo
        }), isBurgerMenuOpen && burgerPanelContent]
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      id: PAGE_WRAP_ID,
      className: "o\u22C4top-container",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: 'omr:burger-menu:main',
        children: mainContent
      })
    })]
  });
});
var _default = BurgerMenuWrapperViewM;
exports.default = _default;
},{"react":"dmLA","memoize-one":"lvkj","react-burger-menu/lib/menus/scaleDown":"KGNC","@offirmo-private/react-error-boundary":"UTEF","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"tmVr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _stateContext = require("../state-context");

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BurgerMenuWrapper({
  mainContent,
  logo,
  burgerPanelContent
}) {
  //console.log('🔄 [OMR]BurgerMenuWrapper')
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_stateContext.OhMyRPGUIContext.Consumer, {
    children: ({
      isBurgerMenuOpen,
      onUpdateBurgerMenu
    }) => {
      const props = {
        mainContent,
        logo,
        burgerPanelContent,
        isBurgerMenuOpen,
        onUpdateBurgerMenu
      };
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, { ...props
      });
    }
  });
}

var _default = BurgerMenuWrapper;
exports.default = _default;
},{"react":"dmLA","../state-context":"L8Fy","./component":"zo8d","react/jsx-runtime":"qEpl"}],"WvsP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"tmVr"}],"rNNo":[function(require,module,exports) {
var CONSTANTS = {

  // Positions
  positions: {
    tl: 'tl',
    tr: 'tr',
    tc: 'tc',
    bl: 'bl',
    br: 'br',
    bc: 'bc'
  },

  // Levels
  levels: {
    success: 'success',
    error: 'error',
    warning: 'warning',
    info: 'info'
  },

  // Notification defaults
  notification: {
    title: null,
    message: null,
    level: null,
    position: 'tr',
    autoDismiss: 5,
    dismissible: 'both',
    action: null
  }
};


module.exports = CONSTANTS;

},{}],"gWuf":[function(require,module,exports) {
var Helpers = {
  Timer: function(callback, delay) {
    var timerId;
    var start;
    var remaining = delay;

    this.pause = function() {
      clearTimeout(timerId);
      remaining -= new Date() - start;
    };

    this.resume = function() {
      start = new Date();
      clearTimeout(timerId);
      timerId = setTimeout(callback, remaining);
    };

    this.clear = function() {
      clearTimeout(timerId);
    };

    this.resume();
  }
};

module.exports = Helpers;

},{}],"ItYl":[function(require,module,exports) {
var React = require('react');
var PropTypes = require('prop-types');
var ReactDOM = require('react-dom');
var Constants = require('./constants');
var Helpers = require('./helpers');
var merge = require('object-assign');

/* From Modernizr */
var whichTransitionEvent = function() {
  var el = document.createElement('fakeelement');
  var transition;
  var transitions = {
    transition: 'transitionend',
    OTransition: 'oTransitionEnd',
    MozTransition: 'transitionend',
    WebkitTransition: 'webkitTransitionEnd'
  };

  Object.keys(transitions).forEach(function(transitionKey) {
    if (el.style[transitionKey] !== undefined) {
      transition = transitions[transitionKey];
    }
  });

  return transition;
};

function _allowHTML(string) {
  return { __html: string };
}

class NotificationItem extends React.Component {
  constructor(props) {
    super(props);
    this._notificationTimer = null;
    this._height = 0;
    this._noAnimation = null;
    this._isMounted = false;
    this._removeCount = 0;

    this.state = {
      visible: undefined,
      removed: false
    };

    const getStyles = props.getStyles;
    const level = props.notification.level;
    const dismissible = props.notification.dismissible;

    this._noAnimation = props.noAnimation;

    this._styles = {
      notification: getStyles.byElement('notification')(level),
      title: getStyles.byElement('title')(level),
      dismiss: getStyles.byElement('dismiss')(level),
      messageWrapper: getStyles.byElement('messageWrapper')(level),
      actionWrapper: getStyles.byElement('actionWrapper')(level),
      action: getStyles.byElement('action')(level)
    };

    if (!dismissible || dismissible === 'none' || dismissible === 'button') {
      this._styles.notification.cursor = 'default';
    }

    this._getCssPropertyByPosition = this._getCssPropertyByPosition.bind(this);
    this._defaultAction = this._defaultAction.bind(this);
    this._hideNotification = this._hideNotification.bind(this);
    this._removeNotification = this._removeNotification.bind(this);
    this._dismiss = this._dismiss.bind(this);
    this._showNotification = this._showNotification.bind(this);
    this._onTransitionEnd = this._onTransitionEnd.bind(this);
    this._handleMouseEnter = this._handleMouseEnter.bind(this);
    this._handleMouseLeave = this._handleMouseLeave.bind(this);
    this._handleNotificationClick = this._handleNotificationClick.bind(this);
  }

  _getCssPropertyByPosition() {
    var position = this.props.notification.position;
    var css = {};

    switch (position) {
    case Constants.positions.tl:
    case Constants.positions.bl:
      css = {
        property: 'left',
        value: -200
      };
      break;

    case Constants.positions.tr:
    case Constants.positions.br:
      css = {
        property: 'right',
        value: -200
      };
      break;

    case Constants.positions.tc:
      css = {
        property: 'top',
        value: -100
      };
      break;

    case Constants.positions.bc:
      css = {
        property: 'bottom',
        value: -100
      };
      break;

    default:
    }

    return css;
  }

  _defaultAction(event) {
    var notification = this.props.notification;

    event.preventDefault();
    this._hideNotification();
    if (typeof notification.action.callback === 'function') {
      notification.action.callback();
    }
  }

  _hideNotification() {
    if (this._notificationTimer) {
      this._notificationTimer.clear();
    }

    if (this._isMounted) {
      this.setState({
        visible: false,
        removed: true
      });
    }

    if (this._noAnimation) {
      this._removeNotification();
    }
  }

  _removeNotification() {
    this.props.onRemove(this.props.notification.uid);
  }

  _dismiss() {
    if (!this.props.notification.dismissible) {
      return;
    }

    this._hideNotification();
  }

  _showNotification() {
    setTimeout(() => {
      if (this._isMounted) {
        this.setState({
          visible: true
        });
      }
    }, 50);
  }

  _onTransitionEnd() {
    if (this._removeCount > 0) return;
    if (this.state.removed) {
      this._removeCount += 1;
      this._removeNotification();
    }
  }

  componentDidMount() {
    var self = this;
    var transitionEvent = whichTransitionEvent();
    var notification = this.props.notification;
    var element = ReactDOM.findDOMNode(this);

    this._height = element.offsetHeight;

    this._isMounted = true;

    // Watch for transition end
    if (!this._noAnimation) {
      if (transitionEvent) {
        element.addEventListener(transitionEvent, this._onTransitionEnd);
      } else {
        this._noAnimation = true;
      }
    }

    if (notification.autoDismiss) {
      this._notificationTimer = new Helpers.Timer(function() {
        self._hideNotification();
      }, notification.autoDismiss * 1000);
    }

    this._showNotification();
  }

  _handleMouseEnter() {
    var notification = this.props.notification;
    if (notification.autoDismiss) {
      this._notificationTimer.pause();
    }
  }

  _handleMouseLeave() {
    var notification = this.props.notification;
    if (notification.autoDismiss) {
      this._notificationTimer.resume();
    }
  }

  _handleNotificationClick() {
    var dismissible = this.props.notification.dismissible;
    if (
      dismissible === 'both' ||
      dismissible === 'click' ||
      dismissible === true
    ) {
      this._dismiss();
    }
  }

  componentWillUnmount() {
    var element = ReactDOM.findDOMNode(this);
    var transitionEvent = whichTransitionEvent();
    element.removeEventListener(transitionEvent, this._onTransitionEnd);
    this._isMounted = false;
  }

  render() {
    var notification = this.props.notification;
    var className = 'notification notification-' + notification.level;
    var notificationStyle = merge({}, this._styles.notification);
    var cssByPos = this._getCssPropertyByPosition();
    var dismiss = null;
    var actionButton = null;
    var title = null;
    var message = null;

    if (this.props.notification.className) {
      className += ' ' + this.props.notification.className;
    }

    if (this.state.visible) {
      className += ' notification-visible';
    } else if (this.state.visible === false) {
      className += ' notification-hidden';
    }

    if (notification.dismissible === 'none') {
      className += ' notification-not-dismissible';
    }

    if (this.props.getStyles.overrideStyle) {
      if (!this.state.visible && !this.state.removed) {
        notificationStyle[cssByPos.property] = cssByPos.value;
      }

      if (this.state.visible && !this.state.removed) {
        notificationStyle.height = this._height;
        notificationStyle[cssByPos.property] = 0;
      }

      if (this.state.removed) {
        notificationStyle.overlay = 'hidden';
        notificationStyle.height = 0;
        notificationStyle.marginTop = 0;
        notificationStyle.paddingTop = 0;
        notificationStyle.paddingBottom = 0;
      }

      if (this._styles.notification.isVisible && this._styles.notification.isHidden) {
        notificationStyle.opacity = this.state.visible
          ? this._styles.notification.isVisible.opacity
          : this._styles.notification.isHidden.opacity;
      }
    }

    if (notification.title) {
      title = (
        React.createElement("h4", {className: "notification-title", style:  this._styles.title}, 
          notification.title
        )
      );
    }

    if (notification.message) {
      if (this.props.allowHTML) {
        message = (
          React.createElement("div", {
            className: "notification-message", 
            style:  this._styles.messageWrapper, 
            dangerouslySetInnerHTML:  _allowHTML(notification.message) }
          )
        );
      } else {
        message = (
          React.createElement("div", {
            className: "notification-message", 
            style:  this._styles.messageWrapper
          }, 
            notification.message
          )
        );
      }
    }

    if (
      notification.dismissible === 'both' ||
      notification.dismissible === 'button' ||
      notification.dismissible === true
    ) {
      dismiss = (
        React.createElement("span", {
          className: "notification-dismiss", 
          onClick:  this._dismiss, 
          style:  this._styles.dismiss, 
          "aria-hidden":  true 
        }, 
          "×"
        )
      );
    }

    if (notification.action) {
      actionButton = (
        React.createElement("div", {
          className: "notification-action-wrapper", 
          style:  this._styles.actionWrapper
        }, 
          React.createElement("button", {
            className: "notification-action-button", 
            onClick:  this._defaultAction, 
            style:  this._styles.action
          }, 
            notification.action.label
          )
        )
      );
    }

    if (notification.children) {
      actionButton = notification.children;
    }

    return (
      React.createElement("div", {
        className:  className, 
        onClick:  this._handleNotificationClick, 
        onMouseEnter:  this._handleMouseEnter, 
        onMouseLeave:  this._handleMouseLeave, 
        style:  notificationStyle, 
        role: "alert"
      }, 
        title, 
        message, 
        dismiss, 
        actionButton
      )
    );
  }
}

NotificationItem.propTypes = {
  notification: PropTypes.object,
  getStyles: PropTypes.object,
  onRemove: PropTypes.func,
  allowHTML: PropTypes.bool,
  noAnimation: PropTypes.bool,
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element])
};

NotificationItem.defaultProps = {
  noAnimation: false,
  onRemove: function() {},
  allowHTML: false
};

module.exports = NotificationItem;

},{"react":"dmLA","prop-types":"X9bF","react-dom":"kUqu","./constants":"rNNo","./helpers":"gWuf","object-assign":"yheg"}],"nMoo":[function(require,module,exports) {
var React = require('react');
var PropTypes = require('prop-types');
var NotificationItem = require('./NotificationItem');
var Constants = require('./constants');

class NotificationContainer extends React.Component {
  constructor(props) {
    super(props);
    // Fix position if width is overrided
    this._style = props.getStyles.container(props.position);

    if (
      props.getStyles.overrideWidth &&
      (props.position === Constants.positions.tc ||
        props.position === Constants.positions.bc)
    ) {
      this._style.marginLeft = -(props.getStyles.overrideWidth / 2);
    }
  }

  render() {
    var notifications;

    if (
      [
        Constants.positions.bl,
        Constants.positions.br,
        Constants.positions.bc
      ].indexOf(this.props.position) > -1
    ) {
      this.props.notifications.reverse();
    }

    notifications = this.props.notifications.map((notification) => {
      return (
        React.createElement(NotificationItem, {
          ref:  'notification-' + notification.uid, 
          key:  notification.uid, 
          notification:  notification, 
          getStyles:  this.props.getStyles, 
          onRemove:  this.props.onRemove, 
          noAnimation:  this.props.noAnimation, 
          allowHTML:  this.props.allowHTML, 
          children:  this.props.children}
        )
      );
    });

    return (
      React.createElement("div", {
        className:  'notifications-' + this.props.position, 
        style:  this._style
      }, 
        notifications
      )
    );
  }
}

NotificationContainer.propTypes = {
  position: PropTypes.string.isRequired,
  notifications: PropTypes.array.isRequired,
  getStyles: PropTypes.object,
  onRemove: PropTypes.func,
  noAnimation: PropTypes.bool,
  allowHTML: PropTypes.bool,
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element])
};

module.exports = NotificationContainer;

},{"react":"dmLA","prop-types":"X9bF","./NotificationItem":"ItYl","./constants":"rNNo"}],"GeKE":[function(require,module,exports) {
// Used for calculations
var defaultWidth = 320;
var defaultColors = {
  success: {
    rgb: '94, 164, 0',
    hex: '#5ea400'
  },
  error: {
    rgb: '236, 61, 61',
    hex: '#ec3d3d'
  },
  warning: {
    rgb: '235, 173, 23',
    hex: '#ebad1a'
  },
  info: {
    rgb: '54, 156, 199',
    hex: '#369cc7'
  }
};
var defaultShadowOpacity = '0.9';

var STYLES = {

  Wrapper: {},
  Containers: {
    DefaultStyle: {
      fontFamily: 'inherit',
      position: 'fixed',
      width: defaultWidth,
      padding: '0 10px 10px 10px',
      zIndex: 9998,
      WebkitBoxSizing: 'border-box',
      MozBoxSizing: 'border-box',
      boxSizing: 'border-box',
      height: 'auto'
    },

    tl: {
      top: '0px',
      bottom: 'auto',
      left: '0px',
      right: 'auto'
    },

    tr: {
      top: '0px',
      bottom: 'auto',
      left: 'auto',
      right: '0px'
    },

    tc: {
      top: '0px',
      bottom: 'auto',
      margin: '0 auto',
      left: '50%',
      marginLeft: -(defaultWidth / 2)
    },

    bl: {
      top: 'auto',
      bottom: '0px',
      left: '0px',
      right: 'auto'
    },

    br: {
      top: 'auto',
      bottom: '0px',
      left: 'auto',
      right: '0px'
    },

    bc: {
      top: 'auto',
      bottom: '0px',
      margin: '0 auto',
      left: '50%',
      marginLeft: -(defaultWidth / 2)
    }

  },

  NotificationItem: {
    DefaultStyle: {
      position: 'relative',
      width: '100%',
      cursor: 'pointer',
      borderRadius: '2px',
      fontSize: '13px',
      margin: '10px 0 0',
      padding: '10px',
      display: 'block',
      WebkitBoxSizing: 'border-box',
      MozBoxSizing: 'border-box',
      boxSizing: 'border-box',
      opacity: 0,
      transition: '0.3s ease-in-out',
      WebkitTransform: 'translate3d(0, 0, 0)',
      transform: 'translate3d(0, 0, 0)',
      willChange: 'transform, opacity',

      isHidden: {
        opacity: 0
      },

      isVisible: {
        opacity: 1
      }
    },

    success: {
      borderTop: '2px solid ' + defaultColors.success.hex,
      backgroundColor: '#f0f5ea',
      color: '#4b583a',
      WebkitBoxShadow: '0 0 1px rgba(' + defaultColors.success.rgb + ',' + defaultShadowOpacity + ')',
      MozBoxShadow: '0 0 1px rgba(' + defaultColors.success.rgb + ',' + defaultShadowOpacity + ')',
      boxShadow: '0 0 1px rgba(' + defaultColors.success.rgb + ',' + defaultShadowOpacity + ')'
    },

    error: {
      borderTop: '2px solid ' + defaultColors.error.hex,
      backgroundColor: '#f4e9e9',
      color: '#412f2f',
      WebkitBoxShadow: '0 0 1px rgba(' + defaultColors.error.rgb + ',' + defaultShadowOpacity + ')',
      MozBoxShadow: '0 0 1px rgba(' + defaultColors.error.rgb + ',' + defaultShadowOpacity + ')',
      boxShadow: '0 0 1px rgba(' + defaultColors.error.rgb + ',' + defaultShadowOpacity + ')'
    },

    warning: {
      borderTop: '2px solid ' + defaultColors.warning.hex,
      backgroundColor: '#f9f6f0',
      color: '#5a5343',
      WebkitBoxShadow: '0 0 1px rgba(' + defaultColors.warning.rgb + ',' + defaultShadowOpacity + ')',
      MozBoxShadow: '0 0 1px rgba(' + defaultColors.warning.rgb + ',' + defaultShadowOpacity + ')',
      boxShadow: '0 0 1px rgba(' + defaultColors.warning.rgb + ',' + defaultShadowOpacity + ')'
    },

    info: {
      borderTop: '2px solid ' + defaultColors.info.hex,
      backgroundColor: '#e8f0f4',
      color: '#41555d',
      WebkitBoxShadow: '0 0 1px rgba(' + defaultColors.info.rgb + ',' + defaultShadowOpacity + ')',
      MozBoxShadow: '0 0 1px rgba(' + defaultColors.info.rgb + ',' + defaultShadowOpacity + ')',
      boxShadow: '0 0 1px rgba(' + defaultColors.info.rgb + ',' + defaultShadowOpacity + ')'
    }
  },

  Title: {
    DefaultStyle: {
      fontSize: '14px',
      margin: '0 0 5px 0',
      padding: 0,
      fontWeight: 'bold'
    },

    success: {
      color: defaultColors.success.hex
    },

    error: {
      color: defaultColors.error.hex
    },

    warning: {
      color: defaultColors.warning.hex
    },

    info: {
      color: defaultColors.info.hex
    }

  },

  MessageWrapper: {
    DefaultStyle: {
      margin: 0,
      padding: 0
    }
  },

  Dismiss: {
    DefaultStyle: {
      cursor: 'pointer',
      fontFamily: 'Arial',
      fontSize: '17px',
      position: 'absolute',
      top: '4px',
      right: '5px',
      lineHeight: '15px',
      backgroundColor: '#dededf',
      color: '#ffffff',
      borderRadius: '50%',
      width: '14px',
      height: '14px',
      fontWeight: 'bold',
      textAlign: 'center'
    },

    success: {
      color: '#f0f5ea',
      backgroundColor: '#b0ca92'
    },

    error: {
      color: '#f4e9e9',
      backgroundColor: '#e4bebe'
    },

    warning: {
      color: '#f9f6f0',
      backgroundColor: '#e1cfac'
    },

    info: {
      color: '#e8f0f4',
      backgroundColor: '#a4becb'
    }
  },

  Action: {
    DefaultStyle: {
      background: '#ffffff',
      borderRadius: '2px',
      padding: '6px 20px',
      fontWeight: 'bold',
      margin: '10px 0 0 0',
      border: 0
    },

    success: {
      backgroundColor: defaultColors.success.hex,
      color: '#ffffff'
    },

    error: {
      backgroundColor: defaultColors.error.hex,
      color: '#ffffff'
    },

    warning: {
      backgroundColor: defaultColors.warning.hex,
      color: '#ffffff'
    },

    info: {
      backgroundColor: defaultColors.info.hex,
      color: '#ffffff'
    }
  },

  ActionWrapper: {
    DefaultStyle: {
      margin: 0,
      padding: 0
    }
  }
};

module.exports = STYLES;

},{}],"nyoB":[function(require,module,exports) {
var React = require('react');
var PropTypes = require('prop-types');
var merge = require('object-assign');
var NotificationContainer = require('./NotificationContainer');
var Constants = require('./constants');
var Styles = require('./styles');

class NotificationSystem extends React.Component {
  constructor() {
    super();
    this.state = {
      notifications: []
    };
    this.uid = 3400;
    this._isMounted = false;
    this.overrideWidth = null;
    this.overrideStyle = {};
    this.elements = {
      notification: 'NotificationItem',
      title: 'Title',
      messageWrapper: 'MessageWrapper',
      dismiss: 'Dismiss',
      action: 'Action',
      actionWrapper: 'ActionWrapper'
    };

    this.setOverrideStyle = this.setOverrideStyle.bind(this);
    this.wrapper = this.wrapper.bind(this);
    this.container = this.container.bind(this);
    this.byElement = this.byElement.bind(this);
    this._didNotificationRemoved = this._didNotificationRemoved.bind(this);
    this.addNotification = this.addNotification.bind(this);
    this.getNotificationRef = this.getNotificationRef.bind(this);
    this.removeNotification = this.removeNotification.bind(this);
    this.editNotification = this.editNotification.bind(this);
    this.clearNotifications = this.clearNotifications.bind(this);

    this._getStyles = {
      overrideWidth: this.overrideWidth,
      overrideStyle: this.overrideStyle,
      elements: this.elements,
      setOverrideStyle: this.setOverrideStyle,
      wrapper: this.wrapper,
      container: this.container,
      byElement: this.byElement
    };
  }

  componentDidMount() {
    this.setOverrideStyle(this.props.style);
    this._isMounted = true;
  }

  componentWillUnmount() {
    this._isMounted = false;
  }

  setOverrideStyle(style) {
    this.overrideStyle = style;
  }

  wrapper() {
    if (!this.overrideStyle) return {};
    return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);
  }

  container(position) {
    var override = this.overrideStyle.Containers || {};
    if (!this.overrideStyle) return {};

    this.overrideWidth = Styles.Containers.DefaultStyle.width;

    if (override.DefaultStyle && override.DefaultStyle.width) {
      this.overrideWidth = override.DefaultStyle.width;
    }

    if (override[position] && override[position].width) {
      this.overrideWidth = override[position].width;
    }

    return merge(
      {},
      Styles.Containers.DefaultStyle,
      Styles.Containers[position],
      override.DefaultStyle,
      override[position]
    );
  }

  byElement(element) {
    return (level) => {
      var _element = this.elements[element];
      var override = this.overrideStyle[_element] || {};
      if (!this.overrideStyle) return {};
      return merge(
        {},
        Styles[_element].DefaultStyle,
        Styles[_element][level],
        override.DefaultStyle,
        override[level]
      );
    };
  }

  _didNotificationRemoved(uid) {
    var notification;
    var notifications = this.state.notifications.filter(function(toCheck) {
      if (toCheck.uid === uid) {
        notification = toCheck;
        return false;
      }
      return true;
    });

    if (this._isMounted) {
      this.setState({ notifications: notifications });
    }

    if (notification && notification.onRemove) {
      notification.onRemove(notification);
    }
  }

  addNotification(notification) {
    var _notification = merge({}, Constants.notification, notification);
    var notifications = this.state.notifications;
    var i;


    if (!_notification.level) {
      throw new Error('notification level is required.');
    }

    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {
      throw new Error("'" + _notification.level + "' is not a valid level.");
    }

    // eslint-disable-next-line
    if (isNaN(_notification.autoDismiss)) {
      throw new Error("'autoDismiss' must be a number.");
    }

    if (
      Object.keys(Constants.positions).indexOf(_notification.position) === -1
    ) {
      throw new Error("'" + _notification.position + "' is not a valid position.");
    }

    // Some preparations
    _notification.position = _notification.position.toLowerCase();
    _notification.level = _notification.level.toLowerCase();
    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);

    _notification.uid = _notification.uid || this.uid;
    _notification.ref = 'notification-' + _notification.uid;
    this.uid += 1;


    // do not add if the notification already exists based on supplied uid
    for (i = 0; i < notifications.length; i += 1) {
      if (notifications[i].uid === _notification.uid) {
        return false;
      }
    }

    if (this.props.newOnTop) {
      notifications.unshift(_notification);
    } else {
      notifications.push(_notification);
    }


    if (typeof _notification.onAdd === 'function') {
      notification.onAdd(_notification);
    }

    this.setState({
      notifications: notifications
    });

    return _notification;
  }

  getNotificationRef(notification) {
    var foundNotification = null;

    Object.keys(this.refs).forEach((container) => {
      if (container.indexOf('container') > -1) {
        Object.keys(this.refs[container].refs).forEach((_notification) => {
          var uid = notification.uid ? notification.uid : notification;
          if (_notification === 'notification-' + uid) {
            // NOTE: Stop iterating further and return the found notification.
            // Since UIDs are uniques and there won't be another notification found.
            foundNotification = this.refs[container].refs[_notification];
          }
        });
      }
    });

    return foundNotification;
  }

  removeNotification(notification) {
    var foundNotification = this.getNotificationRef(notification);
    return foundNotification && foundNotification._hideNotification();
  }

  editNotification(notification, newNotification) {
    var foundNotification = null;
    // NOTE: Find state notification to update by using
    // `setState` and forcing React to re-render the component.
    var uid = notification.uid ? notification.uid : notification;

    var newNotifications = this.state.notifications.filter(function(stateNotification) {
      if (uid === stateNotification.uid) {
        foundNotification = stateNotification;
        return false;
      }

      return true;
    });

    if (!foundNotification) {
      return;
    }

    newNotifications.push(merge({}, foundNotification, newNotification));

    this.setState({
      notifications: newNotifications
    });
  }

  clearNotifications() {
    Object.keys(this.refs).forEach((container) => {
      if (container.indexOf('container') > -1) {
        Object.keys(this.refs[container].refs).forEach((_notification) => {
          this.refs[container].refs[_notification]._hideNotification();
        });
      }
    });
  }

  render() {
    var containers = null;
    var notifications = this.state.notifications;

    if (notifications.length) {
      containers = Object.keys(Constants.positions).map((position) => {
        var _notifications = notifications.filter((notification) => {
          return position === notification.position;
        });

        if (!_notifications.length) {
          return null;
        }

        return (
          React.createElement(NotificationContainer, {
            ref:  'container-' + position, 
            key:  position, 
            position:  position, 
            notifications:  _notifications, 
            getStyles:  this._getStyles, 
            onRemove:  this._didNotificationRemoved, 
            noAnimation:  this.props.noAnimation, 
            allowHTML:  this.props.allowHTML}
          )
        );
      });
    }

    return (
      React.createElement("div", {className: "notifications-wrapper", style:  this.wrapper() }, 
        containers
      )
    );
  }
}

NotificationSystem.propTypes = {
  style: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
  noAnimation: PropTypes.bool,
  allowHTML: PropTypes.bool,
  newOnTop: PropTypes.bool
};

NotificationSystem.defaultProps = {
  style: {},
  noAnimation: false,
  allowHTML: false,
  newOnTop: false
};

module.exports = NotificationSystem;

},{"react":"dmLA","prop-types":"X9bF","object-assign":"yheg","./NotificationContainer":"nMoo","./constants":"rNNo","./styles":"GeKE"}],"sMlX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNotificationSystem = _interopRequireDefault(require("react-notification-system"));

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const TopLeftHudViewM = /*#__PURE__*/React.memo(function TopLeftHudView({
  openBurgerMenu,
  logo,
  toggleAbout,
  universeAnchor
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 [OMR]TopLeftHudView');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "omr\u22C4hud\u205Atop-left o\u22C4fast-tap",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "omr\u22C4hamburger",
      onClick: openBurgerMenu,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        className: "icomoon-menu"
      })
    }), logo && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "omr\u22C4logo",
      onClick: e => {
        e.preventDefault();
        toggleAbout();
      },
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: 'omr:logo',
        children: logo
      })
    }), logo && universeAnchor && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "omr\u22C4universe-anchor",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: 'omr:universe-anchor',
        children: universeAnchor
      })
    })]
  });
});
const BottomRightHudViewM = /*#__PURE__*/React.memo(function BottomRightHudView({
  bottomMenuItems
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 [OMR]BottomRightHudView');
  return bottomMenuItems.length > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "omr\u22C4hud\u205Abottom-right o\u22C4fast-tap",
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "omr\u22C4bottom-menu",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactErrorBoundary.default, {
        name: 'omr:bottom-menu',
        children: [bottomMenuItems, /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "omr\u22C4bottom-menu--selected-indicator"
        })]
      })
    })
  });
});
const MainViewM = /*#__PURE__*/React.memo(function MainView({
  children,
  logo,
  universeAnchor,
  bottomMenuItems,
  aboutContent,
  openBurgerMenu,
  isAboutOpen,
  toggleAbout,
  _registerNotificationSystem
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 [OMR]MainView');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "o\u22C4top-container",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "omr\u22C4hud\u205Ashifts-hider"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(TopLeftHudViewM, {
      openBurgerMenu,
      logo,
      toggleAbout,
      universeAnchor
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "o\u22C4top-container omr\u22C4content",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: 'omr:content',
        children: children
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(BottomRightHudViewM, {
      bottomMenuItems
    }), isAboutOpen && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      id: "about-panel",
      className: "omr\u22C4about o\u22C4top-container omr\u22C4content-area omr\u22C4plane\u205Ameta",
      onClick: toggleAbout,
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactErrorBoundary.default, {
        name: 'omr:about-blanket',
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "omr-auto-logo",
          children: logo
        }), aboutContent]
      })
    }, "aboutBlanket"), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
      name: 'omr:notification-system',
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNotificationSystem.default, {
        ref: _registerNotificationSystem
      })
    })]
  });
});
var _default = MainViewM;
exports.default = _default;
},{"react":"dmLA","react-notification-system":"nyoB","@offirmo-private/react-error-boundary":"UTEF","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"Ntqs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _stateContext = require("../state-context");

var _component = _interopRequireDefault(require("./component"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Main({
  children,
  logo,
  universeAnchor,
  bottomMenuItems,
  bottomMarkerIndex,
  aboutContent
}) {
  //console.log('🔄 [OMR]Main')
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_stateContext.OhMyRPGUIContext.Consumer, {
    children: ({
      openBurgerMenu,
      isAboutOpen,
      toggleAbout,
      _registerNotificationSystem
    }) => {
      const props = {
        children,
        logo,
        universeAnchor,
        bottomMenuItems,
        aboutContent,
        openBurgerMenu,
        isAboutOpen,
        toggleAbout,
        _registerNotificationSystem
      };
      const css_selected_bottom_menu_value = -bottomMenuItems.length + 1 + (bottomMarkerIndex >= 0 ? bottomMarkerIndex : -1);
      document.documentElement.style.setProperty('--omr⋄ui__bottom-menu--selected-reverse-index', css_selected_bottom_menu_value);
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, { ...props
      });
    }
  });
}

Main.defaultProps = {
  logo: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
    children: "[Game name/logo here]"
  }),
  immersionSlides: [],
  bottomMenuItems: [],
  aboutContent: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
    children: "This game was made by [x]..."
  }),
  burgerPanelContent: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
    children: "put some settings here"
  })
};
var _default = Main;
exports.default = _default;
},{"react":"dmLA","../state-context":"L8Fy","./component":"sMlX","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"XmL8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"Ntqs"}],"Zb4G":[function(require,module,exports) {

},{"./style--theme--light--black-on-white.css":"THnX","./style--theme--dark--white-on-black.css":"THnX"}],"WjRu":[function(require,module,exports) {

},{"./font--roboto_regular--latin.v18.woff2":[["font--roboto_regular--latin.v18.0f7dd874.woff2","A6Ro"],"A6Ro"],"./font--roboto_regular--latin-ext.v18.woff2":[["font--roboto_regular--latin-ext.v18.2026f26a.woff2","RKb0"],"RKb0"],"./font--roboto_condensed_regular--latin.v16.woff2":[["font--roboto_condensed_regular--latin.v16.9f4a566b.woff2","cRSz"],"cRSz"],"./font--roboto_condensed_regular--latin-ext.v16.woff2":[["font--roboto_condensed_regular--latin-ext.v16.e7d95ce9.woff2","FqPU"],"FqPU"]}],"LRWe":[function(require,module,exports) {

},{"../node_modules/normalize.css/normalize.css":"THnX","./style--variables.css":"THnX","./style--reset.css":"THnX","./style--reset--controls.css":"THnX","./style--colors.css":"THnX","./style--themes.css":"Zb4G","./style--containers.css":"THnX","./style--fonts.css":"WjRu","./style--semantic.css":"THnX","./style--technical.css":"THnX","./style--misc.css":"THnX","./style--debug.css":"THnX"}],"qh3q":[function(require,module,exports) {

},{"./img--parchment-xxl.jpg":[["img--parchment-xxl.dce10996.jpg","JnfT"],"JnfT"],"./img--parchment-tile.png":[["img--parchment-tile.2ecca3fa.png","Wxqn"],"Wxqn"],"./img--black_marble-tile.png":[["img--black_marble-tile.53d5d57a.png","GEta"],"GEta"]}],"yhKN":[function(require,module,exports) {

},{"../node_modules/@offirmo-private/ui--browser--css/src/style--theme--dark--white-on-black.css":"THnX"}],"pFcO":[function(require,module,exports) {

},{"../node_modules/@offirmo-private/ui--browser--css/src/style--theme--dark--colorhunt212.css":"THnX"}],"xcoG":[function(require,module,exports) {

},{"./style--theme--dark-on-light.css":"yhKN","./style--theme--lod-colorhunt212.css":"pFcO"}],"L4cr":[function(require,module,exports) {

},{"./sword_cursor_1.5x.png":[["sword_cursor_1.5x.8b0a0fef.png","DFwQ"],"DFwQ"]}],"Y5RK":[function(require,module,exports) {

},{"./webfont--spectral-regular.woff":[["webfont--spectral-regular.fae3cb71.woff","BH2i"],"BH2i"],"./webfont--pixantiqua.woff":[["webfont--pixantiqua.d45d52aa.woff","RQu7"],"RQu7"]}],"hLzj":[function(require,module,exports) {

},{"./fonts/icomoon-TBRPG.eot":[["icomoon-TBRPG.1da3129a.eot","yI0F"],"yI0F"],"./fonts/icomoon-TBRPG.ttf":[["icomoon-TBRPG.6deb7541.ttf","BhLL"],"BhLL"],"./fonts/icomoon-TBRPG.woff":[["icomoon-TBRPG.b9a39902.woff","xibc"],"xibc"],"./fonts/icomoon-TBRPG.svg":[["icomoon-TBRPG.8536a8cc.svg","j3T0"],"j3T0"]}],"CUTt":[function(require,module,exports) {

},{"./style--ui--hud.css":"THnX"}],"r7hp":[function(require,module,exports) {

},{"../node_modules/@offirmo-private/ui--browser--css/src/style.css":"LRWe","./style--reset.css":"THnX","./style--backgrounds.css":"qh3q","./style--colors.css":"xcoG","./style--containers.css":"THnX","./style--cursors.css":"L4cr","./style--fonts.css":"Y5RK","./style--icomoon.css":"hLzj","./style--ui.css":"CUTt"}],"arIe":[function(require,module,exports) {

},{"../../node_modules/@tbrpg/ui--browser--css/src/style.css":"r7hp"}],"A1vn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "OhMyRPGUIContext", {
  enumerable: true,
  get: function () {
    return _stateContext.OhMyRPGUIContext;
  }
});
exports.OhMyRpgUI = void 0;

var _react = require("react");

var _burgerMenuWrapper = _interopRequireDefault(require("./burger-menu-wrapper"));

var _omr = _interopRequireDefault(require("./omr"));

var _stateContext = _interopRequireWildcard(require("./state-context"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class OhMyRpgUI extends _react.Component {
  // TODO listen to errors and suggest a refresh?
  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 [OMR]Root');
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_stateContext.default, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_burgerMenuWrapper.default, {
        logo: this.props.logo,
        burgerPanelContent: this.props.burgerPanelContent,
        mainContent: /*#__PURE__*/(0, _jsxRuntime.jsx)(_omr.default, { ...this.props
        })
      })
    });
  }

}

exports.OhMyRpgUI = OhMyRpgUI;
},{"react":"dmLA","./burger-menu-wrapper":"WvsP","./omr":"XmL8","./state-context":"L8Fy","./index.css":"arIe","react/jsx-runtime":"qEpl"}],"Ul2O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "OhMyRPGUIContext", {
  enumerable: true,
  get: function () {
    return _components.OhMyRPGUIContext;
  }
});
exports.default = void 0;

var _components = require("./components");

var _default = _components.OhMyRpgUI;
exports.default = _default;
},{"./components":"A1vn"}],"ZIHH":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

var _iframeLoading = _interopRequireDefault(require("@offirmo-private/iframe--loading"));

var _asyncUtils = require("@offirmo-private/async-utils");

var _cordova = require("./cordova");

var _logger = _interopRequireDefault(require("./logger"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_cordova.ↆcordova.finally(() => {
  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-splashscreen/index.html#preferences
  if ('splashscreen' in navigator) {
    navigator.splashscreen.hide();
  }
}).catch(() => {});

const declare_app_loaded = (0, _memoizeOne.default)(function _declare_app_loaded() {
  (0, _asyncUtils.schedule_when_idle_but_within_human_perception)(() => {
    // @offirmo-private/iframe--loading
    (0, _iframeLoading.default)().on_rsrc_loaded();

    _logger.default.info('🙌 🙌 🙌 App loaded! 🙌 🙌 🙌');
  });
});
var _default = declare_app_loaded;
exports.default = _default;
},{"memoize-one":"lvkj","@offirmo-private/iframe--loading":"Be1M","@offirmo-private/async-utils":"i8Ln","./cordova":"xqeo","./logger":"qVJl"}],"Hk3A":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = OMRAbout;

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function OMRAbout() {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 OMRAbout');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
      children: ["A hobby game from ", /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
        href: "https://github.com/Offirmo",
        target: "_blank",
        rel: "noopener noreferrer",
        children: "Offirmo"
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
      children: ["A remake of the original, now defunct, browser game ", /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
        href: "https://www.reddit.com/r/boringrpg/",
        target: "_blank",
        rel: "noopener noreferrer",
        children: "The boring RPG"
      }), ' ', "by ", /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
        href: "https://www.reddit.com/user/andypants",
        target: "_blank",
        rel: "noopener noreferrer",
        children: "andypants"
      }), "."]
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("p", {
      children: ["See ", /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
        href: "https://www.online-adventur.es/",
        target: "_blank",
        rel: "noopener noreferrer",
        children: "all my games"
      })]
    })]
  });
}
},{"./index.css":"THnX","react/jsx-runtime":"qEpl"}],"yNdI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const OMRUniverseAnchorView = /*#__PURE__*/React.memo(function OMRUniverseAnchorView({
  onClick,
  name,
  klass,
  level
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 OMRUniverseAnchorView');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "o\u22C4flex--row",
    onClick: onClick,
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "icomoon-user status\u205Aavatar--icon"
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "status\u205Aavatar--details o\u22C4flex--column",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        children: name
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
        className: "status\u205Aavatar--klass",
        children: [klass, " L.", level]
      })]
    })]
  });
});
var _default = OMRUniverseAnchorView;
exports.default = _default;
},{"react":"dmLA","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"dLsF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _context = require("../../../context");

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Connected extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render_view", ({
      u_state
    }) => {
      const {
        onClick
      } = this.props;
      const avatar = (0, _gameInstanceBrowser.default)().queries.get_sub_state('avatar');
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
        onClick: onClick,
        name: avatar.name,
        klass: avatar.klass,
        level: avatar.attributes.level
      });
    });
  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.UStateListenerAndProvider, {
      render: this.render_view
    });
  }

}

_defineProperty(Connected, "propTypes", {
  onClick: _propTypes.default.func.isRequired
});

var _default = Connected;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","../../../services/game-instance-browser":"r81V","../../../context":"DUKA","./component":"yNdI","react/jsx-runtime":"qEpl"}],"aQyf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"dLsF"}],"Fure":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APPS = exports.MAKERS = exports.THE_BORING_RPG = exports.ONLINE_ADVENTURES = exports.MAKER_OFFIRMO = void 0;
// instructions: https://support.google.com/googleapi/answer/7394288#ensure-approval
const URL_PRIVACY_POLICY = 'TODO';
const URL_TERMS_OF_SERVICE = 'TODO'; //////////// Me ////////////

const MAKER_OFFIRMO = {
  name: 'Offirmo',
  url: 'https://www.offirmo.net',
  cta: 'visit',
  social_urls: {
    twitter: 'https://twitter.com/Offirmo',
    reddit: 'https://www.reddit.com/user/Offirmo',
    product_hunt: 'https://www.producthunt.com/@offirmo',
    github: 'https://github.com/Offirmo'
  }
};
exports.MAKER_OFFIRMO = MAKER_OFFIRMO;
const ONLINE_ADVENTURES = {
  name: 'Offirmo’s Online Adventures',
  maker: MAKER_OFFIRMO,
  url: 'https://www.online-adventur.es/the-boring-rpg',
  cta: 'explore',
  repo_url: 'https://github.com/online-adventures/online-adventures.github.io'
};
/*
const THE_NPM_RPG = {
	name: 'The npm RPG',
	maker: MAKER_OFFIRMO,
	url: 'https://www.npmjs.com/package/the-npm-rpg',
	cta: 'play',
	homepage_url: 'https://www.online-adventur.es/the-npm-rpg',
	repo_url: 'https://github.com/Offirmo/offirmo-monorepo/tree/master/A-apps/the-npm-rpg',
	issues_url: 'https://github.com/Offirmo/offirmo-monorepo/issues',
	social_urls: {
		product_hunt: 'https://www.producthunt.com/upcoming/the-npm-rpg',
	},
}*/

exports.ONLINE_ADVENTURES = ONLINE_ADVENTURES;
const THE_BORING_RPG = {
  name: 'The Boring RPG reborn',
  maker: MAKER_OFFIRMO,
  url: 'https://www.online-adventur.es/apps/the-boring-rpg',
  cta: 'play',
  homepage_url: 'https://www.online-adventur.es/the-boring-rpg',
  changelog: 'https://www.reddit.com/r/boringrpg/',
  repo_url: 'https://github.com/Offirmo/offirmo-monorepo/tree/master/C-apps--clients/the-boring-rpg',
  issues_url: 'https://github.com/Offirmo/offirmo-monorepo/issues',
  aggregated_links_url: 'https://linktr.ee/theboringrpg',
  social_urls: {
    facebook: '',
    instagram: 'https://www.instagram.com/theboringrpg/',
    reddit: 'https://www.reddit.com/r/boringrpg/',
    twitter: 'https://twitter.com/TheBoringRpg'
  }
}; //////////// Others ////////////

exports.THE_BORING_RPG = THE_BORING_RPG;
const MAKER_ANDZ = {
  name: 'Andz',
  social_urls: {
    reddit: 'https://www.reddit.com/user/andypants',
    twitter: 'https://twitter.com/BoringRPG'
  }
};
const THE_BORING_RPG_ORIGINAL = {
  maker: MAKER_ANDZ,
  url: 'https://www.boringrpg.com/',
  social_urls: {
    reddit: 'https://www.reddit.com/r/boringrpg/',
    twitter: 'https://twitter.com/BoringRPG'
  }
}; ////////////////////////////////////

const MAKERS = {
  'andz': MAKER_ANDZ,
  'offirmo': MAKER_OFFIRMO
};
exports.MAKERS = MAKERS;
const APPS = {
  'the_boring_rpg': THE_BORING_RPG //'the_npm_rpg': THE_NPM_RPG,

}; ////////////////////////////////////

exports.APPS = APPS;
},{}],"ZiIw":[function(require,module,exports) {
var define;
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		// register as 'classnames', consistent with npm package name
		define('classnames', [], function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());

},{}],"Am3H":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generate_react_key = generate_react_key;
exports.intermediate_on_node_exit = intermediate_on_node_exit;
exports.intermediate_assemble = intermediate_assemble;
exports.to_react = to_react;
exports.default = exports.NODE_TYPE_TO_EXTRA_CLASSES = exports.NODE_TYPE_TO_COMPONENT = void 0;

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _richTextFormat = require("@offirmo-private/rich-text-format");

require("@offirmo-private/rich-text-format/src/renderers/style.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const LIB = 'rich_text_to_react';
const NODE_TYPE_TO_COMPONENT = {
  // will default to own tag if not in this list (ex. strong => strong)
  [_richTextFormat.NodeType.weak]: 'span',
  [_richTextFormat.NodeType.heading]: 'h3',
  [_richTextFormat.NodeType.inline_fragment]: 'span',
  [_richTextFormat.NodeType.block_fragment]: 'div'
};
exports.NODE_TYPE_TO_COMPONENT = NODE_TYPE_TO_COMPONENT;
const NODE_TYPE_TO_EXTRA_CLASSES = {
  [_richTextFormat.NodeType.weak]: ['o⋄color⁚secondary']
}; // a clever key is critically needed in general, but even more critical
// for lists, whom default keys "1, 2, 3" is dangerous if the list is re-ordered.
// Thus we attempt to enrich the default key ($id) from various hints.

exports.NODE_TYPE_TO_EXTRA_CLASSES = NODE_TYPE_TO_EXTRA_CLASSES;

function generate_react_key({
  $id,
  $node
}) {
  let key = $id;

  if ($node.$type === 'li') {
    // this is a wrapper, go down a level
    $node = $node.$sub.content;
  }

  if ($node.$hints) {
    if ($node.$hints.key) key += `.aka:${$node.$hints.key}`;
    if ($node.$hints.uuid) key += `.uuid:${$node.$hints.uuid}`;
  } //console.log('generate_react_key', {$id, $node, key})


  return key;
} // turn the state into a react element


function intermediate_on_node_exit({
  $node,
  $id,
  state
}, options) {
  const {
    $type,
    $classes,
    $hints
  } = $node; // initial values, may be overriden later

  const result = {
    children: null,
    classes: [...$classes],
    component: NODE_TYPE_TO_COMPONENT[$type] || $type,
    wrapper: children => children
  };
  result.children = state.children.map(c => c.element);

  if (result.children.length > 1) {
    // at their level, children can't ensure that their keys are unique,
    // especially for {br} which may be repeated.
    // We need to help with that:
    //console.group(`starting rekey for ${$id}...`)
    //console.log({$node, state})
    const key_count = {};
    result.children = result.children.map(child => {
      if (typeof child === 'string') return child;
      let key = child.key;
      key_count[key] = key_count[key] ? key_count[key] + 1 : 1;
      if (key_count[key] > 1) key += `+${key_count[key]}`;
      if (key !== child.key) child = /*#__PURE__*/React.cloneElement(child, {
        key
      });
      return child;
    }); //console.log(key_count)
    //console.groupEnd()
  }

  result.classes.push(...(NODE_TYPE_TO_EXTRA_CLASSES[$type] || []));

  if ((0, _richTextFormat.is_list)($node)) {
    result.classes.push('o⋄rich-text⋄list');

    if ((0, _richTextFormat.is_uuid_list)($node)) {
      //console.log(`${LIB} seen uuid list`)
      result.classes.push('o⋄rich-text⋄list--interactive');
    }

    switch ($hints.bullets_style) {
      case 'none':
        result.classes.push('o⋄rich-text⋄list--no-bullet');
        break;

      default:
        break;
    }

    if ((0, _richTextFormat.is_KVP_list)($node)) {
      // TODO rewrite completely
      console.log(`${LIB} TODO KVP`);
      result.classes.push('o⋄rich-text⋄list--no-bullet');
    }
  }

  if ($hints.href) result.wrapper = children => /*#__PURE__*/React.createElement('a', {
    key: generate_react_key({
      $id,
      $node
    }),
    href: $hints.href,
    target: '_blank'
  }, children);else if (!_richTextFormat.Enum.isType(_richTextFormat.NodeType, $type)) {
    console.error(`Unknown node type "${$type}"!`); // TODO throw instead??

    result.wrapper = children => /*#__PURE__*/React.createElement('div', {
      key: generate_react_key({
        $id,
        $node
      }),
      className: 'o⋄rich-text⋄error'
    }, [`[Unknown type "${$type}"]`, // extra inline text
    children]);
  }
  return result;
}

function intermediate_assemble({
  $id,
  $node,
  children,
  classes,
  component,
  wrapper
}, options) {
  //console.log('intermediate_assemble', arguments)
  if (component === 'br' || component === 'hr') children = undefined;
  return wrapper( /*#__PURE__*/React.createElement(component, {
    key: generate_react_key({
      $id,
      $node
    }),
    className: (0, _classnames.default)(...classes)
  }, children));
} /// XXX ////
// default version,
// replace it for extension


function on_node_exit(params, options) {
  const {
    children,
    classes,
    component,
    wrapper
  } = intermediate_on_node_exit(params, options);
  params.state.element = intermediate_assemble(_objectSpread(_objectSpread({}, params), {}, {
    children,
    classes,
    component,
    wrapper
  }), options);
  return params.state;
} /// XXX ////


function on_concatenate_str({
  state,
  str
}) {
  state.children.push({
    element: str
  });
  return state;
}

function on_concatenate_sub_node({
  $node,
  state,
  sub_state
}, options) {
  state.sub_nodes.push($node);
  state.children.push(sub_state);
  return state;
}

const callbacks = {
  on_node_enter: () => ({
    sub_nodes: [],
    element: null,
    children: []
  }),
  on_node_exit,
  on_concatenate_str,
  on_concatenate_sub_node,
  on_filter_Capitalize: ({
    state
  }) => {
    //console.warn('rich-text-to-react Capitalize', state)
    state.element = /*#__PURE__*/React.cloneElement(state.element, {
      children: React.Children.map(state.element.props.children, child => typeof child === 'string' ? child[0].toUpperCase() + child.slice(1) : child)
    });
    return state;
  }
}; ////////////

function to_react(doc, callback_overrides = {}, options = {}) {
  //console.log(`${LIB} Rendering a rich text:`, doc)
  const content = (0, _richTextFormat.walk)(doc, _objectSpread(_objectSpread({}, callbacks), callback_overrides), options).element;
  return /*#__PURE__*/React.createElement('div', {
    key: options.key || 'rich-text-format-to-react--root',
    className: 'o⋄rich-text'
  }, content);
}

var _default = to_react;
exports.default = _default;
},{"react":"dmLA","classnames":"ZiIw","@offirmo-private/rich-text-format":"aepI","@offirmo-private/rich-text-format/src/renderers/style.css":"THnX"}],"ah4i":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var FG_SIZE = 8;
var BG_SIZE = 9;

var Card = (function (_Component) {
  _inherits(Card, _Component);

  function Card() {
    var _this = this;

    _classCallCheck(this, Card);

    _get(Object.getPrototypeOf(Card.prototype), 'constructor', this).apply(this, arguments);

    this.state = {
      hover: false,
      transition: 'opacity',
      width: 0,
      height: 0
    };
    this.margin = 15;
    this.defaultArrowStyle = {
      color: '#fff',
      borderColor: 'rgba(0,0,0,.4)'
    };
    this.rootRef = _react2['default'].createRef();

    this.handleMouseEnter = function () {
      _this.props.active && _this.props.useHover && _this.setState({ hover: true });
    };

    this.handleMouseLeave = function () {
      _this.setState({ hover: false });
    };
  }

  _createClass(Card, [{
    key: 'getGlobalStyle',
    value: function getGlobalStyle() {
      if (!this.props.parentEl) {
        return { display: 'none' };
      }

      var style = _extends({
        position: 'absolute',
        padding: '5px',
        background: '#fff',
        boxShadow: '0 0 8px rgba(0,0,0,.3)',
        borderRadius: '3px',
        transition: this.state.transition + ' .3s ease-in-out, visibility .3s ease-in-out',
        opacity: this.state.hover || this.props.active ? 1 : 0,
        visibility: this.state.hover || this.props.active ? 'visible' : 'hidden',
        zIndex: 50
      }, this.getStyle(this.props.position, this.props.arrow));

      return this.mergeStyle(style, this.props.style.style);
    }
  }, {
    key: 'getBaseArrowStyle',
    value: function getBaseArrowStyle() {
      return {
        position: 'absolute',
        content: '""',
        transition: 'all .3s ease-in-out'
      };
    }
  }, {
    key: 'getArrowStyle',
    value: function getArrowStyle() {
      var fgStyle = this.getBaseArrowStyle();
      var bgStyle = this.getBaseArrowStyle();
      fgStyle.zIndex = 60;
      bgStyle.zIndex = 55;

      var arrowStyle = _extends({}, this.defaultArrowStyle, this.props.style.arrowStyle);
      var bgBorderColor = arrowStyle.borderColor ? arrowStyle.borderColor : 'transparent';

      var fgColorBorder = '10px solid ' + arrowStyle.color;
      var fgTransBorder = FG_SIZE + 'px solid transparent';
      var bgColorBorder = '11px solid ' + bgBorderColor;
      var bgTransBorder = BG_SIZE + 'px solid transparent';

      var _props = this.props;
      var position = _props.position;
      var arrow = _props.arrow;

      if (position === 'left' || position === 'right') {
        fgStyle.top = '50%';
        fgStyle.borderTop = fgTransBorder;
        fgStyle.borderBottom = fgTransBorder;
        fgStyle.marginTop = -7;

        bgStyle.borderTop = bgTransBorder;
        bgStyle.borderBottom = bgTransBorder;
        bgStyle.top = '50%';
        bgStyle.marginTop = -8;

        if (position === 'left') {
          fgStyle.right = -10;
          fgStyle.borderLeft = fgColorBorder;
          bgStyle.right = -11;
          bgStyle.borderLeft = bgColorBorder;
        } else {
          fgStyle.left = -10;
          fgStyle.borderRight = fgColorBorder;
          bgStyle.left = -11;
          bgStyle.borderRight = bgColorBorder;
        }

        if (arrow === 'top') {
          fgStyle.top = this.margin;
          bgStyle.top = this.margin;
        }
        if (arrow === 'bottom') {
          fgStyle.top = null;
          fgStyle.bottom = this.margin - 7;
          bgStyle.top = null;
          bgStyle.bottom = this.margin - 8;
        }
      } else {
        fgStyle.left = Math.round(this.state.width / 2 - FG_SIZE);
        fgStyle.borderLeft = fgTransBorder;
        fgStyle.borderRight = fgTransBorder;
        fgStyle.marginLeft = 0;
        bgStyle.left = fgStyle.left - 1;
        bgStyle.borderLeft = bgTransBorder;
        bgStyle.borderRight = bgTransBorder;
        bgStyle.marginLeft = 0;

        if (position === 'top') {
          fgStyle.bottom = -10;
          fgStyle.borderTop = fgColorBorder;
          bgStyle.bottom = -11;
          bgStyle.borderTop = bgColorBorder;
        } else {
          fgStyle.top = -10;
          fgStyle.borderBottom = fgColorBorder;
          bgStyle.top = -11;
          bgStyle.borderBottom = bgColorBorder;
        }

        if (arrow === 'right') {
          fgStyle.left = null;
          fgStyle.right = this.margin + 1 - FG_SIZE;
          bgStyle.left = null;
          bgStyle.right = this.margin - FG_SIZE;
        }
        if (arrow === 'left') {
          fgStyle.left = this.margin + 1 - FG_SIZE;
          bgStyle.left = this.margin - FG_SIZE;
        }
      }

      var _props$style$arrowStyle = this.props.style.arrowStyle;
      var color = _props$style$arrowStyle.color;
      var borderColor = _props$style$arrowStyle.borderColor;

      var propsArrowStyle = _objectWithoutProperties(_props$style$arrowStyle, ['color', 'borderColor']);

      return {
        fgStyle: this.mergeStyle(fgStyle, propsArrowStyle),
        bgStyle: this.mergeStyle(bgStyle, propsArrowStyle)
      };
    }
  }, {
    key: 'mergeStyle',
    value: function mergeStyle(style, theme) {
      if (theme) {
        var position = theme.position;
        var _top2 = theme.top;
        var left = theme.left;
        var right = theme.right;
        var bottom = theme.bottom;
        var marginLeft = theme.marginLeft;
        var marginRight = theme.marginRight;

        var validTheme = _objectWithoutProperties(theme, ['position', 'top', 'left', 'right', 'bottom', 'marginLeft', 'marginRight']);

        return _extends({}, style, validTheme);
      }

      return style;
    }
  }, {
    key: 'getStyle',
    value: function getStyle(position, arrow) {
      var _this2 = this;

      var alignOffset = 0;
      var parent = this.props.parentEl;
      var align = this.props.align;
      var tooltipPosition = parent.getBoundingClientRect();
      var scrollY = window.scrollY !== undefined ? window.scrollY : window.pageYOffset;
      var scrollX = window.scrollX !== undefined ? window.scrollX : window.pageXOffset;
      var _top = scrollY + tooltipPosition.top;
      var _left = scrollX + tooltipPosition.left;
      var style = {};

      var parentSize = {
        width: parent.offsetWidth,
        height: parent.offsetHeight
      };

      // fix for svg
      if (!parent.offsetHeight && parent.getBoundingClientRect) {
        parentSize.width = parent.getBoundingClientRect().width;
        parentSize.height = parent.getBoundingClientRect().height;
      }

      if (align === 'left') {
        alignOffset = -parentSize.width / 2 + FG_SIZE;
      } else if (align === 'right') {
        alignOffset = parentSize.width / 2 - FG_SIZE;
      }

      var stylesFromPosition = {
        left: function left() {
          style.top = _top + parentSize.height / 2 - _this2.state.height / 2;
          style.left = _left - _this2.state.width - _this2.margin;
        },
        right: function right() {
          style.top = _top + parentSize.height / 2 - _this2.state.height / 2;
          style.left = _left + parentSize.width + _this2.margin;
        },
        top: function top() {
          style.left = _left - _this2.state.width / 2 + parentSize.width / 2 + alignOffset;
          style.top = _top - _this2.state.height - _this2.margin;
        },
        bottom: function bottom() {
          style.left = _left - _this2.state.width / 2 + parentSize.width / 2 + alignOffset;
          style.top = _top + parentSize.height + _this2.margin;
        }
      };

      var stylesFromArrow = {
        left: function left() {
          style.left = _left + parentSize.width / 2 - _this2.margin + alignOffset;
        },
        right: function right() {
          style.left = _left - _this2.state.width + parentSize.width / 2 + _this2.margin + alignOffset;
        },
        top: function top() {
          style.top = _top + parentSize.height / 2 - _this2.margin;
        },
        bottom: function bottom() {
          style.top = _top + parentSize.height / 2 - _this2.state.height + _this2.margin;
        }
      };

      executeFunctionIfExist(stylesFromPosition, position);
      executeFunctionIfExist(stylesFromArrow, arrow);

      return style;
    }
  }, {
    key: 'checkWindowPosition',
    value: function checkWindowPosition(style, arrowStyle) {
      if (this.props.position === 'top' || this.props.position === 'bottom') {
        if (style.left < 0) {
          var _parent = this.props.parentEl;
          if (_parent) {
            var tooltipWidth = this.state.width;
            var bgStyleRight = arrowStyle.bgStyle.right;
            // For arrow = center
            if (!bgStyleRight) {
              bgStyleRight = tooltipWidth / 2 - BG_SIZE;
            }
            var newBgRight = Math.round(bgStyleRight - style.left + this.margin);
            arrowStyle = _extends({}, arrowStyle, {
              bgStyle: _extends({}, arrowStyle.bgStyle, {
                right: newBgRight,
                left: null
              }),
              fgStyle: _extends({}, arrowStyle.fgStyle, {
                right: newBgRight + 1,
                left: null
              })
            });
          }
          style.left = this.margin;
        } else {
          var rightOffset = style.left + this.state.width - window.innerWidth;
          if (rightOffset > 0) {
            var originalLeft = style.left;
            style.left = window.innerWidth - this.state.width - this.margin;
            arrowStyle.fgStyle.marginLeft += originalLeft - style.left;
            arrowStyle.bgStyle.marginLeft += originalLeft - style.left;
          }
        }
      }

      return { style: style, arrowStyle: arrowStyle };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.updateSize();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props !== prevProps) {
        this.updateSize();
      }
    }
  }, {
    key: 'updateSize',
    value: function updateSize() {
      var newWidth = this.rootRef.current.offsetWidth;
      var newHeight = this.rootRef.current.offsetHeight;

      if (newWidth !== this.state.width || newHeight !== this.state.height) {
        this.setState({
          width: newWidth,
          height: newHeight
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _checkWindowPosition = this.checkWindowPosition(this.getGlobalStyle(), this.getArrowStyle());

      var style = _checkWindowPosition.style;
      var arrowStyle = _checkWindowPosition.arrowStyle;

      return _react2['default'].createElement(
        'div',
        { style: style, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave, ref: this.rootRef },
        this.props.arrow ? _react2['default'].createElement(
          'div',
          null,
          _react2['default'].createElement('span', { style: arrowStyle.fgStyle }),
          _react2['default'].createElement('span', { style: arrowStyle.bgStyle })
        ) : null,
        this.props.children
      );
    }
  }], [{
    key: 'getDerivedStateFromProps',
    value: function getDerivedStateFromProps(props, state) {
      return {
        transition: state.hover || props.active ? 'all' : 'opacity'
      };
    }
  }, {
    key: 'propTypes',
    value: {
      active: _propTypes2['default'].bool,
      position: _propTypes2['default'].oneOf(['top', 'right', 'bottom', 'left']),
      arrow: _propTypes2['default'].oneOf([null, 'center', 'top', 'right', 'bottom', 'left']),
      align: _propTypes2['default'].oneOf([null, 'center', 'right', 'left']),
      style: _propTypes2['default'].object,
      useHover: _propTypes2['default'].bool
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      active: false,
      position: 'right',
      arrow: null,
      align: null,
      style: { style: {}, arrowStyle: {} },
      useHover: true
    },
    enumerable: true
  }]);

  return Card;
})(_react.Component);

var portalNodes = {};

var ToolTip = (function (_Component2) {
  _inherits(ToolTip, _Component2);

  function ToolTip() {
    _classCallCheck(this, ToolTip);

    _get(Object.getPrototypeOf(ToolTip.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(ToolTip, [{
    key: 'createPortal',
    value: function createPortal() {
      portalNodes[this.props.group] = {
        node: document.createElement('div'),
        timeout: false
      };
      portalNodes[this.props.group].node.className = 'ToolTipPortal';
      document.body.appendChild(portalNodes[this.props.group].node);
    }
  }, {
    key: 'renderPortal',
    value: function renderPortal(props) {
      if (!portalNodes[this.props.group]) {
        this.createPortal();
      }
      var parent = props.parent;

      var other = _objectWithoutProperties(props, ['parent']);

      var parentEl = typeof parent === 'string' ? document.querySelector(parent) : parent;
      _reactDom2['default'].render(_react2['default'].createElement(Card, _extends({ parentEl: parentEl }, other)), portalNodes[this.props.group].node);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (!this.props.active) {
        return;
      }

      this.renderPortal(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this3 = this;

      if (!portalNodes[this.props.group] && !nextProps.active || !this.props.active && !nextProps.active) {
        return;
      }

      var props = _extends({}, nextProps);
      var newProps = _extends({}, nextProps);

      if (portalNodes[this.props.group] && portalNodes[this.props.group].timeout) {
        clearTimeout(portalNodes[this.props.group].timeout);
      }

      if (this.props.active && !props.active) {
        newProps.active = true;
        portalNodes[this.props.group].timeout = setTimeout(function () {
          props.active = false;
          _this3.renderPortal(props);
        }, this.props.tooltipTimeout);
      }

      this.renderPortal(newProps);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (portalNodes[this.props.group]) {
        _reactDom2['default'].unmountComponentAtNode(portalNodes[this.props.group].node);
        clearTimeout(portalNodes[this.props.group].timeout);

        try {
          document.body.removeChild(portalNodes[this.props.group].node);
        } catch (e) {}

        portalNodes[this.props.group] = null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }], [{
    key: 'propTypes',
    value: {
      parent: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].object]).isRequired,
      active: _propTypes2['default'].bool,
      group: _propTypes2['default'].string,
      tooltipTimeout: _propTypes2['default'].number
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      active: false,
      group: 'main',
      tooltipTimeout: 500
    },
    enumerable: true
  }]);

  return ToolTip;
})(_react.Component);

exports['default'] = ToolTip;

var executeFunctionIfExist = function executeFunctionIfExist(object, key) {
  if (Object.prototype.hasOwnProperty.call(object, key)) {
    object[key]();
  }
};

var StatefulToolTip = (function (_Component3) {
  _inherits(StatefulToolTip, _Component3);

  function StatefulToolTip() {
    var _this4 = this;

    _classCallCheck(this, StatefulToolTip);

    _get(Object.getPrototypeOf(StatefulToolTip.prototype), 'constructor', this).apply(this, arguments);

    this.state = {
      tooltipVisible: false
    };

    this.onMouseEnter = function () {
      _this4.setState({ tooltipVisible: true });
    };

    this.onMouseLeave = function () {
      _this4.setState({ tooltipVisible: false });
    };
  }

  _createClass(StatefulToolTip, [{
    key: 'render',
    value: function render() {
      var _this5 = this;

      var _props2 = this.props;
      var children = _props2.children;
      var className = _props2.className;
      var parent = _props2.parent;

      var props = _objectWithoutProperties(_props2, ['children', 'className', 'parent']);

      return _react2['default'].createElement(
        _react.Fragment,
        null,
        _react2['default'].createElement(
          'span',
          { className: className, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave, ref: function (p) {
              return _this5.parent = p;
            }, key: 'parent' },
          this.props.parent
        ),
        this.parent ? _react2['default'].createElement(
          ToolTip,
          _extends({}, props, { active: this.state.tooltipVisible, parent: this.parent, key: 'tooltip' }),
          this.props.children
        ) : null
      );
    }
  }], [{
    key: 'propTypes',
    value: {
      className: _propTypes2['default'].string
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      className: ''
    },
    enumerable: true
  }]);

  return StatefulToolTip;
})(_react.Component);

exports.StatefulToolTip = StatefulToolTip;
},{"react":"dmLA","react-dom":"kUqu","prop-types":"X9bF"}],"ZYkI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = matches;
var matchesImpl;
/**
 * Checks if a given element matches a selector.
 * 
 * @param node the element
 * @param selector the selector
 */

function matches(node, selector) {
  if (!matchesImpl) {
    var body = document.body;
    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;

    matchesImpl = function matchesImpl(n, s) {
      return nativeMatch.call(n, s);
    };
  }

  return matchesImpl(node, selector);
}
},{}],"IDzb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = qsa;
var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);
/**
 * Runs `querySelectorAll` on a given element.
 * 
 * @param element the element
 * @param selector the selector
 */

function qsa(element, selector) {
  return toArray(element.querySelectorAll(selector));
}
},{}],"zhL3":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function (condition, format, a, b, c, d, e, f) {
  if ("production" !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;

    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame

    throw error;
  }
};

module.exports = invariant;
},{}],"GXNF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uncontrolledPropTypes = uncontrolledPropTypes;
exports.isProp = isProp;
exports.defaultKey = defaultKey;
exports.canAcceptRef = canAcceptRef;

var _invariant = _interopRequireDefault(require("invariant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var noop = function noop() {};

function readOnlyPropType(handler, name) {
  return function (props, propName) {
    if (props[propName] !== undefined) {
      if (!props[handler]) {
        return new Error("You have provided a `" + propName + "` prop to `" + name + "` " + ("without an `" + handler + "` handler prop. This will render a read-only field. ") + ("If the field should be mutable use `" + defaultKey(propName) + "`. ") + ("Otherwise, set `" + handler + "`."));
      }
    }
  };
}

function uncontrolledPropTypes(controlledValues, displayName) {
  var propTypes = {};
  Object.keys(controlledValues).forEach(function (prop) {
    // add default propTypes for folks that use runtime checks
    propTypes[defaultKey(prop)] = noop;

    if ("production" !== 'production') {
      var handler = controlledValues[prop];
      !(typeof handler === 'string' && handler.trim().length) ? "production" !== "production" ? (0, _invariant.default)(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : (0, _invariant.default)(false) : void 0;
      propTypes[prop] = readOnlyPropType(handler, displayName);
    }
  });
  return propTypes;
}

function isProp(props, prop) {
  return props[prop] !== undefined;
}

function defaultKey(key) {
  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);
}
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */


function canAcceptRef(component) {
  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);
}
},{"invariant":"zhL3"}],"lRfA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useUncontrolledProp = useUncontrolledProp;
exports.default = useUncontrolled;

var _extends3 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _react = require("react");

var Utils = _interopRequireWildcard(require("./utils"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");

  return typeof key === "symbol" ? key : String(key);
}

function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];

  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }

  return (hint === "string" ? String : Number)(input);
}

function useUncontrolledProp(propValue, defaultValue, handler) {
  var wasPropRef = (0, _react.useRef)(propValue !== undefined);

  var _useState = (0, _react.useState)(defaultValue),
      stateValue = _useState[0],
      setState = _useState[1];

  var isProp = propValue !== undefined;
  var wasProp = wasPropRef.current;
  wasPropRef.current = isProp;
  /**
   * If a prop switches from controlled to Uncontrolled
   * reset its value to the defaultValue
   */

  if (!isProp && wasProp && stateValue !== defaultValue) {
    setState(defaultValue);
  }

  return [isProp ? propValue : stateValue, (0, _react.useCallback)(function (value) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (handler) handler.apply(void 0, [value].concat(args));
    setState(value);
  }, [handler])];
}

function useUncontrolled(props, config) {
  return Object.keys(config).reduce(function (result, fieldName) {
    var _extends2;

    var _ref = result,
        defaultValue = _ref[Utils.defaultKey(fieldName)],
        propsValue = _ref[fieldName],
        rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));

    var handlerName = config[fieldName];

    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),
        value = _useUncontrolledProp[0],
        handler = _useUncontrolledProp[1];

    return (0, _extends3.default)({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));
  }, props);
}
},{"@babel/runtime/helpers/esm/extends":"Em0B","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","react":"dmLA","./utils":"GXNF"}],"KYkn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyfill = polyfill;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);

  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  } // Binding "this" is important for shallow renderer support.


  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
} // React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.


componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {
    return Component;
  } // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.


  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;

  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }

  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }

  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }

  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component.displayName || Component.name;
    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') + '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks');
  } // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.


  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  } // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.


  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');
    }

    prototype.componentWillUpdate = componentWillUpdate;
    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}
},{}],"w6rk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = uncontrollable;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _extends3 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/inheritsLoose"));

var _react = _interopRequireDefault(require("react"));

var _reactLifecyclesCompat = require("react-lifecycles-compat");

var _invariant = _interopRequireDefault(require("invariant"));

var Utils = _interopRequireWildcard(require("./utils"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = "/Users/jquense/src/uncontrollable/src/uncontrollable.js";

function uncontrollable(Component, controlledValues, methods) {
  if (methods === void 0) {
    methods = [];
  }

  var displayName = Component.displayName || Component.name || 'Component';
  var canAcceptRef = Utils.canAcceptRef(Component);
  var controlledProps = Object.keys(controlledValues);
  var PROPS_TO_OMIT = controlledProps.map(Utils.defaultKey);
  !(canAcceptRef || !methods.length) ? "production" !== "production" ? (0, _invariant.default)(false, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', ')) : (0, _invariant.default)(false) : void 0;

  var UncontrolledComponent = /*#__PURE__*/function (_React$Component) {
    (0, _inheritsLoose2.default)(UncontrolledComponent, _React$Component);

    function UncontrolledComponent() {
      var _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _this.handlers = Object.create(null);
      controlledProps.forEach(function (propName) {
        var handlerName = controlledValues[propName];

        var handleChange = function handleChange(value) {
          if (_this.props[handlerName]) {
            var _this$props;

            _this._notifying = true;

            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }

            (_this$props = _this.props)[handlerName].apply(_this$props, [value].concat(args));

            _this._notifying = false;
          }

          if (!_this.unmounted) _this.setState(function (_ref) {
            var _extends2;

            var values = _ref.values;
            return {
              values: (0, _extends3.default)(Object.create(null), values, (_extends2 = {}, _extends2[propName] = value, _extends2))
            };
          });
        };

        _this.handlers[handlerName] = handleChange;
      });
      if (methods.length) _this.attachRef = function (ref) {
        _this.inner = ref;
      };
      var values = Object.create(null);
      controlledProps.forEach(function (key) {
        values[key] = _this.props[Utils.defaultKey(key)];
      });
      _this.state = {
        values: values,
        prevProps: {}
      };
      return _this;
    }

    var _proto = UncontrolledComponent.prototype;

    _proto.shouldComponentUpdate = function shouldComponentUpdate() {
      //let setState trigger the update
      return !this._notifying;
    };

    UncontrolledComponent.getDerivedStateFromProps = function getDerivedStateFromProps(props, _ref2) {
      var values = _ref2.values,
          prevProps = _ref2.prevProps;
      var nextState = {
        values: (0, _extends3.default)(Object.create(null), values),
        prevProps: {}
      };
      controlledProps.forEach(function (key) {
        /**
         * If a prop switches from controlled to Uncontrolled
         * reset its value to the defaultValue
         */
        nextState.prevProps[key] = props[key];

        if (!Utils.isProp(props, key) && Utils.isProp(prevProps, key)) {
          nextState.values[key] = props[Utils.defaultKey(key)];
        }
      });
      return nextState;
    };

    _proto.componentWillUnmount = function componentWillUnmount() {
      this.unmounted = true;
    };

    _proto.render = function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          innerRef = _this$props2.innerRef,
          props = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, ["innerRef"]);
      PROPS_TO_OMIT.forEach(function (prop) {
        delete props[prop];
      });
      var newProps = {};
      controlledProps.forEach(function (propName) {
        var propValue = _this2.props[propName];
        newProps[propName] = propValue !== undefined ? propValue : _this2.state.values[propName];
      });
      return _react.default.createElement(Component, (0, _extends3.default)({}, props, newProps, this.handlers, {
        ref: innerRef || this.attachRef
      }));
    };

    return UncontrolledComponent;
  }(_react.default.Component);

  (0, _reactLifecyclesCompat.polyfill)(UncontrolledComponent);
  UncontrolledComponent.displayName = "Uncontrolled(" + displayName + ")";
  UncontrolledComponent.propTypes = (0, _extends3.default)({
    innerRef: function innerRef() {}
  }, Utils.uncontrolledPropTypes(controlledValues, displayName));
  methods.forEach(function (method) {
    UncontrolledComponent.prototype[method] = function $proxiedMethod() {
      var _this$inner;

      return (_this$inner = this.inner)[method].apply(_this$inner, arguments);
    };
  });
  var WrappedComponent = UncontrolledComponent;

  if (_react.default.forwardRef) {
    WrappedComponent = _react.default.forwardRef(function (props, ref) {
      return _react.default.createElement(UncontrolledComponent, (0, _extends3.default)({}, props, {
        innerRef: ref,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 128
        },
        __self: this
      }));
    });
    WrappedComponent.propTypes = UncontrolledComponent.propTypes;
  }

  WrappedComponent.ControlledComponent = Component;
  /**
   * useful when wrapping a Component and you want to control
   * everything
   */

  WrappedComponent.deferControlTo = function (newComponent, additions, nextMethods) {
    if (additions === void 0) {
      additions = {};
    }

    return uncontrollable(newComponent, (0, _extends3.default)({}, controlledValues, additions), nextMethods);
  };

  return WrappedComponent;
}
},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","@babel/runtime/helpers/esm/extends":"Em0B","@babel/runtime/helpers/esm/inheritsLoose":"N1sf","react":"dmLA","react-lifecycles-compat":"KYkn","invariant":"zhL3","./utils":"GXNF"}],"J83N":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "useUncontrolled", {
  enumerable: true,
  get: function () {
    return _hook.default;
  }
});
Object.defineProperty(exports, "useUncontrolledProp", {
  enumerable: true,
  get: function () {
    return _hook.useUncontrolledProp;
  }
});
Object.defineProperty(exports, "uncontrollable", {
  enumerable: true,
  get: function () {
    return _uncontrollable.default;
  }
});

var _hook = _interopRequireWildcard(require("./hook"));

var _uncontrollable = _interopRequireDefault(require("./uncontrollable"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./hook":"lRfA","./uncontrollable":"w6rk"}],"u0Ov":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usePrevious;

var _react = require("react");

/**
 * Store the last of some value. Tracked via a `Ref` only updating it
 * after the component renders.
 *
 * Helpful if you need to compare a prop value to it's previous value during render.
 *
 * ```ts
 * function Component(props) {
 *   const lastProps = usePrevious(props)
 *
 *   if (lastProps.foo !== props.foo)
 *     resetValueFromProps(props.foo)
 * }
 * ```
 *
 * @param value the value to track
 */
function usePrevious(value) {
  var ref = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    ref.current = value;
  });
  return ref.current;
}
},{"react":"dmLA"}],"BjtR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useCallbackRef;

var _react = require("react");

/**
 * A convenience hook around `useState` designed to be paired with
 * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.
 * Callback refs are useful over `useRef()` when you need to respond to the ref being set
 * instead of lazily accessing it in an effect.
 *
 * ```ts
 * const [element, attachRef] = useCallbackRef<HTMLDivElement>()
 *
 * useEffect(() => {
 *   if (!element) return
 *
 *   const calendar = new FullCalendar.Calendar(element)
 *
 *   return () => {
 *     calendar.destroy()
 *   }
 * }, [element])
 *
 * return <div ref={attachRef} />
 * ```
 *
 * @category refs
 */
function useCallbackRef() {
  return (0, _react.useState)(null);
}
},{"react":"dmLA"}],"mvX4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useForceUpdate;

var _react = require("react");

/**
 * Returns a function that triggers a component update. the hook equivalent to
 * `this.forceUpdate()` in a class component. In most cases using a state value directly
 * is preferable but may be required in some advanced usages of refs for interop or
 * when direct DOM manipulation is required.
 *
 * ```ts
 * const forceUpdate = useForceUpdate();
 *
 * const updateOnClick = useCallback(() => {
 *  forceUpdate()
 * }, [forceUpdate])
 *
 * return <button type="button" onClick={updateOnClick}>Hi there</button>
 * ```
 */
function useForceUpdate() {
  // The toggling state value is designed to defeat React optimizations for skipping
  // updates when they are stricting equal to the last state value
  var _useReducer = (0, _react.useReducer)(function (state) {
    return !state;
  }, false),
      dispatch = _useReducer[1];

  return dispatch;
}
},{"react":"dmLA"}],"uWnN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

/**
 * Creates a `Ref` whose value is updated in an effect, ensuring the most recent
 * value is the one rendered with. Generally only required for Concurrent mode usage
 * where previous work in `render()` may be discarded befor being used.
 *
 * This is safe to access in an event handler.
 *
 * @param value The `Ref` value
 */
function useCommittedRef(value) {
  var ref = (0, _react.useRef)(value);
  (0, _react.useEffect)(function () {
    ref.current = value;
  }, [value]);
  return ref;
}

var _default = useCommittedRef;
exports.default = _default;
},{"react":"dmLA"}],"tOJV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useEventCallback;

var _react = require("react");

var _useCommittedRef = _interopRequireDefault(require("./useCommittedRef"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function useEventCallback(fn) {
  var ref = (0, _useCommittedRef.default)(fn);
  return (0, _react.useCallback)(function () {
    return ref.current && ref.current.apply(ref, arguments);
  }, [ref]);
}
},{"react":"dmLA","./useCommittedRef":"uWnN"}],"tPhY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DropdownContext = /*#__PURE__*/_react.default.createContext(null);

var _default = DropdownContext;
exports.default = _default;
},{"react":"dmLA"}],"o5gl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useMounted;

var _react = require("react");

/**
 * Track whether a component is current mounted. Generally less preferable than
 * properlly canceling effects so they don't run after a component is unmounted,
 * but helpful in cases where that isn't feasible, such as a `Promise` resolution.
 *
 * @returns a function that returns the current isMounted state of the component
 *
 * ```ts
 * const [data, setData] = useState(null)
 * const isMounted = useMounted()
 *
 * useEffect(() => {
 *   fetchdata().then((newData) => {
 *      if (isMounted()) {
 *        setData(newData);
 *      }
 *   })
 * })
 * ```
 */
function useMounted() {
  var mounted = (0, _react.useRef)(true);
  var isMounted = (0, _react.useRef)(function () {
    return mounted.current;
  });
  (0, _react.useEffect)(function () {
    return function () {
      mounted.current = false;
    };
  }, []);
  return isMounted.current;
}
},{"react":"dmLA"}],"USfp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _useMounted = _interopRequireDefault(require("./useMounted"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function useSafeState(state) {
  var isMounted = (0, _useMounted.default)();
  return [state[0], (0, _react.useCallback)(function (nextState) {
    if (!isMounted()) return;
    return state[1](nextState);
  }, [isMounted, state[1]])];
}

var _default = useSafeState;
exports.default = _default;
},{"react":"dmLA","./useMounted":"o5gl"}],"cEz3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modifierPhases = exports.afterWrite = exports.write = exports.beforeWrite = exports.afterMain = exports.main = exports.beforeMain = exports.afterRead = exports.read = exports.beforeRead = exports.placements = exports.variationPlacements = exports.reference = exports.popper = exports.viewport = exports.clippingParents = exports.end = exports.start = exports.basePlacements = exports.auto = exports.left = exports.right = exports.bottom = exports.top = void 0;
var top = 'top';
exports.top = top;
var bottom = 'bottom';
exports.bottom = bottom;
var right = 'right';
exports.right = right;
var left = 'left';
exports.left = left;
var auto = 'auto';
exports.auto = auto;
var basePlacements = [top, bottom, right, left];
exports.basePlacements = basePlacements;
var start = 'start';
exports.start = start;
var end = 'end';
exports.end = end;
var clippingParents = 'clippingParents';
exports.clippingParents = clippingParents;
var viewport = 'viewport';
exports.viewport = viewport;
var popper = 'popper';
exports.popper = popper;
var reference = 'reference';
exports.reference = reference;
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
exports.variationPlacements = variationPlacements;
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

exports.placements = placements;
var beforeRead = 'beforeRead';
exports.beforeRead = beforeRead;
var read = 'read';
exports.read = read;
var afterRead = 'afterRead'; // pure-logic modifiers

exports.afterRead = afterRead;
var beforeMain = 'beforeMain';
exports.beforeMain = beforeMain;
var main = 'main';
exports.main = main;
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

exports.afterMain = afterMain;
var beforeWrite = 'beforeWrite';
exports.beforeWrite = beforeWrite;
var write = 'write';
exports.write = write;
var afterWrite = 'afterWrite';
exports.afterWrite = afterWrite;
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
exports.modifierPhases = modifierPhases;
},{}],"Og5Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getBasePlacement;

var _enums = require("../enums.js");

function getBasePlacement(placement) {
  return placement.split('-')[0];
}
},{"../enums.js":"cEz3"}],"xyzt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getBoundingClientRect;

function getBoundingClientRect(element) {
  var rect = element.getBoundingClientRect();
  return {
    width: rect.width,
    height: rect.height,
    top: rect.top,
    right: rect.right,
    bottom: rect.bottom,
    left: rect.left,
    x: rect.left,
    y: rect.top
  };
}
},{}],"ZXa8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getLayoutRect;

var _getBoundingClientRect = _interopRequireDefault(require("./getBoundingClientRect.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.
function getLayoutRect(element) {
  var clientRect = (0, _getBoundingClientRect.default)(element); // Use the clientRect sizes if it's not been transformed.
  // Fixes https://github.com/popperjs/popper-core/issues/1223

  var width = element.offsetWidth;
  var height = element.offsetHeight;

  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }

  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }

  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: width,
    height: height
  };
}
},{"./getBoundingClientRect.js":"xyzt"}],"Mhix":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getWindow;

function getWindow(node) {
  if (node == null) {
    return window;
  }

  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}
},{}],"mzFZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isElement = isElement;
exports.isHTMLElement = isHTMLElement;
exports.isShadowRoot = isShadowRoot;

var _getWindow = _interopRequireDefault(require("./getWindow.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isElement(node) {
  var OwnElement = (0, _getWindow.default)(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}

function isHTMLElement(node) {
  var OwnElement = (0, _getWindow.default)(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}

function isShadowRoot(node) {
  // IE 11 has no ShadowRoot
  if (typeof ShadowRoot === 'undefined') {
    return false;
  }

  var OwnElement = (0, _getWindow.default)(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
},{"./getWindow.js":"Mhix"}],"Rusr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = contains;

var _instanceOf = require("./instanceOf.js");

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && (0, _instanceOf.isShadowRoot)(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}
},{"./instanceOf.js":"mzFZ"}],"wFjk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getNodeName;

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}
},{}],"m22s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getComputedStyle;

var _getWindow = _interopRequireDefault(require("./getWindow.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getComputedStyle(element) {
  return (0, _getWindow.default)(element).getComputedStyle(element);
}
},{"./getWindow.js":"Mhix"}],"mTZ7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isTableElement;

var _getNodeName = _interopRequireDefault(require("./getNodeName.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf((0, _getNodeName.default)(element)) >= 0;
}
},{"./getNodeName.js":"wFjk"}],"LRhK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getDocumentElement;

var _instanceOf = require("./instanceOf.js");

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return (((0, _instanceOf.isElement)(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}
},{"./instanceOf.js":"mzFZ"}],"UMLJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getParentNode;

var _getNodeName = _interopRequireDefault(require("./getNodeName.js"));

var _getDocumentElement = _interopRequireDefault(require("./getDocumentElement.js"));

var _instanceOf = require("./instanceOf.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getParentNode(element) {
  if ((0, _getNodeName.default)(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ( // DOM Element detected
    (0, _instanceOf.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    (0, _getDocumentElement.default)(element) // fallback

  );
}
},{"./getNodeName.js":"wFjk","./getDocumentElement.js":"LRhK","./instanceOf.js":"mzFZ"}],"qRQD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getOffsetParent;

var _getWindow = _interopRequireDefault(require("./getWindow.js"));

var _getNodeName = _interopRequireDefault(require("./getNodeName.js"));

var _getComputedStyle = _interopRequireDefault(require("./getComputedStyle.js"));

var _instanceOf = require("./instanceOf.js");

var _isTableElement = _interopRequireDefault(require("./isTableElement.js"));

var _getParentNode = _interopRequireDefault(require("./getParentNode.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getTrueOffsetParent(element) {
  if (!(0, _instanceOf.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837
  (0, _getComputedStyle.default)(element).position === 'fixed') {
    return null;
  }

  return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
  var isIE = navigator.userAgent.indexOf('Trident') !== -1;

  if (isIE && (0, _instanceOf.isHTMLElement)(element)) {
    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
    var elementCss = (0, _getComputedStyle.default)(element);

    if (elementCss.position === 'fixed') {
      return null;
    }
  }

  var currentNode = (0, _getParentNode.default)(element);

  while ((0, _instanceOf.isHTMLElement)(currentNode) && ['html', 'body'].indexOf((0, _getNodeName.default)(currentNode)) < 0) {
    var css = (0, _getComputedStyle.default)(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = (0, _getWindow.default)(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && (0, _isTableElement.default)(offsetParent) && (0, _getComputedStyle.default)(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && ((0, _getNodeName.default)(offsetParent) === 'html' || (0, _getNodeName.default)(offsetParent) === 'body' && (0, _getComputedStyle.default)(offsetParent).position === 'static')) {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}
},{"./getWindow.js":"Mhix","./getNodeName.js":"wFjk","./getComputedStyle.js":"m22s","./instanceOf.js":"mzFZ","./isTableElement.js":"mTZ7","./getParentNode.js":"UMLJ"}],"vCjm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getMainAxisFromPlacement;

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}
},{}],"j2XR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.round = exports.min = exports.max = void 0;
var max = Math.max;
exports.max = max;
var min = Math.min;
exports.min = min;
var round = Math.round;
exports.round = round;
},{}],"D94x":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = within;

var _math = require("./math.js");

function within(min, value, max) {
  return (0, _math.max)(min, (0, _math.min)(value, max));
}
},{"./math.js":"j2XR"}],"f3wM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getFreshSideObject;

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
},{}],"GKpq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mergePaddingObject;

var _getFreshSideObject = _interopRequireDefault(require("./getFreshSideObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mergePaddingObject(paddingObject) {
  return Object.assign({}, (0, _getFreshSideObject.default)(), paddingObject);
}
},{"./getFreshSideObject.js":"f3wM"}],"pYUm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = expandToHashMap;

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
},{}],"FALZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getBasePlacement = _interopRequireDefault(require("../utils/getBasePlacement.js"));

var _getLayoutRect = _interopRequireDefault(require("../dom-utils/getLayoutRect.js"));

var _contains = _interopRequireDefault(require("../dom-utils/contains.js"));

var _getOffsetParent = _interopRequireDefault(require("../dom-utils/getOffsetParent.js"));

var _getMainAxisFromPlacement = _interopRequireDefault(require("../utils/getMainAxisFromPlacement.js"));

var _within = _interopRequireDefault(require("../utils/within.js"));

var _mergePaddingObject = _interopRequireDefault(require("../utils/mergePaddingObject.js"));

var _expandToHashMap = _interopRequireDefault(require("../utils/expandToHashMap.js"));

var _enums = require("../enums.js");

var _instanceOf = require("../dom-utils/instanceOf.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line import/no-unused-modules
var toPaddingObject = function toPaddingObject(padding, state) {
  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return (0, _mergePaddingObject.default)(typeof padding !== 'number' ? padding : (0, _expandToHashMap.default)(padding, _enums.basePlacements));
};

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name,
      options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = (0, _getBasePlacement.default)(state.placement);
  var axis = (0, _getMainAxisFromPlacement.default)(basePlacement);
  var isVertical = [_enums.left, _enums.right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = (0, _getLayoutRect.default)(arrowElement);
  var minProp = axis === 'y' ? _enums.top : _enums.left;
  var maxProp = axis === 'y' ? _enums.bottom : _enums.right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = (0, _getOffsetParent.default)(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = (0, _within.default)(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect(_ref2) {
  var state = _ref2.state,
      options = _ref2.options;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if ("production" !== "production") {
    if (!(0, _instanceOf.isHTMLElement)(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!(0, _contains.default)(state.elements.popper, arrowElement)) {
    if ("production" !== "production") {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};
exports.default = _default;
},{"../utils/getBasePlacement.js":"Og5Z","../dom-utils/getLayoutRect.js":"ZXa8","../dom-utils/contains.js":"Rusr","../dom-utils/getOffsetParent.js":"qRQD","../utils/getMainAxisFromPlacement.js":"vCjm","../utils/within.js":"D94x","../utils/mergePaddingObject.js":"GKpq","../utils/expandToHashMap.js":"pYUm","../enums.js":"cEz3","../dom-utils/instanceOf.js":"mzFZ"}],"nkcy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapToStyles = mapToStyles;
exports.default = void 0;

var _enums = require("../enums.js");

var _getOffsetParent = _interopRequireDefault(require("../dom-utils/getOffsetParent.js"));

var _getWindow = _interopRequireDefault(require("../dom-utils/getWindow.js"));

var _getDocumentElement = _interopRequireDefault(require("../dom-utils/getDocumentElement.js"));

var _getComputedStyle = _interopRequireDefault(require("../dom-utils/getComputedStyle.js"));

var _getBasePlacement = _interopRequireDefault(require("../utils/getBasePlacement.js"));

var _math = require("../utils/math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line import/no-unused-modules
var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: (0, _math.round)((0, _math.round)(x * dpr) / dpr) || 0,
    y: (0, _math.round)((0, _math.round)(y * dpr) / dpr) || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets;

  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,
      _ref3$x = _ref3.x,
      x = _ref3$x === void 0 ? 0 : _ref3$x,
      _ref3$y = _ref3.y,
      y = _ref3$y === void 0 ? 0 : _ref3$y;

  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = _enums.left;
  var sideY = _enums.top;
  var win = window;

  if (adaptive) {
    var offsetParent = (0, _getOffsetParent.default)(popper);
    var heightProp = 'clientHeight';
    var widthProp = 'clientWidth';

    if (offsetParent === (0, _getWindow.default)(popper)) {
      offsetParent = (0, _getDocumentElement.default)(popper);

      if ((0, _getComputedStyle.default)(offsetParent).position !== 'static') {
        heightProp = 'scrollHeight';
        widthProp = 'scrollWidth';
      }
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


    offsetParent = offsetParent;

    if (placement === _enums.top) {
      sideY = _enums.bottom; // $FlowFixMe[prop-missing]

      y -= offsetParent[heightProp] - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === _enums.left) {
      sideX = _enums.right; // $FlowFixMe[prop-missing]

      x -= offsetParent[widthProp] - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref4) {
  var state = _ref4.state,
      options = _ref4.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if ("production" !== "production") {
    var transitionProperty = (0, _getComputedStyle.default)(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: (0, _getBasePlacement.default)(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};
exports.default = _default;
},{"../enums.js":"cEz3","../dom-utils/getOffsetParent.js":"qRQD","../dom-utils/getWindow.js":"Mhix","../dom-utils/getDocumentElement.js":"LRhK","../dom-utils/getComputedStyle.js":"m22s","../utils/getBasePlacement.js":"Og5Z","../utils/math.js":"j2XR"}],"k5OC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getWindow = _interopRequireDefault(require("../dom-utils/getWindow.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line import/no-unused-modules
var passive = {
  passive: true
};

function effect(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = (0, _getWindow.default)(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect,
  data: {}
};
exports.default = _default;
},{"../dom-utils/getWindow.js":"Mhix"}],"PZEj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getOppositePlacement;
var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};

function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
},{}],"mXkm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getOppositeVariationPlacement;
var hash = {
  start: 'end',
  end: 'start'
};

function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash[matched];
  });
}
},{}],"j3kn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getWindowScroll;

var _getWindow = _interopRequireDefault(require("./getWindow.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getWindowScroll(node) {
  var win = (0, _getWindow.default)(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}
},{"./getWindow.js":"Mhix"}],"TeYH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getWindowScrollBarX;

var _getBoundingClientRect = _interopRequireDefault(require("./getBoundingClientRect.js"));

var _getDocumentElement = _interopRequireDefault(require("./getDocumentElement.js"));

var _getWindowScroll = _interopRequireDefault(require("./getWindowScroll.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return (0, _getBoundingClientRect.default)((0, _getDocumentElement.default)(element)).left + (0, _getWindowScroll.default)(element).scrollLeft;
}
},{"./getBoundingClientRect.js":"xyzt","./getDocumentElement.js":"LRhK","./getWindowScroll.js":"j3kn"}],"X1pJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getViewportRect;

var _getWindow = _interopRequireDefault(require("./getWindow.js"));

var _getDocumentElement = _interopRequireDefault(require("./getDocumentElement.js"));

var _getWindowScrollBarX = _interopRequireDefault(require("./getWindowScrollBarX.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getViewportRect(element) {
  var win = (0, _getWindow.default)(element);
  var html = (0, _getDocumentElement.default)(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + (0, _getWindowScrollBarX.default)(element),
    y: y
  };
}
},{"./getWindow.js":"Mhix","./getDocumentElement.js":"LRhK","./getWindowScrollBarX.js":"TeYH"}],"Eb6h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getDocumentRect;

var _getDocumentElement = _interopRequireDefault(require("./getDocumentElement.js"));

var _getComputedStyle = _interopRequireDefault(require("./getComputedStyle.js"));

var _getWindowScrollBarX = _interopRequireDefault(require("./getWindowScrollBarX.js"));

var _getWindowScroll = _interopRequireDefault(require("./getWindowScroll.js"));

var _math = require("../utils/math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable
function getDocumentRect(element) {
  var _element$ownerDocumen;

  var html = (0, _getDocumentElement.default)(element);
  var winScroll = (0, _getWindowScroll.default)(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = (0, _math.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = (0, _math.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + (0, _getWindowScrollBarX.default)(element);
  var y = -winScroll.scrollTop;

  if ((0, _getComputedStyle.default)(body || html).direction === 'rtl') {
    x += (0, _math.max)(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}
},{"./getDocumentElement.js":"LRhK","./getComputedStyle.js":"m22s","./getWindowScrollBarX.js":"TeYH","./getWindowScroll.js":"j3kn","../utils/math.js":"j2XR"}],"Gcl6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isScrollParent;

var _getComputedStyle2 = _interopRequireDefault(require("./getComputedStyle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = (0, _getComputedStyle2.default)(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
},{"./getComputedStyle.js":"m22s"}],"rY3b":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getScrollParent;

var _getParentNode = _interopRequireDefault(require("./getParentNode.js"));

var _isScrollParent = _interopRequireDefault(require("./isScrollParent.js"));

var _getNodeName = _interopRequireDefault(require("./getNodeName.js"));

var _instanceOf = require("./instanceOf.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf((0, _getNodeName.default)(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if ((0, _instanceOf.isHTMLElement)(node) && (0, _isScrollParent.default)(node)) {
    return node;
  }

  return getScrollParent((0, _getParentNode.default)(node));
}
},{"./getParentNode.js":"UMLJ","./isScrollParent.js":"Gcl6","./getNodeName.js":"wFjk","./instanceOf.js":"mzFZ"}],"odmb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = listScrollParents;

var _getScrollParent = _interopRequireDefault(require("./getScrollParent.js"));

var _getParentNode = _interopRequireDefault(require("./getParentNode.js"));

var _getWindow = _interopRequireDefault(require("./getWindow.js"));

var _isScrollParent = _interopRequireDefault(require("./isScrollParent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/
function listScrollParents(element, list) {
  var _element$ownerDocumen;

  if (list === void 0) {
    list = [];
  }

  var scrollParent = (0, _getScrollParent.default)(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = (0, _getWindow.default)(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], (0, _isScrollParent.default)(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents((0, _getParentNode.default)(target)));
}
},{"./getScrollParent.js":"rY3b","./getParentNode.js":"UMLJ","./getWindow.js":"Mhix","./isScrollParent.js":"Gcl6"}],"BAgT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rectToClientRect;

function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
},{}],"H9Ju":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getClippingRect;

var _enums = require("../enums.js");

var _getViewportRect = _interopRequireDefault(require("./getViewportRect.js"));

var _getDocumentRect = _interopRequireDefault(require("./getDocumentRect.js"));

var _listScrollParents = _interopRequireDefault(require("./listScrollParents.js"));

var _getOffsetParent = _interopRequireDefault(require("./getOffsetParent.js"));

var _getDocumentElement = _interopRequireDefault(require("./getDocumentElement.js"));

var _getComputedStyle = _interopRequireDefault(require("./getComputedStyle.js"));

var _instanceOf = require("./instanceOf.js");

var _getBoundingClientRect = _interopRequireDefault(require("./getBoundingClientRect.js"));

var _getParentNode = _interopRequireDefault(require("./getParentNode.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _getNodeName = _interopRequireDefault(require("./getNodeName.js"));

var _rectToClientRect = _interopRequireDefault(require("../utils/rectToClientRect.js"));

var _math = require("../utils/math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getInnerBoundingClientRect(element) {
  var rect = (0, _getBoundingClientRect.default)(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === _enums.viewport ? (0, _rectToClientRect.default)((0, _getViewportRect.default)(element)) : (0, _instanceOf.isHTMLElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent) : (0, _rectToClientRect.default)((0, _getDocumentRect.default)((0, _getDocumentElement.default)(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = (0, _listScrollParents.default)((0, _getParentNode.default)(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf((0, _getComputedStyle.default)(element).position) >= 0;
  var clipperElement = canEscapeClipping && (0, _instanceOf.isHTMLElement)(element) ? (0, _getOffsetParent.default)(element) : element;

  if (!(0, _instanceOf.isElement)(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return (0, _instanceOf.isElement)(clippingParent) && (0, _contains.default)(clippingParent, clipperElement) && (0, _getNodeName.default)(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = (0, _math.max)(rect.top, accRect.top);
    accRect.right = (0, _math.min)(rect.right, accRect.right);
    accRect.bottom = (0, _math.min)(rect.bottom, accRect.bottom);
    accRect.left = (0, _math.max)(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
},{"../enums.js":"cEz3","./getViewportRect.js":"X1pJ","./getDocumentRect.js":"Eb6h","./listScrollParents.js":"odmb","./getOffsetParent.js":"qRQD","./getDocumentElement.js":"LRhK","./getComputedStyle.js":"m22s","./instanceOf.js":"mzFZ","./getBoundingClientRect.js":"xyzt","./getParentNode.js":"UMLJ","./contains.js":"Rusr","./getNodeName.js":"wFjk","../utils/rectToClientRect.js":"BAgT","../utils/math.js":"j2XR"}],"wjdI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getVariation;

function getVariation(placement) {
  return placement.split('-')[1];
}
},{}],"ZIs3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = computeOffsets;

var _getBasePlacement = _interopRequireDefault(require("./getBasePlacement.js"));

var _getVariation = _interopRequireDefault(require("./getVariation.js"));

var _getMainAxisFromPlacement = _interopRequireDefault(require("./getMainAxisFromPlacement.js"));

var _enums = require("../enums.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? (0, _getBasePlacement.default)(placement) : null;
  var variation = placement ? (0, _getVariation.default)(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case _enums.top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case _enums.bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case _enums.right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case _enums.left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? (0, _getMainAxisFromPlacement.default)(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case _enums.start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case _enums.end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;

      default:
    }
  }

  return offsets;
}
},{"./getBasePlacement.js":"Og5Z","./getVariation.js":"wjdI","./getMainAxisFromPlacement.js":"vCjm","../enums.js":"cEz3"}],"ATnW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = detectOverflow;

var _getBoundingClientRect = _interopRequireDefault(require("../dom-utils/getBoundingClientRect.js"));

var _getClippingRect = _interopRequireDefault(require("../dom-utils/getClippingRect.js"));

var _getDocumentElement = _interopRequireDefault(require("../dom-utils/getDocumentElement.js"));

var _computeOffsets = _interopRequireDefault(require("./computeOffsets.js"));

var _rectToClientRect = _interopRequireDefault(require("./rectToClientRect.js"));

var _enums = require("../enums.js");

var _instanceOf = require("../dom-utils/instanceOf.js");

var _mergePaddingObject = _interopRequireDefault(require("./mergePaddingObject.js"));

var _expandToHashMap = _interopRequireDefault(require("./expandToHashMap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line import/no-unused-modules
function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? _enums.clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? _enums.viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? _enums.popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = (0, _mergePaddingObject.default)(typeof padding !== 'number' ? padding : (0, _expandToHashMap.default)(padding, _enums.basePlacements));
  var altContext = elementContext === _enums.popper ? _enums.reference : _enums.popper;
  var referenceElement = state.elements.reference;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = (0, _getClippingRect.default)((0, _instanceOf.isElement)(element) ? element : element.contextElement || (0, _getDocumentElement.default)(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = (0, _getBoundingClientRect.default)(referenceElement);
  var popperOffsets = (0, _computeOffsets.default)({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = (0, _rectToClientRect.default)(Object.assign({}, popperRect, popperOffsets));
  var elementClientRect = elementContext === _enums.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === _enums.popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [_enums.right, _enums.bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [_enums.top, _enums.bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}
},{"../dom-utils/getBoundingClientRect.js":"xyzt","../dom-utils/getClippingRect.js":"H9Ju","../dom-utils/getDocumentElement.js":"LRhK","./computeOffsets.js":"ZIs3","./rectToClientRect.js":"BAgT","../enums.js":"cEz3","../dom-utils/instanceOf.js":"mzFZ","./mergePaddingObject.js":"GKpq","./expandToHashMap.js":"pYUm"}],"SK6l":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = computeAutoPlacement;

var _getVariation = _interopRequireDefault(require("./getVariation.js"));

var _enums = require("../enums.js");

var _detectOverflow = _interopRequireDefault(require("./detectOverflow.js"));

var _getBasePlacement = _interopRequireDefault(require("./getBasePlacement.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? _enums.placements : _options$allowedAutoP;
  var variation = (0, _getVariation.default)(placement);
  var placements = variation ? flipVariations ? _enums.variationPlacements : _enums.variationPlacements.filter(function (placement) {
    return (0, _getVariation.default)(placement) === variation;
  }) : _enums.basePlacements;
  var allowedPlacements = placements.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements;

    if ("production" !== "production") {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = (0, _detectOverflow.default)(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[(0, _getBasePlacement.default)(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}
},{"./getVariation.js":"wjdI","../enums.js":"cEz3","./detectOverflow.js":"ATnW","./getBasePlacement.js":"Og5Z"}],"fbts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getOppositePlacement = _interopRequireDefault(require("../utils/getOppositePlacement.js"));

var _getBasePlacement = _interopRequireDefault(require("../utils/getBasePlacement.js"));

var _getOppositeVariationPlacement = _interopRequireDefault(require("../utils/getOppositeVariationPlacement.js"));

var _detectOverflow = _interopRequireDefault(require("../utils/detectOverflow.js"));

var _computeAutoPlacement = _interopRequireDefault(require("../utils/computeAutoPlacement.js"));

var _enums = require("../enums.js");

var _getVariation = _interopRequireDefault(require("../utils/getVariation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line import/no-unused-modules
function getExpandedFallbackPlacements(placement) {
  if ((0, _getBasePlacement.default)(placement) === _enums.auto) {
    return [];
  }

  var oppositePlacement = (0, _getOppositePlacement.default)(placement);
  return [(0, _getOppositeVariationPlacement.default)(placement), oppositePlacement, (0, _getOppositeVariationPlacement.default)(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = (0, _getBasePlacement.default)(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [(0, _getOppositePlacement.default)(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat((0, _getBasePlacement.default)(placement) === _enums.auto ? (0, _computeAutoPlacement.default)(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = (0, _getBasePlacement.default)(placement);

    var isStartVariation = (0, _getVariation.default)(placement) === _enums.start;

    var isVertical = [_enums.top, _enums.bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = (0, _detectOverflow.default)(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? _enums.right : _enums.left : isStartVariation ? _enums.bottom : _enums.top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = (0, _getOppositePlacement.default)(mainVariationSide);
    }

    var altVariationSide = (0, _getOppositePlacement.default)(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};
exports.default = _default;
},{"../utils/getOppositePlacement.js":"PZEj","../utils/getBasePlacement.js":"Og5Z","../utils/getOppositeVariationPlacement.js":"mXkm","../utils/detectOverflow.js":"ATnW","../utils/computeAutoPlacement.js":"SK6l","../enums.js":"cEz3","../utils/getVariation.js":"wjdI"}],"Rvjg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _enums = require("../enums.js");

var _detectOverflow = _interopRequireDefault(require("../utils/detectOverflow.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [_enums.top, _enums.right, _enums.bottom, _enums.left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = (0, _detectOverflow.default)(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = (0, _detectOverflow.default)(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};
exports.default = _default;
},{"../enums.js":"cEz3","../utils/detectOverflow.js":"ATnW"}],"F9Vi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distanceAndSkiddingToXY = distanceAndSkiddingToXY;
exports.default = void 0;

var _getBasePlacement = _interopRequireDefault(require("../utils/getBasePlacement.js"));

var _enums = require("../enums.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = (0, _getBasePlacement.default)(placement);
  var invertDistance = [_enums.left, _enums.top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [_enums.left, _enums.right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;

  var data = _enums.placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});

  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};
exports.default = _default;
},{"../utils/getBasePlacement.js":"Og5Z","../enums.js":"cEz3"}],"Umkk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _computeOffsets = _interopRequireDefault(require("../utils/computeOffsets.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name; // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step

  state.modifiersData[name] = (0, _computeOffsets.default)({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};
exports.default = _default;
},{"../utils/computeOffsets.js":"ZIs3"}],"mQr6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getAltAxis;

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}
},{}],"Yh4Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _enums = require("../enums.js");

var _getBasePlacement = _interopRequireDefault(require("../utils/getBasePlacement.js"));

var _getMainAxisFromPlacement = _interopRequireDefault(require("../utils/getMainAxisFromPlacement.js"));

var _getAltAxis = _interopRequireDefault(require("../utils/getAltAxis.js"));

var _within = _interopRequireDefault(require("../utils/within.js"));

var _getLayoutRect = _interopRequireDefault(require("../dom-utils/getLayoutRect.js"));

var _getOffsetParent = _interopRequireDefault(require("../dom-utils/getOffsetParent.js"));

var _detectOverflow = _interopRequireDefault(require("../utils/detectOverflow.js"));

var _getVariation = _interopRequireDefault(require("../utils/getVariation.js"));

var _getFreshSideObject = _interopRequireDefault(require("../utils/getFreshSideObject.js"));

var _math = require("../utils/math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = (0, _detectOverflow.default)(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = (0, _getBasePlacement.default)(state.placement);
  var variation = (0, _getVariation.default)(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = (0, _getMainAxisFromPlacement.default)(basePlacement);
  var altAxis = (0, _getAltAxis.default)(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis || checkAltAxis) {
    var mainSide = mainAxis === 'y' ? _enums.top : _enums.left;
    var altSide = mainAxis === 'y' ? _enums.bottom : _enums.right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = popperOffsets[mainAxis] + overflow[mainSide];
    var max = popperOffsets[mainAxis] - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === _enums.start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === _enums.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? (0, _getLayoutRect.default)(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0, _getFreshSideObject.default)();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = (0, _within.default)(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
    var arrowOffsetParent = state.elements.arrow && (0, _getOffsetParent.default)(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;

    if (checkMainAxis) {
      var preventedOffset = (0, _within.default)(tether ? (0, _math.min)(min, tetherMin) : min, offset, tether ? (0, _math.max)(max, tetherMax) : max);
      popperOffsets[mainAxis] = preventedOffset;
      data[mainAxis] = preventedOffset - offset;
    }

    if (checkAltAxis) {
      var _mainSide = mainAxis === 'x' ? _enums.top : _enums.left;

      var _altSide = mainAxis === 'x' ? _enums.bottom : _enums.right;

      var _offset = popperOffsets[altAxis];

      var _min = _offset + overflow[_mainSide];

      var _max = _offset - overflow[_altSide];

      var _preventedOffset = (0, _within.default)(tether ? (0, _math.min)(_min, tetherMin) : _min, _offset, tether ? (0, _math.max)(_max, tetherMax) : _max);

      popperOffsets[altAxis] = _preventedOffset;
      data[altAxis] = _preventedOffset - _offset;
    }
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var _default = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};
exports.default = _default;
},{"../enums.js":"cEz3","../utils/getBasePlacement.js":"Og5Z","../utils/getMainAxisFromPlacement.js":"vCjm","../utils/getAltAxis.js":"mQr6","../utils/within.js":"D94x","../dom-utils/getLayoutRect.js":"ZXa8","../dom-utils/getOffsetParent.js":"qRQD","../utils/detectOverflow.js":"ATnW","../utils/getVariation.js":"wjdI","../utils/getFreshSideObject.js":"f3wM","../utils/math.js":"j2XR"}],"LTOQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getHTMLElementScroll;

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
},{}],"g1i1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getNodeScroll;

var _getWindowScroll = _interopRequireDefault(require("./getWindowScroll.js"));

var _getWindow = _interopRequireDefault(require("./getWindow.js"));

var _instanceOf = require("./instanceOf.js");

var _getHTMLElementScroll = _interopRequireDefault(require("./getHTMLElementScroll.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getNodeScroll(node) {
  if (node === (0, _getWindow.default)(node) || !(0, _instanceOf.isHTMLElement)(node)) {
    return (0, _getWindowScroll.default)(node);
  } else {
    return (0, _getHTMLElementScroll.default)(node);
  }
}
},{"./getWindowScroll.js":"j3kn","./getWindow.js":"Mhix","./instanceOf.js":"mzFZ","./getHTMLElementScroll.js":"LTOQ"}],"DX0n":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getCompositeRect;

var _getBoundingClientRect = _interopRequireDefault(require("./getBoundingClientRect.js"));

var _getNodeScroll = _interopRequireDefault(require("./getNodeScroll.js"));

var _getNodeName = _interopRequireDefault(require("./getNodeName.js"));

var _instanceOf = require("./instanceOf.js");

var _getWindowScrollBarX = _interopRequireDefault(require("./getWindowScrollBarX.js"));

var _getDocumentElement = _interopRequireDefault(require("./getDocumentElement.js"));

var _isScrollParent = _interopRequireDefault(require("./isScrollParent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var documentElement = (0, _getDocumentElement.default)(offsetParent);
  var rect = (0, _getBoundingClientRect.default)(elementOrVirtualElement);
  var isOffsetParentAnElement = (0, _instanceOf.isHTMLElement)(offsetParent);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if ((0, _getNodeName.default)(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    (0, _isScrollParent.default)(documentElement)) {
      scroll = (0, _getNodeScroll.default)(offsetParent);
    }

    if ((0, _instanceOf.isHTMLElement)(offsetParent)) {
      offsets = (0, _getBoundingClientRect.default)(offsetParent);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = (0, _getWindowScrollBarX.default)(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
},{"./getBoundingClientRect.js":"xyzt","./getNodeScroll.js":"g1i1","./getNodeName.js":"wFjk","./instanceOf.js":"mzFZ","./getWindowScrollBarX.js":"TeYH","./getDocumentElement.js":"LRhK","./isScrollParent.js":"Gcl6"}],"Sa9b":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = orderModifiers;

var _enums = require("../enums.js");

// source: https://stackoverflow.com/questions/49875255
function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return _enums.modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
},{"../enums.js":"cEz3"}],"gpXp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = debounce;

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}
},{}],"YzPW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = format;

function format(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}
},{}],"qyXp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = validateModifiers;

var _format = _interopRequireDefault(require("./format.js"));

var _enums = require("../enums.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];

function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    Object.keys(modifier).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error((0, _format.default)(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error((0, _format.default)(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

        case 'phase':
          if (_enums.modifierPhases.indexOf(modifier.phase) < 0) {
            console.error((0, _format.default)(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + _enums.modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error((0, _format.default)(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (typeof modifier.effect !== 'function') {
            console.error((0, _format.default)(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (!Array.isArray(modifier.requires)) {
            console.error((0, _format.default)(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error((0, _format.default)(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error((0, _format.default)(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}
},{"./format.js":"YzPW","../enums.js":"cEz3"}],"fRu5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = uniqueBy;

function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}
},{}],"dudY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mergeByName;

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}
},{}],"jHJ3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.popperGenerator = popperGenerator;
Object.defineProperty(exports, "detectOverflow", {
  enumerable: true,
  get: function () {
    return _detectOverflow.default;
  }
});
exports.createPopper = void 0;

var _getCompositeRect = _interopRequireDefault(require("./dom-utils/getCompositeRect.js"));

var _getLayoutRect = _interopRequireDefault(require("./dom-utils/getLayoutRect.js"));

var _listScrollParents = _interopRequireDefault(require("./dom-utils/listScrollParents.js"));

var _getOffsetParent = _interopRequireDefault(require("./dom-utils/getOffsetParent.js"));

var _getComputedStyle2 = _interopRequireDefault(require("./dom-utils/getComputedStyle.js"));

var _orderModifiers = _interopRequireDefault(require("./utils/orderModifiers.js"));

var _debounce = _interopRequireDefault(require("./utils/debounce.js"));

var _validateModifiers = _interopRequireDefault(require("./utils/validateModifiers.js"));

var _uniqueBy = _interopRequireDefault(require("./utils/uniqueBy.js"));

var _getBasePlacement = _interopRequireDefault(require("./utils/getBasePlacement.js"));

var _mergeByName = _interopRequireDefault(require("./utils/mergeByName.js"));

var _detectOverflow = _interopRequireDefault(require("./utils/detectOverflow.js"));

var _instanceOf = require("./dom-utils/instanceOf.js");

var _enums = require("./enums.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(options) {
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options);
        state.scrollParents = {
          reference: (0, _instanceOf.isElement)(reference) ? (0, _listScrollParents.default)(reference) : reference.contextElement ? (0, _listScrollParents.default)(reference.contextElement) : [],
          popper: (0, _listScrollParents.default)(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = (0, _orderModifiers.default)((0, _mergeByName.default)([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if ("production" !== "production") {
          var modifiers = (0, _uniqueBy.default)([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          (0, _validateModifiers.default)(modifiers);

          if ((0, _getBasePlacement.default)(state.options.placement) === _enums.auto) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = (0, _getComputedStyle2.default)(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if ("production" !== "production") {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: (0, _getCompositeRect.default)(reference, (0, _getOffsetParent.default)(popper), state.options.strategy === 'fixed'),
          popper: (0, _getLayoutRect.default)(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if ("production" !== "production") {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: (0, _debounce.default)(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if ("production" !== "production") {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules

exports.createPopper = createPopper;
},{"./dom-utils/getCompositeRect.js":"DX0n","./dom-utils/getLayoutRect.js":"ZXa8","./dom-utils/listScrollParents.js":"odmb","./dom-utils/getOffsetParent.js":"qRQD","./dom-utils/getComputedStyle.js":"m22s","./utils/orderModifiers.js":"Sa9b","./utils/debounce.js":"gpXp","./utils/validateModifiers.js":"qyXp","./utils/uniqueBy.js":"fRu5","./utils/getBasePlacement.js":"Og5Z","./utils/mergeByName.js":"dudY","./utils/detectOverflow.js":"ATnW","./dom-utils/instanceOf.js":"mzFZ","./enums.js":"cEz3"}],"NtTe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "createPopper", {
  enumerable: true,
  get: function () {
    return _createPopper.createPopper;
  }
});
Object.defineProperty(exports, "popperGenerator", {
  enumerable: true,
  get: function () {
    return _createPopper.popperGenerator;
  }
});
Object.defineProperty(exports, "detectOverflow", {
  enumerable: true,
  get: function () {
    return _createPopper.detectOverflow;
  }
});

var _createPopper = require("./createPopper.js");
},{"./createPopper.js":"jHJ3"}],"BnzR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "placements", {
  enumerable: true,
  get: function () {
    return _enums.placements;
  }
});
exports.createPopper = void 0;

var _arrow = _interopRequireDefault(require("@popperjs/core/lib/modifiers/arrow"));

var _computeStyles = _interopRequireDefault(require("@popperjs/core/lib/modifiers/computeStyles"));

var _eventListeners = _interopRequireDefault(require("@popperjs/core/lib/modifiers/eventListeners"));

var _flip = _interopRequireDefault(require("@popperjs/core/lib/modifiers/flip"));

var _hide = _interopRequireDefault(require("@popperjs/core/lib/modifiers/hide"));

var _offset = _interopRequireDefault(require("@popperjs/core/lib/modifiers/offset"));

var _popperOffsets = _interopRequireDefault(require("@popperjs/core/lib/modifiers/popperOffsets"));

var _preventOverflow = _interopRequireDefault(require("@popperjs/core/lib/modifiers/preventOverflow"));

var _enums = require("@popperjs/core/lib/enums");

var _popperBase = require("@popperjs/core/lib/popper-base");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// For the common JS build we will turn this file into a bundle with no imports.
// This is b/c the Popper lib is all esm files, and would break in a common js only environment
var createPopper = (0, _popperBase.popperGenerator)({
  defaultModifiers: [_hide.default, _popperOffsets.default, _computeStyles.default, _eventListeners.default, _offset.default, _flip.default, _preventOverflow.default, _arrow.default]
});
exports.createPopper = createPopper;
},{"@popperjs/core/lib/modifiers/arrow":"FALZ","@popperjs/core/lib/modifiers/computeStyles":"nkcy","@popperjs/core/lib/modifiers/eventListeners":"k5OC","@popperjs/core/lib/modifiers/flip":"fbts","@popperjs/core/lib/modifiers/hide":"Rvjg","@popperjs/core/lib/modifiers/offset":"F9Vi","@popperjs/core/lib/modifiers/popperOffsets":"Umkk","@popperjs/core/lib/modifiers/preventOverflow":"Yh4Q","@popperjs/core/lib/enums":"cEz3","@popperjs/core/lib/popper-base":"NtTe"}],"HoUO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _react = require("react");

var _useSafeState2 = _interopRequireDefault(require("@restart/hooks/useSafeState"));

var _popper = require("./popper");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialPopperStyles = function initialPopperStyles(position) {
  return {
    position: position,
    top: '0',
    left: '0',
    opacity: '0',
    pointerEvents: 'none'
  };
};

var disabledApplyStylesModifier = {
  name: 'applyStyles',
  enabled: false
}; // until docjs supports type exports...

var ariaDescribedByModifier = {
  name: 'ariaDescribedBy',
  enabled: true,
  phase: 'afterWrite',
  effect: function effect(_ref) {
    var state = _ref.state;
    return function () {
      var _state$elements = state.elements,
          reference = _state$elements.reference,
          popper = _state$elements.popper;

      if ('removeAttribute' in reference) {
        var ids = (reference.getAttribute('aria-describedby') || '').split(',').filter(function (id) {
          return id.trim() !== popper.id;
        });
        if (!ids.length) reference.removeAttribute('aria-describedby');else reference.setAttribute('aria-describedby', ids.join(','));
      }
    };
  },
  fn: function fn(_ref2) {
    var _popper$getAttribute;

    var state = _ref2.state;
    var _state$elements2 = state.elements,
        popper = _state$elements2.popper,
        reference = _state$elements2.reference;
    var role = (_popper$getAttribute = popper.getAttribute('role')) == null ? void 0 : _popper$getAttribute.toLowerCase();

    if (popper.id && role === 'tooltip' && 'setAttribute' in reference) {
      var ids = reference.getAttribute('aria-describedby');

      if (ids && ids.split(',').indexOf(popper.id) !== -1) {
        return;
      }

      reference.setAttribute('aria-describedby', ids ? ids + "," + popper.id : popper.id);
    }
  }
};
var EMPTY_MODIFIERS = [];
/**
 * Position an element relative some reference element using Popper.js
 *
 * @param referenceElement
 * @param popperElement
 * @param {object}      options
 * @param {object=}     options.modifiers Popper.js modifiers
 * @param {boolean=}    options.enabled toggle the popper functionality on/off
 * @param {string=}     options.placement The popper element placement relative to the reference element
 * @param {string=}     options.strategy the positioning strategy
 * @param {boolean=}    options.eventsEnabled have Popper listen on window resize events to reposition the element
 * @param {function=}   options.onCreate called when the popper is created
 * @param {function=}   options.onUpdate called when the popper is updated
 *
 * @returns {UsePopperState} The popper state
 */

function usePopper(referenceElement, popperElement, _temp) {
  var _ref3 = _temp === void 0 ? {} : _temp,
      _ref3$enabled = _ref3.enabled,
      enabled = _ref3$enabled === void 0 ? true : _ref3$enabled,
      _ref3$placement = _ref3.placement,
      placement = _ref3$placement === void 0 ? 'bottom' : _ref3$placement,
      _ref3$strategy = _ref3.strategy,
      strategy = _ref3$strategy === void 0 ? 'absolute' : _ref3$strategy,
      _ref3$modifiers = _ref3.modifiers,
      modifiers = _ref3$modifiers === void 0 ? EMPTY_MODIFIERS : _ref3$modifiers,
      config = (0, _objectWithoutPropertiesLoose2.default)(_ref3, ["enabled", "placement", "strategy", "modifiers"]);

  var popperInstanceRef = (0, _react.useRef)();
  var update = (0, _react.useCallback)(function () {
    var _popperInstanceRef$cu;

    (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();
  }, []);
  var forceUpdate = (0, _react.useCallback)(function () {
    var _popperInstanceRef$cu2;

    (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();
  }, []);

  var _useSafeState = (0, _useSafeState2.default)((0, _react.useState)({
    placement: placement,
    update: update,
    forceUpdate: forceUpdate,
    attributes: {},
    styles: {
      popper: initialPopperStyles(strategy),
      arrow: {}
    }
  })),
      popperState = _useSafeState[0],
      setState = _useSafeState[1];

  var updateModifier = (0, _react.useMemo)(function () {
    return {
      name: 'updateStateModifier',
      enabled: true,
      phase: 'write',
      requires: ['computeStyles'],
      fn: function fn(_ref4) {
        var state = _ref4.state;
        var styles = {};
        var attributes = {};
        Object.keys(state.elements).forEach(function (element) {
          styles[element] = state.styles[element];
          attributes[element] = state.attributes[element];
        });
        setState({
          state: state,
          styles: styles,
          attributes: attributes,
          update: update,
          forceUpdate: forceUpdate,
          placement: state.placement
        });
      }
    };
  }, [update, forceUpdate, setState]);
  (0, _react.useEffect)(function () {
    if (!popperInstanceRef.current || !enabled) return;
    popperInstanceRef.current.setOptions({
      placement: placement,
      strategy: strategy,
      modifiers: [].concat(modifiers, [updateModifier, disabledApplyStylesModifier])
    }); // intentionally NOT re-running on new modifiers
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [strategy, placement, updateModifier, enabled]);
  (0, _react.useEffect)(function () {
    if (!enabled || referenceElement == null || popperElement == null) {
      return undefined;
    }

    popperInstanceRef.current = (0, _popper.createPopper)(referenceElement, popperElement, (0, _extends2.default)({}, config, {
      placement: placement,
      strategy: strategy,
      modifiers: [].concat(modifiers, [ariaDescribedByModifier, updateModifier])
    }));
    return function () {
      if (popperInstanceRef.current != null) {
        popperInstanceRef.current.destroy();
        popperInstanceRef.current = undefined;
        setState(function (s) {
          return (0, _extends2.default)({}, s, {
            attributes: {},
            styles: {
              popper: initialPopperStyles(strategy)
            }
          });
        });
      }
    }; // This is only run once to _create_ the popper
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [enabled, referenceElement, popperElement]);
  return popperState;
}

var _default = usePopper;
exports.default = _default;
},{"@babel/runtime/helpers/esm/extends":"Em0B","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","react":"dmLA","@restart/hooks/useSafeState":"USfp","./popper":"BnzR"}],"iWnH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = contains;

/* eslint-disable no-bitwise, no-cond-assign */

/**
 * Checks if an element contains another given element.
 * 
 * @param context the context element
 * @param node the element to check
 */
function contains(context, node) {
  // HTML DOM and SVG DOM may have different support levels,
  // so we need to check on context instead of a document root element.
  if (context.contains) return context.contains(node);
  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);
}
},{}],"tpNi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

exports.default = _default;
},{}],"hBGS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.onceSupported = exports.optionsSupported = void 0;

var _canUseDOM = _interopRequireDefault(require("./canUseDOM"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-return-assign */
var optionsSupported = false;
exports.optionsSupported = optionsSupported;
var onceSupported = false;
exports.onceSupported = onceSupported;

try {
  var options = {
    get passive() {
      return exports.optionsSupported = optionsSupported = true;
    },

    get once() {
      // eslint-disable-next-line no-multi-assign
      return exports.onceSupported = onceSupported = exports.optionsSupported = optionsSupported = true;
    }

  };

  if (_canUseDOM.default) {
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, true);
  }
} catch (e) {
  /* */
}
/**
 * An `addEventListener` ponyfill, supports the `once` option
 * 
 * @param node the element
 * @param eventName the event name
 * @param handle the handler
 * @param options event options
 */


function addEventListener(node, eventName, handler, options) {
  if (options && typeof options !== 'boolean' && !onceSupported) {
    var once = options.once,
        capture = options.capture;
    var wrappedHandler = handler;

    if (!onceSupported && once) {
      wrappedHandler = handler.__once || function onceHandler(event) {
        this.removeEventListener(eventName, onceHandler, capture);
        handler.call(this, event);
      };

      handler.__once = wrappedHandler;
    }

    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);
  }

  node.addEventListener(eventName, handler, options);
}

var _default = addEventListener;
exports.default = _default;
},{"./canUseDOM":"tpNi"}],"BJGt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A `removeEventListener` ponyfill
 * 
 * @param node the element
 * @param eventName the event name
 * @param handle the handler
 * @param options event options
 */
function removeEventListener(node, eventName, handler, options) {
  var capture = options && typeof options !== 'boolean' ? options.capture : options;
  node.removeEventListener(eventName, handler, capture);

  if (handler.__once) {
    node.removeEventListener(eventName, handler.__once, capture);
  }
}

var _default = removeEventListener;
exports.default = _default;
},{}],"Y91L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addEventListener = _interopRequireDefault(require("./addEventListener"));

var _removeEventListener = _interopRequireDefault(require("./removeEventListener"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function listen(node, eventName, handler, options) {
  (0, _addEventListener.default)(node, eventName, handler, options);
  return function () {
    (0, _removeEventListener.default)(node, eventName, handler, options);
  };
}

var _default = listen;
exports.default = _default;
},{"./addEventListener":"hBGS","./removeEventListener":"BJGt"}],"b3fH":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';
/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "production" !== 'production';

var warning = function () {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);

    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function (condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);

    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }

    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;
},{}],"BksI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ownerDocument;

/**
 * Returns the owner document of a given element.
 * 
 * @param node the element
 */
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}
},{}],"xHKG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = safeFindDOMNode;

var _reactDom = _interopRequireDefault(require("react-dom"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function safeFindDOMNode(componentOrElement) {
  if (componentOrElement && 'setState' in componentOrElement) {
    return _reactDom.default.findDOMNode(componentOrElement);
  }

  return componentOrElement != null ? componentOrElement : null;
}
},{"react-dom":"kUqu"}],"g1OV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ownerDocument = _interopRequireDefault(require("dom-helpers/ownerDocument"));

var _safeFindDOMNode = _interopRequireDefault(require("./safeFindDOMNode"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function _default(componentOrElement) {
  return (0, _ownerDocument.default)((0, _safeFindDOMNode.default)(componentOrElement));
};

exports.default = _default;
},{"dom-helpers/ownerDocument":"BksI","./safeFindDOMNode":"xHKG"}],"fBao":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _contains = _interopRequireDefault(require("dom-helpers/contains"));

var _listen = _interopRequireDefault(require("dom-helpers/listen"));

var _react = require("react");

var _useEventCallback = _interopRequireDefault(require("@restart/hooks/useEventCallback"));

var _warning = _interopRequireDefault(require("warning"));

var _ownerDocument = _interopRequireDefault(require("./ownerDocument"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var escapeKeyCode = 27;

var noop = function noop() {};

function isLeftClickEvent(event) {
  return event.button === 0;
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}

var getRefTarget = function getRefTarget(ref) {
  return ref && ('current' in ref ? ref.current : ref);
};
/**
 * The `useRootClose` hook registers your callback on the document
 * when rendered. Powers the `<Overlay/>` component. This is used achieve modal
 * style behavior where your callback is triggered when the user tries to
 * interact with the rest of the document or hits the `esc` key.
 *
 * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary
 * @param {function} onRootClose
 * @param {object=}  options
 * @param {boolean=} options.disabled
 * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on
 */


function useRootClose(ref, onRootClose, _temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      disabled = _ref.disabled,
      _ref$clickTrigger = _ref.clickTrigger,
      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;

  var preventMouseRootCloseRef = (0, _react.useRef)(false);
  var onClose = onRootClose || noop;
  var handleMouseCapture = (0, _react.useCallback)(function (e) {
    var currentTarget = getRefTarget(ref);
    (0, _warning.default)(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');
    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!(0, _contains.default)(currentTarget, e.target);
  }, [ref]);
  var handleMouse = (0, _useEventCallback.default)(function (e) {
    if (!preventMouseRootCloseRef.current) {
      onClose(e);
    }
  });
  var handleKeyUp = (0, _useEventCallback.default)(function (e) {
    if (e.keyCode === escapeKeyCode) {
      onClose(e);
    }
  });
  (0, _react.useEffect)(function () {
    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately
    // https://github.com/facebook/react/issues/20074

    var currentEvent = window.event;
    var doc = (0, _ownerDocument.default)(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to
    // avoid false positives in the contains() check below if the target DOM
    // element is removed in the React mouse callback.

    var removeMouseCaptureListener = (0, _listen.default)(doc, clickTrigger, handleMouseCapture, true);
    var removeMouseListener = (0, _listen.default)(doc, clickTrigger, function (e) {
      // skip if this event is the same as the one running when we added the handlers
      if (e === currentEvent) {
        currentEvent = undefined;
        return;
      }

      handleMouse(e);
    });
    var removeKeyupListener = (0, _listen.default)(doc, 'keyup', function (e) {
      // skip if this event is the same as the one running when we added the handlers
      if (e === currentEvent) {
        currentEvent = undefined;
        return;
      }

      handleKeyUp(e);
    });
    var mobileSafariHackListeners = [];

    if ('ontouchstart' in doc.documentElement) {
      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {
        return (0, _listen.default)(el, 'mousemove', noop);
      });
    }

    return function () {
      removeMouseCaptureListener();
      removeMouseListener();
      removeKeyupListener();
      mobileSafariHackListeners.forEach(function (remove) {
        return remove();
      });
    };
  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);
}

var _default = useRootClose;
exports.default = _default;
},{"dom-helpers/contains":"iWnH","dom-helpers/listen":"Y91L","react":"dmLA","@restart/hooks/useEventCallback":"tOJV","warning":"b3fH","./ownerDocument":"g1OV"}],"yRcC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toModifierMap = toModifierMap;
exports.toModifierArray = toModifierArray;
exports.default = mergeOptionsWithPopperConfig;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toModifierMap(modifiers) {
  var result = {};

  if (!Array.isArray(modifiers)) {
    return modifiers || result;
  } // eslint-disable-next-line no-unused-expressions


  modifiers == null ? void 0 : modifiers.forEach(function (m) {
    result[m.name] = m;
  });
  return result;
}

function toModifierArray(map) {
  if (map === void 0) {
    map = {};
  }

  if (Array.isArray(map)) return map;
  return Object.keys(map).map(function (k) {
    map[k].name = k;
    return map[k];
  });
}

function mergeOptionsWithPopperConfig(_ref) {
  var _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;

  var enabled = _ref.enabled,
      enableEvents = _ref.enableEvents,
      placement = _ref.placement,
      flip = _ref.flip,
      offset = _ref.offset,
      containerPadding = _ref.containerPadding,
      arrowElement = _ref.arrowElement,
      _ref$popperConfig = _ref.popperConfig,
      popperConfig = _ref$popperConfig === void 0 ? {} : _ref$popperConfig;
  var modifiers = toModifierMap(popperConfig.modifiers);
  return (0, _extends2.default)({}, popperConfig, {
    placement: placement,
    enabled: enabled,
    modifiers: toModifierArray((0, _extends2.default)({}, modifiers, {
      eventListeners: {
        enabled: enableEvents
      },
      preventOverflow: (0, _extends2.default)({}, modifiers.preventOverflow, {
        options: containerPadding ? (0, _extends2.default)({
          padding: containerPadding
        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options
      }),
      offset: {
        options: (0, _extends2.default)({
          offset: offset
        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)
      },
      arrow: (0, _extends2.default)({}, modifiers.arrow, {
        enabled: !!arrowElement,
        options: (0, _extends2.default)({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {
          element: arrowElement
        })
      }),
      flip: (0, _extends2.default)({
        enabled: !!flip
      }, modifiers.flip)
    }))
  });
}
},{"@babel/runtime/helpers/esm/extends":"Em0B"}],"hmDb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDropdownMenu = useDropdownMenu;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _useCallbackRef2 = _interopRequireDefault(require("@restart/hooks/useCallbackRef"));

var _DropdownContext = _interopRequireDefault(require("./DropdownContext"));

var _usePopper2 = _interopRequireDefault(require("./usePopper"));

var _useRootClose = _interopRequireDefault(require("./useRootClose"));

var _mergeOptionsWithPopperConfig = _interopRequireDefault(require("./mergeOptionsWithPopperConfig"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var noop = function noop() {};
/**
 * @memberOf Dropdown
 * @param {object}  options
 * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection
 * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle
 * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`
 * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.
 * @param {string}  options.rootCloseEvent The pointer event to listen for when determining "clicks outside" the menu for triggering a close.
 * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.
 */


function useDropdownMenu(options) {
  if (options === void 0) {
    options = {};
  }

  var context = (0, _react.useContext)(_DropdownContext.default);

  var _useCallbackRef = (0, _useCallbackRef2.default)(),
      arrowElement = _useCallbackRef[0],
      attachArrowRef = _useCallbackRef[1];

  var hasShownRef = (0, _react.useRef)(false);
  var _options = options,
      flip = _options.flip,
      offset = _options.offset,
      rootCloseEvent = _options.rootCloseEvent,
      _options$popperConfig = _options.popperConfig,
      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,
      _options$usePopper = _options.usePopper,
      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;
  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;
  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;

  if (show && !hasShownRef.current) {
    hasShownRef.current = true;
  }

  var handleClose = function handleClose(e) {
    context == null ? void 0 : context.toggle(false, e);
  };

  var _ref = context || {},
      drop = _ref.drop,
      setMenu = _ref.setMenu,
      menuElement = _ref.menuElement,
      toggleElement = _ref.toggleElement;

  var placement = alignEnd ? 'bottom-end' : 'bottom-start';
  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';

  var _usePopper = (0, _usePopper2.default)(toggleElement, menuElement, (0, _mergeOptionsWithPopperConfig.default)({
    placement: placement,
    enabled: !!(shouldUsePopper && show),
    enableEvents: show,
    offset: offset,
    flip: flip,
    arrowElement: arrowElement,
    popperConfig: popperConfig
  })),
      styles = _usePopper.styles,
      attributes = _usePopper.attributes,
      popper = (0, _objectWithoutPropertiesLoose2.default)(_usePopper, ["styles", "attributes"]);

  var menu;
  var menuProps = {
    ref: setMenu || noop,
    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id
  };
  var childArgs = {
    show: show,
    alignEnd: alignEnd,
    hasShown: hasShownRef.current,
    close: handleClose
  };

  if (!shouldUsePopper) {
    menu = (0, _extends2.default)({}, childArgs, {
      props: menuProps
    });
  } else {
    menu = (0, _extends2.default)({}, popper, childArgs, {
      props: (0, _extends2.default)({}, menuProps, attributes.popper, {
        style: styles.popper
      }),
      arrowProps: (0, _extends2.default)({
        ref: attachArrowRef
      }, attributes.arrow, {
        style: styles.arrow
      })
    });
  }

  (0, _useRootClose.default)(menuElement, handleClose, {
    clickTrigger: rootCloseEvent,
    disabled: !(menu && show)
  });
  return menu;
}

var propTypes = {
  /**
   * A render prop that returns a Menu element. The `props`
   * argument should spread through to **a component that can accept a ref**.
   *
   * @type {Function ({
   *   show: boolean,
   *   alignEnd: boolean,
   *   close: (?SyntheticEvent) => void,
   *   placement: Placement,
   *   update: () => void,
   *   forceUpdate: () => void,
   *   props: {
   *     ref: (?HTMLElement) => void,
   *     style: { [string]: string | number },
   *     aria-labelledby: ?string
   *   },
   *   arrowProps: {
   *     ref: (?HTMLElement) => void,
   *     style: { [string]: string | number },
   *   },
   * }) => React.Element}
   */
  children: _propTypes.default.func.isRequired,

  /**
   * Controls the visible state of the menu, generally this is
   * provided by the parent `Dropdown` component,
   * but may also be specified as a prop directly.
   */
  show: _propTypes.default.bool,

  /**
   * Aligns the dropdown menu to the 'end' of it's placement position.
   * Generally this is provided by the parent `Dropdown` component,
   * but may also be specified as a prop directly.
   */
  alignEnd: _propTypes.default.bool,

  /**
   * Enables the Popper.js `flip` modifier, allowing the Dropdown to
   * automatically adjust it's placement in case of overlap with the viewport or toggle.
   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info
   */
  flip: _propTypes.default.bool,
  usePopper: _propTypes.default.oneOf([true, false]),

  /**
   * A set of popper options and props passed directly to react-popper's Popper component.
   */
  popperConfig: _propTypes.default.object,

  /**
   * Override the default event used by RootCloseWrapper.
   */
  rootCloseEvent: _propTypes.default.string
};
var defaultProps = {
  usePopper: true
};
/**
 * Also exported as `<Dropdown.Menu>` from `Dropdown`.
 *
 * @displayName DropdownMenu
 * @memberOf Dropdown
 */

function DropdownMenu(_ref2) {
  var children = _ref2.children,
      options = (0, _objectWithoutPropertiesLoose2.default)(_ref2, ["children"]);
  var args = useDropdownMenu(options);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, args.hasShown ? children(args) : null);
}

DropdownMenu.displayName = 'ReactOverlaysDropdownMenu';
DropdownMenu.propTypes = propTypes;
DropdownMenu.defaultProps = defaultProps;
/** @component */

var _default = DropdownMenu;
exports.default = _default;
},{"@babel/runtime/helpers/esm/extends":"Em0B","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","prop-types":"X9bF","react":"dmLA","@restart/hooks/useCallbackRef":"BjtR","./DropdownContext":"tPhY","./usePopper":"HoUO","./useRootClose":"fBao","./mergeOptionsWithPopperConfig":"yRcC"}],"UVxa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDropdownToggle = useDropdownToggle;
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _DropdownContext = _interopRequireDefault(require("./DropdownContext"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var noop = function noop() {};
/**
 * Wires up Dropdown toggle functionality, returning a set a props to attach
 * to the element that functions as the dropdown toggle (generally a button).
 *
 * @memberOf Dropdown
 */


function useDropdownToggle() {
  var _ref = (0, _react.useContext)(_DropdownContext.default) || {},
      _ref$show = _ref.show,
      show = _ref$show === void 0 ? false : _ref$show,
      _ref$toggle = _ref.toggle,
      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,
      setToggle = _ref.setToggle;

  return [{
    ref: setToggle || noop,
    'aria-haspopup': true,
    'aria-expanded': !!show
  }, {
    show: show,
    toggle: toggle
  }];
}

var propTypes = {
  /**
   * A render prop that returns a Toggle element. The `props`
   * argument should spread through to **a component that can accept a ref**. Use
   * the `onToggle` argument to toggle the menu open or closed
   *
   * @type {Function ({
   *   show: boolean,
   *   toggle: (show: boolean) => void,
   *   props: {
   *     ref: (?HTMLElement) => void,
   *     aria-haspopup: true
   *     aria-expanded: boolean
   *   },
   * }) => React.Element}
   */
  children: _propTypes.default.func.isRequired
};
/**
 * Also exported as `<Dropdown.Toggle>` from `Dropdown`.
 *
 * @displayName DropdownToggle
 * @memberOf Dropdown
 */

function DropdownToggle(_ref2) {
  var children = _ref2.children;

  var _useDropdownToggle = useDropdownToggle(),
      props = _useDropdownToggle[0],
      _useDropdownToggle$ = _useDropdownToggle[1],
      show = _useDropdownToggle$.show,
      toggle = _useDropdownToggle$.toggle;

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children({
    show: show,
    toggle: toggle,
    props: props
  }));
}

DropdownToggle.displayName = 'ReactOverlaysDropdownToggle';
DropdownToggle.propTypes = propTypes;
/** @component */

var _default = DropdownToggle;
exports.default = _default;
},{"prop-types":"X9bF","react":"dmLA","./DropdownContext":"tPhY"}],"Fodc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _matches = _interopRequireDefault(require("dom-helpers/matches"));

var _querySelectorAll = _interopRequireDefault(require("dom-helpers/querySelectorAll"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uncontrollable = require("uncontrollable");

var _usePrevious = _interopRequireDefault(require("@restart/hooks/usePrevious"));

var _useCallbackRef2 = _interopRequireDefault(require("@restart/hooks/useCallbackRef"));

var _useForceUpdate = _interopRequireDefault(require("@restart/hooks/useForceUpdate"));

var _useEventCallback = _interopRequireDefault(require("@restart/hooks/useEventCallback"));

var _DropdownContext = _interopRequireDefault(require("./DropdownContext"));

var _DropdownMenu = _interopRequireDefault(require("./DropdownMenu"));

var _DropdownToggle = _interopRequireDefault(require("./DropdownToggle"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  /**
   * A render prop that returns the root dropdown element. The `props`
   * argument should spread through to an element containing _both_ the
   * menu and toggle in order to handle keyboard events for focus management.
   *
   * @type {Function ({
   *   props: {
   *     onKeyDown: (SyntheticEvent) => void,
   *   },
   * }) => React.Element}
   */
  children: _propTypes.default.func.isRequired,

  /**
   * Determines the direction and location of the Menu in relation to it's Toggle.
   */
  drop: _propTypes.default.oneOf(['up', 'left', 'right', 'down']),

  /**
   * Controls the focus behavior for when the Dropdown is opened. Set to
   * `true` to always focus the first menu item, `keyboard` to focus only when
   * navigating via the keyboard, or `false` to disable completely
   *
   * The Default behavior is `false` **unless** the Menu has a `role="menu"`
   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).
   */
  focusFirstItemOnShow: _propTypes.default.oneOf([false, true, 'keyboard']),

  /**
   * A css slector string that will return __focusable__ menu items.
   * Selectors should be relative to the menu component:
   * e.g. ` > li:not('.disabled')`
   */
  itemSelector: _propTypes.default.string,

  /**
   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.
   */
  alignEnd: _propTypes.default.bool,

  /**
   * Whether or not the Dropdown is visible.
   *
   * @controllable onToggle
   */
  show: _propTypes.default.bool,

  /**
   * Sets the initial show position of the Dropdown.
   */
  defaultShow: _propTypes.default.bool,

  /**
   * A callback fired when the Dropdown wishes to change visibility. Called with the requested
   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.
   *
   * ```ts static
   * function(
   *   isOpen: boolean,
   *   event: SyntheticEvent,
   * ): void
   * ```
   *
   * @controllable show
   */
  onToggle: _propTypes.default.func
};
/**
 * @displayName Dropdown
 */

function Dropdown(_ref) {
  var drop = _ref.drop,
      alignEnd = _ref.alignEnd,
      defaultShow = _ref.defaultShow,
      rawShow = _ref.show,
      rawOnToggle = _ref.onToggle,
      _ref$itemSelector = _ref.itemSelector,
      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,
      focusFirstItemOnShow = _ref.focusFirstItemOnShow,
      children = _ref.children;
  var forceUpdate = (0, _useForceUpdate.default)();

  var _useUncontrolledProp = (0, _uncontrollable.useUncontrolledProp)(rawShow, defaultShow, rawOnToggle),
      show = _useUncontrolledProp[0],
      onToggle = _useUncontrolledProp[1];

  var _useCallbackRef = (0, _useCallbackRef2.default)(),
      toggleElement = _useCallbackRef[0],
      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the
  // the value as quickly as possible, otherwise the effect to focus the element
  // may run before the state value is set


  var menuRef = (0, _react.useRef)(null);
  var menuElement = menuRef.current;
  var setMenu = (0, _react.useCallback)(function (ref) {
    menuRef.current = ref; // ensure that a menu set triggers an update for consumers

    forceUpdate();
  }, [forceUpdate]);
  var lastShow = (0, _usePrevious.default)(show);
  var lastSourceEvent = (0, _react.useRef)(null);
  var focusInDropdown = (0, _react.useRef)(false);
  var toggle = (0, _react.useCallback)(function (event) {
    onToggle(!show, event);
  }, [onToggle, show]);
  var context = (0, _react.useMemo)(function () {
    return {
      toggle: toggle,
      drop: drop,
      show: show,
      alignEnd: alignEnd,
      menuElement: menuElement,
      toggleElement: toggleElement,
      setMenu: setMenu,
      setToggle: setToggle
    };
  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);

  if (menuElement && lastShow && !show) {
    focusInDropdown.current = menuElement.contains(document.activeElement);
  }

  var focusToggle = (0, _useEventCallback.default)(function () {
    if (toggleElement && toggleElement.focus) {
      toggleElement.focus();
    }
  });
  var maybeFocusFirst = (0, _useEventCallback.default)(function () {
    var type = lastSourceEvent.current;
    var focusType = focusFirstItemOnShow;

    if (focusType == null) {
      focusType = menuRef.current && (0, _matches.default)(menuRef.current, '[role=menu]') ? 'keyboard' : false;
    }

    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {
      return;
    }

    var first = (0, _querySelectorAll.default)(menuRef.current, itemSelector)[0];
    if (first && first.focus) first.focus();
  });
  (0, _react.useEffect)(function () {
    if (show) maybeFocusFirst();else if (focusInDropdown.current) {
      focusInDropdown.current = false;
      focusToggle();
    } // only `show` should be changing
  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);
  (0, _react.useEffect)(function () {
    lastSourceEvent.current = null;
  });

  var getNextFocusedChild = function getNextFocusedChild(current, offset) {
    if (!menuRef.current) return null;
    var items = (0, _querySelectorAll.default)(menuRef.current, itemSelector);
    var index = items.indexOf(current) + offset;
    index = Math.max(0, Math.min(index, items.length));
    return items[index];
  };

  var handleKeyDown = function handleKeyDown(event) {
    var key = event.key;
    var target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400
    // in inscrutability

    var isInput = /input|textarea/i.test(target.tagName);

    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {
      return;
    }

    lastSourceEvent.current = event.type;

    switch (key) {
      case 'ArrowUp':
        {
          var next = getNextFocusedChild(target, -1);
          if (next && next.focus) next.focus();
          event.preventDefault();
          return;
        }

      case 'ArrowDown':
        event.preventDefault();

        if (!show) {
          toggle(event);
        } else {
          var _next = getNextFocusedChild(target, 1);

          if (_next && _next.focus) _next.focus();
        }

        return;

      case 'Escape':
      case 'Tab':
        onToggle(false, event);
        break;

      default:
    }
  };

  return /*#__PURE__*/_react.default.createElement(_DropdownContext.default.Provider, {
    value: context
  }, children({
    props: {
      onKeyDown: handleKeyDown
    }
  }));
}

Dropdown.displayName = 'ReactOverlaysDropdown';
Dropdown.propTypes = propTypes;
Dropdown.Menu = _DropdownMenu.default;
Dropdown.Toggle = _DropdownToggle.default;
var _default = Dropdown;
exports.default = _default;
},{"dom-helpers/matches":"ZYkI","dom-helpers/querySelectorAll":"IDzb","react":"dmLA","prop-types":"X9bF","uncontrollable":"J83N","@restart/hooks/usePrevious":"u0Ov","@restart/hooks/useCallbackRef":"BjtR","@restart/hooks/useForceUpdate":"mvX4","@restart/hooks/useEventCallback":"tOJV","./DropdownContext":"tPhY","./DropdownMenu":"hmDb","./DropdownToggle":"UVxa"}],"P83h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = activeElement;

var _ownerDocument = _interopRequireDefault(require("./ownerDocument"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns the actively focused element safely.
 *
 * @param doc the document to check
 */
function activeElement(doc) {
  if (doc === void 0) {
    doc = (0, _ownerDocument.default)();
  } // Support: IE 9 only
  // IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>


  try {
    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing
    // document.activeElement from an <iframe>

    if (!active || !active.nodeName) return null;
    return active;
  } catch (e) {
    /* ie throws if no active element */
    return doc.body;
  }
}
},{"./ownerDocument":"BksI"}],"dESv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useUpdatedRef;

var _react = require("react");

/**
 * Returns a ref that is immediately updated with the new value
 *
 * @param value The Ref value
 * @category refs
 */
function useUpdatedRef(value) {
  var valueRef = (0, _react.useRef)(value);
  valueRef.current = value;
  return valueRef;
}
},{"react":"dmLA"}],"aXzW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useWillUnmount;

var _useUpdatedRef = _interopRequireDefault(require("./useUpdatedRef"));

var _react = require("react");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Attach a callback that fires when a component unmounts
 *
 * @param fn Handler to run when the component unmounts
 * @category effects
 */
function useWillUnmount(fn) {
  var onUnmount = (0, _useUpdatedRef.default)(fn);
  (0, _react.useEffect)(function () {
    return function () {
      return onUnmount.current();
    };
  }, []);
}
},{"./useUpdatedRef":"dESv","react":"dmLA"}],"KSkP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hasClass;

/**
 * Checks if a given element has a CSS class.
 * 
 * @param element the element
 * @param className the CSS class name
 */
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
},{}],"FDAm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = addClass;

var _hasClass = _interopRequireDefault(require("./hasClass"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Adds a CSS class to a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */
function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
}
},{"./hasClass":"KSkP"}],"vqqx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = removeClass;

function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
/**
 * Removes a CSS class from a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */


function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === 'string') {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  }
}
},{}],"FmUZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ownerWindow;

var _ownerDocument = _interopRequireDefault(require("./ownerDocument"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns the owner window of a given element.
 * 
 * @param node the element
 */
function ownerWindow(node) {
  var doc = (0, _ownerDocument.default)(node);
  return doc && doc.defaultView || window;
}
},{"./ownerDocument":"BksI"}],"BYl6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getComputedStyle;

var _ownerWindow = _interopRequireDefault(require("./ownerWindow"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns one or all computed style properties of an element.
 * 
 * @param node the element
 * @param psuedoElement the style property
 */
function getComputedStyle(node, psuedoElement) {
  return (0, _ownerWindow.default)(node).getComputedStyle(node, psuedoElement);
}
},{"./ownerWindow":"FmUZ"}],"COus":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hyphenate;
var rUpper = /([A-Z])/g;

function hyphenate(string) {
  return string.replace(rUpper, '-$1').toLowerCase();
}
},{}],"mo4g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hyphenateStyleName;

var _hyphenate = _interopRequireDefault(require("./hyphenate"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
 */
var msPattern = /^ms-/;

function hyphenateStyleName(string) {
  return (0, _hyphenate.default)(string).replace(msPattern, '-ms-');
}
},{"./hyphenate":"COus"}],"B7CT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isTransform;
var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;

function isTransform(value) {
  return !!(value && supportedTransforms.test(value));
}
},{}],"E9fR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getComputedStyle = _interopRequireDefault(require("./getComputedStyle"));

var _hyphenateStyle = _interopRequireDefault(require("./hyphenateStyle"));

var _isTransform = _interopRequireDefault(require("./isTransform"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function style(node, property) {
  var css = '';
  var transforms = '';

  if (typeof property === 'string') {
    return node.style.getPropertyValue((0, _hyphenateStyle.default)(property)) || (0, _getComputedStyle.default)(node).getPropertyValue((0, _hyphenateStyle.default)(property));
  }

  Object.keys(property).forEach(function (key) {
    var value = property[key];

    if (!value && value !== 0) {
      node.style.removeProperty((0, _hyphenateStyle.default)(key));
    } else if ((0, _isTransform.default)(key)) {
      transforms += key + "(" + value + ") ";
    } else {
      css += (0, _hyphenateStyle.default)(key) + ": " + value + ";";
    }
  });

  if (transforms) {
    css += "transform: " + transforms + ";";
  }

  node.style.cssText += ";" + css;
}

var _default = style;
exports.default = _default;
},{"./getComputedStyle":"BYl6","./hyphenateStyle":"mo4g","./isTransform":"B7CT"}],"bYof":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = scrollbarSize;

var _canUseDOM = _interopRequireDefault(require("./canUseDOM"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var size;

function scrollbarSize(recalc) {
  if (!size && size !== 0 || recalc) {
    if (_canUseDOM.default) {
      var scrollDiv = document.createElement('div');
      scrollDiv.style.position = 'absolute';
      scrollDiv.style.top = '-9999px';
      scrollDiv.style.width = '50px';
      scrollDiv.style.height = '50px';
      scrollDiv.style.overflow = 'scroll';
      document.body.appendChild(scrollDiv);
      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
    }
  }

  return size;
}
},{"./canUseDOM":"tpNi"}],"DhJI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDocument;

function isDocument(element) {
  return 'nodeType' in element && element.nodeType === document.DOCUMENT_NODE;
}
},{}],"SGTe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isWindow;

var _isDocument = _interopRequireDefault(require("./isDocument"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isWindow(node) {
  if ('window' in node && node.window === node) return node;
  if ((0, _isDocument.default)(node)) return node.defaultView || false;
  return false;
}
},{"./isDocument":"DhJI"}],"fYeI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isOverflowing;

var _isWindow = _interopRequireDefault(require("dom-helpers/isWindow"));

var _ownerDocument = _interopRequireDefault(require("dom-helpers/ownerDocument"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isBody(node) {
  return node && node.tagName.toLowerCase() === 'body';
}

function bodyIsOverflowing(node) {
  var doc = (0, _isWindow.default)(node) ? (0, _ownerDocument.default)() : (0, _ownerDocument.default)(node);
  var win = (0, _isWindow.default)(node) || doc.defaultView;
  return doc.body.clientWidth < win.innerWidth;
}

function isOverflowing(container) {
  var win = (0, _isWindow.default)(container);
  return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;
}
},{"dom-helpers/isWindow":"SGTe","dom-helpers/ownerDocument":"BksI"}],"e53R":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ariaHidden = ariaHidden;
exports.hideSiblings = hideSiblings;
exports.showSiblings = showSiblings;
var BLACKLIST = ['template', 'script', 'style'];

var isHidable = function isHidable(_ref) {
  var nodeType = _ref.nodeType,
      tagName = _ref.tagName;
  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;
};

var siblings = function siblings(container, exclude, cb) {
  [].forEach.call(container.children, function (node) {
    if (exclude.indexOf(node) === -1 && isHidable(node)) {
      cb(node);
    }
  });
};

function ariaHidden(hide, node) {
  if (!node) return;

  if (hide) {
    node.setAttribute('aria-hidden', 'true');
  } else {
    node.removeAttribute('aria-hidden');
  }
}

function hideSiblings(container, _ref2) {
  var dialog = _ref2.dialog,
      backdrop = _ref2.backdrop;
  siblings(container, [dialog, backdrop], function (node) {
    return ariaHidden(true, node);
  });
}

function showSiblings(container, _ref3) {
  var dialog = _ref3.dialog,
      backdrop = _ref3.backdrop;
  siblings(container, [dialog, backdrop], function (node) {
    return ariaHidden(false, node);
  });
}
},{}],"pANV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _addClass = _interopRequireDefault(require("dom-helpers/addClass"));

var _removeClass = _interopRequireDefault(require("dom-helpers/removeClass"));

var _css = _interopRequireDefault(require("dom-helpers/css"));

var _scrollbarSize = _interopRequireDefault(require("dom-helpers/scrollbarSize"));

var _isOverflowing = _interopRequireDefault(require("./isOverflowing"));

var _manageAriaHidden = require("./manageAriaHidden");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function findIndexOf(arr, cb) {
  var idx = -1;
  arr.some(function (d, i) {
    if (cb(d, i)) {
      idx = i;
      return true;
    }

    return false;
  });
  return idx;
}
/**
 * Proper state management for containers and the modals in those containers.
 *
 * @internal Used by the Modal to ensure proper styling of containers.
 */


var ModalManager = /*#__PURE__*/function () {
  function ModalManager(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        _ref$hideSiblingNodes = _ref.hideSiblingNodes,
        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,
        _ref$handleContainerO = _ref.handleContainerOverflow,
        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;

    this.hideSiblingNodes = void 0;
    this.handleContainerOverflow = void 0;
    this.modals = void 0;
    this.containers = void 0;
    this.data = void 0;
    this.scrollbarSize = void 0;
    this.hideSiblingNodes = hideSiblingNodes;
    this.handleContainerOverflow = handleContainerOverflow;
    this.modals = [];
    this.containers = [];
    this.data = [];
    this.scrollbarSize = (0, _scrollbarSize.default)();
  }

  var _proto = ModalManager.prototype;

  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {
    var data = this.data[this.containerIndexFromModal(modal)];
    return data && data.overflowing;
  };

  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {
    return findIndexOf(this.data, function (d) {
      return d.modals.indexOf(modal) !== -1;
    });
  };

  _proto.setContainerStyle = function setContainerStyle(containerState, container) {
    var style = {
      overflow: 'hidden'
    }; // we are only interested in the actual `style` here
    // because we will override it

    containerState.style = {
      overflow: container.style.overflow,
      paddingRight: container.style.paddingRight
    };

    if (containerState.overflowing) {
      // use computed style, here to get the real padding
      // to add our scrollbar width
      style.paddingRight = parseInt((0, _css.default)(container, 'paddingRight') || '0', 10) + this.scrollbarSize + "px";
    }

    (0, _css.default)(container, style);
  };

  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {
    Object.assign(container.style, containerState.style);
  };

  _proto.add = function add(modal, container, className) {
    var modalIdx = this.modals.indexOf(modal);
    var containerIdx = this.containers.indexOf(container);

    if (modalIdx !== -1) {
      return modalIdx;
    }

    modalIdx = this.modals.length;
    this.modals.push(modal);

    if (this.hideSiblingNodes) {
      (0, _manageAriaHidden.hideSiblings)(container, modal);
    }

    if (containerIdx !== -1) {
      this.data[containerIdx].modals.push(modal);
      return modalIdx;
    }

    var data = {
      modals: [modal],
      // right now only the first modal of a container will have its classes applied
      classes: className ? className.split(/\s+/) : [],
      overflowing: (0, _isOverflowing.default)(container)
    };

    if (this.handleContainerOverflow) {
      this.setContainerStyle(data, container);
    }

    data.classes.forEach(_addClass.default.bind(null, container));
    this.containers.push(container);
    this.data.push(data);
    return modalIdx;
  };

  _proto.remove = function remove(modal) {
    var modalIdx = this.modals.indexOf(modal);

    if (modalIdx === -1) {
      return;
    }

    var containerIdx = this.containerIndexFromModal(modal);
    var data = this.data[containerIdx];
    var container = this.containers[containerIdx];
    data.modals.splice(data.modals.indexOf(modal), 1);
    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,
    // clean up the container

    if (data.modals.length === 0) {
      data.classes.forEach(_removeClass.default.bind(null, container));

      if (this.handleContainerOverflow) {
        this.removeContainerStyle(data, container);
      }

      if (this.hideSiblingNodes) {
        (0, _manageAriaHidden.showSiblings)(container, modal);
      }

      this.containers.splice(containerIdx, 1);
      this.data.splice(containerIdx, 1);
    } else if (this.hideSiblingNodes) {
      // otherwise make sure the next top modal is visible to a SR
      var _data$modals = data.modals[data.modals.length - 1],
          backdrop = _data$modals.backdrop,
          dialog = _data$modals.dialog;
      (0, _manageAriaHidden.ariaHidden)(false, dialog);
      (0, _manageAriaHidden.ariaHidden)(false, backdrop);
    }
  };

  _proto.isTopModal = function isTopModal(modal) {
    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;
  };

  return ModalManager;
}();

var _default = ModalManager;
exports.default = _default;
},{"dom-helpers/addClass":"FDAm","dom-helpers/removeClass":"vqqx","dom-helpers/css":"E9fR","dom-helpers/scrollbarSize":"bYof","./isOverflowing":"fYeI","./manageAriaHidden":"e53R"}],"ra63":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useWaitForDOMRef;
exports.resolveContainerRef = void 0;

var _ownerDocument = _interopRequireDefault(require("dom-helpers/ownerDocument"));

var _react = require("react");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var resolveContainerRef = function resolveContainerRef(ref) {
  var _ref;

  if (typeof document === 'undefined') return null;
  if (ref == null) return (0, _ownerDocument.default)().body;
  if (typeof ref === 'function') ref = ref();
  if (ref && 'current' in ref) ref = ref.current;
  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;
  return null;
};

exports.resolveContainerRef = resolveContainerRef;

function useWaitForDOMRef(ref, onResolved) {
  var _useState = (0, _react.useState)(function () {
    return resolveContainerRef(ref);
  }),
      resolvedRef = _useState[0],
      setRef = _useState[1];

  if (!resolvedRef) {
    var earlyRef = resolveContainerRef(ref);
    if (earlyRef) setRef(earlyRef);
  }

  (0, _react.useEffect)(function () {
    if (onResolved && resolvedRef) {
      onResolved(resolvedRef);
    }
  }, [onResolved, resolvedRef]);
  (0, _react.useEffect)(function () {
    var nextRef = resolveContainerRef(ref);

    if (nextRef !== resolvedRef) {
      setRef(nextRef);
    }
  }, [ref, resolvedRef]);
  return resolvedRef;
}
},{"dom-helpers/ownerDocument":"BksI","react":"dmLA"}],"hjnA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _activeElement = _interopRequireDefault(require("dom-helpers/activeElement"));

var _contains = _interopRequireDefault(require("dom-helpers/contains"));

var _canUseDOM = _interopRequireDefault(require("dom-helpers/canUseDOM"));

var _listen = _interopRequireDefault(require("dom-helpers/listen"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _useMounted = _interopRequireDefault(require("@restart/hooks/useMounted"));

var _useWillUnmount = _interopRequireDefault(require("@restart/hooks/useWillUnmount"));

var _usePrevious = _interopRequireDefault(require("@restart/hooks/usePrevious"));

var _useEventCallback = _interopRequireDefault(require("@restart/hooks/useEventCallback"));

var _ModalManager = _interopRequireDefault(require("./ModalManager"));

var _useWaitForDOMRef = _interopRequireDefault(require("./useWaitForDOMRef"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */
var manager;

function getManager() {
  if (!manager) manager = new _ModalManager.default();
  return manager;
}

function useModalManager(provided) {
  var modalManager = provided || getManager();
  var modal = (0, _react.useRef)({
    dialog: null,
    backdrop: null
  });
  return Object.assign(modal.current, {
    add: function add(container, className) {
      return modalManager.add(modal.current, container, className);
    },
    remove: function remove() {
      return modalManager.remove(modal.current);
    },
    isTopModal: function isTopModal() {
      return modalManager.isTopModal(modal.current);
    },
    setDialogRef: (0, _react.useCallback)(function (ref) {
      modal.current.dialog = ref;
    }, []),
    setBackdropRef: (0, _react.useCallback)(function (ref) {
      modal.current.backdrop = ref;
    }, [])
  });
}

var Modal = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var _ref$show = _ref.show,
      show = _ref$show === void 0 ? false : _ref$show,
      _ref$role = _ref.role,
      role = _ref$role === void 0 ? 'dialog' : _ref$role,
      className = _ref.className,
      style = _ref.style,
      children = _ref.children,
      _ref$backdrop = _ref.backdrop,
      backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,
      _ref$keyboard = _ref.keyboard,
      keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,
      onBackdropClick = _ref.onBackdropClick,
      onEscapeKeyDown = _ref.onEscapeKeyDown,
      transition = _ref.transition,
      backdropTransition = _ref.backdropTransition,
      _ref$autoFocus = _ref.autoFocus,
      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,
      _ref$enforceFocus = _ref.enforceFocus,
      enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,
      _ref$restoreFocus = _ref.restoreFocus,
      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,
      restoreFocusOptions = _ref.restoreFocusOptions,
      renderDialog = _ref.renderDialog,
      _ref$renderBackdrop = _ref.renderBackdrop,
      renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {
    return /*#__PURE__*/_react.default.createElement("div", props);
  } : _ref$renderBackdrop,
      providedManager = _ref.manager,
      containerRef = _ref.container,
      containerClassName = _ref.containerClassName,
      onShow = _ref.onShow,
      _ref$onHide = _ref.onHide,
      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,
      onExit = _ref.onExit,
      onExited = _ref.onExited,
      onExiting = _ref.onExiting,
      onEnter = _ref.onEnter,
      onEntering = _ref.onEntering,
      onEntered = _ref.onEntered,
      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["show", "role", "className", "style", "children", "backdrop", "keyboard", "onBackdropClick", "onEscapeKeyDown", "transition", "backdropTransition", "autoFocus", "enforceFocus", "restoreFocus", "restoreFocusOptions", "renderDialog", "renderBackdrop", "manager", "container", "containerClassName", "onShow", "onHide", "onExit", "onExited", "onExiting", "onEnter", "onEntering", "onEntered"]);
  var container = (0, _useWaitForDOMRef.default)(containerRef);
  var modal = useModalManager(providedManager);
  var isMounted = (0, _useMounted.default)();
  var prevShow = (0, _usePrevious.default)(show);

  var _useState = (0, _react.useState)(!show),
      exited = _useState[0],
      setExited = _useState[1];

  var lastFocusRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return modal;
  }, [modal]);

  if (_canUseDOM.default && !prevShow && show) {
    lastFocusRef.current = (0, _activeElement.default)();
  }

  if (!transition && !show && !exited) {
    setExited(true);
  } else if (show && exited) {
    setExited(false);
  }

  var handleShow = (0, _useEventCallback.default)(function () {
    modal.add(container, containerClassName);
    removeKeydownListenerRef.current = (0, _listen.default)(document, 'keydown', handleDocumentKeyDown);
    removeFocusListenerRef.current = (0, _listen.default)(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted
    // and so steals focus from it
    function () {
      return setTimeout(handleEnforceFocus);
    }, true);

    if (onShow) {
      onShow();
    } // autofocus after onShow to not trigger a focus event for previous
    // modals before this one is shown.


    if (autoFocus) {
      var currentActiveElement = (0, _activeElement.default)(document);

      if (modal.dialog && currentActiveElement && !(0, _contains.default)(modal.dialog, currentActiveElement)) {
        lastFocusRef.current = currentActiveElement;
        modal.dialog.focus();
      }
    }
  });
  var handleHide = (0, _useEventCallback.default)(function () {
    modal.remove();
    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();
    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();

    if (restoreFocus) {
      var _lastFocusRef$current; // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)


      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);
      lastFocusRef.current = null;
    }
  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120
  // Show logic when:
  //  - show is `true` _and_ `container` has resolved

  (0, _react.useEffect)(function () {
    if (!show || !container) return;
    handleShow();
  }, [show, container,
  /* should never change: */
  handleShow]); // Hide cleanup logic when:
  //  - `exited` switches to true
  //  - component unmounts;

  (0, _react.useEffect)(function () {
    if (!exited) return;
    handleHide();
  }, [exited, handleHide]);
  (0, _useWillUnmount.default)(function () {
    handleHide();
  }); // --------------------------------

  var handleEnforceFocus = (0, _useEventCallback.default)(function () {
    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {
      return;
    }

    var currentActiveElement = (0, _activeElement.default)();

    if (modal.dialog && currentActiveElement && !(0, _contains.default)(modal.dialog, currentActiveElement)) {
      modal.dialog.focus();
    }
  });
  var handleBackdropClick = (0, _useEventCallback.default)(function (e) {
    if (e.target !== e.currentTarget) {
      return;
    }

    onBackdropClick == null ? void 0 : onBackdropClick(e);

    if (backdrop === true) {
      onHide();
    }
  });
  var handleDocumentKeyDown = (0, _useEventCallback.default)(function (e) {
    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {
      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);

      if (!e.defaultPrevented) {
        onHide();
      }
    }
  });
  var removeFocusListenerRef = (0, _react.useRef)();
  var removeKeydownListenerRef = (0, _react.useRef)();

  var handleHidden = function handleHidden() {
    setExited(true);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    onExited == null ? void 0 : onExited.apply(void 0, args);
  };

  var Transition = transition;

  if (!container || !(show || Transition && !exited)) {
    return null;
  }

  var dialogProps = (0, _extends2.default)({
    role: role,
    ref: modal.setDialogRef,
    // apparently only works on the dialog role element
    'aria-modal': role === 'dialog' ? true : undefined
  }, rest, {
    style: style,
    className: className,
    tabIndex: -1
  });
  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_react.default.createElement("div", dialogProps, /*#__PURE__*/_react.default.cloneElement(children, {
    role: 'document'
  }));

  if (Transition) {
    dialog = /*#__PURE__*/_react.default.createElement(Transition, {
      appear: true,
      unmountOnExit: true,
      "in": !!show,
      onExit: onExit,
      onExiting: onExiting,
      onExited: handleHidden,
      onEnter: onEnter,
      onEntering: onEntering,
      onEntered: onEntered
    }, dialog);
  }

  var backdropElement = null;

  if (backdrop) {
    var BackdropTransition = backdropTransition;
    backdropElement = renderBackdrop({
      ref: modal.setBackdropRef,
      onClick: handleBackdropClick
    });

    if (BackdropTransition) {
      backdropElement = /*#__PURE__*/_react.default.createElement(BackdropTransition, {
        appear: true,
        "in": !!show
      }, backdropElement);
    }
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_reactDom.default.createPortal( /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, backdropElement, dialog), container));
});
var propTypes = {
  /**
   * Set the visibility of the Modal
   */
  show: _propTypes.default.bool,

  /**
   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.
   *
   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the
   * page content can be placed behind a virtual backdrop as well as a visual one.
   */
  container: _propTypes.default.any,

  /**
   * A callback fired when the Modal is opening.
   */
  onShow: _propTypes.default.func,

  /**
   * A callback fired when either the backdrop is clicked, or the escape key is pressed.
   *
   * The `onHide` callback only signals intent from the Modal,
   * you must actually set the `show` prop to `false` for the Modal to close.
   */
  onHide: _propTypes.default.func,

  /**
   * Include a backdrop component.
   */
  backdrop: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.oneOf(['static'])]),

  /**
   * A function that returns the dialog component. Useful for custom
   * rendering. **Note:** the component should make sure to apply the provided ref.
   *
   * ```js static
   * renderDialog={props => <MyDialog {...props} />}
   * ```
   */
  renderDialog: _propTypes.default.func,

  /**
   * A function that returns a backdrop component. Useful for custom
   * backdrop rendering.
   *
   * ```js
   *  renderBackdrop={props => <MyBackdrop {...props} />}
   * ```
   */
  renderBackdrop: _propTypes.default.func,

  /**
   * A callback fired when the escape key, if specified in `keyboard`, is pressed.
   *
   * If preventDefault() is called on the keyboard event, closing the modal will be cancelled.
   */
  onEscapeKeyDown: _propTypes.default.func,

  /**
   * A callback fired when the backdrop, if specified, is clicked.
   */
  onBackdropClick: _propTypes.default.func,

  /**
   * A css class or set of classes applied to the modal container when the modal is open,
   * and removed when it is closed.
   */
  containerClassName: _propTypes.default.string,

  /**
   * Close the modal when escape key is pressed
   */
  keyboard: _propTypes.default.bool,

  /**
   * A `react-transition-group@2.0.0` `<Transition/>` component used
   * to control animations for the dialog component.
   */
  transition: _propTypes.default.elementType,

  /**
   * A `react-transition-group@2.0.0` `<Transition/>` component used
   * to control animations for the backdrop components.
   */
  backdropTransition: _propTypes.default.elementType,

  /**
   * When `true` The modal will automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes. This also
   * works correctly with any Modal children that have the `autoFocus` prop.
   *
   * Generally this should never be set to `false` as it makes the Modal less
   * accessible to assistive technologies, like screen readers.
   */
  autoFocus: _propTypes.default.bool,

  /**
   * When `true` The modal will prevent focus from leaving the Modal while open.
   *
   * Generally this should never be set to `false` as it makes the Modal less
   * accessible to assistive technologies, like screen readers.
   */
  enforceFocus: _propTypes.default.bool,

  /**
   * When `true` The modal will restore focus to previously focused element once
   * modal is hidden
   */
  restoreFocus: _propTypes.default.bool,

  /**
   * Options passed to focus function when `restoreFocus` is set to `true`
   *
   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters
   */
  restoreFocusOptions: _propTypes.default.shape({
    preventScroll: _propTypes.default.bool
  }),

  /**
   * Callback fired before the Modal transitions in
   */
  onEnter: _propTypes.default.func,

  /**
   * Callback fired as the Modal begins to transition in
   */
  onEntering: _propTypes.default.func,

  /**
   * Callback fired after the Modal finishes transitioning in
   */
  onEntered: _propTypes.default.func,

  /**
   * Callback fired right before the Modal transitions out
   */
  onExit: _propTypes.default.func,

  /**
   * Callback fired as the Modal begins to transition out
   */
  onExiting: _propTypes.default.func,

  /**
   * Callback fired after the Modal finishes transitioning out
   */
  onExited: _propTypes.default.func,

  /**
   * A ModalManager instance used to track and manage the state of open
   * Modals. Useful when customizing how modals interact within a container
   */
  manager: _propTypes.default.instanceOf(_ModalManager.default)
};
Modal.displayName = 'Modal';
Modal.propTypes = propTypes;

var _default = Object.assign(Modal, {
  Manager: _ModalManager.default
});

exports.default = _default;
},{"@babel/runtime/helpers/esm/extends":"Em0B","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","dom-helpers/activeElement":"P83h","dom-helpers/contains":"iWnH","dom-helpers/canUseDOM":"tpNi","dom-helpers/listen":"Y91L","prop-types":"X9bF","react":"dmLA","react-dom":"kUqu","@restart/hooks/useMounted":"o5gl","@restart/hooks/useWillUnmount":"aXzW","@restart/hooks/usePrevious":"u0Ov","@restart/hooks/useEventCallback":"tOJV","./ModalManager":"pANV","./useWaitForDOMRef":"ra63"}],"Q8iO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeRefs = mergeRefs;
exports.default = void 0;

var _react = require("react");

var toFnRef = function toFnRef(ref) {
  return !ref || typeof ref === 'function' ? ref : function (value) {
    ref.current = value;
  };
};

function mergeRefs(refA, refB) {
  var a = toFnRef(refA);
  var b = toFnRef(refB);
  return function (value) {
    if (a) a(value);
    if (b) b(value);
  };
}
/**
 * Create and returns a single callback ref composed from two other Refs.
 *
 * ```tsx
 * const Button = React.forwardRef((props, ref) => {
 *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();
 *   const mergedRef = useMergedRefs(ref, attachRef);
 *
 *   return <button ref={mergedRef} {...props}/>
 * })
 * ```
 *
 * @param refA A Callback or mutable Ref
 * @param refB A Callback or mutable Ref
 * @category refs
 */


function useMergedRefs(refA, refB) {
  return (0, _react.useMemo)(function () {
    return mergeRefs(refA, refB);
  }, [refA, refB]);
}

var _default = useMergedRefs;
exports.default = _default;
},{"react":"dmLA"}],"ZiQC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _useCallbackRef3 = _interopRequireDefault(require("@restart/hooks/useCallbackRef"));

var _useMergedRefs = _interopRequireDefault(require("@restart/hooks/useMergedRefs"));

var _popper = require("./popper");

var _usePopper2 = _interopRequireDefault(require("./usePopper"));

var _useRootClose = _interopRequireDefault(require("./useRootClose"));

var _useWaitForDOMRef = _interopRequireDefault(require("./useWaitForDOMRef"));

var _mergeOptionsWithPopperConfig = _interopRequireDefault(require("./mergeOptionsWithPopperConfig"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Built on top of `Popper.js`, the overlay component is
 * great for custom tooltip overlays.
 */
var Overlay = /*#__PURE__*/_react.default.forwardRef(function (props, outerRef) {
  var flip = props.flip,
      offset = props.offset,
      placement = props.placement,
      _props$containerPaddi = props.containerPadding,
      containerPadding = _props$containerPaddi === void 0 ? 5 : _props$containerPaddi,
      _props$popperConfig = props.popperConfig,
      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,
      Transition = props.transition;

  var _useCallbackRef = (0, _useCallbackRef3.default)(),
      rootElement = _useCallbackRef[0],
      attachRef = _useCallbackRef[1];

  var _useCallbackRef2 = (0, _useCallbackRef3.default)(),
      arrowElement = _useCallbackRef2[0],
      attachArrowRef = _useCallbackRef2[1];

  var mergedRef = (0, _useMergedRefs.default)(attachRef, outerRef);
  var container = (0, _useWaitForDOMRef.default)(props.container);
  var target = (0, _useWaitForDOMRef.default)(props.target);

  var _useState = (0, _react.useState)(!props.show),
      exited = _useState[0],
      setExited = _useState[1];

  var _usePopper = (0, _usePopper2.default)(target, rootElement, (0, _mergeOptionsWithPopperConfig.default)({
    placement: placement,
    enableEvents: !!props.show,
    containerPadding: containerPadding || 5,
    flip: flip,
    offset: offset,
    arrowElement: arrowElement,
    popperConfig: popperConfig
  })),
      styles = _usePopper.styles,
      attributes = _usePopper.attributes,
      popper = (0, _objectWithoutPropertiesLoose2.default)(_usePopper, ["styles", "attributes"]);

  if (props.show) {
    if (exited) setExited(false);
  } else if (!props.transition && !exited) {
    setExited(true);
  }

  var handleHidden = function handleHidden() {
    setExited(true);

    if (props.onExited) {
      props.onExited.apply(props, arguments);
    }
  }; // Don't un-render the overlay while it's transitioning out.


  var mountOverlay = props.show || Transition && !exited;
  (0, _useRootClose.default)(rootElement, props.onHide, {
    disabled: !props.rootClose || props.rootCloseDisabled,
    clickTrigger: props.rootCloseEvent
  });

  if (!mountOverlay) {
    // Don't bother showing anything if we don't have to.
    return null;
  }

  var child = props.children((0, _extends2.default)({}, popper, {
    show: !!props.show,
    props: (0, _extends2.default)({}, attributes.popper, {
      style: styles.popper,
      ref: mergedRef
    }),
    arrowProps: (0, _extends2.default)({}, attributes.arrow, {
      style: styles.arrow,
      ref: attachArrowRef
    })
  }));

  if (Transition) {
    var onExit = props.onExit,
        onExiting = props.onExiting,
        onEnter = props.onEnter,
        onEntering = props.onEntering,
        onEntered = props.onEntered;
    child = /*#__PURE__*/_react.default.createElement(Transition, {
      "in": props.show,
      appear: true,
      onExit: onExit,
      onExiting: onExiting,
      onExited: handleHidden,
      onEnter: onEnter,
      onEntering: onEntering,
      onEntered: onEntered
    }, child);
  }

  return container ? /*#__PURE__*/_reactDom.default.createPortal(child, container) : null;
});

Overlay.displayName = 'Overlay';
Overlay.propTypes = {
  /**
   * Set the visibility of the Overlay
   */
  show: _propTypes.default.bool,

  /** Specify where the overlay element is positioned in relation to the target element */
  placement: _propTypes.default.oneOf(_popper.placements),

  /**
   * A DOM Element, Ref to an element, or function that returns either. The `target` element is where
   * the overlay is positioned relative to.
   */
  target: _propTypes.default.any,

  /**
   * A DOM Element, Ref to an element, or function that returns either. The `container` will have the Portal children
   * appended to it.
   */
  container: _propTypes.default.any,

  /**
   * Enables the Popper.js `flip` modifier, allowing the Overlay to
   * automatically adjust it's placement in case of overlap with the viewport or toggle.
   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info
   */
  flip: _propTypes.default.bool,

  /**
   * A render prop that returns an element to overlay and position. See
   * the [react-popper documentation](https://github.com/FezVrasta/react-popper#children) for more info.
   *
   * @type {Function ({
   *   show: boolean,
   *   placement: Placement,
   *   update: () => void,
   *   forceUpdate: () => void,
   *   props: {
   *     ref: (?HTMLElement) => void,
   *     style: { [string]: string | number },
   *     aria-labelledby: ?string
   *     [string]: string | number,
   *   },
   *   arrowProps: {
   *     ref: (?HTMLElement) => void,
   *     style: { [string]: string | number },
   *     [string]: string | number,
   *   },
   * }) => React.Element}
   */
  children: _propTypes.default.func.isRequired,

  /**
   * Control how much space there is between the edge of the boundary element and overlay.
   * A convenience shortcut to setting `popperConfig.modfiers.preventOverflow.padding`
   */
  containerPadding: _propTypes.default.number,

  /**
   * A set of popper options and props passed directly to react-popper's Popper component.
   */
  popperConfig: _propTypes.default.object,

  /**
   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay
   */
  rootClose: _propTypes.default.bool,

  /**
   * Specify event for toggling overlay
   */
  rootCloseEvent: _propTypes.default.oneOf(['click', 'mousedown']),

  /**
   * Specify disabled for disable RootCloseWrapper
   */
  rootCloseDisabled: _propTypes.default.bool,

  /**
   * A Callback fired by the Overlay when it wishes to be hidden.
   *
   * __required__ when `rootClose` is `true`.
   *
   * @type func
   */
  onHide: function onHide(props) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (props.rootClose) {
      var _PropTypes$func;

      return (_PropTypes$func = _propTypes.default.func).isRequired.apply(_PropTypes$func, [props].concat(args));
    }

    return _propTypes.default.func.apply(_propTypes.default, [props].concat(args));
  },

  /**
   * A `react-transition-group@2.0.0` `<Transition/>` component
   * used to animate the overlay as it changes visibility.
   */
  // @ts-ignore
  transition: _propTypes.default.elementType,

  /**
   * Callback fired before the Overlay transitions in
   */
  onEnter: _propTypes.default.func,

  /**
   * Callback fired as the Overlay begins to transition in
   */
  onEntering: _propTypes.default.func,

  /**
   * Callback fired after the Overlay finishes transitioning in
   */
  onEntered: _propTypes.default.func,

  /**
   * Callback fired right before the Overlay transitions out
   */
  onExit: _propTypes.default.func,

  /**
   * Callback fired as the Overlay begins to transition out
   */
  onExiting: _propTypes.default.func,

  /**
   * Callback fired after the Overlay finishes transitioning out
   */
  onExited: _propTypes.default.func
};
var _default = Overlay;
exports.default = _default;
},{"@babel/runtime/helpers/esm/extends":"Em0B","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"AsUn","prop-types":"X9bF","react":"dmLA","react-dom":"kUqu","@restart/hooks/useCallbackRef":"BjtR","@restart/hooks/useMergedRefs":"Q8iO","./popper":"BnzR","./usePopper":"HoUO","./useRootClose":"fBao","./useWaitForDOMRef":"ra63","./mergeOptionsWithPopperConfig":"yRcC"}],"PSHU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _react = _interopRequireDefault(require("react"));

var _useWaitForDOMRef = _interopRequireDefault(require("./useWaitForDOMRef"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  /**
   * A DOM element, Ref to an element, or function that returns either. The `container` will have the Portal children
   * appended to it.
   */
  container: _propTypes.default.any,
  onRendered: _propTypes.default.func
};
/**
 * @public
 */

var Portal = function Portal(_ref) {
  var container = _ref.container,
      children = _ref.children,
      onRendered = _ref.onRendered;
  var resolvedContainer = (0, _useWaitForDOMRef.default)(container, onRendered);
  return resolvedContainer ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_reactDom.default.createPortal(children, resolvedContainer)) : null;
};

Portal.displayName = 'Portal';
Portal.propTypes = propTypes;
var _default = Portal;
exports.default = _default;
},{"prop-types":"X9bF","react-dom":"kUqu","react":"dmLA","./useWaitForDOMRef":"ra63"}],"XBRv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Dropdown", {
  enumerable: true,
  get: function () {
    return _Dropdown.default;
  }
});
Object.defineProperty(exports, "useDropdownMenu", {
  enumerable: true,
  get: function () {
    return _DropdownMenu.useDropdownMenu;
  }
});
Object.defineProperty(exports, "useDropdownToggle", {
  enumerable: true,
  get: function () {
    return _DropdownToggle.useDropdownToggle;
  }
});
Object.defineProperty(exports, "Modal", {
  enumerable: true,
  get: function () {
    return _Modal.default;
  }
});
Object.defineProperty(exports, "Overlay", {
  enumerable: true,
  get: function () {
    return _Overlay.default;
  }
});
Object.defineProperty(exports, "Portal", {
  enumerable: true,
  get: function () {
    return _Portal.default;
  }
});
Object.defineProperty(exports, "useRootClose", {
  enumerable: true,
  get: function () {
    return _useRootClose.default;
  }
});

var _Dropdown = _interopRequireDefault(require("./Dropdown"));

var _DropdownMenu = require("./DropdownMenu");

var _DropdownToggle = require("./DropdownToggle");

var _Modal = _interopRequireDefault(require("./Modal"));

var _Overlay = _interopRequireDefault(require("./Overlay"));

var _Portal = _interopRequireDefault(require("./Portal"));

var _useRootClose = _interopRequireDefault(require("./useRootClose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./Dropdown":"Fodc","./DropdownMenu":"hmDb","./DropdownToggle":"UVxa","./Modal":"hjnA","./Overlay":"ZiQC","./Portal":"PSHU","./useRootClose":"fBao"}],"B9iR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get_usage_observations = get_usage_observations;
exports.has_seen_touch_usage = exports.has_seen_tab_key_usage = void 0;
/////////////////////
const DEBUG = false;
const LIB = '$FDB';
if (DEBUG) console.info(`[${LIB}] Hello!`); // https://hackernoon.com/removing-that-ugly-focus-ring-and-keeping-it-too-6c8727fefcd2

let has_seen_tab_key_usage = false; // so far
// https://www.stucox.com/blog/you-cant-detect-a-touchscreen/

exports.has_seen_tab_key_usage = has_seen_tab_key_usage;
let has_seen_touch_usage = false; // so far
// https://www.stucox.com/blog/you-cant-detect-a-touchscreen/
// tricky bc for ex. Safari iOs sends mouse event for compatibility
//let has_seen_credible_mouse_usage = false // so far
/////////////////////

exports.has_seen_touch_usage = has_seen_touch_usage;

function on_key_down_to_detect_tabs(evt) {
  if (evt.keyCode === 9) {
    // the "I am a keyboard user" key
    if (DEBUG) console.info(`[${LIB}] Keyboard usage detected! (tab key)`);
    exports.has_seen_tab_key_usage = has_seen_tab_key_usage = true;
    document.body.classList.add('user-is-tabbing');
    window.removeEventListener('keydown', on_key_down_to_detect_tabs);
  }
}

window.addEventListener('keydown', on_key_down_to_detect_tabs);

function on_touch_start() {
  if (DEBUG) console.info(`[${LIB}] touch detected!`);
  exports.has_seen_touch_usage = has_seen_touch_usage = true;
  window.removeEventListener('touchstart', on_touch_start);
}

window.addEventListener('touchstart', on_touch_start); // https://developer.mozilla.org/en-US/docs/Web/Events/pointerover

function on_pointer_over(evt) {
  if (DEBUG) console.info(`[${LIB}] pointer event`, {
    evt,
    type: evt.pointerType,
    pointerType: evt.pointerType
  });

  switch (evt.pointerType) {
    case 'touch':
      if (DEBUG) console.info(`[${LIB}] seen touch usage!`);
      exports.has_seen_touch_usage = has_seen_touch_usage = true;
      break;

    case 'pen':
      break;

    case 'mouse':
      // not reliable, Safari iOs emulates mouse hover
      break;

    default:
      break;
  }

  window.removeEventListener('pointerover', on_pointer_over);
}

window.addEventListener('pointerover', on_pointer_over); /////////////////////

function get_usage_observations() {
  return {
    has_seen_tab_key_usage,
    has_seen_touch_usage
  };
}
},{}],"bqhz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.has_any_hover = has_any_hover;
exports.uses_tab = uses_tab;
exports.get_debug_snapshot = get_debug_snapshot;

var _eventListeners = require("./event-listeners");

// beware of multiplicity!
// https://www.stucox.com/blog/the-good-and-bad-of-level-4-media-queries/#multiplicity
/////////////////////
function _get_relevant_media_queries() {
  const result = {} // https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries
  ;
  [// https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-hover
  '(any-hover: none)', '(any-hover: hover)', // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-pointer
  '(any-pointer: none)', //'(any-pointer: coarse)',
  '(any-pointer: fine)' // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/orientation
  //'(orientation: portrait)',
  //'(orientation: landscape)',
  ].forEach(mq => {
    result[mq] = window.matchMedia(mq).matches;
  });
  return result;
}

const relevant_media_queries = _get_relevant_media_queries(); ///////
// https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-hover
// https://www.stucox.com/blog/you-cant-detect-a-touchscreen/


function has_any_hover() {
  // from more trustable to less trustable:
  // if a MQ is true, it should be reliable
  if (relevant_media_queries['(any-hover: hover)']) {
    return true;
  }

  if (relevant_media_queries['(any-hover: none)']) return false;

  if (relevant_media_queries['(any-pointer: fine)']) {
    // assume the user has a mouse, so can hover
    return true;
  }

  if (relevant_media_queries['(any-pointer: none)']) {
    // assume the user has no mouse
    return false;
  }

  if ('ontouchstart' in window || _eventListeners.has_seen_touch_usage) {
    // assume touchscreen = no pointer = no hover
    return false;
  }

  return undefined;
}
/*
// https://www.stucox.com/blog/you-cant-detect-a-touchscreen/
function has_any_touch(window = window) {
	const from_MQ = window.matchMedia('(any-hover: hover)')
	const from_
}

// https://www.stucox.com/blog/you-cant-detect-a-touchscreen/
function has_any_pointer(window = window) {
	const from_MQ = window.matchMedia('(any-hover: hover)')
	const from_
}
*/


function uses_tab() {
  return _eventListeners.has_seen_tab_key_usage;
} /////////////////////


function get_debug_snapshot() {
  return {
    relevant_media_queries,
    usages: (0, _eventListeners.get_usage_observations)(),
    has_any_hover: has_any_hover(),
    uses_tab: uses_tab()
  };
} /////////////////////
},{"./event-listeners":"B9iR"}],"WubM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "has_any_hover", {
  enumerable: true,
  get: function () {
    return _resolvers.has_any_hover;
  }
});
Object.defineProperty(exports, "uses_tab", {
  enumerable: true,
  get: function () {
    return _resolvers.uses_tab;
  }
});
Object.defineProperty(exports, "get_debug_snapshot", {
  enumerable: true,
  get: function () {
    return _resolvers.get_debug_snapshot;
  }
});

var _resolvers = require("./resolvers");
},{"./resolvers":"bqhz"}],"wHup":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.InteractiveRichTextFragment = void 0;

var _react = require("react");

var _reactPortalTooltip = _interopRequireDefault(require("react-portal-tooltip"));

var _reactOverlays = require("react-overlays");

var _featuresDetectionBrowser = require("@offirmo-private/features-detection-browser");

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const modal_style = {
  zIndex: 1040
  /*position: 'fixed',
  width: 400,
  top: top + '%',
  left: left + '%',
  border: '1px solid #e5e5e5',
  backgroundColor: 'white',
  boxShadow: '0 5px 15px rgba(0,0,0,.5)',
  padding: 20*/

};
const backdrop_style = {
  position: 'fixed',
  zIndex: 1040,
  // TODO var
  top: 0,
  bottom: 0,
  left: 0,
  right: 0,
  backgroundColor: '#000',
  opacity: 0.5
};

const dialog_style = function () {
  const top = 50;
  const left = 50;
  return {
    position: 'absolute',
    top: top + '%',
    left: left + '%',
    transform: `translate(-${top}%, -${left}%)`,
    boxShadow: '0 5px 15px rgba(0,0,0,.5)',
    maxWidth: '550px'
  };
};

const tooltip_style = {
  style: {
    padding: '.5em',
    backgroundColor: 'var(--o⋄color⁚bg--main)',
    borderRadius: '0',
    //zIndex: 'auto',
    zIndex: 1039,
    border: 'solid calc(var(--o⋄border--thickness) * 1) var(--o⋄color⁚fg--main)',
    boxShadow: '0 5px 15px rgba(0,0,0,.5)',
    maxWidth: '400px'
  },
  arrowStyle: {}
}; // Put content inside a button together with hover callbacks

class ActiveCard extends _react.Component {
  constructor(props) {
    //console.log('hx')
    super(props);

    _defineProperty(this, "on_click", (...args) => {
      if (this.props.on_click) this.props.on_click(...args);
    });

    _defineProperty(this, "on_mouse_over", (...args) => {
      if (this.props.on_mouse_over) this.props.on_mouse_over(...args);
    });

    _defineProperty(this, "on_mouse_out", (...args) => {
      if (this.props.on_mouse_out) this.props.on_mouse_out(...args);
    });
  }

  render() {
    const {
      children,
      forward_ref
    } = this.props;
    const props = {
      onClick: this.on_click
    };

    if ((0, _featuresDetectionBrowser.has_any_hover)()) {
      // only when possible. Avoid mobile Safari flickering.
      props.onMouseOver = this.on_mouse_over;
      props.onMouseOut = this.on_mouse_out;
    }

    return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", _objectSpread(_objectSpread({
      ref: forward_ref,
      className: "o\u22C4button--inline o\u22C4rich-text\u22C4interactive"
    }, props), {}, {
      children: children
    }), "AC.content");
  }

}

class InteractiveRichTextFragment extends _react.Component {
  constructor(_props) {
    super(_props);

    _defineProperty(this, "on_mouse_over", () => {
      this.setState({
        show_tooltip: true
      });
    });

    _defineProperty(this, "on_mouse_out", () => {
      this.setState({
        show_tooltip: false
      });
    });

    _defineProperty(this, "on_card_click", () => {
      this.setState({
        show_tooltip: false,
        show_modal: true
      });
    });

    _defineProperty(this, "on_request_close_modal", () => {
      console.log('on_request_close_modal');
      this.setState({
        show_modal: false
      });
    });

    _defineProperty(this, "render_backdrop", props => {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread(_objectSpread({}, props), {}, {
        style: backdrop_style,
        onClick: this.on_request_close_modal,
        children: "Backdrop! "
      }));
    });

    _defineProperty(this, "render", () => {
      const {
        UUID,
        children,
        render_detailed
      } = this.props; // TODO check re-render of this
      //console.log(`🔄 InteractiveRichTextFragment ${UUID}`)

      const base = /*#__PURE__*/(0, _jsxRuntime.jsx)(ActiveCard, {
        forward_ref: this.card_ref,
        on_click: this.on_card_click,
        on_mouse_over: this.on_mouse_over,
        on_mouse_out: this.on_mouse_out,
        children: children
      }, "IF.content");
      const detailed = /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: `IF-${UUID}-detailed`,
        render: render_detailed ? render_detailed.bind(null, {
          UUID,
          react_representation: children
        }) : () => null
      }, "IF.detailed");
      const tooltip = detailed && (0, _featuresDetectionBrowser.has_any_hover)() && this.card_ref.current && /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: `IF-${UUID}-tooltip-wrapper`,
        onError: this.on_mouse_out,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactPortalTooltip.default, {
          className: "o\u22C4box",
          active: this.state.show_tooltip,
          parent: this.card_ref.current,
          xxtooltipTimeout: 0,
          position: "left",
          align: "left",
          style: tooltip_style,
          children: detailed
        }, UUID + '-tooltip-wrapper')
      }, "IF.tooltip-wrapper");
      const modal = detailed && /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: `IF-${UUID}-modal`,
        onError: this.on_request_close_modal,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactOverlays.Modal, {
          onHide: this.on_request_close_modal,
          style: modal_style,
          "aria-labelledby": "modal-label",
          show: this.state.show_modal,
          renderBackdrop: this.render_backdrop,
          children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: "o\u22C4box",
            style: dialog_style(),
            children: [detailed, /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
              onClick: this.on_request_close_modal,
              children: "Close"
            })]
          })
        }, UUID + '-modal')
      }, "IF.modal-wrapper");
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_react.Fragment, {
        children: [base, tooltip, modal]
      }, UUID);
    });

    this.state = {
      show_tooltip: false,
      show_modal: false
    };
    this.card_ref = /*#__PURE__*/(0, _react.createRef)();
  }

}

exports.InteractiveRichTextFragment = InteractiveRichTextFragment;
InteractiveRichTextFragment.defaultProps = {
  render_detailed: () => 'NOT IMPLEMENTED InteractiveRichTextFragment.render_detailed'
};
var _default = InteractiveRichTextFragment;
exports.default = _default;
},{"react":"dmLA","react-portal-tooltip":"ah4i","react-overlays":"XBRv","@offirmo-private/features-detection-browser":"WubM","@offirmo-private/react-error-boundary":"UTEF","react/jsx-runtime":"qEpl"}],"Ox9f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "generate_react_key", {
  enumerable: true,
  get: function () {
    return _to_react.generate_react_key;
  }
});
Object.defineProperty(exports, "to_react", {
  enumerable: true,
  get: function () {
    return _to_react.to_react;
  }
});
Object.defineProperty(exports, "intermediate_on_node_exit", {
  enumerable: true,
  get: function () {
    return _to_react.intermediate_on_node_exit;
  }
});
Object.defineProperty(exports, "intermediate_assemble", {
  enumerable: true,
  get: function () {
    return _to_react.intermediate_assemble;
  }
});
Object.defineProperty(exports, "InteractiveRichTextFragment", {
  enumerable: true,
  get: function () {
    return _interactiveFragment.default;
  }
});

var _to_react = require("./to_react");

var _interactiveFragment = _interopRequireDefault(require("./interactive-fragment"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./to_react":"Am3H","./interactive-fragment":"wHup"}],"l0H9":[function(require,module,exports) {
"use strict"; /////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextClass = void 0;

var typescript_string_enums_1 = require("typescript-string-enums"); /////////////////////


var TextClass = typescript_string_enums_1.Enum('person', 'item', 'place');
exports.TextClass = TextClass; /////////////////////
},{"typescript-string-enums":"qyCc"}],"PATh":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_achievements_snapshot = exports.render_achievement_snapshot_detailed = exports.render_achievement_snapshot_short = void 0;

var state__progress_1 = require("@tbrpg/state--progress");

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

function render_achievement_snapshot_short(achievement_snapshot) {
  var uuid = achievement_snapshot.uuid,
      icon = achievement_snapshot.icon,
      name = achievement_snapshot.name,
      status = achievement_snapshot.status,
      completion_rate = achievement_snapshot.completion_rate;
  var builder = RichText.inline_fragment().addClass('achievement', "achievement--" + status);
  var icon_text = '';
  var legend = '???';

  switch (status) {
    case state__progress_1.AchievementStatus.secret:
      throw new Error('Secret achievements should never make it there!');

    case state__progress_1.AchievementStatus.hidden:
      break;

    case state__progress_1.AchievementStatus.revealed:
      //icon_text = '✖' //'❔'
      legend = name;
      break;

    case state__progress_1.AchievementStatus.unlocked:
      icon_text = icon;
      legend = name + ' ✔'; //' ★' // ✔

      break;

    default:
      throw new Error("Unknown achievement status for \"" + name + "\"!");
  }

  if (icon_text) {
    builder.pushText(icon_text).pushText('  ');
  }

  if (status === state__progress_1.AchievementStatus.unlocked) builder.pushStrong(legend);else builder.pushWeak(legend); // no, too much info

  /*if (completion_rate && status === AchievementStatus.revealed) {
      const percentage = 100. * completion_rate[0] / completion_rate[1]
      if (percentage > 100)
          throw new Error(`Invalid achievement completion rate for "${name}"!`)
      builder.pushWeak(` - ${Math.round(percentage)}%`)
  }*/

  builder.addHints({
    uuid: uuid
  });
  return builder.done();
}

exports.render_achievement_snapshot_short = render_achievement_snapshot_short;

function render_achievement_snapshot_detailed(achievement_snapshot) {
  var uuid = achievement_snapshot.uuid,
      icon = achievement_snapshot.icon,
      name = achievement_snapshot.name,
      description = achievement_snapshot.description,
      lore = achievement_snapshot.lore,
      status = achievement_snapshot.status,
      completion_rate = achievement_snapshot.completion_rate;
  var element_tags = ['achievement'];
  var builder = RichText.block_fragment().addClass('achievement');
  var icon_text = null;
  var name_text = '???';
  var description_text = '???';
  var lore_text = null;

  switch (status) {
    case state__progress_1.AchievementStatus.secret:
      throw new Error('Secret achievements should never make it there!');

    case state__progress_1.AchievementStatus.hidden:
      description_text = '(this achievement is hidden at the moment. Try playing more!)';
      element_tags.push('hidden');
      break;

    case state__progress_1.AchievementStatus.revealed:
      element_tags.push('locked');
      icon_text = '❔';
      name_text = name;
      description_text = description;
      lore_text = lore;
      break;

    case state__progress_1.AchievementStatus.unlocked:
      element_tags.push('unlocked');
      icon_text = icon;
      name_text = name;
      description_text = description;
      lore_text = lore;
      break;

    default:
      throw new Error('Unknown achievement status!');
  }

  if (icon_text) {
    builder.pushText(icon_text).pushText(' ');
  }

  builder.pushStrong(name_text, {
    classes: ['achievement__title']
  }).pushHorizontalRule();
  /* TODO
      .pushWeak(element_tags.join(', '))
      .()*/

  if (completion_rate && status === state__progress_1.AchievementStatus.revealed) {
    var done = completion_rate[0],
        to_do = completion_rate[1];
    var percentage = 100. * done / to_do;
    if (percentage > 100) throw new Error("Invalid achievement completion rate for \"" + name + "\"!");
    builder.pushWeak("Progress: " + Math.floor(percentage) + "% (" + done + "/" + to_do + ")").pushLineBreak();
  }

  builder.pushText(description_text).pushLineBreak();

  if (lore_text) {
    builder.pushWeak("\u201C" + lore_text + "\u201C", {
      classes: ['achievement__lore']
    }).pushLineBreak();
  }

  builder.addHints({
    uuid: uuid
  });
  return builder.done();
}

exports.render_achievement_snapshot_detailed = render_achievement_snapshot_detailed;

function render_achievements_snapshot(ordered_achievement_snapshots) {
  var builder = RichText.unordered_list().addClass('achievements-snapshot');
  ordered_achievement_snapshots.forEach(function (achievement_snapshot) {
    var uuid = achievement_snapshot.uuid; //console.log(uuid)

    builder.pushRawNode(render_achievement_snapshot_short(achievement_snapshot), {
      id: uuid
    });
  });
  var $doc_list = builder.done();
  var stats = ordered_achievement_snapshots.reduce(function (acc, _a) {
    var status = _a.status;

    switch (status) {
      case state__progress_1.AchievementStatus.secret:
        break;

      case state__progress_1.AchievementStatus.hidden:
      case state__progress_1.AchievementStatus.revealed:
        acc.visible_count++;
        break;

      case state__progress_1.AchievementStatus.unlocked:
        acc.visible_count++;
        acc.unlocked_count++;
        break;

      default:
        throw new Error('Unknown achievement status!');
    }

    return acc;
  }, {
    visible_count: 0,
    unlocked_count: 0
  });
  var $doc = RichText.block_fragment().pushNode(RichText.heading().pushText("Achievements (" + stats.unlocked_count + "/" + stats.visible_count + ")").done(), {
    id: 'header'
  }).pushNode($doc_list, {
    id: 'list'
  }).done(); //console.log('render_achievements_snapshot', ordered_achievement_snapshots, $doc)

  return $doc;
}

exports.render_achievements_snapshot = render_achievements_snapshot;
},{"@tbrpg/state--progress":"Tgn1","@offirmo-private/rich-text-format":"aepI"}],"iZus":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_RENDER_ITEM_OPTIONS = exports.LIB = void 0; /////////////////////

exports.LIB = '@oh-my-rpg/view-rich-text';
exports.DEFAULT_RENDER_ITEM_OPTIONS = {
  // most conservative mode by default
  display_quality: false,
  display_values: false,
  display_power: false,
  display_sell_value: false
}; /////////////////////
},{}],"U8mk":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_armor_detailed = exports.render_armor_short = void 0;

var definitions_1 = require("@tbrpg/definitions");

var logic_armors_1 = require("@oh-my-rpg/logic-armors");

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

var logic_armors_2 = require("@oh-my-rpg/logic-armors");

var logic__shop_1 = require("@tbrpg/logic--shop");

var consts_1 = require("./consts"); /////////////////////


function push_quality(builder, i) {
  var $node = RichText.inline_fragment().pushText(i.quality).done();
  return builder.pushNode($node, {
    id: 'quality'
  });
}

function push_values(builder, i, options) {
  if (options === void 0) {
    options = {
      short: false
    };
  }

  var _a = logic_armors_1.get_damage_reduction_interval(i),
      min = _a[0],
      max = _a[1];

  var $node = RichText.inline_fragment().addClass('item--values').pushText(options.short ? "[" + min + " - " + max + "]" : "absorbs damage: " + min + " - " + max).done();
  return builder.pushNode($node, {
    id: 'values'
  });
}

function push_power(builder, i, options) {
  if (options === void 0) {
    options = {
      short: false
    };
  }

  var power = logic__shop_1.appraise_power(i);

  if (!options.short) {
    var $node = RichText.inline_fragment().addClass('item--power').pushText("" + power).done();
    builder.pushNode($node, {
      id: 'power'
    });
  }

  if (options.reference_power) {
    if (power > options.reference_power) {
      var $node = RichText.inline_fragment().addClass('comparison--better').pushText('⬆').done();
      builder.pushNode($node, {
        id: 'comparision'
      });
    } else if (power < options.reference_power) {
      var $node = RichText.inline_fragment().addClass('comparison--worse').pushText('⬇').done();
      builder.pushNode($node, {
        id: 'comparision'
      });
    } else if (power < options.reference_power) {
      var $node = RichText.inline_fragment().addClass('comparison--equal').pushText('=').done();
      builder.pushNode($node, {
        id: 'comparision'
      });
    }
  }

  return builder;
}

function push_sell_value(builder, i) {
  var $node = RichText.inline_fragment().addClass('value--coin').pushText("" + logic__shop_1.appraise_sell_value(i)).done();
  return builder.pushNode($node, {
    id: 'sell-value'
  });
} /////////////////////


function render_armor_name(i) {
  var _ = logic_armors_2.i18n_messages.en;
  var b = _.armor.base[i.base_hid];
  var q1 = _.armor.qualifier1[i.qualifier1_hid];
  var q2 = _.armor.qualifier2[i.qualifier2_hid];
  var builder = RichText.inline_fragment().addClass('item__name').pushText(q2.startsWith('of') ? '{{q1|Capitalize}} {{base|Capitalize}} {{q2|Capitalize}}' : '{{q2|Capitalize}} {{q1|Capitalize}} {{base|Capitalize}}');

  if (i.enhancement_level) {
    var $node_enhancement = RichText.inline_fragment().addClass('item--enhancement').pushText("+" + i.enhancement_level).done();
    builder.pushText(' ').pushNode($node_enhancement, {
      id: 'enhancement'
    });
  }

  var $doc = builder.done();
  $doc.$sub.base = RichText.inline_fragment().pushText(b).done();
  $doc.$sub.q1 = RichText.inline_fragment().pushText(q1).done();
  $doc.$sub.q2 = RichText.inline_fragment().pushText(q2).done();
  return $doc;
}

function render_armor_short(i, options) {
  if (options === void 0) {
    options = consts_1.DEFAULT_RENDER_ITEM_OPTIONS;
  }

  if (i.slot !== definitions_1.InventorySlot.armor) throw new Error("render_armor_short(): can't render a " + i.slot + "!");
  var builder = RichText.inline_fragment();

  if (options.display_quality) {
    push_quality(builder, i);
    builder.pushText(' ');
  }

  builder.pushNode(render_armor_name(i), {
    id: 'name'
  });

  if (options.display_values) {
    builder.pushText(' ');
    push_values(builder, i, {
      short: true
    });
  }

  if (options.display_power || options.reference_power) {
    builder.pushText(' ');
    push_power(builder, i, {
      short: !options.display_power,
      reference_power: options.reference_power
    });
  }

  if (options.display_sell_value) {
    builder.pushText(' ');
    push_sell_value(builder, i);
  }

  return builder.addClass('item', 'item--' + i.slot, 'item--quality--' + i.quality).done();
}

exports.render_armor_short = render_armor_short;

function render_armor_detailed(i, reference_power) {
  if (i.slot !== definitions_1.InventorySlot.armor) throw new Error("render_armor_detailed(): can't render a " + i.slot + "!");
  var $node_title = render_armor_short(i);
  var $node_enhancement = RichText.inline_fragment().addClass('item--enhancement').pushText(i.enhancement_level + "/" + logic_armors_1.MAX_ENHANCEMENT_LEVEL).done();
  var builder = RichText.block_fragment().pushNode($node_title, {
    id: 'title'
  }).pushLineBreak();
  builder.pushText('Power: ');
  push_power(builder, i, {
    reference_power: reference_power
  });
  builder.pushLineBreak();
  builder.pushText('quality: ');
  push_quality(builder, i);
  builder.pushLineBreak();
  builder.pushText('enhancement: ').pushNode($node_enhancement, {
    id: 'enhancement'
  }).pushLineBreak();
  push_values(builder, i);
  builder.pushLineBreak();
  builder.pushText('Sell value: ');
  push_sell_value(builder, i);
  return builder.done();
}

exports.render_armor_detailed = render_armor_detailed;
},{"@tbrpg/definitions":"PTCd","@oh-my-rpg/logic-armors":"eV82","@offirmo-private/rich-text-format":"aepI","@tbrpg/logic--shop":"jzJm","./consts":"iZus"}],"lB7C":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_weapon_detailed = exports.render_weapon_short = exports.render_weapon_name = void 0;

var definitions_1 = require("@tbrpg/definitions");

var logic_weapons_1 = require("@oh-my-rpg/logic-weapons");

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

var logic_weapons_2 = require("@oh-my-rpg/logic-weapons");

var logic__shop_1 = require("@tbrpg/logic--shop");

var consts_1 = require("./consts"); /////////////////////


function push_quality(builder, i) {
  var $node = RichText.inline_fragment().pushText(i.quality).done();
  return builder.pushNode($node, {
    id: 'quality'
  });
}

function push_values(builder, i, options) {
  if (options === void 0) {
    options = {
      short: false
    };
  }

  var _a = logic_weapons_1.get_damage_interval(i),
      min = _a[0],
      max = _a[1];

  var $node = RichText.inline_fragment().addClass('item--values').pushText(options.short ? "[" + min + " - " + max + "]" : "deals damage: " + min + " - " + max).done();
  return builder.pushNode($node, {
    id: 'values'
  });
}

function push_power(builder, i, options) {
  if (options === void 0) {
    options = {
      short: false
    };
  }

  var power = logic__shop_1.appraise_power(i);

  if (!options.short) {
    var $node = RichText.inline_fragment().addClass('item--power').pushText("" + power).done();
    builder.pushNode($node, {
      id: 'power'
    });
  }

  if (options.reference_power) {
    if (power > options.reference_power) {
      var $node = RichText.inline_fragment().addClass('comparison--better').pushText('⬆').done();
      builder.pushNode($node, {
        id: 'comparision'
      });
    } else if (power < options.reference_power) {
      var $node = RichText.inline_fragment().addClass('comparison--worse').pushText('⬇').done();
      builder.pushNode($node, {
        id: 'comparision'
      });
    } else if (power < options.reference_power) {
      var $node = RichText.inline_fragment().addClass('comparison--equal').pushText('=').done();
      builder.pushNode($node, {
        id: 'comparision'
      });
    }
  }

  return builder;
}

function push_sell_value(builder, i) {
  var $node = RichText.inline_fragment().addClass('value--coin').pushText("" + logic__shop_1.appraise_sell_value(i)).done();
  return builder.pushNode($node, {
    id: 'sell-value'
  });
} /////////////////////


function render_weapon_name(i) {
  if (i.slot !== definitions_1.InventorySlot.weapon) throw new Error("render_weapon(): can't render a " + i.slot + "!");
  var _ = logic_weapons_2.i18n_messages.en;
  var b = _.weapon.base[i.base_hid];
  var q1 = _.weapon.qualifier1[i.qualifier1_hid];
  var q2 = _.weapon.qualifier2[i.qualifier2_hid];
  var builder = RichText.inline_fragment().addClass('item__name').pushText(q2.startsWith('of') ? '{{q1|Capitalize}} {{base|Capitalize}} {{q2|Capitalize}}' : '{{q2|Capitalize}} {{q1|Capitalize}} {{base|Capitalize}}');

  if (i.enhancement_level) {
    var $node_enhancement = RichText.inline_fragment().addClass('item--enhancement').pushText("+" + i.enhancement_level).done();
    builder.pushText(' ').pushNode($node_enhancement, {
      id: 'enhancement'
    });
  }

  var $doc = builder.done();
  $doc.$sub.base = RichText.inline_fragment().pushText(b).done();
  $doc.$sub.q1 = RichText.inline_fragment().pushText(q1).done();
  $doc.$sub.q2 = RichText.inline_fragment().pushText(q2).done();
  return $doc;
}

exports.render_weapon_name = render_weapon_name;

function render_weapon_short(i, options) {
  if (options === void 0) {
    options = consts_1.DEFAULT_RENDER_ITEM_OPTIONS;
  }

  if (i.slot !== definitions_1.InventorySlot.weapon) throw new Error("render_weapon_short(): can't render a " + i.slot + "!");
  var builder = RichText.inline_fragment();

  if (options.display_quality) {
    push_quality(builder, i);
    builder.pushText(' ');
  }

  builder.pushNode(render_weapon_name(i), {
    id: 'name'
  });

  if (options.display_values) {
    builder.pushText(' ');
    push_values(builder, i, {
      short: true
    });
  }

  if (options.display_power || options.reference_power) {
    builder.pushText(' ');
    push_power(builder, i, {
      short: !options.display_power,
      reference_power: options.reference_power
    });
  }

  if (options.display_sell_value) {
    builder.pushText(' ');
    push_sell_value(builder, i);
  }

  return builder.addClass('item', 'item--' + i.slot, 'item--quality--' + i.quality).done();
}

exports.render_weapon_short = render_weapon_short;

function render_weapon_detailed(i, reference_power) {
  if (i.slot !== definitions_1.InventorySlot.weapon) throw new Error("render_weapon_detailed(): can't render a " + i.slot + "!");
  var $node_title = render_weapon_short(i);
  var $node_enhancement = RichText.inline_fragment().addClass('item--enhancement').pushText(i.enhancement_level + "/" + logic_weapons_1.MAX_ENHANCEMENT_LEVEL).done();
  var builder = RichText.block_fragment().pushNode($node_title, {
    id: 'title'
  }).pushLineBreak();
  builder.pushText('Power: ');
  push_power(builder, i, {
    reference_power: reference_power
  });
  builder.pushLineBreak();
  builder.pushText('quality: ');
  push_quality(builder, i);
  builder.pushLineBreak();
  builder.pushText('enhancement: ').pushNode($node_enhancement, {
    id: 'enhancement'
  }).pushLineBreak();
  push_values(builder, i);
  builder.pushLineBreak();
  builder.pushText('Sell value: ');
  push_sell_value(builder, i);
  return builder.done();
}

exports.render_weapon_detailed = render_weapon_detailed;
},{"@tbrpg/definitions":"PTCd","@oh-my-rpg/logic-weapons":"qUBn","@offirmo-private/rich-text-format":"aepI","@tbrpg/logic--shop":"jzJm","./consts":"iZus"}],"b8jA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_item_detailed = exports.render_item_short = void 0;

var definitions_1 = require("@tbrpg/definitions");

var items__armor_1 = require("./items--armor");

var items__weapon_1 = require("./items--weapon");

var consts_1 = require("./consts");

function decorate_with_common_item_props(i, doc) {
  doc.$hints = doc.$hints || {};
  doc.$hints.uuid = i.uuid;
  return doc;
}

function render_item_short(i, options) {
  if (options === void 0) {
    options = consts_1.DEFAULT_RENDER_ITEM_OPTIONS;
  }

  if (!i) throw new Error('render_item_short(): no item provided!');

  var doc = function auto() {
    switch (i.slot) {
      case definitions_1.InventorySlot.armor:
        return items__armor_1.render_armor_short(i, options);

      case definitions_1.InventorySlot.weapon:
        return items__weapon_1.render_weapon_short(i, options);

      default:
        throw new Error("render_item_short(): don't know how to render a \"" + i.slot + "\" !");
    }
  }();

  return decorate_with_common_item_props(i, doc);
}

exports.render_item_short = render_item_short;

function render_item_detailed(i) {
  if (!i) throw new Error('render_item_detailed(): no item provided!');

  var doc = function auto() {
    switch (i.slot) {
      case definitions_1.InventorySlot.armor:
        return items__armor_1.render_armor_detailed(i);

      case definitions_1.InventorySlot.weapon:
        return items__weapon_1.render_weapon_detailed(i);

      default:
        throw new Error("render_item_detailed(): don't know how to render a \"" + i.slot + "\" !");
    }
  }();

  return decorate_with_common_item_props(i, doc);
}

exports.render_item_detailed = render_item_detailed;
},{"@tbrpg/definitions":"PTCd","./items--armor":"U8mk","./items--weapon":"lB7C","./consts":"iZus"}],"ACBl":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_wallet = exports.render_currency_amount = void 0;

var state_wallet_1 = require("@oh-my-rpg/state-wallet");

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

function render_currency_amount(currency, amount, _a) {
  var _b = _a === void 0 ? {
    render_unit: true
  } : _a,
      render_unit = _b.render_unit;

  var doc = RichText.inline_fragment().addClass('currency--' + currency).pushInlineFragment('' + amount, {
    id: 'amount'
  }); // TODO format according to locale?

  if (render_unit) doc.pushText(' ' + currency + (amount === 1 ? '' : 's')); // TODO localize properly ;)

  return doc.done();
}

exports.render_currency_amount = render_currency_amount;

function render_wallet(wallet) {
  var $doc_list = RichText.unordered_list().addClass('inventory--wallet').done();
  state_wallet_1.ALL_CURRENCIES.forEach(function (currency) {
    var amount = state_wallet_1.get_currency_amount(wallet, currency);
    $doc_list.$sub[currency] = render_currency_amount(currency, amount);
  });
  var $doc = RichText.block_fragment().pushHeading('Wallet:', {
    id: 'header'
  }).pushNode($doc_list, {
    id: 'list'
  }).done();
  return $doc;
}

exports.render_wallet = render_wallet;
},{"@oh-my-rpg/state-wallet":"V5wo","@offirmo-private/rich-text-format":"aepI"}],"FXxT":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_monster = void 0;

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

function render_monster(m) {
  var $doc = RichText.inline_fragment().addClass('monster', 'monster--rank--' + m.rank).pushText('{{level}} {{rank}} {{name||Capitalize}}').pushRawNode(RichText.inline_fragment().pushText('L').pushText('' + m.level).done(), {
    id: 'level'
  }).pushRawNode(RichText.inline_fragment().addClass('rank--' + m.rank).pushText(m.rank).done(), {
    id: 'rank'
  }).pushRawNode(RichText.inline_fragment().addClass('monster__name').pushText(m.name).done(), {
    id: 'name'
  }).addHints({
    possible_emoji: m.possible_emoji
  }).done();
  return $doc;
}

exports.render_monster = render_monster;
},{"@offirmo-private/rich-text-format":"aepI"}],"nXLf":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_adventure = void 0;

var definitions_1 = require("@tbrpg/definitions");

var state__character_1 = require("@tbrpg/state--character");

var logic_adventures_1 = require("@oh-my-rpg/logic-adventures");

var state_wallet_1 = require("@oh-my-rpg/state-wallet");

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

var items_1 = require("./items");

var wallet_1 = require("./wallet");

var monster_1 = require("./monster");

var consts_1 = require("./consts");

function render_adventure(a, options) {
  if (options === void 0) {
    options = consts_1.DEFAULT_RENDER_ITEM_OPTIONS;
  }

  var gains = a.gains; // alias for typing
  // in this special function, we'll be:
  // 1. generically filling a RichText.Document with any possible sub-elements,
  //    since we don't know whether the adventure messages use them or not.

  var $story_sub_elements = {}; // encounter
  // item
  // attr, attr_name,
  // level, health, mana, strength, agility, charisma, wisdom, luck
  // coin
  // improved_item
  // 2. also generate some "summaries" for some gains

  var $listing_of_loot = RichText.block_fragment().done();
  var $listing_of_character_improvement = RichText.block_fragment().done();
  var $listing_of_item_improvement = RichText.block_fragment().done(); // make sure that we handled every possible outcomes

  var handled_adventure_outcomes_so_far = new Set();

  (function render_loot() {
    var $loot_list = RichText.unordered_list().done();
    definitions_1.ITEM_SLOTS.forEach(function (slot) {
      //console.info('handling adventure outcome [l1]: ' + slot)
      if (!gains[slot]) return;
      var $doc = items_1.render_item_short(gains[slot], options);
      $story_sub_elements.item = $doc;
      $story_sub_elements.item_slot = RichText.inline_fragment().pushText(slot).done();
      $story_sub_elements[slot] = $doc;
      $loot_list.$sub[slot] = $doc;
      handled_adventure_outcomes_so_far.add(slot);
    });
    state_wallet_1.ALL_CURRENCIES.forEach(function (currency) {
      //console.info('handling adventure outcome [l2]: ' + currency)
      if (!gains[currency]) return;
      var $doc = wallet_1.render_currency_amount(currency, gains[currency], {
        render_unit: false
      });
      $loot_list.$sub[currency] = $story_sub_elements[currency] = $doc;
      handled_adventure_outcomes_so_far.add(currency);
    });
    var hasLoot = !!Object.keys($loot_list.$sub).length;
    if (hasLoot) $listing_of_loot = RichText.block_fragment() //.pushLineBreak()
    .pushText('Loot:').pushNode($loot_list, {
      id: 'list'
    }).done();
  })();

  (function render_character_improvement() {
    var $improvement_list = RichText.unordered_list().done();
    state__character_1.CHARACTER_ATTRIBUTES.forEach(function (attr) {
      //console.info('handling adventure outcome [c1]: ' + attr)
      if (!gains[attr]) return;
      $story_sub_elements.attr_name = RichText.inline_fragment().pushText(attr).done();
      var $doc_attr_gain_value = RichText.inline_fragment().pushText('' + gains[attr]).done();
      $story_sub_elements.attr = $doc_attr_gain_value; // generic

      $story_sub_elements[attr] = $doc_attr_gain_value; // precise

      $improvement_list.$sub[attr] = attr === 'level' ? RichText.inline_fragment().pushText('🆙 You leveled up!').done() : RichText.inline_fragment().pushText("You improved your " + attr + " by " + gains[attr] + "!").done(); // TODO improve

      handled_adventure_outcomes_so_far.add(attr);
    }); // TODO one day spells / skills

    var has_improvement = !!Object.keys($improvement_list.$sub).length;
    if (has_improvement) $listing_of_character_improvement = RichText.block_fragment() //.pushLineBreak()
    .pushText('Character improvement:').pushNode($improvement_list, {
      id: 'list'
    }).done();
  })();

  (function render_item_improvement() {
    var has_improvement = gains.improvementⵧarmor || gains.improvementⵧweapon;
    var $improvement_list = RichText.unordered_list().done(); // TODO

    if (gains.improvementⵧarmor) handled_adventure_outcomes_so_far.add('improvementⵧarmor');
    if (gains.improvementⵧweapon) handled_adventure_outcomes_so_far.add('improvementⵧweapon');
    if (has_improvement) $listing_of_item_improvement = RichText.block_fragment() //.pushLineBreak()
    .pushText('Item improvement:').pushNode($improvement_list, {
      id: 'list'
    }).done();
  })(); /////// Encounter ///////


  if (a.encounter) $story_sub_elements.encounter = monster_1.render_monster(a.encounter); /////// checks ///////

  var active_adventure_outcomes = Object.keys(gains).filter(function (prop) {
    return !!gains[prop];
  });
  var unhandled_adventure_outcomes = active_adventure_outcomes.filter(function (prop) {
    return !handled_adventure_outcomes_so_far.has(prop);
  });

  if (unhandled_adventure_outcomes.length) {
    console.error("render_adventure(): *UN*handled outcome properties: \"" + unhandled_adventure_outcomes + "\"!");
    console.info("render_adventure(): handled outcome properties: \"" + Array.from(handled_adventure_outcomes_so_far.values()) + "\"");
    throw new Error('render_adventure(): unhandled outcome properties!');
  } /////// Final wrap-up //////


  var _ = logic_adventures_1.i18n_messages.en;
  var story = _.adventures[a.hid];
  var $doc = RichText.block_fragment().pushText(story) //.pushLineBreak()
  //.pushNode($listing_of_loot, 'loot')
  //.pushNode($listing_of_item_improvement, 'item_improv')
  //.pushNode($listing_of_character_improvement, 'char_improv')
  .done();
  $doc.$sub = __assign(__assign({}, $doc.$sub), $story_sub_elements);
  return $doc;
}

exports.render_adventure = render_adventure;
},{"@tbrpg/definitions":"PTCd","@tbrpg/state--character":"oDfL","@oh-my-rpg/logic-adventures":"WjhT","@oh-my-rpg/state-wallet":"V5wo","@offirmo-private/rich-text-format":"aepI","./items":"b8jA","./wallet":"ACBl","./monster":"FXxT","./consts":"iZus"}],"xe4W":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_character_sheet = exports.render_attributes = exports.render_avatar = void 0;

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

var state__character_1 = require("@tbrpg/state--character");

function render_avatar(state) {
  var $doc_name = RichText.inline_fragment().addClass('avatar__name').pushText(state.name).done();
  var $doc_class = RichText.inline_fragment().addClass('avatar__class').pushText(state.klass).done();
  var $doc = RichText.block_fragment().pushHeading('Identity:', {
    id: 'header'
  }).pushNode(RichText.unordered_list().pushKeyValue('name', $doc_name).pushKeyValue('class', $doc_class).done()).done();
  return $doc;
}

exports.render_avatar = render_avatar;

function render_attributes(state) {
  var $doc_list = RichText.unordered_list().addClass('attributes').done();
  state__character_1.CHARACTER_ATTRIBUTES_SORTED.forEach(function (stat, index) {
    var label = stat;
    var value = state.attributes[stat];
    var $doc_attr = RichText.key_value(label, "" + value).done();
    $doc_list.$sub[("000" + index).slice(-3)] = $doc_attr;
  });
  var $doc = RichText.block_fragment().pushNode(RichText.heading().pushText('Attributes:').done(), {
    id: 'header'
  }).pushNode($doc_list, {
    id: 'list'
  }).done();
  return $doc;
}

exports.render_attributes = render_attributes;

function render_character_sheet(state) {
  var $doc = RichText.block_fragment().pushNode(render_avatar(state), {
    id: 'avatar'
  }).pushNode(render_attributes(state), {
    id: 'attributes'
  }).done();
  return $doc;
}

exports.render_character_sheet = render_character_sheet;
},{"@offirmo-private/rich-text-format":"aepI","@tbrpg/state--character":"oDfL"}],"OMoE":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_full_inventory = exports.render_equipment = exports.render_backpack = void 0;

var definitions_1 = require("@tbrpg/definitions");

var state__inventory_1 = require("@tbrpg/state--inventory");

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

var logic__shop_1 = require("@tbrpg/logic--shop");

var items_1 = require("./items");

var wallet_1 = require("./wallet");

var consts_1 = require("./consts"); // we want the slots sorted by types according to an arbitrary order


function render_equipment(inventory, options) {
  var $doc_list = RichText.unordered_list().addClass('inventory--equipment').done();
  definitions_1.ITEM_SLOTS.forEach(function (slot) {
    var item = state__inventory_1.get_item_in_slot(inventory, slot);
    var $doc_item = item ? items_1.render_item_short(item, options) : RichText.inline_fragment().pushText('-').done(); //const $doc_line = RichText.key_value(slot, $doc_item).done()

    var $doc_line = RichText.inline_fragment().pushText(slot).pushText(': ').pushNode($doc_item, {
      id: 'item'
    }).done();
    $doc_list.$sub[("000" + definitions_1.ITEM_SLOTS_TO_INT[slot]).slice(-3)] = $doc_line;
  });
  var $doc = RichText.block_fragment().pushNode(RichText.heading().pushText('Active equipment:').done(), {
    id: 'header'
  }).pushNode($doc_list, {
    id: 'list'
  }).done();
  return $doc;
}

exports.render_equipment = render_equipment; // we want the slots sorted by types according to an arbitrary order
// = nothing to do, the inventory is auto-sorted

function render_backpack(inventory, options) {
  var builder = RichText.ordered_list().addClass('inventory--backpack');
  var misc_items = Array.from(state__inventory_1.iterables_unslotted(inventory)).filter(function (i) {
    return !!i;
  });
  var item_count = misc_items.length;
  var reference_powers = {};
  misc_items.forEach(function (i) {
    if (!reference_powers[i.slot]) {
      var item = state__inventory_1.get_item_in_slot(inventory, i.slot);
      reference_powers[i.slot] = item ? logic__shop_1.appraise_power(item) : 0;
    }

    builder.pushRawNode(items_1.render_item_short(i, __assign(__assign({}, options), {
      reference_power: reference_powers[i.slot]
    })));
  });
  var $doc_list = builder.done();

  if (Object.keys($doc_list.$sub).length === 0) {
    // completely empty
    $doc_list.$type = RichText.NodeType.ul;
    $doc_list.$sub['-'] = RichText.inline_fragment().pushText('(empty)').done();
  }

  var $doc = RichText.block_fragment().pushNode(RichText.heading().pushText("Backpack: (" + item_count + "/" + inventory.unslotted_capacity + ")").done(), {
    id: 'header'
  }).pushNode($doc_list, {
    id: 'list'
  }).done();
  return $doc;
}

exports.render_backpack = render_backpack;

function render_full_inventory(inventory, wallet, options) {
  if (options === void 0) {
    options = consts_1.DEFAULT_RENDER_ITEM_OPTIONS;
  }

  var $doc = RichText.block_fragment().pushNode(render_equipment(inventory, options), {
    id: 'equipped'
  }).pushNode(wallet_1.render_wallet(wallet), {
    id: 'wallet'
  }).pushNode(render_backpack(inventory, options), {
    id: 'backpack'
  }).done(); //console.log(JSON.stringify($doc, null, 2))

  return $doc;
}

exports.render_full_inventory = render_full_inventory;
},{"@tbrpg/definitions":"PTCd","@tbrpg/state--inventory":"pmyL","@offirmo-private/rich-text-format":"aepI","@tbrpg/logic--shop":"jzJm","./items":"b8jA","./wallet":"ACBl","./consts":"iZus"}],"XeJS":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_account_info = void 0;

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

function render_meta_infos(metas) {
  var $doc_list = RichText.unordered_list();
  Object.keys(metas).forEach(function (key) {
    $doc_list.pushRawNode(RichText.inline_fragment().pushText(key + ': ' + metas[key]).done(), {
      id: key
    });
  });
  return $doc_list.done();
}

function render_account_info(m, extra) {
  if (extra === void 0) {
    extra = {};
  }

  var meta_infos = extra;
  /* TODO rework
  meta_infos['internal user id'] = m.uuid
  meta_infos['telemetry allowed'] = String(m.allow_telemetry)
  if (m.email) meta_infos['email'] = m.email
  */

  var $doc = RichText.block_fragment().pushHeading('Account infos:', {
    id: 'header'
  }).pushNode(render_meta_infos(meta_infos), {
    id: 'list'
  }).done();
  return $doc;
}

exports.render_account_info = render_account_info;
},{"@offirmo-private/rich-text-format":"aepI"}],"asRH":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./types"), exports);

__exportStar(require("./achievements"), exports);

__exportStar(require("./adventure"), exports);

__exportStar(require("./attributes"), exports);

__exportStar(require("./inventory"), exports);

__exportStar(require("./items--armor"), exports);

__exportStar(require("./items--weapon"), exports);

__exportStar(require("./items"), exports);

__exportStar(require("./meta"), exports);

__exportStar(require("./monster"), exports);

__exportStar(require("./wallet"), exports);
},{"./types":"l0H9","./achievements":"PATh","./adventure":"nXLf","./attributes":"xe4W","./inventory":"OMoE","./items--armor":"U8mk","./items--weapon":"lB7C","./items":"b8jA","./meta":"XeJS","./monster":"FXxT","./wallet":"ACBl"}],"pg2E":[function(require,module,exports) {
var define;
var global = arguments[3];
/*!
 *  howler.js v2.2.1
 *  howlerjs.com
 *
 *  (c) 2013-2020, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */

(function() {

  'use strict';

  /** Global Methods **/
  /***************************************************************************/

  /**
   * Create the global controller. All contained methods and properties apply
   * to all sounds that are currently playing or will be in the future.
   */
  var HowlerGlobal = function() {
    this.init();
  };
  HowlerGlobal.prototype = {
    /**
     * Initialize the global Howler object.
     * @return {Howler}
     */
    init: function() {
      var self = this || Howler;

      // Create a global ID counter.
      self._counter = 1000;

      // Pool of unlocked HTML5 Audio objects.
      self._html5AudioPool = [];
      self.html5PoolSize = 10;

      // Internal properties.
      self._codecs = {};
      self._howls = [];
      self._muted = false;
      self._volume = 1;
      self._canPlayEvent = 'canplaythrough';
      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;

      // Public properties.
      self.masterGain = null;
      self.noAudio = false;
      self.usingWebAudio = true;
      self.autoSuspend = true;
      self.ctx = null;

      // Set to false to disable the auto audio unlocker.
      self.autoUnlock = true;

      // Setup the various state values for global tracking.
      self._setup();

      return self;
    },

    /**
     * Get/set the global volume for all sounds.
     * @param  {Float} vol Volume from 0.0 to 1.0.
     * @return {Howler/Float}     Returns self or current volume.
     */
    volume: function(vol) {
      var self = this || Howler;
      vol = parseFloat(vol);

      // If we don't have an AudioContext created yet, run the setup.
      if (!self.ctx) {
        setupAudioContext();
      }

      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {
        self._volume = vol;

        // Don't update any of the nodes if we are muted.
        if (self._muted) {
          return self;
        }

        // When using Web Audio, we just need to adjust the master gain.
        if (self.usingWebAudio) {
          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);
        }

        // Loop through and change volume for all HTML5 audio nodes.
        for (var i=0; i<self._howls.length; i++) {
          if (!self._howls[i]._webAudio) {
            // Get all of the sounds in this Howl group.
            var ids = self._howls[i]._getSoundIds();

            // Loop through all sounds and change the volumes.
            for (var j=0; j<ids.length; j++) {
              var sound = self._howls[i]._soundById(ids[j]);

              if (sound && sound._node) {
                sound._node.volume = sound._volume * vol;
              }
            }
          }
        }

        return self;
      }

      return self._volume;
    },

    /**
     * Handle muting and unmuting globally.
     * @param  {Boolean} muted Is muted or not.
     */
    mute: function(muted) {
      var self = this || Howler;

      // If we don't have an AudioContext created yet, run the setup.
      if (!self.ctx) {
        setupAudioContext();
      }

      self._muted = muted;

      // With Web Audio, we just need to mute the master gain.
      if (self.usingWebAudio) {
        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);
      }

      // Loop through and mute all HTML5 Audio nodes.
      for (var i=0; i<self._howls.length; i++) {
        if (!self._howls[i]._webAudio) {
          // Get all of the sounds in this Howl group.
          var ids = self._howls[i]._getSoundIds();

          // Loop through all sounds and mark the audio node as muted.
          for (var j=0; j<ids.length; j++) {
            var sound = self._howls[i]._soundById(ids[j]);

            if (sound && sound._node) {
              sound._node.muted = (muted) ? true : sound._muted;
            }
          }
        }
      }

      return self;
    },

    /**
     * Handle stopping all sounds globally.
     */
    stop: function() {
      var self = this || Howler;

      // Loop through all Howls and stop them.
      for (var i=0; i<self._howls.length; i++) {
        self._howls[i].stop();
      }

      return self;
    },

    /**
     * Unload and destroy all currently loaded Howl objects.
     * @return {Howler}
     */
    unload: function() {
      var self = this || Howler;

      for (var i=self._howls.length-1; i>=0; i--) {
        self._howls[i].unload();
      }

      // Create a new AudioContext to make sure it is fully reset.
      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {
        self.ctx.close();
        self.ctx = null;
        setupAudioContext();
      }

      return self;
    },

    /**
     * Check for codec support of specific extension.
     * @param  {String} ext Audio file extention.
     * @return {Boolean}
     */
    codecs: function(ext) {
      return (this || Howler)._codecs[ext.replace(/^x-/, '')];
    },

    /**
     * Setup various state values for global tracking.
     * @return {Howler}
     */
    _setup: function() {
      var self = this || Howler;

      // Keeps track of the suspend/resume state of the AudioContext.
      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';

      // Automatically begin the 30-second suspend process
      self._autoSuspend();

      // Check if audio is available.
      if (!self.usingWebAudio) {
        // No audio is available on this system if noAudio is set to true.
        if (typeof Audio !== 'undefined') {
          try {
            var test = new Audio();

            // Check if the canplaythrough event is available.
            if (typeof test.oncanplaythrough === 'undefined') {
              self._canPlayEvent = 'canplay';
            }
          } catch(e) {
            self.noAudio = true;
          }
        } else {
          self.noAudio = true;
        }
      }

      // Test to make sure audio isn't disabled in Internet Explorer.
      try {
        var test = new Audio();
        if (test.muted) {
          self.noAudio = true;
        }
      } catch (e) {}

      // Check for supported codecs.
      if (!self.noAudio) {
        self._setupCodecs();
      }

      return self;
    },

    /**
     * Check for browser support for various codecs and cache the results.
     * @return {Howler}
     */
    _setupCodecs: function() {
      var self = this || Howler;
      var audioTest = null;

      // Must wrap in a try/catch because IE11 in server mode throws an error.
      try {
        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;
      } catch (err) {
        return self;
      }

      if (!audioTest || typeof audioTest.canPlayType !== 'function') {
        return self;
      }

      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');

      // Opera version <33 has mixed MP3 support, so we need to check for and block it.
      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\/([0-6].)/g);
      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);

      self._codecs = {
        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),
        mpeg: !!mpegTest,
        opus: !!audioTest.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ''),
        ogg: !!audioTest.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ''),
        oga: !!audioTest.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ''),
        wav: !!(audioTest.canPlayType('audio/wav; codecs="1"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),
        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),
        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),
        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),
        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),
        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),
        weba: !!audioTest.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ''),
        webm: !!audioTest.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ''),
        dolby: !!audioTest.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ''),
        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')
      };

      return self;
    },

    /**
     * Some browsers/devices will only allow audio to be played after a user interaction.
     * Attempt to automatically unlock audio on the first user interaction.
     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/
     * @return {Howler}
     */
    _unlockAudio: function() {
      var self = this || Howler;

      // Only run this if Web Audio is supported and it hasn't already been unlocked.
      if (self._audioUnlocked || !self.ctx) {
        return;
      }

      self._audioUnlocked = false;
      self.autoUnlock = false;

      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.
      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.
      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.
      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {
        self._mobileUnloaded = true;
        self.unload();
      }

      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:
      // http://stackoverflow.com/questions/24119684
      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);

      // Call this method on touch start to create and play a buffer,
      // then check if the audio actually played to determine if
      // audio has now been unlocked on iOS, Android, etc.
      var unlock = function(e) {
        // Create a pool of unlocked HTML5 Audio objects that can
        // be used for playing sounds without user interaction. HTML5
        // Audio objects must be individually unlocked, as opposed
        // to the WebAudio API which only needs a single activation.
        // This must occur before WebAudio setup or the source.onended
        // event will not fire.
        while (self._html5AudioPool.length < self.html5PoolSize) {
          try {
            var audioNode = new Audio();

            // Mark this Audio object as unlocked to ensure it can get returned
            // to the unlocked pool when released.
            audioNode._unlocked = true;

            // Add the audio node to the pool.
            self._releaseHtml5Audio(audioNode);
          } catch (e) {
            self.noAudio = true;
            break;
          }
        }

        // Loop through any assigned audio nodes and unlock them.
        for (var i=0; i<self._howls.length; i++) {
          if (!self._howls[i]._webAudio) {
            // Get all of the sounds in this Howl group.
            var ids = self._howls[i]._getSoundIds();

            // Loop through all sounds and unlock the audio nodes.
            for (var j=0; j<ids.length; j++) {
              var sound = self._howls[i]._soundById(ids[j]);

              if (sound && sound._node && !sound._node._unlocked) {
                sound._node._unlocked = true;
                sound._node.load();
              }
            }
          }
        }

        // Fix Android can not play in suspend state.
        self._autoResume();

        // Create an empty buffer.
        var source = self.ctx.createBufferSource();
        source.buffer = self._scratchBuffer;
        source.connect(self.ctx.destination);

        // Play the empty buffer.
        if (typeof source.start === 'undefined') {
          source.noteOn(0);
        } else {
          source.start(0);
        }

        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.
        if (typeof self.ctx.resume === 'function') {
          self.ctx.resume();
        }

        // Setup a timeout to check that we are unlocked on the next event loop.
        source.onended = function() {
          source.disconnect(0);

          // Update the unlocked state and prevent this check from happening again.
          self._audioUnlocked = true;

          // Remove the touch start listener.
          document.removeEventListener('touchstart', unlock, true);
          document.removeEventListener('touchend', unlock, true);
          document.removeEventListener('click', unlock, true);

          // Let all sounds know that audio has been unlocked.
          for (var i=0; i<self._howls.length; i++) {
            self._howls[i]._emit('unlock');
          }
        };
      };

      // Setup a touch start listener to attempt an unlock in.
      document.addEventListener('touchstart', unlock, true);
      document.addEventListener('touchend', unlock, true);
      document.addEventListener('click', unlock, true);

      return self;
    },

    /**
     * Get an unlocked HTML5 Audio object from the pool. If none are left,
     * return a new Audio object and throw a warning.
     * @return {Audio} HTML5 Audio object.
     */
    _obtainHtml5Audio: function() {
      var self = this || Howler;

      // Return the next object from the pool if one exists.
      if (self._html5AudioPool.length) {
        return self._html5AudioPool.pop();
      }

      //.Check if the audio is locked and throw a warning.
      var testPlay = new Audio().play();
      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {
        testPlay.catch(function() {
          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');
        });
      }

      return new Audio();
    },

    /**
     * Return an activated HTML5 Audio object to the pool.
     * @return {Howler}
     */
    _releaseHtml5Audio: function(audio) {
      var self = this || Howler;

      // Don't add audio to the pool if we don't know if it has been unlocked.
      if (audio._unlocked) {
        self._html5AudioPool.push(audio);
      }

      return self;
    },

    /**
     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.
     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.
     * @return {Howler}
     */
    _autoSuspend: function() {
      var self = this;

      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {
        return;
      }

      // Check if any sounds are playing.
      for (var i=0; i<self._howls.length; i++) {
        if (self._howls[i]._webAudio) {
          for (var j=0; j<self._howls[i]._sounds.length; j++) {
            if (!self._howls[i]._sounds[j]._paused) {
              return self;
            }
          }
        }
      }

      if (self._suspendTimer) {
        clearTimeout(self._suspendTimer);
      }

      // If no sound has played after 30 seconds, suspend the context.
      self._suspendTimer = setTimeout(function() {
        if (!self.autoSuspend) {
          return;
        }

        self._suspendTimer = null;
        self.state = 'suspending';

        // Handle updating the state of the audio context after suspending.
        var handleSuspension = function() {
          self.state = 'suspended';

          if (self._resumeAfterSuspend) {
            delete self._resumeAfterSuspend;
            self._autoResume();
          }
        };

        // Either the state gets suspended or it is interrupted.
        // Either way, we need to update the state to suspended.
        self.ctx.suspend().then(handleSuspension, handleSuspension);
      }, 30000);

      return self;
    },

    /**
     * Automatically resume the Web Audio AudioContext when a new sound is played.
     * @return {Howler}
     */
    _autoResume: function() {
      var self = this;

      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {
        return;
      }

      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {
        clearTimeout(self._suspendTimer);
        self._suspendTimer = null;
      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {
        self.ctx.resume().then(function() {
          self.state = 'running';

          // Emit to all Howls that the audio has resumed.
          for (var i=0; i<self._howls.length; i++) {
            self._howls[i]._emit('resume');
          }
        });

        if (self._suspendTimer) {
          clearTimeout(self._suspendTimer);
          self._suspendTimer = null;
        }
      } else if (self.state === 'suspending') {
        self._resumeAfterSuspend = true;
      }

      return self;
    }
  };

  // Setup the global audio controller.
  var Howler = new HowlerGlobal();

  /** Group Methods **/
  /***************************************************************************/

  /**
   * Create an audio group controller.
   * @param {Object} o Passed in properties for this group.
   */
  var Howl = function(o) {
    var self = this;

    // Throw an error if no source is provided.
    if (!o.src || o.src.length === 0) {
      console.error('An array of source files must be passed with any new Howl.');
      return;
    }

    self.init(o);
  };
  Howl.prototype = {
    /**
     * Initialize a new Howl group object.
     * @param  {Object} o Passed in properties for this group.
     * @return {Howl}
     */
    init: function(o) {
      var self = this;

      // If we don't have an AudioContext created yet, run the setup.
      if (!Howler.ctx) {
        setupAudioContext();
      }

      // Setup user-defined default properties.
      self._autoplay = o.autoplay || false;
      self._format = (typeof o.format !== 'string') ? o.format : [o.format];
      self._html5 = o.html5 || false;
      self._muted = o.mute || false;
      self._loop = o.loop || false;
      self._pool = o.pool || 5;
      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;
      self._rate = o.rate || 1;
      self._sprite = o.sprite || {};
      self._src = (typeof o.src !== 'string') ? o.src : [o.src];
      self._volume = o.volume !== undefined ? o.volume : 1;
      self._xhr = {
        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',
        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,
        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,
      };

      // Setup all other default properties.
      self._duration = 0;
      self._state = 'unloaded';
      self._sounds = [];
      self._endTimers = {};
      self._queue = [];
      self._playLock = false;

      // Setup event listeners.
      self._onend = o.onend ? [{fn: o.onend}] : [];
      self._onfade = o.onfade ? [{fn: o.onfade}] : [];
      self._onload = o.onload ? [{fn: o.onload}] : [];
      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];
      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];
      self._onpause = o.onpause ? [{fn: o.onpause}] : [];
      self._onplay = o.onplay ? [{fn: o.onplay}] : [];
      self._onstop = o.onstop ? [{fn: o.onstop}] : [];
      self._onmute = o.onmute ? [{fn: o.onmute}] : [];
      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];
      self._onrate = o.onrate ? [{fn: o.onrate}] : [];
      self._onseek = o.onseek ? [{fn: o.onseek}] : [];
      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];
      self._onresume = [];

      // Web Audio or HTML5 Audio?
      self._webAudio = Howler.usingWebAudio && !self._html5;

      // Automatically try to enable audio.
      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {
        Howler._unlockAudio();
      }

      // Keep track of this Howl group in the global controller.
      Howler._howls.push(self);

      // If they selected autoplay, add a play event to the load queue.
      if (self._autoplay) {
        self._queue.push({
          event: 'play',
          action: function() {
            self.play();
          }
        });
      }

      // Load the source file unless otherwise specified.
      if (self._preload && self._preload !== 'none') {
        self.load();
      }

      return self;
    },

    /**
     * Load the audio file.
     * @return {Howler}
     */
    load: function() {
      var self = this;
      var url = null;

      // If no audio is available, quit immediately.
      if (Howler.noAudio) {
        self._emit('loaderror', null, 'No audio support.');
        return;
      }

      // Make sure our source is in an array.
      if (typeof self._src === 'string') {
        self._src = [self._src];
      }

      // Loop through the sources and pick the first one that is compatible.
      for (var i=0; i<self._src.length; i++) {
        var ext, str;

        if (self._format && self._format[i]) {
          // If an extension was specified, use that instead.
          ext = self._format[i];
        } else {
          // Make sure the source is a string.
          str = self._src[i];
          if (typeof str !== 'string') {
            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');
            continue;
          }

          // Extract the file extension from the URL or base64 data URI.
          ext = /^data:audio\/([^;,]+);/i.exec(str);
          if (!ext) {
            ext = /\.([^.]+)$/.exec(str.split('?', 1)[0]);
          }

          if (ext) {
            ext = ext[1].toLowerCase();
          }
        }

        // Log a warning if no extension was found.
        if (!ext) {
          console.warn('No file extension was found. Consider using the "format" property or specify an extension.');
        }

        // Check if this extension is available.
        if (ext && Howler.codecs(ext)) {
          url = self._src[i];
          break;
        }
      }

      if (!url) {
        self._emit('loaderror', null, 'No codec support for selected audio sources.');
        return;
      }

      self._src = url;
      self._state = 'loading';

      // If the hosting page is HTTPS and the source isn't,
      // drop down to HTML5 Audio to avoid Mixed Content errors.
      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {
        self._html5 = true;
        self._webAudio = false;
      }

      // Create a new sound object and add it to the pool.
      new Sound(self);

      // Load and decode the audio data for playback.
      if (self._webAudio) {
        loadBuffer(self);
      }

      return self;
    },

    /**
     * Play a sound or resume previous playback.
     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.
     * @param  {Boolean} internal Internal Use: true prevents event firing.
     * @return {Number}          Sound ID.
     */
    play: function(sprite, internal) {
      var self = this;
      var id = null;

      // Determine if a sprite, sound id or nothing was passed
      if (typeof sprite === 'number') {
        id = sprite;
        sprite = null;
      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {
        // If the passed sprite doesn't exist, do nothing.
        return null;
      } else if (typeof sprite === 'undefined') {
        // Use the default sound sprite (plays the full audio length).
        sprite = '__default';

        // Check if there is a single paused sound that isn't ended.
        // If there is, play that sound. If not, continue as usual.
        if (!self._playLock) {
          var num = 0;
          for (var i=0; i<self._sounds.length; i++) {
            if (self._sounds[i]._paused && !self._sounds[i]._ended) {
              num++;
              id = self._sounds[i]._id;
            }
          }

          if (num === 1) {
            sprite = null;
          } else {
            id = null;
          }
        }
      }

      // Get the selected node, or get one from the pool.
      var sound = id ? self._soundById(id) : self._inactiveSound();

      // If the sound doesn't exist, do nothing.
      if (!sound) {
        return null;
      }

      // Select the sprite definition.
      if (id && !sprite) {
        sprite = sound._sprite || '__default';
      }

      // If the sound hasn't loaded, we must wait to get the audio's duration.
      // We also need to wait to make sure we don't run into race conditions with
      // the order of function calls.
      if (self._state !== 'loaded') {
        // Set the sprite value on this sound.
        sound._sprite = sprite;

        // Mark this sound as not ended in case another sound is played before this one loads.
        sound._ended = false;

        // Add the sound to the queue to be played on load.
        var soundId = sound._id;
        self._queue.push({
          event: 'play',
          action: function() {
            self.play(soundId);
          }
        });

        return soundId;
      }

      // Don't play the sound if an id was passed and it is already playing.
      if (id && !sound._paused) {
        // Trigger the play event, in order to keep iterating through queue.
        if (!internal) {
          self._loadQueue('play');
        }

        return sound._id;
      }

      // Make sure the AudioContext isn't suspended, and resume it if it is.
      if (self._webAudio) {
        Howler._autoResume();
      }

      // Determine how long to play for and where to start playing.
      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);
      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);
      var timeout = (duration * 1000) / Math.abs(sound._rate);
      var start = self._sprite[sprite][0] / 1000;
      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;
      sound._sprite = sprite;

      // Mark the sound as ended instantly so that this async playback
      // doesn't get grabbed by another call to play while this one waits to start.
      sound._ended = false;

      // Update the parameters of the sound.
      var setParams = function() {
        sound._paused = false;
        sound._seek = seek;
        sound._start = start;
        sound._stop = stop;
        sound._loop = !!(sound._loop || self._sprite[sprite][2]);
      };

      // End the sound instantly if seek is at the end.
      if (seek >= stop) {
        self._ended(sound);
        return;
      }

      // Begin the actual playback.
      var node = sound._node;
      if (self._webAudio) {
        // Fire this when the sound is ready to play to begin Web Audio playback.
        var playWebAudio = function() {
          self._playLock = false;
          setParams();
          self._refreshBuffer(sound);

          // Setup the playback params.
          var vol = (sound._muted || self._muted) ? 0 : sound._volume;
          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);
          sound._playStart = Howler.ctx.currentTime;

          // Play the sound using the supported method.
          if (typeof node.bufferSource.start === 'undefined') {
            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);
          } else {
            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);
          }

          // Start a new timer if none is present.
          if (timeout !== Infinity) {
            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);
          }

          if (!internal) {
            setTimeout(function() {
              self._emit('play', sound._id);
              self._loadQueue();
            }, 0);
          }
        };

        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {
          playWebAudio();
        } else {
          self._playLock = true;

          // Wait for the audio context to resume before playing.
          self.once('resume', playWebAudio);

          // Cancel the end timer.
          self._clearTimer(sound._id);
        }
      } else {
        // Fire this when the sound is ready to play to begin HTML5 Audio playback.
        var playHtml5 = function() {
          node.currentTime = seek;
          node.muted = sound._muted || self._muted || Howler._muted || node.muted;
          node.volume = sound._volume * Howler.volume();
          node.playbackRate = sound._rate;

          // Some browsers will throw an error if this is called without user interaction.
          try {
            var play = node.play();

            // Support older browsers that don't support promises, and thus don't have this issue.
            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {
              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().
              self._playLock = true;

              // Set param values immediately.
              setParams();

              // Releases the lock and executes queued actions.
              play
                .then(function() {
                  self._playLock = false;
                  node._unlocked = true;
                  if (!internal) {
                    self._emit('play', sound._id);
                    self._loadQueue();
                  }
                })
                .catch(function() {
                  self._playLock = false;
                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +
                    'on mobile devices and Chrome where playback was not within a user interaction.');

                  // Reset the ended and paused values.
                  sound._ended = true;
                  sound._paused = true;
                });
            } else if (!internal) {
              self._playLock = false;
              setParams();
              self._emit('play', sound._id);
              self._loadQueue();
            }

            // Setting rate before playing won't work in IE, so we set it again here.
            node.playbackRate = sound._rate;

            // If the node is still paused, then we can assume there was a playback issue.
            if (node.paused) {
              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +
                'on mobile devices and Chrome where playback was not within a user interaction.');
              return;
            }

            // Setup the end timer on sprites or listen for the ended event.
            if (sprite !== '__default' || sound._loop) {
              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);
            } else {
              self._endTimers[sound._id] = function() {
                // Fire ended on this audio node.
                self._ended(sound);

                // Clear this listener.
                node.removeEventListener('ended', self._endTimers[sound._id], false);
              };
              node.addEventListener('ended', self._endTimers[sound._id], false);
            }
          } catch (err) {
            self._emit('playerror', sound._id, err);
          }
        };

        // If this is streaming audio, make sure the src is set and load again.
        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {
          node.src = self._src;
          node.load();
        }

        // Play immediately if ready, or wait for the 'canplaythrough'e vent.
        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);
        if (node.readyState >= 3 || loadedNoReadyState) {
          playHtml5();
        } else {
          self._playLock = true;

          var listener = function() {
            // Begin playback.
            playHtml5();

            // Clear this listener.
            node.removeEventListener(Howler._canPlayEvent, listener, false);
          };
          node.addEventListener(Howler._canPlayEvent, listener, false);

          // Cancel the end timer.
          self._clearTimer(sound._id);
        }
      }

      return sound._id;
    },

    /**
     * Pause playback and save current position.
     * @param  {Number} id The sound ID (empty to pause all in group).
     * @return {Howl}
     */
    pause: function(id) {
      var self = this;

      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.
      if (self._state !== 'loaded' || self._playLock) {
        self._queue.push({
          event: 'pause',
          action: function() {
            self.pause(id);
          }
        });

        return self;
      }

      // If no id is passed, get all ID's to be paused.
      var ids = self._getSoundIds(id);

      for (var i=0; i<ids.length; i++) {
        // Clear the end timer.
        self._clearTimer(ids[i]);

        // Get the sound.
        var sound = self._soundById(ids[i]);

        if (sound && !sound._paused) {
          // Reset the seek position.
          sound._seek = self.seek(ids[i]);
          sound._rateSeek = 0;
          sound._paused = true;

          // Stop currently running fades.
          self._stopFade(ids[i]);

          if (sound._node) {
            if (self._webAudio) {
              // Make sure the sound has been created.
              if (!sound._node.bufferSource) {
                continue;
              }

              if (typeof sound._node.bufferSource.stop === 'undefined') {
                sound._node.bufferSource.noteOff(0);
              } else {
                sound._node.bufferSource.stop(0);
              }

              // Clean up the buffer source.
              self._cleanBuffer(sound._node);
            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {
              sound._node.pause();
            }
          }
        }

        // Fire the pause event, unless `true` is passed as the 2nd argument.
        if (!arguments[1]) {
          self._emit('pause', sound ? sound._id : null);
        }
      }

      return self;
    },

    /**
     * Stop playback and reset to start.
     * @param  {Number} id The sound ID (empty to stop all in group).
     * @param  {Boolean} internal Internal Use: true prevents event firing.
     * @return {Howl}
     */
    stop: function(id, internal) {
      var self = this;

      // If the sound hasn't loaded, add it to the load queue to stop when capable.
      if (self._state !== 'loaded' || self._playLock) {
        self._queue.push({
          event: 'stop',
          action: function() {
            self.stop(id);
          }
        });

        return self;
      }

      // If no id is passed, get all ID's to be stopped.
      var ids = self._getSoundIds(id);

      for (var i=0; i<ids.length; i++) {
        // Clear the end timer.
        self._clearTimer(ids[i]);

        // Get the sound.
        var sound = self._soundById(ids[i]);

        if (sound) {
          // Reset the seek position.
          sound._seek = sound._start || 0;
          sound._rateSeek = 0;
          sound._paused = true;
          sound._ended = true;

          // Stop currently running fades.
          self._stopFade(ids[i]);

          if (sound._node) {
            if (self._webAudio) {
              // Make sure the sound's AudioBufferSourceNode has been created.
              if (sound._node.bufferSource) {
                if (typeof sound._node.bufferSource.stop === 'undefined') {
                  sound._node.bufferSource.noteOff(0);
                } else {
                  sound._node.bufferSource.stop(0);
                }

                // Clean up the buffer source.
                self._cleanBuffer(sound._node);
              }
            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {
              sound._node.currentTime = sound._start || 0;
              sound._node.pause();

              // If this is a live stream, stop download once the audio is stopped.
              if (sound._node.duration === Infinity) {
                self._clearSound(sound._node);
              }
            }
          }

          if (!internal) {
            self._emit('stop', sound._id);
          }
        }
      }

      return self;
    },

    /**
     * Mute/unmute a single sound or all sounds in this Howl group.
     * @param  {Boolean} muted Set to true to mute and false to unmute.
     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).
     * @return {Howl}
     */
    mute: function(muted, id) {
      var self = this;

      // If the sound hasn't loaded, add it to the load queue to mute when capable.
      if (self._state !== 'loaded'|| self._playLock) {
        self._queue.push({
          event: 'mute',
          action: function() {
            self.mute(muted, id);
          }
        });

        return self;
      }

      // If applying mute/unmute to all sounds, update the group's value.
      if (typeof id === 'undefined') {
        if (typeof muted === 'boolean') {
          self._muted = muted;
        } else {
          return self._muted;
        }
      }

      // If no id is passed, get all ID's to be muted.
      var ids = self._getSoundIds(id);

      for (var i=0; i<ids.length; i++) {
        // Get the sound.
        var sound = self._soundById(ids[i]);

        if (sound) {
          sound._muted = muted;

          // Cancel active fade and set the volume to the end value.
          if (sound._interval) {
            self._stopFade(sound._id);
          }

          if (self._webAudio && sound._node) {
            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);
          } else if (sound._node) {
            sound._node.muted = Howler._muted ? true : muted;
          }

          self._emit('mute', sound._id);
        }
      }

      return self;
    },

    /**
     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.
     *   volume() -> Returns the group's volume value.
     *   volume(id) -> Returns the sound id's current volume.
     *   volume(vol) -> Sets the volume of all sounds in this Howl group.
     *   volume(vol, id) -> Sets the volume of passed sound id.
     * @return {Howl/Number} Returns self or current volume.
     */
    volume: function() {
      var self = this;
      var args = arguments;
      var vol, id;

      // Determine the values based on arguments.
      if (args.length === 0) {
        // Return the value of the groups' volume.
        return self._volume;
      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {
        // First check if this is an ID, and if not, assume it is a new volume.
        var ids = self._getSoundIds();
        var index = ids.indexOf(args[0]);
        if (index >= 0) {
          id = parseInt(args[0], 10);
        } else {
          vol = parseFloat(args[0]);
        }
      } else if (args.length >= 2) {
        vol = parseFloat(args[0]);
        id = parseInt(args[1], 10);
      }

      // Update the volume or return the current volume.
      var sound;
      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {
        // If the sound hasn't loaded, add it to the load queue to change volume when capable.
        if (self._state !== 'loaded'|| self._playLock) {
          self._queue.push({
            event: 'volume',
            action: function() {
              self.volume.apply(self, args);
            }
          });

          return self;
        }

        // Set the group volume.
        if (typeof id === 'undefined') {
          self._volume = vol;
        }

        // Update one or all volumes.
        id = self._getSoundIds(id);
        for (var i=0; i<id.length; i++) {
          // Get the sound.
          sound = self._soundById(id[i]);

          if (sound) {
            sound._volume = vol;

            // Stop currently running fades.
            if (!args[2]) {
              self._stopFade(id[i]);
            }

            if (self._webAudio && sound._node && !sound._muted) {
              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);
            } else if (sound._node && !sound._muted) {
              sound._node.volume = vol * Howler.volume();
            }

            self._emit('volume', sound._id);
          }
        }
      } else {
        sound = id ? self._soundById(id) : self._sounds[0];
        return sound ? sound._volume : 0;
      }

      return self;
    },

    /**
     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).
     * @param  {Number} from The value to fade from (0.0 to 1.0).
     * @param  {Number} to   The volume to fade to (0.0 to 1.0).
     * @param  {Number} len  Time in milliseconds to fade.
     * @param  {Number} id   The sound id (omit to fade all sounds).
     * @return {Howl}
     */
    fade: function(from, to, len, id) {
      var self = this;

      // If the sound hasn't loaded, add it to the load queue to fade when capable.
      if (self._state !== 'loaded' || self._playLock) {
        self._queue.push({
          event: 'fade',
          action: function() {
            self.fade(from, to, len, id);
          }
        });

        return self;
      }

      // Make sure the to/from/len values are numbers.
      from = Math.min(Math.max(0, parseFloat(from)), 1);
      to = Math.min(Math.max(0, parseFloat(to)), 1);
      len = parseFloat(len);

      // Set the volume to the start position.
      self.volume(from, id);

      // Fade the volume of one or all sounds.
      var ids = self._getSoundIds(id);
      for (var i=0; i<ids.length; i++) {
        // Get the sound.
        var sound = self._soundById(ids[i]);

        // Create a linear fade or fall back to timeouts with HTML5 Audio.
        if (sound) {
          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).
          if (!id) {
            self._stopFade(ids[i]);
          }

          // If we are using Web Audio, let the native methods do the actual fade.
          if (self._webAudio && !sound._muted) {
            var currentTime = Howler.ctx.currentTime;
            var end = currentTime + (len / 1000);
            sound._volume = from;
            sound._node.gain.setValueAtTime(from, currentTime);
            sound._node.gain.linearRampToValueAtTime(to, end);
          }

          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');
        }
      }

      return self;
    },

    /**
     * Starts the internal interval to fade a sound.
     * @param  {Object} sound Reference to sound to fade.
     * @param  {Number} from The value to fade from (0.0 to 1.0).
     * @param  {Number} to   The volume to fade to (0.0 to 1.0).
     * @param  {Number} len  Time in milliseconds to fade.
     * @param  {Number} id   The sound id to fade.
     * @param  {Boolean} isGroup   If true, set the volume on the group.
     */
    _startFadeInterval: function(sound, from, to, len, id, isGroup) {
      var self = this;
      var vol = from;
      var diff = to - from;
      var steps = Math.abs(diff / 0.01);
      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);
      var lastTick = Date.now();

      // Store the value being faded to.
      sound._fadeTo = to;

      // Update the volume value on each interval tick.
      sound._interval = setInterval(function() {
        // Update the volume based on the time since the last tick.
        var tick = (Date.now() - lastTick) / len;
        lastTick = Date.now();
        vol += diff * tick;

        // Round to within 2 decimal points.
        vol = Math.round(vol * 100) / 100;

        // Make sure the volume is in the right bounds.
        if (diff < 0) {
          vol = Math.max(to, vol);
        } else {
          vol = Math.min(to, vol);
        }

        // Change the volume.
        if (self._webAudio) {
          sound._volume = vol;
        } else {
          self.volume(vol, sound._id, true);
        }

        // Set the group's volume.
        if (isGroup) {
          self._volume = vol;
        }

        // When the fade is complete, stop it and fire event.
        if ((to < from && vol <= to) || (to > from && vol >= to)) {
          clearInterval(sound._interval);
          sound._interval = null;
          sound._fadeTo = null;
          self.volume(to, sound._id);
          self._emit('fade', sound._id);
        }
      }, stepLen);
    },

    /**
     * Internal method that stops the currently playing fade when
     * a new fade starts, volume is changed or the sound is stopped.
     * @param  {Number} id The sound id.
     * @return {Howl}
     */
    _stopFade: function(id) {
      var self = this;
      var sound = self._soundById(id);

      if (sound && sound._interval) {
        if (self._webAudio) {
          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);
        }

        clearInterval(sound._interval);
        sound._interval = null;
        self.volume(sound._fadeTo, id);
        sound._fadeTo = null;
        self._emit('fade', id);
      }

      return self;
    },

    /**
     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.
     *   loop() -> Returns the group's loop value.
     *   loop(id) -> Returns the sound id's loop value.
     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.
     *   loop(loop, id) -> Sets the loop value of passed sound id.
     * @return {Howl/Boolean} Returns self or current loop value.
     */
    loop: function() {
      var self = this;
      var args = arguments;
      var loop, id, sound;

      // Determine the values for loop and id.
      if (args.length === 0) {
        // Return the grou's loop value.
        return self._loop;
      } else if (args.length === 1) {
        if (typeof args[0] === 'boolean') {
          loop = args[0];
          self._loop = loop;
        } else {
          // Return this sound's loop value.
          sound = self._soundById(parseInt(args[0], 10));
          return sound ? sound._loop : false;
        }
      } else if (args.length === 2) {
        loop = args[0];
        id = parseInt(args[1], 10);
      }

      // If no id is passed, get all ID's to be looped.
      var ids = self._getSoundIds(id);
      for (var i=0; i<ids.length; i++) {
        sound = self._soundById(ids[i]);

        if (sound) {
          sound._loop = loop;
          if (self._webAudio && sound._node && sound._node.bufferSource) {
            sound._node.bufferSource.loop = loop;
            if (loop) {
              sound._node.bufferSource.loopStart = sound._start || 0;
              sound._node.bufferSource.loopEnd = sound._stop;
            }
          }
        }
      }

      return self;
    },

    /**
     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.
     *   rate() -> Returns the first sound node's current playback rate.
     *   rate(id) -> Returns the sound id's current playback rate.
     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.
     *   rate(rate, id) -> Sets the playback rate of passed sound id.
     * @return {Howl/Number} Returns self or the current playback rate.
     */
    rate: function() {
      var self = this;
      var args = arguments;
      var rate, id;

      // Determine the values based on arguments.
      if (args.length === 0) {
        // We will simply return the current rate of the first node.
        id = self._sounds[0]._id;
      } else if (args.length === 1) {
        // First check if this is an ID, and if not, assume it is a new rate value.
        var ids = self._getSoundIds();
        var index = ids.indexOf(args[0]);
        if (index >= 0) {
          id = parseInt(args[0], 10);
        } else {
          rate = parseFloat(args[0]);
        }
      } else if (args.length === 2) {
        rate = parseFloat(args[0]);
        id = parseInt(args[1], 10);
      }

      // Update the playback rate or return the current value.
      var sound;
      if (typeof rate === 'number') {
        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.
        if (self._state !== 'loaded' || self._playLock) {
          self._queue.push({
            event: 'rate',
            action: function() {
              self.rate.apply(self, args);
            }
          });

          return self;
        }

        // Set the group rate.
        if (typeof id === 'undefined') {
          self._rate = rate;
        }

        // Update one or all volumes.
        id = self._getSoundIds(id);
        for (var i=0; i<id.length; i++) {
          // Get the sound.
          sound = self._soundById(id[i]);

          if (sound) {
            // Keep track of our position when the rate changed and update the playback
            // start position so we can properly adjust the seek position for time elapsed.
            if (self.playing(id[i])) {
              sound._rateSeek = self.seek(id[i]);
              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;
            }
            sound._rate = rate;

            // Change the playback rate.
            if (self._webAudio && sound._node && sound._node.bufferSource) {
              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);
            } else if (sound._node) {
              sound._node.playbackRate = rate;
            }

            // Reset the timers.
            var seek = self.seek(id[i]);
            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;
            var timeout = (duration * 1000) / Math.abs(sound._rate);

            // Start a new end timer if sound is already playing.
            if (self._endTimers[id[i]] || !sound._paused) {
              self._clearTimer(id[i]);
              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);
            }

            self._emit('rate', sound._id);
          }
        }
      } else {
        sound = self._soundById(id);
        return sound ? sound._rate : self._rate;
      }

      return self;
    },

    /**
     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.
     *   seek() -> Returns the first sound node's current seek position.
     *   seek(id) -> Returns the sound id's current seek position.
     *   seek(seek) -> Sets the seek position of the first sound node.
     *   seek(seek, id) -> Sets the seek position of passed sound id.
     * @return {Howl/Number} Returns self or the current seek position.
     */
    seek: function() {
      var self = this;
      var args = arguments;
      var seek, id;

      // Determine the values based on arguments.
      if (args.length === 0) {
        // We will simply return the current position of the first node.
        id = self._sounds[0]._id;
      } else if (args.length === 1) {
        // First check if this is an ID, and if not, assume it is a new seek position.
        var ids = self._getSoundIds();
        var index = ids.indexOf(args[0]);
        if (index >= 0) {
          id = parseInt(args[0], 10);
        } else if (self._sounds.length) {
          id = self._sounds[0]._id;
          seek = parseFloat(args[0]);
        }
      } else if (args.length === 2) {
        seek = parseFloat(args[0]);
        id = parseInt(args[1], 10);
      }

      // If there is no ID, bail out.
      if (typeof id === 'undefined') {
        return self;
      }

      // If the sound hasn't loaded, add it to the load queue to seek when capable.
      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {
        self._queue.push({
          event: 'seek',
          action: function() {
            self.seek.apply(self, args);
          }
        });

        return self;
      }

      // Get the sound.
      var sound = self._soundById(id);

      if (sound) {
        if (typeof seek === 'number' && seek >= 0) {
          // Pause the sound and update position for restarting playback.
          var playing = self.playing(id);
          if (playing) {
            self.pause(id, true);
          }

          // Move the position of the track and cancel timer.
          sound._seek = seek;
          sound._ended = false;
          self._clearTimer(id);

          // Update the seek position for HTML5 Audio.
          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {
            sound._node.currentTime = seek;
          }

          // Seek and emit when ready.
          var seekAndEmit = function() {
            self._emit('seek', id);

            // Restart the playback if the sound was playing.
            if (playing) {
              self.play(id, true);
            }
          };

          // Wait for the play lock to be unset before emitting (HTML5 Audio).
          if (playing && !self._webAudio) {
            var emitSeek = function() {
              if (!self._playLock) {
                seekAndEmit();
              } else {
                setTimeout(emitSeek, 0);
              }
            };
            setTimeout(emitSeek, 0);
          } else {
            seekAndEmit();
          }
        } else {
          if (self._webAudio) {
            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;
            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;
            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));
          } else {
            return sound._node.currentTime;
          }
        }
      }

      return self;
    },

    /**
     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.
     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.
     * @return {Boolean} True if playing and false if not.
     */
    playing: function(id) {
      var self = this;

      // Check the passed sound ID (if any).
      if (typeof id === 'number') {
        var sound = self._soundById(id);
        return sound ? !sound._paused : false;
      }

      // Otherwise, loop through all sounds and check if any are playing.
      for (var i=0; i<self._sounds.length; i++) {
        if (!self._sounds[i]._paused) {
          return true;
        }
      }

      return false;
    },

    /**
     * Get the duration of this sound. Passing a sound id will return the sprite duration.
     * @param  {Number} id The sound id to check. If none is passed, return full source duration.
     * @return {Number} Audio duration in seconds.
     */
    duration: function(id) {
      var self = this;
      var duration = self._duration;

      // If we pass an ID, get the sound and return the sprite length.
      var sound = self._soundById(id);
      if (sound) {
        duration = self._sprite[sound._sprite][1] / 1000;
      }

      return duration;
    },

    /**
     * Returns the current loaded state of this Howl.
     * @return {String} 'unloaded', 'loading', 'loaded'
     */
    state: function() {
      return this._state;
    },

    /**
     * Unload and destroy the current Howl object.
     * This will immediately stop all sound instances attached to this group.
     */
    unload: function() {
      var self = this;

      // Stop playing any active sounds.
      var sounds = self._sounds;
      for (var i=0; i<sounds.length; i++) {
        // Stop the sound if it is currently playing.
        if (!sounds[i]._paused) {
          self.stop(sounds[i]._id);
        }

        // Remove the source or disconnect.
        if (!self._webAudio) {
          // Set the source to 0-second silence to stop any downloading (except in IE).
          self._clearSound(sounds[i]._node);

          // Remove any event listeners.
          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);
          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);
          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);

          // Release the Audio object back to the pool.
          Howler._releaseHtml5Audio(sounds[i]._node);
        }

        // Empty out all of the nodes.
        delete sounds[i]._node;

        // Make sure all timers are cleared out.
        self._clearTimer(sounds[i]._id);
      }

      // Remove the references in the global Howler object.
      var index = Howler._howls.indexOf(self);
      if (index >= 0) {
        Howler._howls.splice(index, 1);
      }

      // Delete this sound from the cache (if no other Howl is using it).
      var remCache = true;
      for (i=0; i<Howler._howls.length; i++) {
        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {
          remCache = false;
          break;
        }
      }

      if (cache && remCache) {
        delete cache[self._src];
      }

      // Clear global errors.
      Howler.noAudio = false;

      // Clear out `self`.
      self._state = 'unloaded';
      self._sounds = [];
      self = null;

      return null;
    },

    /**
     * Listen to a custom event.
     * @param  {String}   event Event name.
     * @param  {Function} fn    Listener to call.
     * @param  {Number}   id    (optional) Only listen to events for this sound.
     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.
     * @return {Howl}
     */
    on: function(event, fn, id, once) {
      var self = this;
      var events = self['_on' + event];

      if (typeof fn === 'function') {
        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});
      }

      return self;
    },

    /**
     * Remove a custom event. Call without parameters to remove all events.
     * @param  {String}   event Event name.
     * @param  {Function} fn    Listener to remove. Leave empty to remove all.
     * @param  {Number}   id    (optional) Only remove events for this sound.
     * @return {Howl}
     */
    off: function(event, fn, id) {
      var self = this;
      var events = self['_on' + event];
      var i = 0;

      // Allow passing just an event and ID.
      if (typeof fn === 'number') {
        id = fn;
        fn = null;
      }

      if (fn || id) {
        // Loop through event store and remove the passed function.
        for (i=0; i<events.length; i++) {
          var isId = (id === events[i].id);
          if (fn === events[i].fn && isId || !fn && isId) {
            events.splice(i, 1);
            break;
          }
        }
      } else if (event) {
        // Clear out all events of this type.
        self['_on' + event] = [];
      } else {
        // Clear out all events of every type.
        var keys = Object.keys(self);
        for (i=0; i<keys.length; i++) {
          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {
            self[keys[i]] = [];
          }
        }
      }

      return self;
    },

    /**
     * Listen to a custom event and remove it once fired.
     * @param  {String}   event Event name.
     * @param  {Function} fn    Listener to call.
     * @param  {Number}   id    (optional) Only listen to events for this sound.
     * @return {Howl}
     */
    once: function(event, fn, id) {
      var self = this;

      // Setup the event listener.
      self.on(event, fn, id, 1);

      return self;
    },

    /**
     * Emit all events of a specific type and pass the sound id.
     * @param  {String} event Event name.
     * @param  {Number} id    Sound ID.
     * @param  {Number} msg   Message to go with event.
     * @return {Howl}
     */
    _emit: function(event, id, msg) {
      var self = this;
      var events = self['_on' + event];

      // Loop through event store and fire all functions.
      for (var i=events.length-1; i>=0; i--) {
        // Only fire the listener if the correct ID is used.
        if (!events[i].id || events[i].id === id || event === 'load') {
          setTimeout(function(fn) {
            fn.call(this, id, msg);
          }.bind(self, events[i].fn), 0);

          // If this event was setup with `once`, remove it.
          if (events[i].once) {
            self.off(event, events[i].fn, events[i].id);
          }
        }
      }

      // Pass the event type into load queue so that it can continue stepping.
      self._loadQueue(event);

      return self;
    },

    /**
     * Queue of actions initiated before the sound has loaded.
     * These will be called in sequence, with the next only firing
     * after the previous has finished executing (even if async like play).
     * @return {Howl}
     */
    _loadQueue: function(event) {
      var self = this;

      if (self._queue.length > 0) {
        var task = self._queue[0];

        // Remove this task if a matching event was passed.
        if (task.event === event) {
          self._queue.shift();
          self._loadQueue();
        }

        // Run the task if no event type is passed.
        if (!event) {
          task.action();
        }
      }

      return self;
    },

    /**
     * Fired when playback ends at the end of the duration.
     * @param  {Sound} sound The sound object to work with.
     * @return {Howl}
     */
    _ended: function(sound) {
      var self = this;
      var sprite = sound._sprite;

      // If we are using IE and there was network latency we may be clipping
      // audio before it completes playing. Lets check the node to make sure it
      // believes it has completed, before ending the playback.
      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {
        setTimeout(self._ended.bind(self, sound), 100);
        return self;
      }

      // Should this sound loop?
      var loop = !!(sound._loop || self._sprite[sprite][2]);

      // Fire the ended event.
      self._emit('end', sound._id);

      // Restart the playback for HTML5 Audio loop.
      if (!self._webAudio && loop) {
        self.stop(sound._id, true).play(sound._id);
      }

      // Restart this timer if on a Web Audio loop.
      if (self._webAudio && loop) {
        self._emit('play', sound._id);
        sound._seek = sound._start || 0;
        sound._rateSeek = 0;
        sound._playStart = Howler.ctx.currentTime;

        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);
        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);
      }

      // Mark the node as paused.
      if (self._webAudio && !loop) {
        sound._paused = true;
        sound._ended = true;
        sound._seek = sound._start || 0;
        sound._rateSeek = 0;
        self._clearTimer(sound._id);

        // Clean up the buffer source.
        self._cleanBuffer(sound._node);

        // Attempt to auto-suspend AudioContext if no sounds are still playing.
        Howler._autoSuspend();
      }

      // When using a sprite, end the track.
      if (!self._webAudio && !loop) {
        self.stop(sound._id, true);
      }

      return self;
    },

    /**
     * Clear the end timer for a sound playback.
     * @param  {Number} id The sound ID.
     * @return {Howl}
     */
    _clearTimer: function(id) {
      var self = this;

      if (self._endTimers[id]) {
        // Clear the timeout or remove the ended listener.
        if (typeof self._endTimers[id] !== 'function') {
          clearTimeout(self._endTimers[id]);
        } else {
          var sound = self._soundById(id);
          if (sound && sound._node) {
            sound._node.removeEventListener('ended', self._endTimers[id], false);
          }
        }

        delete self._endTimers[id];
      }

      return self;
    },

    /**
     * Return the sound identified by this ID, or return null.
     * @param  {Number} id Sound ID
     * @return {Object}    Sound object or null.
     */
    _soundById: function(id) {
      var self = this;

      // Loop through all sounds and find the one with this ID.
      for (var i=0; i<self._sounds.length; i++) {
        if (id === self._sounds[i]._id) {
          return self._sounds[i];
        }
      }

      return null;
    },

    /**
     * Return an inactive sound from the pool or create a new one.
     * @return {Sound} Sound playback object.
     */
    _inactiveSound: function() {
      var self = this;

      self._drain();

      // Find the first inactive node to recycle.
      for (var i=0; i<self._sounds.length; i++) {
        if (self._sounds[i]._ended) {
          return self._sounds[i].reset();
        }
      }

      // If no inactive node was found, create a new one.
      return new Sound(self);
    },

    /**
     * Drain excess inactive sounds from the pool.
     */
    _drain: function() {
      var self = this;
      var limit = self._pool;
      var cnt = 0;
      var i = 0;

      // If there are less sounds than the max pool size, we are done.
      if (self._sounds.length < limit) {
        return;
      }

      // Count the number of inactive sounds.
      for (i=0; i<self._sounds.length; i++) {
        if (self._sounds[i]._ended) {
          cnt++;
        }
      }

      // Remove excess inactive sounds, going in reverse order.
      for (i=self._sounds.length - 1; i>=0; i--) {
        if (cnt <= limit) {
          return;
        }

        if (self._sounds[i]._ended) {
          // Disconnect the audio source when using Web Audio.
          if (self._webAudio && self._sounds[i]._node) {
            self._sounds[i]._node.disconnect(0);
          }

          // Remove sounds until we have the pool size.
          self._sounds.splice(i, 1);
          cnt--;
        }
      }
    },

    /**
     * Get all ID's from the sounds pool.
     * @param  {Number} id Only return one ID if one is passed.
     * @return {Array}    Array of IDs.
     */
    _getSoundIds: function(id) {
      var self = this;

      if (typeof id === 'undefined') {
        var ids = [];
        for (var i=0; i<self._sounds.length; i++) {
          ids.push(self._sounds[i]._id);
        }

        return ids;
      } else {
        return [id];
      }
    },

    /**
     * Load the sound back into the buffer source.
     * @param  {Sound} sound The sound object to work with.
     * @return {Howl}
     */
    _refreshBuffer: function(sound) {
      var self = this;

      // Setup the buffer source for playback.
      sound._node.bufferSource = Howler.ctx.createBufferSource();
      sound._node.bufferSource.buffer = cache[self._src];

      // Connect to the correct node.
      if (sound._panner) {
        sound._node.bufferSource.connect(sound._panner);
      } else {
        sound._node.bufferSource.connect(sound._node);
      }

      // Setup looping and playback rate.
      sound._node.bufferSource.loop = sound._loop;
      if (sound._loop) {
        sound._node.bufferSource.loopStart = sound._start || 0;
        sound._node.bufferSource.loopEnd = sound._stop || 0;
      }
      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);

      return self;
    },

    /**
     * Prevent memory leaks by cleaning up the buffer source after playback.
     * @param  {Object} node Sound's audio node containing the buffer source.
     * @return {Howl}
     */
    _cleanBuffer: function(node) {
      var self = this;
      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;

      if (Howler._scratchBuffer && node.bufferSource) {
        node.bufferSource.onended = null;
        node.bufferSource.disconnect(0);
        if (isIOS) {
          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}
        }
      }
      node.bufferSource = null;

      return self;
    },

    /**
     * Set the source to a 0-second silence to stop any downloading (except in IE).
     * @param  {Object} node Audio node to clear.
     */
    _clearSound: function(node) {
      var checkIE = /MSIE |Trident\//.test(Howler._navigator && Howler._navigator.userAgent);
      if (!checkIE) {
        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';
      }
    }
  };

  /** Single Sound Methods **/
  /***************************************************************************/

  /**
   * Setup the sound object, which each node attached to a Howl group is contained in.
   * @param {Object} howl The Howl parent group.
   */
  var Sound = function(howl) {
    this._parent = howl;
    this.init();
  };
  Sound.prototype = {
    /**
     * Initialize a new Sound object.
     * @return {Sound}
     */
    init: function() {
      var self = this;
      var parent = self._parent;

      // Setup the default parameters.
      self._muted = parent._muted;
      self._loop = parent._loop;
      self._volume = parent._volume;
      self._rate = parent._rate;
      self._seek = 0;
      self._paused = true;
      self._ended = true;
      self._sprite = '__default';

      // Generate a unique ID for this sound.
      self._id = ++Howler._counter;

      // Add itself to the parent's pool.
      parent._sounds.push(self);

      // Create the new node.
      self.create();

      return self;
    },

    /**
     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.
     * @return {Sound}
     */
    create: function() {
      var self = this;
      var parent = self._parent;
      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;

      if (parent._webAudio) {
        // Create the gain node for controlling volume (the source will connect to this).
        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();
        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);
        self._node.paused = true;
        self._node.connect(Howler.masterGain);
      } else if (!Howler.noAudio) {
        // Get an unlocked Audio object from the pool.
        self._node = Howler._obtainHtml5Audio();

        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).
        self._errorFn = self._errorListener.bind(self);
        self._node.addEventListener('error', self._errorFn, false);

        // Listen for 'canplaythrough' event to let us know the sound is ready.
        self._loadFn = self._loadListener.bind(self);
        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);

        // Listen for the 'ended' event on the sound to account for edge-case where
        // a finite sound has a duration of Infinity.
        self._endFn = self._endListener.bind(self);
        self._node.addEventListener('ended', self._endFn, false);

        // Setup the new audio node.
        self._node.src = parent._src;
        self._node.preload = parent._preload === true ? 'auto' : parent._preload;
        self._node.volume = volume * Howler.volume();

        // Begin loading the source.
        self._node.load();
      }

      return self;
    },

    /**
     * Reset the parameters of this sound to the original state (for recycle).
     * @return {Sound}
     */
    reset: function() {
      var self = this;
      var parent = self._parent;

      // Reset all of the parameters of this sound.
      self._muted = parent._muted;
      self._loop = parent._loop;
      self._volume = parent._volume;
      self._rate = parent._rate;
      self._seek = 0;
      self._rateSeek = 0;
      self._paused = true;
      self._ended = true;
      self._sprite = '__default';

      // Generate a new ID so that it isn't confused with the previous sound.
      self._id = ++Howler._counter;

      return self;
    },

    /**
     * HTML5 Audio error listener callback.
     */
    _errorListener: function() {
      var self = this;

      // Fire an error event and pass back the code.
      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);

      // Clear the event listener.
      self._node.removeEventListener('error', self._errorFn, false);
    },

    /**
     * HTML5 Audio canplaythrough listener callback.
     */
    _loadListener: function() {
      var self = this;
      var parent = self._parent;

      // Round up the duration to account for the lower precision in HTML5 Audio.
      parent._duration = Math.ceil(self._node.duration * 10) / 10;

      // Setup a sprite if none is defined.
      if (Object.keys(parent._sprite).length === 0) {
        parent._sprite = {__default: [0, parent._duration * 1000]};
      }

      if (parent._state !== 'loaded') {
        parent._state = 'loaded';
        parent._emit('load');
        parent._loadQueue();
      }

      // Clear the event listener.
      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);
    },

    /**
     * HTML5 Audio ended listener callback.
     */
    _endListener: function() {
      var self = this;
      var parent = self._parent;

      // Only handle the `ended`` event if the duration is Infinity.
      if (parent._duration === Infinity) {
        // Update the parent duration to match the real audio duration.
        // Round up the duration to account for the lower precision in HTML5 Audio.
        parent._duration = Math.ceil(self._node.duration * 10) / 10;

        // Update the sprite that corresponds to the real duration.
        if (parent._sprite.__default[1] === Infinity) {
          parent._sprite.__default[1] = parent._duration * 1000;
        }

        // Run the regular ended method.
        parent._ended(self);
      }

      // Clear the event listener since the duration is now correct.
      self._node.removeEventListener('ended', self._endFn, false);
    }
  };

  /** Helper Methods **/
  /***************************************************************************/

  var cache = {};

  /**
   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).
   * @param  {Howl} self
   */
  var loadBuffer = function(self) {
    var url = self._src;

    // Check if the buffer has already been cached and use it instead.
    if (cache[url]) {
      // Set the duration from the cache.
      self._duration = cache[url].duration;

      // Load the sound into this Howl.
      loadSound(self);

      return;
    }

    if (/^data:[^;]+;base64,/.test(url)) {
      // Decode the base64 data URI without XHR, since some browsers don't support it.
      var data = atob(url.split(',')[1]);
      var dataView = new Uint8Array(data.length);
      for (var i=0; i<data.length; ++i) {
        dataView[i] = data.charCodeAt(i);
      }

      decodeAudioData(dataView.buffer, self);
    } else {
      // Load the buffer from the URL.
      var xhr = new XMLHttpRequest();
      xhr.open(self._xhr.method, url, true);
      xhr.withCredentials = self._xhr.withCredentials;
      xhr.responseType = 'arraybuffer';

      // Apply any custom headers to the request.
      if (self._xhr.headers) {
        Object.keys(self._xhr.headers).forEach(function(key) {
          xhr.setRequestHeader(key, self._xhr.headers[key]);
        });
      }

      xhr.onload = function() {
        // Make sure we get a successful response back.
        var code = (xhr.status + '')[0];
        if (code !== '0' && code !== '2' && code !== '3') {
          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');
          return;
        }

        decodeAudioData(xhr.response, self);
      };
      xhr.onerror = function() {
        // If there is an error, switch to HTML5 Audio.
        if (self._webAudio) {
          self._html5 = true;
          self._webAudio = false;
          self._sounds = [];
          delete cache[url];
          self.load();
        }
      };
      safeXhrSend(xhr);
    }
  };

  /**
   * Send the XHR request wrapped in a try/catch.
   * @param  {Object} xhr XHR to send.
   */
  var safeXhrSend = function(xhr) {
    try {
      xhr.send();
    } catch (e) {
      xhr.onerror();
    }
  };

  /**
   * Decode audio data from an array buffer.
   * @param  {ArrayBuffer} arraybuffer The audio data.
   * @param  {Howl}        self
   */
  var decodeAudioData = function(arraybuffer, self) {
    // Fire a load error if something broke.
    var error = function() {
      self._emit('loaderror', null, 'Decoding audio data failed.');
    };

    // Load the sound on success.
    var success = function(buffer) {
      if (buffer && self._sounds.length > 0) {
        cache[self._src] = buffer;
        loadSound(self, buffer);
      } else {
        error();
      }
    };

    // Decode the buffer into an audio source.
    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {
      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);
    } else {
      Howler.ctx.decodeAudioData(arraybuffer, success, error);
    }
  }

  /**
   * Sound is now loaded, so finish setting everything up and fire the loaded event.
   * @param  {Howl} self
   * @param  {Object} buffer The decoded buffer sound source.
   */
  var loadSound = function(self, buffer) {
    // Set the duration.
    if (buffer && !self._duration) {
      self._duration = buffer.duration;
    }

    // Setup a sprite if none is defined.
    if (Object.keys(self._sprite).length === 0) {
      self._sprite = {__default: [0, self._duration * 1000]};
    }

    // Fire the loaded event.
    if (self._state !== 'loaded') {
      self._state = 'loaded';
      self._emit('load');
      self._loadQueue();
    }
  };

  /**
   * Setup the audio context when available, or switch to HTML5 Audio mode.
   */
  var setupAudioContext = function() {
    // If we have already detected that Web Audio isn't supported, don't run this step again.
    if (!Howler.usingWebAudio) {
      return;
    }

    // Check if we are using Web Audio and setup the AudioContext if we are.
    try {
      if (typeof AudioContext !== 'undefined') {
        Howler.ctx = new AudioContext();
      } else if (typeof webkitAudioContext !== 'undefined') {
        Howler.ctx = new webkitAudioContext();
      } else {
        Howler.usingWebAudio = false;
      }
    } catch(e) {
      Howler.usingWebAudio = false;
    }

    // If the audio context creation still failed, set using web audio to false.
    if (!Howler.ctx) {
      Howler.usingWebAudio = false;
    }

    // Check if a webview is being used on iOS8 or earlier (rather than the browser).
    // If it is, disable Web Audio as it causes crashing.
    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));
    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
    var version = appVersion ? parseInt(appVersion[1], 10) : null;
    if (iOS && version && version < 9) {
      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());
      if (Howler._navigator && !safari) {
        Howler.usingWebAudio = false;
      }
    }

    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).
    if (Howler.usingWebAudio) {
      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();
      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);
      Howler.masterGain.connect(Howler.ctx.destination);
    }

    // Re-run the setup on Howler.
    Howler._setup();
  };

  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.
  if (typeof define === 'function' && define.amd) {
    define([], function() {
      return {
        Howler: Howler,
        Howl: Howl
      };
    });
  }

  // Add support for CommonJS libraries such as browserify.
  if (typeof exports !== 'undefined') {
    exports.Howler = Howler;
    exports.Howl = Howl;
  }

  // Add to global in Node.js (for testing, etc).
  if (typeof global !== 'undefined') {
    global.HowlerGlobal = HowlerGlobal;
    global.Howler = Howler;
    global.Howl = Howl;
    global.Sound = Sound;
  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.
    window.HowlerGlobal = HowlerGlobal;
    window.Howler = Howler;
    window.Howl = Howl;
    window.Sound = Sound;
  }
})();


/*!
 *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.
 *  
 *  howler.js v2.2.1
 *  howlerjs.com
 *
 *  (c) 2013-2020, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */

(function() {

  'use strict';

  // Setup default properties.
  HowlerGlobal.prototype._pos = [0, 0, 0];
  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];

  /** Global Methods **/
  /***************************************************************************/

  /**
   * Helper method to update the stereo panning position of all current Howls.
   * Future Howls will not use this value unless explicitly set.
   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.
   * @return {Howler/Number}     Self or current stereo panning value.
   */
  HowlerGlobal.prototype.stereo = function(pan) {
    var self = this;

    // Stop right here if not using Web Audio.
    if (!self.ctx || !self.ctx.listener) {
      return self;
    }

    // Loop through all Howls and update their stereo panning.
    for (var i=self._howls.length-1; i>=0; i--) {
      self._howls[i].stereo(pan);
    }

    return self;
  };

  /**
   * Get/set the position of the listener in 3D cartesian space. Sounds using
   * 3D position will be relative to the listener's position.
   * @param  {Number} x The x-position of the listener.
   * @param  {Number} y The y-position of the listener.
   * @param  {Number} z The z-position of the listener.
   * @return {Howler/Array}   Self or current listener position.
   */
  HowlerGlobal.prototype.pos = function(x, y, z) {
    var self = this;

    // Stop right here if not using Web Audio.
    if (!self.ctx || !self.ctx.listener) {
      return self;
    }

    // Set the defaults for optional 'y' & 'z'.
    y = (typeof y !== 'number') ? self._pos[1] : y;
    z = (typeof z !== 'number') ? self._pos[2] : z;

    if (typeof x === 'number') {
      self._pos = [x, y, z];

      if (typeof self.ctx.listener.positionX !== 'undefined') {
        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);
        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);
        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);
      } else {
        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);
      }
    } else {
      return self._pos;
    }

    return self;
  };

  /**
   * Get/set the direction the listener is pointing in the 3D cartesian space.
   * A front and up vector must be provided. The front is the direction the
   * face of the listener is pointing, and up is the direction the top of the
   * listener is pointing. Thus, these values are expected to be at right angles
   * from each other.
   * @param  {Number} x   The x-orientation of the listener.
   * @param  {Number} y   The y-orientation of the listener.
   * @param  {Number} z   The z-orientation of the listener.
   * @param  {Number} xUp The x-orientation of the top of the listener.
   * @param  {Number} yUp The y-orientation of the top of the listener.
   * @param  {Number} zUp The z-orientation of the top of the listener.
   * @return {Howler/Array}     Returns self or the current orientation vectors.
   */
  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {
    var self = this;

    // Stop right here if not using Web Audio.
    if (!self.ctx || !self.ctx.listener) {
      return self;
    }

    // Set the defaults for optional 'y' & 'z'.
    var or = self._orientation;
    y = (typeof y !== 'number') ? or[1] : y;
    z = (typeof z !== 'number') ? or[2] : z;
    xUp = (typeof xUp !== 'number') ? or[3] : xUp;
    yUp = (typeof yUp !== 'number') ? or[4] : yUp;
    zUp = (typeof zUp !== 'number') ? or[5] : zUp;

    if (typeof x === 'number') {
      self._orientation = [x, y, z, xUp, yUp, zUp];

      if (typeof self.ctx.listener.forwardX !== 'undefined') {
        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);
        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);
        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);
        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);
        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);
        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);
      } else {
        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);
      }
    } else {
      return or;
    }

    return self;
  };

  /** Group Methods **/
  /***************************************************************************/

  /**
   * Add new properties to the core init.
   * @param  {Function} _super Core init method.
   * @return {Howl}
   */
  Howl.prototype.init = (function(_super) {
    return function(o) {
      var self = this;

      // Setup user-defined default properties.
      self._orientation = o.orientation || [1, 0, 0];
      self._stereo = o.stereo || null;
      self._pos = o.pos || null;
      self._pannerAttr = {
        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,
        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,
        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,
        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',
        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,
        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',
        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,
        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1
      };

      // Setup event listeners.
      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];
      self._onpos = o.onpos ? [{fn: o.onpos}] : [];
      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];

      // Complete initilization with howler.js core's init function.
      return _super.call(this, o);
    };
  })(Howl.prototype.init);

  /**
   * Get/set the stereo panning of the audio source for this sound or all in the group.
   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.
   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.
   * @return {Howl/Number}    Returns self or the current stereo panning value.
   */
  Howl.prototype.stereo = function(pan, id) {
    var self = this;

    // Stop right here if not using Web Audio.
    if (!self._webAudio) {
      return self;
    }

    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.
    if (self._state !== 'loaded') {
      self._queue.push({
        event: 'stereo',
        action: function() {
          self.stereo(pan, id);
        }
      });

      return self;
    }

    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.
    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';

    // Setup the group's stereo panning if no ID is passed.
    if (typeof id === 'undefined') {
      // Return the group's stereo panning if no parameters are passed.
      if (typeof pan === 'number') {
        self._stereo = pan;
        self._pos = [pan, 0, 0];
      } else {
        return self._stereo;
      }
    }

    // Change the streo panning of one or all sounds in group.
    var ids = self._getSoundIds(id);
    for (var i=0; i<ids.length; i++) {
      // Get the sound.
      var sound = self._soundById(ids[i]);

      if (sound) {
        if (typeof pan === 'number') {
          sound._stereo = pan;
          sound._pos = [pan, 0, 0];

          if (sound._node) {
            // If we are falling back, make sure the panningModel is equalpower.
            sound._pannerAttr.panningModel = 'equalpower';

            // Check if there is a panner setup and create a new one if not.
            if (!sound._panner || !sound._panner.pan) {
              setupPanner(sound, pannerType);
            }

            if (pannerType === 'spatial') {
              if (typeof sound._panner.positionX !== 'undefined') {
                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);
                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);
                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);
              } else {
                sound._panner.setPosition(pan, 0, 0);
              }
            } else {
              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);
            }
          }

          self._emit('stereo', sound._id);
        } else {
          return sound._stereo;
        }
      }
    }

    return self;
  };

  /**
   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.
   * @param  {Number} x  The x-position of the audio source.
   * @param  {Number} y  The y-position of the audio source.
   * @param  {Number} z  The z-position of the audio source.
   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.
   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].
   */
  Howl.prototype.pos = function(x, y, z, id) {
    var self = this;

    // Stop right here if not using Web Audio.
    if (!self._webAudio) {
      return self;
    }

    // If the sound hasn't loaded, add it to the load queue to change position when capable.
    if (self._state !== 'loaded') {
      self._queue.push({
        event: 'pos',
        action: function() {
          self.pos(x, y, z, id);
        }
      });

      return self;
    }

    // Set the defaults for optional 'y' & 'z'.
    y = (typeof y !== 'number') ? 0 : y;
    z = (typeof z !== 'number') ? -0.5 : z;

    // Setup the group's spatial position if no ID is passed.
    if (typeof id === 'undefined') {
      // Return the group's spatial position if no parameters are passed.
      if (typeof x === 'number') {
        self._pos = [x, y, z];
      } else {
        return self._pos;
      }
    }

    // Change the spatial position of one or all sounds in group.
    var ids = self._getSoundIds(id);
    for (var i=0; i<ids.length; i++) {
      // Get the sound.
      var sound = self._soundById(ids[i]);

      if (sound) {
        if (typeof x === 'number') {
          sound._pos = [x, y, z];

          if (sound._node) {
            // Check if there is a panner setup and create a new one if not.
            if (!sound._panner || sound._panner.pan) {
              setupPanner(sound, 'spatial');
            }

            if (typeof sound._panner.positionX !== 'undefined') {
              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);
              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);
              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);
            } else {
              sound._panner.setPosition(x, y, z);
            }
          }

          self._emit('pos', sound._id);
        } else {
          return sound._pos;
        }
      }
    }

    return self;
  };

  /**
   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate
   * space. Depending on how direction the sound is, based on the `cone` attributes,
   * a sound pointing away from the listener can be quiet or silent.
   * @param  {Number} x  The x-orientation of the source.
   * @param  {Number} y  The y-orientation of the source.
   * @param  {Number} z  The z-orientation of the source.
   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.
   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].
   */
  Howl.prototype.orientation = function(x, y, z, id) {
    var self = this;

    // Stop right here if not using Web Audio.
    if (!self._webAudio) {
      return self;
    }

    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.
    if (self._state !== 'loaded') {
      self._queue.push({
        event: 'orientation',
        action: function() {
          self.orientation(x, y, z, id);
        }
      });

      return self;
    }

    // Set the defaults for optional 'y' & 'z'.
    y = (typeof y !== 'number') ? self._orientation[1] : y;
    z = (typeof z !== 'number') ? self._orientation[2] : z;

    // Setup the group's spatial orientation if no ID is passed.
    if (typeof id === 'undefined') {
      // Return the group's spatial orientation if no parameters are passed.
      if (typeof x === 'number') {
        self._orientation = [x, y, z];
      } else {
        return self._orientation;
      }
    }

    // Change the spatial orientation of one or all sounds in group.
    var ids = self._getSoundIds(id);
    for (var i=0; i<ids.length; i++) {
      // Get the sound.
      var sound = self._soundById(ids[i]);

      if (sound) {
        if (typeof x === 'number') {
          sound._orientation = [x, y, z];

          if (sound._node) {
            // Check if there is a panner setup and create a new one if not.
            if (!sound._panner) {
              // Make sure we have a position to setup the node with.
              if (!sound._pos) {
                sound._pos = self._pos || [0, 0, -0.5];
              }

              setupPanner(sound, 'spatial');
            }

            if (typeof sound._panner.orientationX !== 'undefined') {
              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);
              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);
              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);
            } else {
              sound._panner.setOrientation(x, y, z);
            }
          }

          self._emit('orientation', sound._id);
        } else {
          return sound._orientation;
        }
      }
    }

    return self;
  };

  /**
   * Get/set the panner node's attributes for a sound or group of sounds.
   * This method can optionall take 0, 1 or 2 arguments.
   *   pannerAttr() -> Returns the group's values.
   *   pannerAttr(id) -> Returns the sound id's values.
   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.
   *   pannerAttr(o, id) -> Set's the values of passed sound id.
   *
   *   Attributes:
   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,
   *                      inside of which there will be no volume reduction.
   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,
   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.
   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the
   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.
   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from
   *                     listener. Can be `linear`, `inverse` or `exponential.
   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume
   *                   will not be reduced any further.
   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.
   *                   This is simply a variable of the distance model and has a different effect depending on which model
   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.
   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a
   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`
   *                     with `inverse` and `exponential`.
   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.
   *                     Can be `HRTF` or `equalpower`.
   *
   * @return {Howl/Object} Returns self or current panner attributes.
   */
  Howl.prototype.pannerAttr = function() {
    var self = this;
    var args = arguments;
    var o, id, sound;

    // Stop right here if not using Web Audio.
    if (!self._webAudio) {
      return self;
    }

    // Determine the values based on arguments.
    if (args.length === 0) {
      // Return the group's panner attribute values.
      return self._pannerAttr;
    } else if (args.length === 1) {
      if (typeof args[0] === 'object') {
        o = args[0];

        // Set the grou's panner attribute values.
        if (typeof id === 'undefined') {
          if (!o.pannerAttr) {
            o.pannerAttr = {
              coneInnerAngle: o.coneInnerAngle,
              coneOuterAngle: o.coneOuterAngle,
              coneOuterGain: o.coneOuterGain,
              distanceModel: o.distanceModel,
              maxDistance: o.maxDistance,
              refDistance: o.refDistance,
              rolloffFactor: o.rolloffFactor,
              panningModel: o.panningModel
            };
          }

          self._pannerAttr = {
            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,
            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,
            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,
            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,
            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,
            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,
            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,
            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel
          };
        }
      } else {
        // Return this sound's panner attribute values.
        sound = self._soundById(parseInt(args[0], 10));
        return sound ? sound._pannerAttr : self._pannerAttr;
      }
    } else if (args.length === 2) {
      o = args[0];
      id = parseInt(args[1], 10);
    }

    // Update the values of the specified sounds.
    var ids = self._getSoundIds(id);
    for (var i=0; i<ids.length; i++) {
      sound = self._soundById(ids[i]);

      if (sound) {
        // Merge the new values into the sound.
        var pa = sound._pannerAttr;
        pa = {
          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,
          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,
          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,
          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,
          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,
          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,
          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,
          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel
        };

        // Update the panner values or create a new panner if none exists.
        var panner = sound._panner;
        if (panner) {
          panner.coneInnerAngle = pa.coneInnerAngle;
          panner.coneOuterAngle = pa.coneOuterAngle;
          panner.coneOuterGain = pa.coneOuterGain;
          panner.distanceModel = pa.distanceModel;
          panner.maxDistance = pa.maxDistance;
          panner.refDistance = pa.refDistance;
          panner.rolloffFactor = pa.rolloffFactor;
          panner.panningModel = pa.panningModel;
        } else {
          // Make sure we have a position to setup the node with.
          if (!sound._pos) {
            sound._pos = self._pos || [0, 0, -0.5];
          }

          // Create a new panner node.
          setupPanner(sound, 'spatial');
        }
      }
    }

    return self;
  };

  /** Single Sound Methods **/
  /***************************************************************************/

  /**
   * Add new properties to the core Sound init.
   * @param  {Function} _super Core Sound init method.
   * @return {Sound}
   */
  Sound.prototype.init = (function(_super) {
    return function() {
      var self = this;
      var parent = self._parent;

      // Setup user-defined default properties.
      self._orientation = parent._orientation;
      self._stereo = parent._stereo;
      self._pos = parent._pos;
      self._pannerAttr = parent._pannerAttr;

      // Complete initilization with howler.js core Sound's init function.
      _super.call(this);

      // If a stereo or position was specified, set it up.
      if (self._stereo) {
        parent.stereo(self._stereo);
      } else if (self._pos) {
        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);
      }
    };
  })(Sound.prototype.init);

  /**
   * Override the Sound.reset method to clean up properties from the spatial plugin.
   * @param  {Function} _super Sound reset method.
   * @return {Sound}
   */
  Sound.prototype.reset = (function(_super) {
    return function() {
      var self = this;
      var parent = self._parent;

      // Reset all spatial plugin properties on this sound.
      self._orientation = parent._orientation;
      self._stereo = parent._stereo;
      self._pos = parent._pos;
      self._pannerAttr = parent._pannerAttr;

      // If a stereo or position was specified, set it up.
      if (self._stereo) {
        parent.stereo(self._stereo);
      } else if (self._pos) {
        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);
      } else if (self._panner) {
        // Disconnect the panner.
        self._panner.disconnect(0);
        self._panner = undefined;
        parent._refreshBuffer(self);
      }

      // Complete resetting of the sound.
      return _super.call(this);
    };
  })(Sound.prototype.reset);

  /** Helper Methods **/
  /***************************************************************************/

  /**
   * Create a new panner node and save it on the sound.
   * @param  {Sound} sound Specific sound to setup panning on.
   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.
   */
  var setupPanner = function(sound, type) {
    type = type || 'spatial';

    // Create the new panner node.
    if (type === 'spatial') {
      sound._panner = Howler.ctx.createPanner();
      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;
      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;
      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;
      sound._panner.distanceModel = sound._pannerAttr.distanceModel;
      sound._panner.maxDistance = sound._pannerAttr.maxDistance;
      sound._panner.refDistance = sound._pannerAttr.refDistance;
      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;
      sound._panner.panningModel = sound._pannerAttr.panningModel;

      if (typeof sound._panner.positionX !== 'undefined') {
        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);
        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);
        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);
      } else {
        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);
      }

      if (typeof sound._panner.orientationX !== 'undefined') {
        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);
        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);
        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);
      } else {
        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);
      }
    } else {
      sound._panner = Howler.ctx.createStereoPanner();
      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);
    }

    sound._panner.connect(sound._node);

    // Update the connections.
    if (!sound._paused) {
      sound._parent.pause(sound._id, true).play(sound._id, true);
    }
  };
})();

},{}],"kVMQ":[function(require,module,exports) {
module.exports = "sell_buy.7bed0a3b.mp3";
},{}],"KmMd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var sound = require('./rsrc/licensed/artisticdude/sell_buy.mp3');

exports.default = sound;
},{"./rsrc/licensed/artisticdude/sell_buy.mp3":"kVMQ"}],"aZsd":[function(require,module,exports) {
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var memoize_one_1 = __importDefault(require("memoize-one"));

var howler_1 = require("howler");

var sfx_sell_buy_1 = __importDefault(require("@oh-my-rpg/rsrc-audio/src/sfx_sell_buy")); // lazy-load + no duplication


var get = memoize_one_1.default(function () {
  return new howler_1.Howl({
    src: [sfx_sell_buy_1.default]
  });
});
exports.default = get; // TODO add to credits
// TODO add to being shown
},{"memoize-one":"lvkj","howler":"pg2E","@oh-my-rpg/rsrc-audio/src/sfx_sell_buy":"KmMd"}],"rPPg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _interfaces = require("@tbrpg/interfaces");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/////////////////////
const INTERNAL = 'xxxINTERNAL';
const ACTION_TYPE_TO_CTA = {
  'play': 'Play',
  'equip_item': 'Equip',
  'sell_item': 'Sell',
  'rename_avatar': 'Rename',
  'change_avatar_class': 'Change class',
  'redeem_code': 'Redeem code',
  'start_game': INTERNAL,
  'on_start_session': INTERNAL,
  'on_logged_in_refresh': INTERNAL,
  'acknowledge_engagement_msg_seen': INTERNAL,
  'update_to_now': INTERNAL,
  'hack': INTERNAL,
  'set': INTERNAL
};

if ((0, _interfaces.get_action_types)().sort().join(';') !== Object.keys(ACTION_TYPE_TO_CTA).sort().join(';')) {
  throw new Error('Internal error: ACTION_TYPE_TO_CTA needs an update!');
} /////////////////////


const ActionButtonViewM = /*#__PURE__*/React.memo(function ActionButtonView({
  action,
  onClick
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 ActionButtonView');
  const cta = ACTION_TYPE_TO_CTA[action.type];
  if (cta === INTERNAL) throw new Error('UI can’t display an internal action!');

  const onClickWrap = () => {
    onClick();
    window.ga && window.ga('send', 'event', {
      eventCategory: 'game',
      eventAction: 'action:' + action.type,
      //eventValue:
      eventLabel: cta,
      hitCallback: () => console.log('GA action sent!')
    });
  };

  return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
    className: 'tbrpg-action-btn',
    onClick: onClickWrap,
    children: cta
  });
});
var _default = ActionButtonViewM;
exports.default = _default;
},{"react":"dmLA","@tbrpg/interfaces":"HAUK","react/jsx-runtime":"qEpl"}],"ttLD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _interfaces = require("@tbrpg/interfaces");

var _sfx_sell_buy = _interopRequireDefault(require("@oh-my-rpg/audio-browser/src/sfx_sell_buy"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const ActionButtonC1 = /*#__PURE__*/React.memo(function ActionButtonC1({
  action
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
    action: action,
    onClick: () => {
      (0, _gameInstanceBrowser.default)().commands.dispatch(action);

      switch (action.type) {
        case _interfaces.ActionType.sell_item:
          console.log({
            sfx_sell_buy: (0, _sfx_sell_buy.default)()
          });
          (0, _sfx_sell_buy.default)().play();
          break;

        default:
          // no sfx for this action
          break;
      }
    }
  });
});
var _default = ActionButtonC1;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@tbrpg/interfaces":"HAUK","@oh-my-rpg/audio-browser/src/sfx_sell_buy":"aZsd","../../../services/game-instance-browser":"r81V","./component":"rPPg","react/jsx-runtime":"qEpl"}],"rTKm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"ttLD"}],"E4mD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Interactive = exports.Detailed = exports.Short = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _definitions = require("@tbrpg/definitions");

var _richTextFormatToReact = require("@offirmo-private/rich-text-format-to-react");

var _viewRichText = require("@oh-my-rpg/view-rich-text");

var _logger = _interopRequireDefault(require("../../../services/logger"));

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

var _actionButton = _interopRequireDefault(require("../action-button"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function render_element_short(element) {
  switch (element.element_type) {
    case _definitions.ElementType.item:
      return (0, _viewRichText.render_item_short)(element);

    case _definitions.ElementType.achievement_snapshot:
      return (0, _viewRichText.render_achievement_snapshot_short)(element);

    default:
      _logger.default.warn('render_element_short', {
        element
      });

      throw new Error(`Not implemented: add a short renderer for element type "${element.element_type}"!`);
  }
}

function render_element_detailed(element) {
  switch (element.element_type) {
    case _definitions.ElementType.item:
      return (0, _viewRichText.render_item_detailed)(element);

    case _definitions.ElementType.achievement_snapshot:
      return (0, _viewRichText.render_achievement_snapshot_detailed)(element);

    default:
      _logger.default.warn('render_element_detailed', {
        element
      });

      throw new Error(`Not implemented: add a detailed renderer for element type "${element.element_type}"!`);
  }
} // = usually displayed inline (only used in dev for now TODO cleanup)


const Short = /*#__PURE__*/React.memo(function Short({
  children,
  element
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 InteractiveElementShort');
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
    children: children || (0, _richTextToReact.default)(render_element_short(element), {
      render_interactive: false
    })
  });
}); // = displayed in tooltip

exports.Short = Short;
const Detailed = /*#__PURE__*/React.memo(function Detailed({
  element,
  actions = []
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 InteractiveElementDetailed');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {
    children: [(0, _richTextToReact.default)(render_element_detailed(element), {
      render_interactive: false
    }), actions.map(action => /*#__PURE__*/(0, _jsxRuntime.jsx)(_actionButton.default, {
      action: action
    }, action.type))]
  });
}); // alternate from short to detailed

exports.Detailed = Detailed;

class Interactive extends React.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render_detailed", ({
      UUID,
      react_representation
    }) => {
      const {
        element,
        actions
      } = this.props;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Detailed, {
        element,
        actions
      });
    });

    _defineProperty(this, "render", () => {
      const {
        UUID,
        children
      } = this.props; //console.log(`🔄 InteractiveElement ${UUID}`)

      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_richTextFormatToReact.InteractiveRichTextFragment, {
        UUID: UUID,
        render_detailed: this.render_detailed,
        children: children
      }, "IRTF");
    });
  }

}

exports.Interactive = Interactive;

_defineProperty(Interactive, "propTypes", {
  UUID: _propTypes.default.string.isRequired,
  children: _propTypes.default.element.isRequired
});
},{"react":"dmLA","prop-types":"X9bF","@tbrpg/definitions":"PTCd","@offirmo-private/rich-text-format-to-react":"Ox9f","@oh-my-rpg/view-rich-text":"asRH","../../../services/logger":"qVJl","../../../services/rich-text-to-react":"SetX","../action-button":"rTKm","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"CGAI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Interactive = exports.Detailed = exports.Short = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _logger = _interopRequireDefault(require("../../../services/logger"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _component = require("./component");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function with_element_and_action(Component) {
  return props => {
    const {
      UUID
    } = props; //console.log('🔄 with_element_and_action', { UUID, revision: get_revision(game_instance.model.get()) })

    const element = (0, _gameInstanceBrowser.default)().queries.find_element(UUID);

    if (!element) {
      _logger.default.warn('interactive element not found!', {
        UUID,
        props
      }); // element disappeared. This happen transitively (ex. sold)
      // due to my crappy change listening technique.
      // TODO check if that still happen since the refactor


      return props.children;
    }

    const actions = (0, _gameInstanceBrowser.default)().queries.get_actions_for_element(UUID);
    props = { ...props,
      element,
      actions
    };
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, { ...props
    });
  };
}

const Short = with_element_and_action(_component.Short);
exports.Short = Short;
const Detailed = with_element_and_action(_component.Detailed);
exports.Detailed = Detailed;
const Interactive = with_element_and_action(_component.Interactive);
exports.Interactive = Interactive;
},{"prop-types":"X9bF","../../../services/logger":"qVJl","../../../services/game-instance-browser":"r81V","./component":"E4mD","react/jsx-runtime":"qEpl"}],"P8Kk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Short", {
  enumerable: true,
  get: function () {
    return _connected.Short;
  }
});
Object.defineProperty(exports, "Detailed", {
  enumerable: true,
  get: function () {
    return _connected.Detailed;
  }
});
Object.defineProperty(exports, "Interactive", {
  enumerable: true,
  get: function () {
    return _connected.Interactive;
  }
});

var _connected = require("./connected");
},{"./connected":"CGAI"}],"SetX":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rich_text_to_react;

var _richTextFormatToReact = require("@offirmo-private/rich-text-format-to-react");

var _interactiveElement = require("../components/misc/interactive-element");

require("./rich-text-to-react.css");

var _jsxRuntime = require("react/jsx-runtime");

/////////////////////////////////////////////////
function on_node_exit(params, options) {
  const {
    children,
    classes,
    component,
    wrapper
  } = (0, _richTextFormatToReact.intermediate_on_node_exit)(params, options);
  const {
    state,
    $node,
    $id
  } = params;
  const {
    $hints
  } = $node; //console.warn('final on_node_exit', state)

  if (classes.includes('monster')) {
    children.push( /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "monster-emoji",
      children: $hints.possible_emoji
    }, $id));
  }

  let element = (0, _richTextFormatToReact.intermediate_assemble)({ ...params,
    children,
    classes,
    component,
    wrapper
  }, options);

  if ($hints.uuid && options.render_interactive) {
    element = /*#__PURE__*/(0, _jsxRuntime.jsx)(_interactiveElement.Interactive, {
      UUID: $hints.uuid,
      children: element
    }, (0, _richTextFormatToReact.generate_react_key)({
      $id,
      $node
    }));
  }

  state.element = element;
  return state;
} ////////////


const DEFAULT_OPTIONS = {
  key: 'rich-text-to-react[TBRPG]--root',
  render_interactive: true
};

function rich_text_to_react(doc, options = {}) {
  //console.log(`${LIB} Rendering a rich text:`, doc)
  return (0, _richTextFormatToReact.to_react)(doc, {
    on_node_exit
  }, { ...DEFAULT_OPTIONS,
    ...options
  });
}
},{"@offirmo-private/rich-text-format-to-react":"Ox9f","../components/misc/interactive-element":"P8Kk","./rich-text-to-react.css":"THnX","react/jsx-runtime":"qEpl"}],"E4hR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _marketingRsrc = require("@offirmo-private/marketing-rsrc");

var _flux = require("@tbrpg/flux");

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

var _context = require("../../../context");

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _consts = require("../../../services/consts");

var _logger = _interopRequireDefault(require("../../../services/logger"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

let start_notifs_displayed = false;
const OMRUINotifierC1 = /*#__PURE__*/React.memo(function OMRUINotifierC1({
  enqueueNotification,
  u_state
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 OMRUINotifierC1');

  if (!start_notifs_displayed) {
    enqueueNotification({
      level: 'warning',
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        className: "warning",
        children: "\u26A0 Warning! This game is alpha, your savegame may be lost at any time!"
      }),
      position: 'top-center',
      auto_dismiss_delay_ms: 7000
    });
    (0, _softExecutionContext.getRootSEC)().xTry('update last seen version', () => {
      const current_version = _flux.NUMERIC_VERSION;
      const ls_content = localStorage.getItem(_consts.LS_KEYS.last_version_seen);

      if (ls_content) {
        const last_version_seen = Number(ls_content || 0.001);
        const isNewVersion = isNaN(last_version_seen) || current_version !== last_version_seen;
        const hasNewFeatures = isNaN(last_version_seen) || Math.trunc(current_version * 100) - Math.trunc(last_version_seen * 100) >= 1; //console.log({ last_version_seen, current_version, isNewVersion, hasNewFeatures, a: !!last_version_seen, b: current_version !== last_version_seen })

        if (isNewVersion) {
          enqueueNotification({
            level: 'success',
            children: hasNewFeatures ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {
              children: ["\uD83C\uDD95 You got a new version! Check the ", /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
                href: _marketingRsrc.THE_BORING_RPG.changelog,
                target: "_blank",
                children: "new features"
              }), "!"]
            }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Fragment, {
              children: "\uD83C\uDD95 You got a new version, just bug fixes and maintenance."
            }),
            position: 'top-center',
            auto_dismiss_delay_ms: 7000
          });
        }
      }

      localStorage.setItem(_consts.LS_KEYS.last_version_seen, current_version);
    });
    start_notifs_displayed = true;
  }

  let pending_non_flow_engagement;

  do {
    pending_non_flow_engagement = (0, _gameInstanceBrowser.default)().queries.get_oldest_pending_non_flow_engagement();

    if (pending_non_flow_engagement) {
      const {
        uid,
        $doc,
        pe
      } = pending_non_flow_engagement;

      _logger.default.log('Dequeing engagement: ', {
        uid,
        $doc,
        pe,
        pending_non_flow_engagement
      });

      const type = pe.engagement.type;

      switch (type) {
        case 'aside':
          {
            const level = pe.params.semantic_level || 'info';
            const auto_dismiss_delay_ms = pe.params.auto_dismiss_delay_ms || 0;
            enqueueNotification({
              level,
              children: (0, _richTextToReact.default)($doc),
              position: 'bottom-center',
              auto_dismiss_delay_ms
            });
            break;
          }

        case 'warning':
          {
            const level = pe.params.semantic_level || 'warning';
            const auto_dismiss_delay_ms = pe.params.auto_dismiss_delay_ms || 0;
            enqueueNotification({
              level,
              children: (0, _richTextToReact.default)($doc),
              position: 'top-center',
              auto_dismiss_delay_ms
            });
            break;
          }

        default:
          throw new Error(`Engagement type not recognized: "${type}"!`);
      }

      (0, _gameInstanceBrowser.default)().commands.acknowledge_engagement_msg_seen(uid);
    }
  } while (pending_non_flow_engagement);

  return null;
});

class OMRUINotifier extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render_view", ({
      u_state
    }) => {
      const {
        enqueueNotification
      } = this.props;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(OMRUINotifierC1, {
        enqueueNotification: enqueueNotification,
        u_state: u_state
      });
    });
  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.UStateListenerAndProvider, {
      render: this.render_view
    });
  }

}

_defineProperty(OMRUINotifier, "propTypes", {
  enqueueNotification: _propTypes.default.func.isRequired
});

var _default = OMRUINotifier;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/marketing-rsrc":"Fure","@tbrpg/flux":"kQ36","../../../services/rich-text-to-react":"SetX","../../../context":"DUKA","../../../services/game-instance-browser":"r81V","../../../services/consts":"h9V3","../../../services/logger":"qVJl","react/jsx-runtime":"qEpl"}],"suZ1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"E4hR"}],"zzgs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var rafSchd = function rafSchd(fn) {
  var lastArgs = [];
  var frameId = null;

  var wrapperFn = function wrapperFn() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    lastArgs = args;

    if (frameId) {
      return;
    }

    frameId = requestAnimationFrame(function () {
      frameId = null;
      fn.apply(void 0, lastArgs);
    });
  };

  wrapperFn.cancel = function () {
    if (!frameId) {
      return;
    }

    cancelAnimationFrame(frameId);
    frameId = null;
  };

  return wrapperFn;
};

var _default = rafSchd;
exports.default = _default;
},{}],"BRqh":[function(require,module,exports) {
'use strict';

module.exports = (string, count = 1, options) => {
  options = {
    indent: ' ',
    includeEmptyLines: false,
    ...options
  };

  if (typeof string !== 'string') {
    throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof string}\``);
  }

  if (typeof count !== 'number') {
    throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof count}\``);
  }

  if (typeof options.indent !== 'string') {
    throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof options.indent}\``);
  }

  if (count === 0) {
    return string;
  }

  const regex = options.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
  return string.replace(regex, options.indent.repeat(count));
};
},{}],"AH5y":[function(require,module,exports) {
'use strict';

const os = require('os');

const extractPathRegex = /\s+at.*(?:\(|\s)(.*)\)?/;
const pathRegex = /^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/;
const homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();

module.exports = (stack, options) => {
  options = Object.assign({
    pretty: false
  }, options);
  return stack.replace(/\\/g, '/').split('\n').filter(line => {
    const pathMatches = line.match(extractPathRegex);

    if (pathMatches === null || !pathMatches[1]) {
      return true;
    }

    const match = pathMatches[1]; // Electron

    if (match.includes('.app/Contents/Resources/electron.asar') || match.includes('.app/Contents/Resources/default_app.asar')) {
      return false;
    }

    return !pathRegex.test(match);
  }).filter(line => line.trim() !== '').map(line => {
    if (options.pretty) {
      return line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));
    }

    return line;
  }).join('\n');
};
},{"os":"THnX"}],"b8ja":[function(require,module,exports) {
'use strict';

const indentString = require('indent-string');

const cleanStack = require('clean-stack');

const cleanInternalStack = stack => stack.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g, '');

class AggregateError extends Error {
  constructor(errors) {
    if (!Array.isArray(errors)) {
      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`);
    }

    errors = [...errors].map(error => {
      if (error instanceof Error) {
        return error;
      }

      if (error !== null && typeof error === 'object') {
        // Handle plain error objects with message property and/or possibly other metadata
        return Object.assign(new Error(error.message), error);
      }

      return new Error(error);
    });
    let message = errors.map(error => {
      // The `stack` property is not standardized, so we can't assume it exists
      return typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);
    }).join('\n');
    message = '\n' + indentString(message, 4);
    super(message);
    this.name = 'AggregateError';
    Object.defineProperty(this, '_errors', {
      value: errors
    });
  }

  *[Symbol.iterator]() {
    for (const error of this._errors) {
      yield error;
    }
  }

}

module.exports = AggregateError;
},{"indent-string":"BRqh","clean-stack":"AH5y"}],"LcTj":[function(require,module,exports) {
'use strict';

const AggregateError = require('aggregate-error');

module.exports = async (iterable, mapper, {
  concurrency = Infinity,
  stopOnError = true
} = {}) => {
  return new Promise((resolve, reject) => {
    if (typeof mapper !== 'function') {
      throw new TypeError('Mapper function is required');
    }

    if (!((Number.isSafeInteger(concurrency) || concurrency === Infinity) && concurrency >= 1)) {
      throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${concurrency}\` (${typeof concurrency})`);
    }

    const result = [];
    const errors = [];
    const iterator = iterable[Symbol.iterator]();
    let isRejected = false;
    let isIterableDone = false;
    let resolvingCount = 0;
    let currentIndex = 0;

    const next = () => {
      if (isRejected) {
        return;
      }

      const nextItem = iterator.next();
      const index = currentIndex;
      currentIndex++;

      if (nextItem.done) {
        isIterableDone = true;

        if (resolvingCount === 0) {
          if (!stopOnError && errors.length !== 0) {
            reject(new AggregateError(errors));
          } else {
            resolve(result);
          }
        }

        return;
      }

      resolvingCount++;

      (async () => {
        try {
          const element = await nextItem.value;
          result[index] = await mapper(element, index);
          resolvingCount--;
          next();
        } catch (error) {
          if (stopOnError) {
            isRejected = true;
            reject(error);
          } else {
            errors.push(error);
            resolvingCount--;
            next();
          }
        }
      })();
    };

    for (let i = 0; i < concurrency; i++) {
      next();

      if (isIterableDone) {
        break;
      }
    }
  });
};
},{"aggregate-error":"b8ja"}],"Xdfx":[function(require,module,exports) {
'use strict';

const pMap = require('p-map');

const pTimes = async (count, mapper, options) => pMap(new Array(count).fill(), (element, index) => mapper(index), options);

module.exports = pTimes; // TODO: Remove this for the next major release

module.exports.default = pTimes;
},{"p-map":"LcTj"}],"AA4K":[function(require,module,exports) {
'use strict';

const pTimes = require('p-times');

const sum = iterable => {
  let total = 0;

  for (const value of iterable.values()) {
    total += value;
  }

  return total;
};

class PProgress extends Promise {
  static fn(input) {
    return (...arguments_) => {
      return new PProgress(async (resolve, reject, progress) => {
        arguments_.push(progress);

        try {
          resolve(await input(...arguments_));
        } catch (error) {
          reject(error);
        }
      });
    };
  }

  static all(promises, options) {
    if (options && typeof options.concurrency === 'number' && !promises.every(promise => typeof promise === 'function')) {
      throw new TypeError('When `options.concurrency` is set, the first argument must be an Array of Promise-returning functions');
    }

    return PProgress.fn(progress => {
      const progressMap = new Map();

      const reportProgress = () => {
        progress(sum(progressMap) / promises.length);
      };

      const mapper = async index => {
        const nextValue = promises[index];
        const promise = typeof nextValue === 'function' ? nextValue() : nextValue;
        progressMap.set(promise, 0);

        if (promise instanceof PProgress) {
          promise.onProgress(percentage => {
            progressMap.set(promise, percentage);
            reportProgress();
          });
        }

        const value = await promise;
        progressMap.set(promise, 1);
        reportProgress();
        return value;
      };

      return pTimes(promises.length, mapper, options);
    })();
  }

  constructor(executor) {
    const setProgress = progress => {
      if (progress > 1 || progress < 0) {
        throw new TypeError('The progress percentage should be a number between 0 and 1');
      }

      (async () => {
        // We wait for the next microtask tick so `super` is called before we use `this`
        await Promise.resolve(); // Note: we don't really have guarantees over
        // the order in which async operations are evaluated,
        // so if we get an out-of-order progress, we'll just discard it.

        if (progress <= this._progress) {
          return;
        }

        this._progress = progress;

        for (const listener of this._listeners) {
          listener(progress);
        }
      })();
    };

    super((resolve, reject) => {
      executor(value => {
        setProgress(1);
        resolve(value);
      }, reject, progress => {
        if (progress !== 1) {
          setProgress(progress);
        }
      });
    });
    this._listeners = new Set();
    this._setProgress = setProgress;
    this._progress = 0;
  }

  get progress() {
    return this._progress;
  }

  onProgress(callback) {
    if (typeof callback !== 'function') {
      throw new TypeError(`Expected a \`Function\`, got \`${typeof callback}\``);
    }

    this._listeners.add(callback);

    return this;
  }

  then(onFulfilled, onRejected) {
    // eslint-disable-next-line promise/prefer-await-to-then
    const child = super.then(onFulfilled, onRejected);

    this._listeners.add(progress => {
      child._setProgress(progress);
    });

    return child;
  }

}

module.exports = PProgress;
},{"p-times":"Xdfx"}],"wMFY":[function(require,module,exports) {
module.exports = isPromise;
module.exports.default = isPromise;

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

},{}],"yzx6":[function(require,module,exports) {
'use strict';

const PromiseWithProgress = require('p-progress');

const is_promise = require('is-promise');

const LIB = '@oh-my-rpg/view-chat';

function is_step_input(step) {
  return step && step.type.startsWith('ask_');
}

function create({
  DEBUG,
  gen_next_step,
  ui,
  inter_msg_delay_ms = 0,
  after_input_delay_ms = 0,
  to_prettified_str = x => x // work with browser

}) {
  if (DEBUG) console.log('↘ create()');

  function create_dummy_progress_promise({
    DURATION_MS = 2000,
    PERIOD_MS = 100
  } = {}) {
    return new PromiseWithProgress((resolve, reject, progress) => {
      let count = 0;
      const auto_pulse = setInterval(() => {
        count++;
        const completion_rate = 1. * (count * PERIOD_MS) / DURATION_MS;
        progress(completion_rate);

        if (completion_rate >= 1) {
          clearInterval(auto_pulse);
          resolve();
        }
      }, PERIOD_MS);
    });
  }

  function normalize_step(step) {
    try {
      if (step.type === 'ask_for_confirmation' && step !== STEP_CONFIRM) step = Object.assign({}, STEP_CONFIRM, step);
      if (!step.msg_main) throw new Error(`${LIB}: Step is missing main message!`);

      if (!step.type) {
        if (!step.choices) throw new Error(`${LIB}: Step type is unknown and not inferrable!`);
        step.type = 'ask_for_choice';
      }

      step = Object.assign({
        validator: null,
        choices: []
      }, step);
      step.choices = step.choices.map(normalize_choice);

      if (step.choices.length) {
        const known_values = new Set();
        step.choices.forEach((choice, index) => {
          if (known_values.has(choice.value)) {
            const err = new Error(`${LIB}: colliding choices with the same value!`);
            err.details = {
              choice,
              value: choice.value,
              index
            };
            throw err;
          }

          known_values.add(choice.value);
        });
      }

      return step;
    } catch (e) {
      console.error(to_prettified_str(step));
      throw e;
    }
  }

  function normalize_choice(choice) {
    // TODO auto-id
    try {
      if (!choice.hasOwnProperty('value') || typeof choice.value === 'undefined') throw new Error('Choice has no value!');
      choice.msg_cta = choice.msg_cta || String(choice.value);
      return choice;
    } catch (e) {
      console.error(to_prettified_str(choice));
      throw e;
    }
  }

  async function ask_user(step) {
    if (DEBUG) console.log('↘ ask_user(\n', to_prettified_str(step, {
      outline: true
    }), '\n)');
    let answer = '';
    const ok = true; // TODO used for confirmation

    do {
      await ui.display_message({
        msg: step.msg_main,
        choices: step.choices
      });
      answer = await ui.read_answer(step);
      if (DEBUG) console.log(`↖ ask_user(…) answer = "${answer}"`);
    } while (!ok);

    await ui.pretend_to_think(after_input_delay_ms);
    let acknowledged = false;

    if (step.choices.length) {
      const selected_choice = step.choices.find(choice => choice.value === answer);

      if (selected_choice.msgg_acknowledge) {
        await ui.display_message({
          msg: selected_choice.msgg_acknowledge(answer)
        });
        acknowledged = true;
      }
    }

    if (!acknowledged && step.msgg_acknowledge) {
      await ui.display_message({
        msg: step.msgg_acknowledge(answer)
      });
      acknowledged = true;
    }

    if (!acknowledged) {
      // Fine! It's optional.
      if (DEBUG) console.warn('You may want to add an acknowledge message to this step.');
    }

    return answer;
  }

  async function execute_step(step) {
    if (DEBUG) console.log('↘ execute_step(\n', to_prettified_str(step, {
      outline: true
    }), '\n)');

    switch (step.type) {
      case 'simple_message':
        await ui.pretend_to_think(inter_msg_delay_ms);
        await ui.display_message({
          msg: step.msg_main
        });
        break;

      case 'progress':
        await ui.display_progress({
          progress_promise: step.progress_promise || create_dummy_progress_promise({
            DURATION_MS: step.duration_ms
          }),
          msg: step.msg_main,
          msgg_acknowledge: step.msgg_acknowledge
        }).then(() => true, () => false).then(success => {
          if (step.callback) step.callback(success);
        });
        break;

      case 'ask_for_confirmation':
      case 'ask_for_string':
      case 'ask_for_choice':
        {
          await ui.pretend_to_think(inter_msg_delay_ms);
          const answer = await ask_user(step);
          let reported = false;

          if (step.choices.length) {
            const selected_choice = step.choices.find(choice => choice.value === answer);

            if (selected_choice.callback) {
              await selected_choice.callback(answer);
              reported = true;
            }
          }

          if (!reported && step.callback) {
            await step.callback(answer);
            reported = true;
          }

          if (!reported) {
            const err = new Error('CNF reporting callback in ask for result!');
            err.step = step;
            throw err;
          }

          return answer;
        }

      default:
        throw new Error(`Unsupported step type: "${step.type}"!`);
    }
  }

  async function start() {
    if (DEBUG) console.log('↘ start()');

    try {
      await ui.setup();
      let should_exit = false;
      let last_step = undefined; // just in case

      let last_answer = undefined; // just in case

      do {
        const step_start_timestamp_ms = +new Date();
        const yielded_step = gen_next_step.next({
          last_step,
          last_answer
        }); // just in case the returned step is a promise.

        const {
          value: raw_step,
          done
        } = is_promise(yielded_step) ? await ui.spin_until_resolution(yielded_step) : yielded_step;

        if (done) {
          should_exit = true;
          continue;
        }

        const step = normalize_step(raw_step);
        const elapsed_time_ms = +new Date() - step_start_timestamp_ms;

        if (is_step_input(last_step)) {
          // pretend to have processed the user answer
          await ui.pretend_to_think(Math.max(0, after_input_delay_ms - elapsed_time_ms));
        }

        last_answer = await execute_step(step);
        last_step = step;
      } while (!should_exit);

      await ui.teardown();
    } catch (e) {
      await ui.teardown();
      throw e;
    }
  }

  return {
    start
  };
}

module.exports = {
  PromiseWithProgress,
  create
};
},{"p-progress":"AA4K","is-promise":"wMFY"}],"WkxQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AutoScrollDown = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const DELAY_MS = 150; // https://stackoverflow.com/questions/37620694/how-to-scroll-to-bottom-in-react

class AutoScrollDown extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "scrollToBottom", () => {
      if (this.messagesEnd) this.messagesEnd.scrollIntoView({
        behavior: 'instant'
      }); // could be smooth
    });
  }

  componentDidMount() {
    setTimeout(() => this.scrollToBottom(), DELAY_MS);
  }

  componentDidUpdate() {
    setTimeout(() => this.scrollToBottom(), DELAY_MS);
  }

  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 AutoScrollDown');
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: 'auto-scroll-down',
      children: [this.props.children, /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        style: {
          float: 'left',
          clear: 'both'
        },
        ref: el => this.messagesEnd = el
      })]
    });
  }

}

exports.AutoScrollDown = AutoScrollDown;

_defineProperty(AutoScrollDown, "propTypes", {
  children: _propTypes.default.node.isRequired
});
},{"react":"dmLA","prop-types":"X9bF","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"AUut":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.is_likely_to_be_mobile = void 0;

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/////////////////////////////////////////////////
// TODO externalize
// https://detectmobilebrowsers.com/
const is_likely_to_be_mobile = (0, _memoizeOne.default)(function is_likely_to_be_mobile() {
  const a = navigator.userAgent || navigator.vendor || window.opera;
  const is_mobile_according_to_this_random_snippet_from_the_internet = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4)); // desktop are usually paysage but this app is forcing portrait

  const is_mobile_according_to_my_crazy_guess = window.innerWidth < window.innerHeight * 1.5;
  const is_mobile = is_mobile_according_to_this_random_snippet_from_the_internet || is_mobile_according_to_my_crazy_guess;
  console.log('Mobile detection, guess is =', is_mobile, {
    is_mobile_according_to_this_random_snippet_from_the_internet,
    is_mobile_according_to_my_crazy_guess
  });
  return is_mobile;
});
exports.is_likely_to_be_mobile = is_likely_to_be_mobile;
},{"memoize-one":"lvkj"}],"H8Ai":[function(require,module,exports) {

},{"./Spinner-1s-42px.svg":[["Spinner-1s-42px.eb8b483e.svg","zowd"],"zowd"]}],"fxyp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Chat = exports.ChatBubble = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _asyncUtils = require("@offirmo-private/async-utils");

var _rafSchd = _interopRequireDefault(require("raf-schd"));

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _viewChat = require("@offirmo-private/view-chat");

var _autoScrollDown = require("../auto-scroll-down");

var _logger = _interopRequireDefault(require("../../../services/logger"));

var _mobileDetection = require("../../../services/mobile-detection");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ChatBubble extends React.Component {
  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 ChatBubble');
    const {
      direction = 'ltr',
      children
    } = this.props;
    const classes = (0, _classnames.default)('chat__element', {
      'chat__element--ltr': direction === 'ltr'
    }, {
      'chat__element--rtl': direction === 'rtl'
    }, 'chat__bubble');
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: classes,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: "chat-bubble",
        children: children
      })
    });
  }

}

exports.ChatBubble = ChatBubble;

_defineProperty(ChatBubble, "propTypes", {
  direction: _propTypes.default.string,
  children: _propTypes.default.node.isRequired
});

class Chat extends React.Component {
  constructor(props) {
    super(props); // rekey backupped bubbles to avoid key conflicts

    _defineProperty(this, "set_state", param => {
      if (!this.mounted) return;
      return this.setState(param);
    });

    _defineProperty(this, "onErrorBoundaryMount", componentDidCatch => {
      //console.log('chat-interface onErrorBoundaryMount')
      this.componentDidCatch = componentDidCatch;
    });

    const initial_bubbles = React.Children.map(this.props.initial_bubbles, (child, index) => {
      return typeof child === 'string' ? child : /*#__PURE__*/React.cloneElement(child, {
        key: `restored-${index}`
      });
    });
    this.state = {
      bubble_key: this.props.initial_bubbles.length + 1,
      bubbles: initial_bubbles,
      spinning: false,
      progressing: false,
      progress_value: 0,
      reading_string: false,
      mobile_keyboard_likely_present_notified: false,
      choices: [],
      input_resolve_fn: null
    };
    this.mounted = false; // need to track to avoid errors before mount and during/after unmounting
  }

  addBubble(element, {
    direction = 'ltr'
  } = {}) {
    if (!element) return;
    const key = this.state.bubble_key + 1;
    const bubble = /*#__PURE__*/(0, _jsxRuntime.jsx)(ChatBubble, {
      direction: direction,
      children: element
    }, key);

    if (!this.mounted) {
      this.state.bubbles.push(bubble);
      this.state.bubble_key++;
    } else {
      this.set_state(state => {
        let bubbles = state.bubbles.concat(bubble).slice(-this.props.max_displayed_bubbles); // special unclean behavior, I will rewrite everything anyway

        if (element === 'Let’s go adventuring!') {
          bubbles = [];
        }

        return {
          bubbles,
          bubble_key: state.bubble_key + 1
        };
      });
    }
  }

  componentDidMount() {
    this.mounted = true;
    if (!this.props.gen_next_step) return;
    const DEBUG = false;

    const display_message = async ({
      msg,
      choices = [],
      side = '→'
    }) => {
      let direction = 'ltr';

      switch (side) {
        case '→':
          direction = 'ltr';
          break;

        case '←':
          direction = 'rtl';
          break;

        case '↔':
        default:
          throw new Error('display_message(): incorrect side!');
      }

      this.addBubble(msg, {
        direction
      });
    };

    const spin_until_resolution = anything => {
      this.set_state(s => {
        spinning: true;
      });
      return Promise.resolve(anything).finally(() => {
        this.set_state(s => {
          spinning: false;
        });
      });
    };

    const pretend_to_think = duration_ms => {
      return spin_until_resolution((0, _asyncUtils.elapsed_time_ms)(duration_ms));
    };

    const display_progress = async ({
      progress_promise,
      msg = 'loading',
      msgg_acknowledge
    } = {}) => {
      this.set_state(state => ({
        progress_value: 0,
        progressing: true
      }));
      await display_message({
        msg
      });

      if (progress_promise.onProgress) {
        progress_promise.onProgress(progress_value => {
          this.set_state(state => ({
            progress_value
          }));
        });
      }

      progress_promise.then(() => true, () => false).then(success => {
        this.set_state(state => ({
          progress_value: 0,
          progressing: false
        }));
        const final_msg = msgg_acknowledge ? msgg_acknowledge(success) : 'Done.';
        this.set_state(state => ({
          bubbles: state.bubbles.slice(0, -1)
        }));
        return display_message({
          msg: /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
            children: [msg, " ", final_msg]
          })
        });
      }).catch(err => {
        // display? TODO
        _logger.default.error('display_progress: unexpected rejection', {
          err
        });

        return false;
      });
      return progress_promise;
    };

    const read_string = step => {
      if (DEBUG) console.log('↘ read_string()', step);
      return new Promise(resolve => {
        this.set_state(state => ({
          reading_string: true,
          input_resolve_fn: resolve
        }));
        this.props.on_input_begin();
      }).then(raw_answer => {
        this.set_state(state => ({
          reading_string: false,
          input_resolve_fn: null
        }));
        this.props.on_input_end();
        const answer = raw_answer ? String(raw_answer).trim() : undefined; // to not stringify to "null" or "undefined"!

        if (DEBUG) console.log(`[You entered: "${answer}"]`);
        if (step.msgg_as_user) return display_message({
          msg: step.msgg_as_user(answer),
          side: '←'
        }).then(() => answer);
        return answer;
      });
    };

    const read_choice = async step => {
      if (DEBUG) console.log('↘ read_choice()');
      return new Promise(resolve => {
        this.set_state(state => ({
          choices: step.choices.map((choice, index) => {
            return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
              type: "button",
              className: "chat__button",
              onClick: () => resolve(choice),
              children: choice.msg_cta
            }, index);
          })
        }));
      }).then(async choice => {
        this.set_state(state => ({
          choices: []
        }));
        const answer = choice.value;
        await display_message({
          msg: (choice.msgg_as_user || step.msgg_as_user || (() => choice.msg_cta))(answer),
          side: '←'
        });
        return answer;
      });
    };

    const read_answer = async step => {
      if (DEBUG) console.log('↘ read_answer()');

      switch (step.type) {
        case 'ask_for_string':
          return read_string(step);

        case 'ask_for_choice':
          return read_choice(step);

        default:
          throw new Error(`Unsupported step type: "${step.type}"!`);
      }
    };

    const chat_ui_callbacks = {
      setup: () => {},
      display_message,
      read_answer,
      spin_until_resolution,
      pretend_to_think,
      display_progress,
      teardown: () => {}
    };
    const chat = (0, _viewChat.create)({
      DEBUG,
      gen_next_step: this.props.gen_next_step,
      ui: chat_ui_callbacks
    });
    return chat.start().then(() => console.log('bye')).catch(err => {
      if (this.componentDidCatch) {
        this.componentDidCatch(err);
        return;
      } // don't know how to handle, rethrow


      throw err;
    });
  }

  componentWillUnmount() {
    //console.info('chat-ui: componentWillUnmount', arguments)
    this.mounted = false;
    let bubles_to_backup = [].concat(this.state.bubbles);
    if (this.state.choices) bubles_to_backup.pop(); // remove the choice prompt, unneeded

    if (bubles_to_backup.length < 4) bubles_to_backup = []; // just the welcome prompts, no need to back it up

    this.props.on_unmount(bubles_to_backup);
  }

  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 Chat');
    const spinner = this.state.spinning && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "chat__spinner"
    });
    const progress_bar = this.state.progressing && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "chat__element chat__element--ltr chat__bubble",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("progress", {
        className: "chat__progress",
        value: this.state.progress_value
      })
    });
    const user_input = this.state.reading_string && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "chat__element chat__element--rtl chat__bubble",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("form", {
        onSubmit: e => e.preventDefault(),
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
          type: "text",
          autoFocus: true,
          className: "chat__input",
          ref: el => this.input = el
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          type: "submit",
          className: "chat__button clickable-area",
          onClick: () => {
            this.state.input_resolve_fn(this.input.value);
          },
          children: "\u21A9"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          type: "button",
          className: "chat__button clickable-area",
          onClick: () => {
            this.state.input_resolve_fn(undefined);
          },
          children: "cancel"
        })]
      })
    });

    if (this.state.reading_string) {
      (0, _rafSchd.default)(() => {
        if (this.input) this.input.focus();
      });
    }

    const penultimate_bubble = this.state.bubbles.slice(0, -1);
    const ultimate_bubble = this.state.bubbles.slice(-1);
    const is_mobile_keyboard_likely_to_be_displayed = this.state.reading_string && (0, _mobileDetection.is_likely_to_be_mobile)();
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
      name: 'chat-interface',
      onMount: this.onErrorBoundaryMount,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_autoScrollDown.AutoScrollDown, {
        classname: "flex-column",
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "chat",
          children: [this.props.children, !is_mobile_keyboard_likely_to_be_displayed && penultimate_bubble, ultimate_bubble, progress_bar, spinner, /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            className: "chat__element chat__element--rtl chat__choices",
            children: this.state.choices
          }), user_input]
        })
      })
    });
  }

}

exports.Chat = Chat;

_defineProperty(Chat, "propTypes", {
  initial_bubbles: _propTypes.default.arrayOf(_propTypes.default.element),
  max_displayed_bubbles: _propTypes.default.number,
  gen_next_step: _propTypes.default.object,
  on_input_begin: _propTypes.default.func,
  on_input_end: _propTypes.default.func,
  on_unmount: _propTypes.default.func,
  children: _propTypes.default.node
});

Chat.defaultProps = {
  max_displayed_bubbles: 20,
  on_input_begin: () => {},
  on_input_end: () => {},
  on_unmount: () => {},
  initial_bubbles: []
};
},{"react":"dmLA","prop-types":"X9bF","classnames":"ZiIw","@offirmo-private/async-utils":"i8Ln","raf-schd":"zzgs","@offirmo-private/react-error-boundary":"UTEF","@offirmo-private/view-chat":"yzx6","../auto-scroll-down":"WkxQ","../../../services/logger":"qVJl","../../../services/mobile-detection":"AUut","./index.css":"H8Ai","react/jsx-runtime":"qEpl"}],"Q1k9":[function(require,module,exports) {
var define;
//
// piecon.js
//
// https://github.com/lipka/piecon
//
// Copyright (c) 2015 Lukas Lipka <lukaslipka@gmail.com>. All rights reserved.
//

(function () {
	var Piecon = {}

	var currentFavicon = null
	var originalFavicon = null
	var originalTitle = null
	var canvas = null
	var options = {}
	const own_window = window
	var defaults = {
		color: '#ff0084',
		background: '#bbb',
		shadow: '#fff',
		fallback: false,
		target_window: own_window.parent
	}

	var isRetina = own_window.devicePixelRatio > 1

	var ua = (function () {
		var agent = own_window.navigator.userAgent.toLowerCase()
		return function (browser) {
			return agent.indexOf(browser) !== -1
		}
	}())

	var browser = {
		ie: ua('msie'),
		chrome: ua('chrome'),
		webkit: ua('chrome') || ua('safari'),
		safari: ua('safari') && !ua('chrome'),
		mozilla: ua('mozilla') && !ua('chrome') && !ua('safari'),
	}

	var getFaviconTag = function () {
		var links = options.target_window.document.getElementsByTagName('link')

		for (var i = 0, l = links.length; i < l; i++) {
			if (links[i].getAttribute('rel') === 'icon' || links[i].getAttribute('rel') === 'shortcut icon') {
				return links[i]
			}
		}

		return false
	}

	var removeFaviconTag = function () {
		var links = Array.prototype.slice.call(options.target_window.document.getElementsByTagName('link'), 0)
		var head = options.target_window.document.getElementsByTagName('head')[0]

		for (var i = 0, l = links.length; i < l; i++) {
			if (links[i].getAttribute('rel') === 'icon' || links[i].getAttribute('rel') === 'shortcut icon') {
				head.removeChild(links[i])
			}
		}
	}

	var setFaviconTag = function (url) {
		removeFaviconTag()

		var link = options.target_window.document.createElement('link')
		link.type = 'image/x-icon'
		link.rel = 'icon'
		link.href = url

		options.target_window.document.getElementsByTagName('head')[0].appendChild(link)
	}

	var getCanvas = function () {
		if (!canvas) {
			canvas = own_window.document.createElement('canvas')
			if (isRetina) {
				canvas.width = 32
				canvas.height = 32
			} else {
				canvas.width = 16
				canvas.height = 16
			}
		}

		return canvas
	}

	var drawFavicon = function (percentage) {
		var canvas = getCanvas()
		var context = canvas.getContext('2d')

		percentage = percentage || 0

		if (context) {
			context.clearRect(0, 0, canvas.width, canvas.height)

			// Draw shadow
			context.beginPath()
			context.moveTo(canvas.width / 2, canvas.height / 2)
			context.arc(canvas.width / 2, canvas.height / 2, Math.min(canvas.width / 2, canvas.height / 2), 0, Math.PI * 2, false)
			context.fillStyle = options.shadow
			context.fill()

			// Draw background
			context.beginPath()
			context.moveTo(canvas.width / 2, canvas.height / 2)
			context.arc(canvas.width / 2, canvas.height / 2, Math.min(canvas.width / 2, canvas.height / 2) - 2, 0, Math.PI * 2, false)
			context.fillStyle = options.background
			context.fill()

			// Draw pie
			if (percentage > 0) {
				context.beginPath()
				context.moveTo(canvas.width / 2, canvas.height / 2)
				context.arc(canvas.width / 2, canvas.height / 2, Math.min(canvas.width / 2, canvas.height / 2) - 2, (-0.5) * Math.PI, (-0.5 + 2 * percentage / 100) * Math.PI, false)
				context.lineTo(canvas.width / 2, canvas.height / 2)
				context.fillStyle = options.color
				context.fill()
			}

			setFaviconTag(canvas.toDataURL())
		}
	}

	var updateTitle = function (percentage) {
		if (percentage > 0) {
			options.target_window.document.title = '(' + percentage + '%) ' + originalTitle
		} else {
			options.target_window.document.title = originalTitle
		}
	}

	Piecon.setOptions = function (custom) {
		options = {}

		for (var key in defaults) {
			options[key] = custom.hasOwnProperty(key) ? custom[key] : defaults[key]
		}

		return this
	}

	Piecon.setProgress = function (percentage) {
		if (!originalTitle) {
			originalTitle = options.target_window.document.title
		}

		if (!originalFavicon || !currentFavicon) {
			var tag = getFaviconTag()
			originalFavicon = currentFavicon = tag ? tag.getAttribute('href') : '/favicon.ico'
		}

		if (!isNaN(parseFloat(percentage)) && isFinite(percentage)) {
			if (!getCanvas().getContext || browser.ie || browser.safari || options.fallback === true) {
				// Fallback to updating the browser title if unsupported
				return updateTitle(percentage)
			} else if (options.fallback === 'force') {
				updateTitle(percentage)
			}

			return drawFavicon(percentage)
		}

		return false
	}

	Piecon.reset = function () {
		if (originalTitle) {
			options.target_window.document.title = originalTitle
		}

		if (originalFavicon) {
			currentFavicon = originalFavicon
			setFaviconTag(currentFavicon)
		}
	}

	Piecon.setOptions(defaults)

	if (typeof define === 'function' && define.amd) {
		define(Piecon)
	} else if (typeof module !== 'undefined') {
		module.exports = Piecon
	} else {
		own_window.Piecon = Piecon
	}
})()

},{}],"sL2W":[function(require,module,exports) {
var define;
/**
 * @license MIT
 * @fileOverview Favico animations
 * @author Miroslav Magda, http://blog.ejci.net
 * @version 0.3.10
 */

/**
 * Create new favico instance
 * @param {Object} Options
 * @return {Object} Favico object
 * @example
 * var favico = new Favico({
 *    bgColor : '#d00',
 *    textColor : '#fff',
 *    fontFamily : 'sans-serif',
 *    fontStyle : 'bold',
 *    position : 'down',
 *    type : 'circle',
 *    animation : 'slide',
 *    dataUrl: function(url){},
 *    win: top
 * });
 */
(function () {

	var Favico = (function (opt) {
		'use strict';
		opt = (opt) ? opt : {};
		const own_window = window
		var _defaults = {
			bgColor: '#d00',
			textColor: '#fff',
			fontFamily: 'sans-serif', //Arial,Verdana,Times New Roman,serif,sans-serif,...
			fontStyle: 'bold', //normal,italic,oblique,bold,bolder,lighter,100,200,300,400,500,600,700,800,900
			type: 'circle',
			position: 'down', // down, up, left, leftup (upleft)
			animation: 'slide',
			elementId: false,
			dataUrl: false,
			win: window
		};
		var _opt, _orig, _h, _w, _canvas, _context, _img, _ready, _lastBadge, _running, _readyCb, _stop, _browser, _animTimeout, _drawTimeout, _doc;

		_browser = {};
		_browser.ff = typeof InstallTrigger != 'undefined';
		_browser.chrome = !!window.chrome;
		_browser.opera = !!window.opera || own_window.navigator.userAgent.indexOf('Opera') >= 0;
		_browser.ie = /*@cc_on!@*/false;
		_browser.safari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;
		_browser.supported = (_browser.chrome || _browser.ff || _browser.opera);

		var _queue = [];
		_readyCb = function () {};
		_ready = _stop = false;

		/**
		 * Initialize favico
		 */
		var init = function () {
			//merge initial options
			_opt = merge(_defaults, opt);
			_opt.bgColor = hexToRgb(_opt.bgColor);
			_opt.textColor = hexToRgb(_opt.textColor);
			_opt.position = _opt.position.toLowerCase();
			_opt.animation = (animation.types['' + _opt.animation]) ? _opt.animation : _defaults.animation;

			_doc = _opt.win.document;

			var isUp = _opt.position.indexOf('up') > -1;
			var isLeft = _opt.position.indexOf('left') > -1;

			//transform animation
			if (isUp || isLeft) {
				for (var i = 0; i < animation.types['' + _opt.animation].length; i++) {
					var step = animation.types['' + _opt.animation][i];

					if (isUp) {
						if (step.y < 0.6) {
							step.y = step.y - 0.4;
						} else {
							step.y = step.y - 2 * step.y + (1 - step.w);
						}
					}

					if (isLeft) {
						if (step.x < 0.6) {
							step.x = step.x - 0.4;
						} else {
							step.x = step.x - 2 * step.x + (1 - step.h);
						}
					}

					animation.types['' + _opt.animation][i] = step;
				}
			}
			_opt.type = (type['' + _opt.type]) ? _opt.type : _defaults.type;

			_orig = link.getIcon();
			//create temp canvas
			_canvas = document.createElement('canvas');
			//create temp image
			_img = document.createElement('img');
			if (_orig.hasAttribute('href')) {
				_img.setAttribute('crossOrigin', 'anonymous');
				//get width/height
				_img.onload = function () {
					_h = (_img.height > 0) ? _img.height : 32;
					_w = (_img.width > 0) ? _img.width : 32;
					_canvas.height = _h;
					_canvas.width = _w;
					_context = _canvas.getContext('2d');
					icon.ready();
				};
				_img.setAttribute('src', _orig.getAttribute('href'));
			} else {
				_img.onload = function () {
					_h = 32;
					_w = 32;
					_img.height = _h;
					_img.width = _w;
					_canvas.height = _h;
					_canvas.width = _w;
					_context = _canvas.getContext('2d');
					icon.ready();
				};
				_img.setAttribute('src', '');
			}
		};

		/**
		 * Icon namespace
		 */
		var icon = {};

		/**
		 * Icon is ready (reset icon) and start animation (if ther is any)
		 */
		icon.ready = function () {
			_ready = true;
			icon.reset();
			_readyCb();
		};

		/**
		 * Reset icon to default state
		 */
		icon.reset = function () {
			if (!_ready) {
				return;
			}
			_queue = [];
			_lastBadge = false;
			_running = false;
			_context.clearRect(0, 0, _w, _h);
			_context.drawImage(_img, 0, 0, _w, _h);
			//_stop=true;
			link.setIcon(_canvas);
			//webcam('stop');
			//video('stop');
			window.clearTimeout(_animTimeout);
			window.clearTimeout(_drawTimeout);
		};

		/**
		 * Start animation
		 */
		icon.start = function () {
			if (!_ready || _running) {
				return;
			}
			var finished = function () {
				_lastBadge = _queue[0];
				_running = false;
				if (_queue.length > 0) {
					_queue.shift();
					icon.start();
				} else {

				}
			};
			if (_queue.length > 0) {
				_running = true;
				var run = function () {
					// apply options for this animation
					['type', 'animation', 'bgColor', 'textColor', 'fontFamily', 'fontStyle'].forEach(function (a) {
						if (a in _queue[0].options) {
							_opt[a] = _queue[0].options[a];
						}
					});
					animation.run(_queue[0].options, function () {
						finished();
					}, false);
				};
				if (_lastBadge) {
					animation.run(_lastBadge.options, function () {
						run();
					}, true);
				} else {
					run();
				}
			}
		};

		/**
		 * Badge types
		 */
		var type = {};
		var options = function (opt) {
			opt.n = ((typeof opt.n) === 'number') ? Math.abs(opt.n | 0) : opt.n;
			opt.x = _w * opt.x;
			opt.y = _h * opt.y;
			opt.w = _w * opt.w;
			opt.h = _h * opt.h;
			opt.len = ("" + opt.n).length;
			return opt;
		};

		/**
		 * Generate circle
		 * @param {Object} opt Badge options
		 */
		type.circle = function (opt) {
			opt = options(opt);
			var more = false;
			if (opt.len === 2) {
				opt.x = opt.x - opt.w * 0.4;
				opt.w = opt.w * 1.4;
				more = true;
			} else if (opt.len >= 3) {
				opt.x = opt.x - opt.w * 0.65;
				opt.w = opt.w * 1.65;
				more = true;
			}
			_context.clearRect(0, 0, _w, _h);
			_context.drawImage(_img, 0, 0, _w, _h);
			_context.beginPath();
			_context.font = _opt.fontStyle + " " + Math.floor(opt.h * (opt.n > 99 ? 0.85 : 1)) + "px " + _opt.fontFamily;
			_context.textAlign = 'center';
			if (more) {
				_context.moveTo(opt.x + opt.w / 2, opt.y);
				_context.lineTo(opt.x + opt.w - opt.h / 2, opt.y);
				_context.quadraticCurveTo(opt.x + opt.w, opt.y, opt.x + opt.w, opt.y + opt.h / 2);
				_context.lineTo(opt.x + opt.w, opt.y + opt.h - opt.h / 2);
				_context.quadraticCurveTo(opt.x + opt.w, opt.y + opt.h, opt.x + opt.w - opt.h / 2, opt.y + opt.h);
				_context.lineTo(opt.x + opt.h / 2, opt.y + opt.h);
				_context.quadraticCurveTo(opt.x, opt.y + opt.h, opt.x, opt.y + opt.h - opt.h / 2);
				_context.lineTo(opt.x, opt.y + opt.h / 2);
				_context.quadraticCurveTo(opt.x, opt.y, opt.x + opt.h / 2, opt.y);
			} else {
				_context.arc(opt.x + opt.w / 2, opt.y + opt.h / 2, opt.h / 2, 0, 2 * Math.PI);
			}
			_context.fillStyle = 'rgba(' + _opt.bgColor.r + ',' + _opt.bgColor.g + ',' + _opt.bgColor.b + ',' + opt.o + ')';
			_context.fill();
			_context.closePath();
			_context.beginPath();
			_context.stroke();
			_context.fillStyle = 'rgba(' + _opt.textColor.r + ',' + _opt.textColor.g + ',' + _opt.textColor.b + ',' + opt.o + ')';
			//_context.fillText((more) ? '9+' : opt.n, Math.floor(opt.x + opt.w / 2), Math.floor(opt.y + opt.h - opt.h * 0.15));
			if ((typeof opt.n) === 'number' && opt.n > 999) {
				_context.fillText(((opt.n > 9999) ? 9 : Math.floor(opt.n / 1000)) + 'k+', Math.floor(opt.x + opt.w / 2), Math.floor(opt.y + opt.h - opt.h * 0.2));
			} else {
				_context.fillText(opt.n, Math.floor(opt.x + opt.w / 2), Math.floor(opt.y + opt.h - opt.h * 0.15));
			}
			_context.closePath();
		};

		/**
		 * Generate rectangle
		 * @param {Object} opt Badge options
		 */
		type.rectangle = function (opt) {
			opt = options(opt);
			var more = false;
			if (opt.len === 2) {
				opt.x = opt.x - opt.w * 0.4;
				opt.w = opt.w * 1.4;
				more = true;
			} else if (opt.len >= 3) {
				opt.x = opt.x - opt.w * 0.65;
				opt.w = opt.w * 1.65;
				more = true;
			}
			_context.clearRect(0, 0, _w, _h);
			_context.drawImage(_img, 0, 0, _w, _h);
			_context.beginPath();
			_context.font = _opt.fontStyle + " " + Math.floor(opt.h * (opt.n > 99 ? 0.9 : 1)) + "px " + _opt.fontFamily;
			_context.textAlign = 'center';
			_context.fillStyle = 'rgba(' + _opt.bgColor.r + ',' + _opt.bgColor.g + ',' + _opt.bgColor.b + ',' + opt.o + ')';
			_context.fillRect(opt.x, opt.y, opt.w, opt.h);
			_context.fillStyle = 'rgba(' + _opt.textColor.r + ',' + _opt.textColor.g + ',' + _opt.textColor.b + ',' + opt.o + ')';
			//_context.fillText((more) ? '9+' : opt.n, Math.floor(opt.x + opt.w / 2), Math.floor(opt.y + opt.h - opt.h * 0.15));
			if ((typeof opt.n) === 'number' && opt.n > 999) {
				_context.fillText(((opt.n > 9999) ? 9 : Math.floor(opt.n / 1000)) + 'k+', Math.floor(opt.x + opt.w / 2), Math.floor(opt.y + opt.h - opt.h * 0.2));
			} else {
				_context.fillText(opt.n, Math.floor(opt.x + opt.w / 2), Math.floor(opt.y + opt.h - opt.h * 0.15));
			}
			_context.closePath();
		};

		/**
		 * Set badge
		 */
		var badge = function (number, opts) {
			opts = ((typeof opts) === 'string' ? {
				animation: opts
			} : opts) || {};
			_readyCb = function () {
				try {
					if (typeof (number) === 'number' ? (number > 0) : (number !== '')) {
						var q = {
							type: 'badge',
							options: {
								n: number
							}
						};
						if ('animation' in opts && animation.types['' + opts.animation]) {
							q.options.animation = '' + opts.animation;
						}
						if ('type' in opts && type['' + opts.type]) {
							q.options.type = '' + opts.type;
						}
						['bgColor', 'textColor'].forEach(function (o) {
							if (o in opts) {
								q.options[o] = hexToRgb(opts[o]);
							}
						});
						['fontStyle', 'fontFamily'].forEach(function (o) {
							if (o in opts) {
								q.options[o] = opts[o];
							}
						});
						_queue.push(q);
						if (_queue.length > 100) {
							throw new Error('Too many badges requests in queue.');
						}
						icon.start();
					} else {
						icon.reset();
					}
				} catch (e) {
					throw new Error('Error setting badge. Message: ' + e.message);
				}
			};
			if (_ready) {
				_readyCb();
			}
		};

		/**
		 * Set image as icon
		 */
		var image = function (imageElement) {
			_readyCb = function () {
				try {
					var w = imageElement.width;
					var h = imageElement.height;
					var newImg = document.createElement('img');
					var ratio = (w / _w < h / _h) ? (w / _w) : (h / _h);
					newImg.setAttribute('crossOrigin', 'anonymous');
					newImg.onload=function(){
						_context.clearRect(0, 0, _w, _h);
						_context.drawImage(newImg, 0, 0, _w, _h);
						link.setIcon(_canvas);
					};
					newImg.setAttribute('src', imageElement.getAttribute('src'));
					newImg.height = (h / ratio);
					newImg.width = (w / ratio);
				} catch (e) {
					throw new Error('Error setting image. Message: ' + e.message);
				}
			};
			if (_ready) {
				_readyCb();
			}
		};

		/**
		 * Set video as icon
		 */
		var video = function (videoElement) {
			_readyCb = function () {
				try {
					if (videoElement === 'stop') {
						_stop = true;
						icon.reset();
						_stop = false;
						return;
					}
					//var w = videoElement.width;
					//var h = videoElement.height;
					//var ratio = (w / _w < h / _h) ? (w / _w) : (h / _h);
					videoElement.addEventListener('play', function () {
						drawVideo(this);
					}, false);

				} catch (e) {
					throw new Error('Error setting video. Message: ' + e.message);
				}
			};
			if (_ready) {
				_readyCb();
			}
		};

		/**
		 * Set webcam as icon
		 */
		var webcam = function (action) {
			if (!window.URL || !window.URL.createObjectURL) {
				window.URL = window.URL || {};
				window.URL.createObjectURL = function (obj) {
					return obj;
				};
			}
			if (_browser.supported) {
				var newVideo = false;
				own_window.navigator.getUserMedia =
					own_window.navigator.getUserMedia
					|| own_window.navigator.oGetUserMedia
					|| own_window.navigator.msGetUserMedia
					|| own_window.navigator.mozGetUserMedia
					|| own_window.navigator.webkitGetUserMedia;
				_readyCb = function () {
					try {
						if (action === 'stop') {
							_stop = true;
							icon.reset();
							_stop = false;
							return;
						}
						newVideo = document.createElement('video');
						newVideo.width = _w;
						newVideo.height = _h;
						own_window.navigator.getUserMedia({
							video: true,
							audio: false
						}, function (stream) {
							newVideo.src = URL.createObjectURL(stream);
							newVideo.play();
							drawVideo(newVideo);
						}, function () {
						});
					} catch (e) {
						throw new Error('Error setting webcam. Message: ' + e.message);
					}
				};
				if (_ready) {
					_readyCb();
				}
			}

		};

		/**
		 * Draw video to context and repeat :)
		 */
		function drawVideo(video) {
			if (video.paused || video.ended || _stop) {
				return false;
			}
			//nasty hack for FF webcam (Thanks to Julian Ćwirko, kontakt@redsunmedia.pl)
			try {
				_context.clearRect(0, 0, _w, _h);
				_context.drawImage(video, 0, 0, _w, _h);
			} catch (e) {

			}
			_drawTimeout = setTimeout(function () {
				drawVideo(video);
			}, animation.duration);
			link.setIcon(_canvas);
		}

		var link = {};

		/**
		 * Get icon from HEAD tag or create a new <link> element
		 */
		link.getIcon = function () {
			var elm = false;
			//get link element
			var getLink = function () {
				var link = _doc.getElementsByTagName('head')[0].getElementsByTagName('link');
				for (var l = link.length, i = (l - 1); i >= 0; i--) {
					if ((/(^|\s)icon(\s|$)/i).test(link[i].getAttribute('rel'))) {
						return link[i];
					}
				}
				return false;
			};
			if (_opt.element) {
				elm = _opt.element;
			} else if (_opt.elementId) {
				//if img element identified by elementId
				elm = _doc.getElementById(_opt.elementId);
				elm.setAttribute('href', elm.getAttribute('src'));
			} else {
				//if link element
				elm = getLink();
				if (elm === false) {
					elm = _doc.createElement('link');
					elm.setAttribute('rel', 'icon');
					_doc.getElementsByTagName('head')[0].appendChild(elm);
				}
			}
			elm.setAttribute('type', 'image/png');
			return elm;
		};

		link.setIcon = function (canvas) {
			var url = canvas.toDataURL('image/png');
			if (_opt.dataUrl) {
				//if using custom exporter
				_opt.dataUrl(url);
			}
			if (_opt.element) {
				_opt.element.setAttribute('href', url);
				_opt.element.setAttribute('src', url);
			} else if (_opt.elementId) {
				//if is attached to element (image)
				var elm = _doc.getElementById(_opt.elementId);
				elm.setAttribute('href', url);
				elm.setAttribute('src', url);
			} else {
				//if is attached to fav icon
				if (_browser.ff || _browser.opera) {
					//for FF we need to "recreate" element, atach to dom and remove old <link>
					//var originalType = _orig.getAttribute('rel');
					var old = _orig;
					_orig = _doc.createElement('link');
					//_orig.setAttribute('rel', originalType);
					if (_browser.opera) {
						_orig.setAttribute('rel', 'icon');
					}
					_orig.setAttribute('rel', 'icon');
					_orig.setAttribute('type', 'image/png');
					_doc.getElementsByTagName('head')[0].appendChild(_orig);
					_orig.setAttribute('href', url);
					if (old.parentNode) {
						old.parentNode.removeChild(old);
					}
				} else {
					_orig.setAttribute('href', url);
				}
			}
		};

		//http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb#answer-5624139
		//HEX to RGB convertor
		function hexToRgb(hex) {
			var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
			hex = hex.replace(shorthandRegex, function (m, r, g, b) {
				return r + r + g + g + b + b;
			});
			var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
			return result ? {
				r: parseInt(result[1], 16),
				g: parseInt(result[2], 16),
				b: parseInt(result[3], 16)
			} : false;
		}

		/**
		 * Merge options
		 */
		function merge(def, opt) {
			var mergedOpt = {};
			var attrname;
			for (attrname in def) {
				mergedOpt[attrname] = def[attrname];
			}
			for (attrname in opt) {
				mergedOpt[attrname] = opt[attrname];
			}
			return mergedOpt;
		}

		/**
		 * Cross-browser page visibility shim
		 * http://stackoverflow.com/questions/12536562/detect-whether-a-window-is-visible
		 */
		function isPageHidden() {
			return _doc.hidden || _doc.msHidden || _doc.webkitHidden || _doc.mozHidden;
		}

		/**
		 * @namespace animation
		 */
		var animation = {};

		/**
		 * Animation "frame" duration
		 */
		animation.duration = 40;

		/**
		 * Animation types (none,fade,pop,slide)
		 */
		animation.types = {};
		animation.types.fade = [{
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.0
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.1
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.2
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.3
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.4
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.5
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.6
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.7
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.8
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 0.9
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 1.0
		}];
		animation.types.none = [{
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 1
		}];
		animation.types.pop = [{
			x: 1,
			y: 1,
			w: 0,
			h: 0,
			o: 1
		}, {
			x: 0.9,
			y: 0.9,
			w: 0.1,
			h: 0.1,
			o: 1
		}, {
			x: 0.8,
			y: 0.8,
			w: 0.2,
			h: 0.2,
			o: 1
		}, {
			x: 0.7,
			y: 0.7,
			w: 0.3,
			h: 0.3,
			o: 1
		}, {
			x: 0.6,
			y: 0.6,
			w: 0.4,
			h: 0.4,
			o: 1
		}, {
			x: 0.5,
			y: 0.5,
			w: 0.5,
			h: 0.5,
			o: 1
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 1
		}];
		animation.types.popFade = [{
			x: 0.75,
			y: 0.75,
			w: 0,
			h: 0,
			o: 0
		}, {
			x: 0.65,
			y: 0.65,
			w: 0.1,
			h: 0.1,
			o: 0.2
		}, {
			x: 0.6,
			y: 0.6,
			w: 0.2,
			h: 0.2,
			o: 0.4
		}, {
			x: 0.55,
			y: 0.55,
			w: 0.3,
			h: 0.3,
			o: 0.6
		}, {
			x: 0.50,
			y: 0.50,
			w: 0.4,
			h: 0.4,
			o: 0.8
		}, {
			x: 0.45,
			y: 0.45,
			w: 0.5,
			h: 0.5,
			o: 0.9
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 1
		}];
		animation.types.slide = [{
			x: 0.4,
			y: 1,
			w: 0.6,
			h: 0.6,
			o: 1
		}, {
			x: 0.4,
			y: 0.9,
			w: 0.6,
			h: 0.6,
			o: 1
		}, {
			x: 0.4,
			y: 0.9,
			w: 0.6,
			h: 0.6,
			o: 1
		}, {
			x: 0.4,
			y: 0.8,
			w: 0.6,
			h: 0.6,
			o: 1
		}, {
			x: 0.4,
			y: 0.7,
			w: 0.6,
			h: 0.6,
			o: 1
		}, {
			x: 0.4,
			y: 0.6,
			w: 0.6,
			h: 0.6,
			o: 1
		}, {
			x: 0.4,
			y: 0.5,
			w: 0.6,
			h: 0.6,
			o: 1
		}, {
			x: 0.4,
			y: 0.4,
			w: 0.6,
			h: 0.6,
			o: 1
		}];
		/**
		 * Run animation
		 * @param {Object} opt Animation options
		 * @param {Object} cb Callabak after all steps are done
		 * @param {Object} revert Reverse order? true|false
		 * @param {Object} step Optional step number (frame bumber)
		 */
		animation.run = function (opt, cb, revert, step) {
			var animationType = animation.types[isPageHidden() ? 'none' : _opt.animation];
			if (revert === true) {
				step = (typeof step !== 'undefined') ? step : animationType.length - 1;
			} else {
				step = (typeof step !== 'undefined') ? step : 0;
			}
			cb = (cb) ? cb : function () {
			};
			if ((step < animationType.length) && (step >= 0)) {
				type[_opt.type](merge(opt, animationType[step]));
				_animTimeout = setTimeout(function () {
					if (revert) {
						step = step - 1;
					} else {
						step = step + 1;
					}
					animation.run(opt, cb, revert, step);
				}, animation.duration);

				link.setIcon(_canvas);
			} else {
				cb();
				return;
			}
		};

		// auto init
		init();

		return {
			badge: badge,
			video: video,
			image: image,
			webcam: webcam,
			reset: icon.reset,
			browser: {
				supported: _browser.supported
			}
		};
	});

	// AMD / RequireJS
	if (typeof define !== 'undefined' && define.amd) {
		define([], function () {
			return Favico;
		});
	}
	// CommonJS
	else if (typeof module !== 'undefined' && module.exports) {
		module.exports = Favico;
	}
	// included directly via <script> tag
	else {
		this.Favico = Favico;
	}

})();

},{}],"lOmd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.set_number_in_favicon = set_number_in_favicon;

var _xoff = require("@offirmo-private/xoff");

var _asyncUtils = require("@offirmo-private/async-utils");

var _piecon = _interopRequireDefault(require("./piecon"));

var _favico = _interopRequireDefault(require("./favico.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const LIB = 'favicon-notifications';
const DEBUG = false;
const target_window = (0, _xoff.get_top_ish_window)();
let opted_out = false; ////////////////////////////////////

function create_favicon(opts) {
  return new _favico.default({
    //animation:'popFade',
    animation: 'none',
    position: 'up',
    win: target_window,
    ...opts
  });
}

let initialized = false;

function ensure_libs_initialized() {
  if (initialized) return;
  if (DEBUG) console.log(`[${LIB}] initializing…`);

  if (target_window !== window.parent) {
    console.warn(`[${LIB}] can't work, cross-origin parent`);
    opted_out = true;
  }

  if (target_window.document.location.origin.startsWith('file://')) {
    // not worth a fix
    console.warn(`[${LIB}] can't work for file:// origin due to CORS`);
    opted_out = true;
  }

  if (!opted_out) {
    const body_styles = window.getComputedStyle(document.body);
    const pie_chart_color = body_styles.getPropertyValue('--o⋄color⁚fg--error') || '#ff0084';
    const empty_pie_chart_color = body_styles.getPropertyValue('--fg') || body_styles.getPropertyValue('--o⋄color⁚fg--main') || 'lightgrey';
    const outer_ring_color = body_styles.getPropertyValue('--bg') || body_styles.getPropertyValue('--o⋄color⁚bg--main') || 'white';
    if (DEBUG) console.log(`[${LIB}]`, {
      pie_chart_color,
      empty_pie_chart_color,
      outer_ring_color
    });

    _piecon.default.setOptions({
      target_window,
      color: pie_chart_color,
      // Pie chart color
      background: empty_pie_chart_color,
      // Empty pie chart color
      shadow: outer_ring_color,
      // Outer ring color
      fallback: false // Toggles displaying percentage in the title bar (possible values - true, false, 'force')

    }); // experimentally needed...


    _piecon.default.setProgress(0.0001);
  }

  initialized = true;
} // NOTE due to this lib being designed to work with same-domain iframes,
// we don't do any memoization for we don't know
// if another context didn't change our expected state.


function set_number_in_favicon(x) {
  (0, _asyncUtils.schedule_when_idle_but_within_human_perception)(() => {
    if (DEBUG) console.group(`[${LIB}] set_number_in_favicon(${x})`);

    try {
      ensure_libs_initialized();
      if (opted_out) return; // avoids distracting errors in the console

      x = Number(x);

      if (x < 0 || Number.isNaN(x)) {
        throw new Error('bad number');
      }

      if (x >= 1) {
        x = Math.trunc(x); // reset competing lib just in case

        _piecon.default.reset();

        if (DEBUG) console.log(`[${LIB}] …Piecon.reset()`); // force-reinit the lib

        let favicon = create_favicon();
        if (DEBUG) console.log(`[${LIB}] …new Favico(…)`);
        favicon.badge(x);
        if (DEBUG) console.log(`[${LIB}] favicon.badge()`, x);
      } else {
        x = Math.trunc(x * 100); // constraint for clarity of display on limits

        x = Math.min(95, x);
        x = Math.max(3, x); // reset competing lib just in case

        create_favicon().reset();
        if (DEBUG) console.log(`[${LIB}] favicon.reset()`);

        _piecon.default.setProgress(x);

        if (DEBUG) console.log(`[${LIB}] piecon.setProgress()`, x);
      }
    } catch (err) {
      console.error(`[${LIB}] set_number_in_favicon()`, err);
    }

    if (DEBUG) console.groupEnd();
  });
}
},{"@offirmo-private/xoff":"lQpO","@offirmo-private/async-utils":"i8Ln","./piecon":"Q1k9","./favico.js":"sL2W"}],"PNah":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _faviconNotifications = require("@offirmo-private/favicon-notifications");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const InfoboxViewM = /*#__PURE__*/React.memo(function InfoboxView({
  energy_float,
  human_time_to_next,
  achievements_completion_pct
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 InfoboxView'
  /*, { energy_float }*/
  );
  (0, _faviconNotifications.set_number_in_favicon)(energy_float); //window.set_number_in_favicon = set_number_in_favicon // debug

  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "o\u22C4box",
    children: ["\u26A1 You can play ", energy_float >= 1 ? 'right now!' : `in ${human_time_to_next}`, " - Energy: ", energy_float, "/7", /*#__PURE__*/(0, _jsxRuntime.jsx)("br", {}), "\uD83C\uDFC6 Achievements: ", achievements_completion_pct, "%"]
  });
});
var _default = InfoboxViewM;
/*
import CircularProgressbar from 'react-circular-progressbar'
<CircularProgressbar percentage={60} />
*/

exports.default = _default;
},{"react":"dmLA","@offirmo-private/favicon-notifications":"lOmd","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"Qx6W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _fraction = _interopRequireDefault(require("fraction.js"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../../services/game-instance-browser"));

var _context = require("../../../../context");

var _component = _interopRequireDefault(require("./component"));

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const InfoboxC1 = /*#__PURE__*/React.memo(function InfoboxC1({
  state
}) {
  const game_instance = (0, _gameInstanceBrowser.default)();
  const achievements_completion_pct = new _fraction.default(game_instance.queries.get_achievements_completion()).mul(100).floor(2).valueOf();
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
    energy_float: game_instance.queries.get_available_energy_float(),
    human_time_to_next: game_instance.queries.get_human_time_to_next_energy(),
    achievements_completion_pct: achievements_completion_pct
  });
});

function InfoBoxC2() {
  //console.log('🔄 InfoboxC2'/*, this.context, get_available_energy_float(this.context.model)*/)
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
    name: 'tbrpg:infobox',
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.AppStateContext.Consumer, {
      children: app_state => {
        //console.log('InfoboxC2 context received:', app_state)
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(InfoboxC1, {
          m_state: app_state.model
        });
      }
    })
  });
}

var _default = InfoBoxC2;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","fraction.js":"xnfm","../../../../services/game-instance-browser":"r81V","../../../../context":"DUKA","./component":"PNah","@offirmo-private/react-error-boundary":"UTEF","react/jsx-runtime":"qEpl"}],"NgY6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"Qx6W"}],"eIPp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _viewRichText = require("@oh-my-rpg/view-rich-text");

var _chatInterface = require("../../utils/chat-interface");

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _infobox = _interopRequireDefault(require("./infobox"));

require("../index.css");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function* gen_next_step() {
  let game_instance = (0, _gameInstanceBrowser.default)();

  do {
    const steps = [];
    const engagement_msg = game_instance.queries.get_oldest_pending_flow_engagement();

    if (engagement_msg) {
      const {
        uid,
        $doc
      } = engagement_msg;
      steps.push({
        type: 'simple_message',
        msg_main: (0, _richTextToReact.default)($doc)
      });
      game_instance.commands.acknowledge_engagement_msg_seen(uid);
    } else {
      const ui_state = game_instance.view.get();
      const last_adventure = game_instance.queries.get_last_adventure();

      if (!ui_state.recap_displayed) {
        steps.push({
          type: 'simple_message',
          msg_main: (0, _richTextToReact.default)(game_instance.queries.get_recap())
        });
        game_instance.view.set_state(() => ({
          recap_displayed: true
        }));
      }

      if (last_adventure && last_adventure.uuid !== ui_state.last_displayed_adventure_uuid) {
        if (last_adventure.good) steps.push({
          type: 'progress',
          duration_ms: 1000,
          msg_main: 'Exploring…',
          msgg_acknowledge: () => 'Encountered something:\n'
        });
        const $doc = (0, _viewRichText.render_adventure)(last_adventure);
        steps.push({
          type: 'simple_message',
          msg_main: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
            children: (0, _richTextToReact.default)($doc)
          })
        });

        if (!last_adventure.good) {
          // https://developer.mozilla.org/en-US/docs/Web/API/Vibration_API
          try {
            if ('vibrate' in navigator) navigator.vibrate(200);
          } catch (err) {
            console.warn(`[optional] error when attempting to vibrate`, err);
          }
        }

        game_instance.view.set_state(() => ({
          last_displayed_adventure_uuid: last_adventure.uuid
        }));
      }

      if (game_instance.queries.is_inventory_full()) {
        steps.push({
          msg_main: 'Your inventory is full! You can’t play until you make some space.',
          choices: [{
            msg_cta: 'Manage Inventory (equip, sell…)',
            value: 'inventory',
            msgg_as_user: () => 'Let’s sort out my stuff.',
            callback: () => game_instance.view.set_state(() => ({
              mode: 'inventory'
            }))
          }]
        });
      } else {
        const CTA = 'Play! (-1⚡)';
        steps.push({
          msg_main: 'What do you want to do?',
          choices: [{
            msg_cta: CTA,
            value: 'play',
            msgg_as_user: () => 'Let’s go adventuring!',
            callback: () => {
              game_instance.commands.play();
              window.ga && window.ga('send', 'event', {
                eventCategory: 'game',
                eventAction: 'play',
                eventValue: game_instance.queries.get_last_adventure().good ? 1 : 0,
                eventLabel: CTA,
                hitCallback: () => console.log('GA play sent!')
              });
            }
          }]
        });
      }
    }

    yield* steps;
    game_instance = (0, _gameInstanceBrowser.default)();
  } while (true);
}

class ExplorePanelView extends React.Component {
  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 ExplorePanelView');
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "o\u22C4top-container tbrpg-panel tbrpg-panel--explore",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
            name: 'chat:explore',
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_chatInterface.Chat, {
              initial_bubbles: [],
              gen_next_step: gen_next_step(),
              on_unmount: bubbles => {
                /*get_game_instance().view.set_state(() => ({
                	home_bubbles: bubbles,
                }))*/
              }
            })
          })
        })
      }, "chat"), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_infobox.default, {})
      }, "energy-indicator")]
    });
  }

}

exports.default = ExplorePanelView;

_defineProperty(ExplorePanelView, "propTypes", {//view_state: PropTypes.object.isRequired,
});
},{"react":"dmLA","prop-types":"X9bF","@offirmo-private/react-error-boundary":"UTEF","@oh-my-rpg/view-rich-text":"asRH","../../utils/chat-interface":"fxyp","../../../services/rich-text-to-react":"SetX","../../../services/game-instance-browser":"r81V","./infobox":"NgY6","../index.css":"THnX","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"w9M2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _component = _interopRequireDefault(require("./component"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = _component.default;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","./component":"eIPp"}],"H070":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"w9M2"}],"BrSM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _viewRichText = require("@oh-my-rpg/view-rich-text");

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _mobileDetection = require("../../../services/mobile-detection");

var _chatInterface = require("../../utils/chat-interface");

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

require("../index.css");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function* gen_next_step() {
  const game_instance = (0, _gameInstanceBrowser.default)();

  do {
    const steps = [];
    const engagement_msg = game_instance.queries.get_oldest_pending_flow_engagement();

    if (engagement_msg) {
      const {
        uid,
        $doc
      } = engagement_msg;
      steps.push({
        type: 'simple_message',
        msg_main: (0, _richTextToReact.default)($doc)
      });
      game_instance.commands.acknowledge_engagement_msg_seen(uid);
    } else {
      const view_state = game_instance.view.get();

      if (view_state.changing_character_class) {
        steps.push({
          msg_main: 'Choose your path wisely:',
          choices: (0, _gameInstanceBrowser.default)().queries.get_available_classes().map(klass => ({
            msg_cta: klass,
            value: klass,
            msgg_as_user: () => `I want to follow the path of the ${klass}!`,
            msgg_acknowledge: () => `You’ll make an amazing ${klass}.`,
            callback: value => {
              game_instance.commands.change_avatar_class(value);
              game_instance.view.set_state(() => ({
                changing_character_class: false
              }));
              window.ga && window.ga('send', 'event', {
                eventCategory: 'game',
                eventAction: 'change_class',
                //eventValue: ...,
                //eventLabel: CTA,
                hitCallback: () => console.log('GA cc sent!')
              });
            }
          }))
        });
      } else if (view_state.changing_character_name) {
        steps.push({
          type: 'ask_for_string',
          msg_main: 'What’s your name?',
          msgg_as_user: value => value ? `My name is "${value}".` : 'Nevermind.',
          msgg_acknowledge: name => name ? `You are now known as ${name}!` : 'Maybe another time.',
          callback: value => {
            console.log({
              value,
              type: typeof value
            });
            if (value) game_instance.commands.rename_avatar(value);
            game_instance.view.set_state(() => ({
              changing_character_name: false
            }));
            window.ga && window.ga('send', 'event', {
              eventCategory: 'game',
              eventAction: 'rename_avatar',
              //eventValue: ...,
              //eventLabel: CTA,
              hitCallback: () => console.log('GA ra sent!')
            });
          }
        });
      } else {
        steps.push({
          msg_main: 'What do you want to do?',
          choices: [{
            msg_cta: 'Change class',
            value: 'c',
            msgg_as_user: () => 'I want to follow the path of…',
            callback: () => {
              game_instance.view.set_state(() => ({
                changing_character_class: true
              }));
            }
          }, {
            msg_cta: 'Rename hero',
            value: 'r',
            msgg_as_user: () => 'Let’s fix my name…',
            callback: () => {
              game_instance.view.set_state(() => ({
                changing_character_name: true
              }));
            }
          }]
        });
      }
    }

    yield* steps;
  } while (true);
}

class CharacterPanelView extends _react.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      mobile_keyboard_likely_present: false
    });
  }

  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 CharacterPanelView');
    const {
      avatar
    } = this.props;
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "tbrpg-panel tbrpg-panel--character o\u22C4flex--column",
      children: [this.state.mobile_keyboard_likely_present ? '(temporarily hidden while you type on mobile)' : /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "panel-top-content o\u22C4flex-element--nogrow",
        children: (0, _richTextToReact.default)((0, _viewRichText.render_character_sheet)(avatar))
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "o\u22C4flex-element--grow o\u22C4overflow-y\u205Aauto",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
          name: 'chat:character',
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_chatInterface.Chat, {
            gen_next_step: gen_next_step(),
            on_input_begin: () => {
              console.log('input start');
              this.setState(() => ({
                mobile_keyboard_likely_present: (0, _mobileDetection.is_likely_to_be_mobile)()
              }));
            },
            on_input_end: () => {
              console.log('input stop');
              this.setState(() => ({
                mobile_keyboard_likely_present: false
              }));
            }
          })
        })
      })]
    });
  }

}

exports.default = CharacterPanelView;

_defineProperty(CharacterPanelView, "propTypes", {
  avatar: _propTypes.default.object.isRequired
});
},{"react":"dmLA","prop-types":"X9bF","@oh-my-rpg/view-rich-text":"asRH","@offirmo-private/react-error-boundary":"UTEF","../../../services/mobile-detection":"AUut","../../utils/chat-interface":"fxyp","../../../services/rich-text-to-react":"SetX","../../../services/game-instance-browser":"r81V","../index.css":"THnX","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"jXCx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _context = require("../../../context");

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class CharacterPanel extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render_view", ({
      u_state
    }) => {
      const avatar = (0, _gameInstanceBrowser.default)().queries.get_sub_state('avatar');
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
        avatar: avatar
      });
    });
  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.UStateListenerAndProvider, {
      render: this.render_view
    });
  }

}

_defineProperty(CharacterPanel, "propTypes", {});

var _default = CharacterPanel;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","../../../context":"DUKA","../../../services/game-instance-browser":"r81V","./component":"BrSM","react/jsx-runtime":"qEpl"}],"wrr7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"jXCx"}],"sJZO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _viewRichText = require("@oh-my-rpg/view-rich-text");

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

require("../index.css");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const InventoryPanelViewM = /*#__PURE__*/React.memo(function InventoryPanelView({
  inventory,
  wallet
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 InventoryPanelView');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "o\u22C4top-container tbrpg-panel tbrpg-panel--inventory o\u22C4flex--column",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "panel-top-content o\u22C4flex-element--nogrow",
      children: (0, _richTextToReact.default)((0, _viewRichText.render_full_inventory)(inventory, wallet))
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {})]
  });
});
var _default = InventoryPanelViewM;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@oh-my-rpg/view-rich-text":"asRH","../../../services/rich-text-to-react":"SetX","../index.css":"THnX","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"d2Iu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _context = require("../../../context");

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class InventoryPanel extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render_view", ({
      u_state
    }) => {
      const inventory = (0, _gameInstanceBrowser.default)().queries.get_sub_state('inventory');
      const wallet = (0, _gameInstanceBrowser.default)().queries.get_sub_state('wallet');
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
        inventory: inventory,
        wallet: wallet
      });
    });
  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.UStateListenerAndProvider, {
      render: this.render_view
    });
  }

}

_defineProperty(InventoryPanel, "propTypes", {});

var _default = InventoryPanel;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","../../../context":"DUKA","../../../services/game-instance-browser":"r81V","./component":"sJZO","react/jsx-runtime":"qEpl"}],"G7bK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"d2Iu"}],"trgW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _viewRichText = require("@oh-my-rpg/view-rich-text");

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

require("../index.css");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const AchievementsPanelViewM = /*#__PURE__*/React.memo(function AchievementsPanelView({
  achievements_snapshot
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 AchievementsPanelView');
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: "o\u22C4top-container tbrpg-panel tbrpg-panel--achievements o\u22C4flex--column",
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "panel-top-content o\u22C4flex-element--nogrow",
      children: (0, _richTextToReact.default)((0, _viewRichText.render_achievements_snapshot)(achievements_snapshot))
    })
  });
});
var _default = AchievementsPanelViewM;
exports.default = _default;
},{"react":"dmLA","@oh-my-rpg/view-rich-text":"asRH","../../../services/rich-text-to-react":"SetX","../index.css":"THnX","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"Mc9V":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _component = _interopRequireDefault(require("./component"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _context = require("../../../context");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const AchievementsPanelC1M = /*#__PURE__*/React.memo(function AchievementsPanelC1({
  u_state
}) {
  const achievements_snapshot = (0, _gameInstanceBrowser.default)().queries.get_achievements_snapshot();
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
    achievements_snapshot: achievements_snapshot
  });
});

class AchievementsPanel extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render_view", ({
      u_state
    }) => {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(AchievementsPanelC1M, {
        u_state: u_state
      });
    });
  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.UStateListenerAndProvider, {
      render: this.render_view
    });
  }

}

_defineProperty(AchievementsPanel, "propTypes", {});

var _default = AchievementsPanel;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","./component":"trgW","../../../services/game-instance-browser":"r81V","../../../context":"DUKA","react/jsx-runtime":"qEpl"}],"onSu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"Mc9V"}],"pgKH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

require("../index.css");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class SocialPanelView extends React.Component {
  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 SocialPanelView');
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "o\u22C4top-container tbrpg-panel tbrpg-panel--achievements o\u22C4flex--column",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "panel-top-content o\u22C4flex-element--nogrow o\u22C4text-align\uA60Ccenter",
        children: ["Social features will be here one day.", /*#__PURE__*/(0, _jsxRuntime.jsx)("br", {}), /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
          href: "https://linktr.ee/theboringrpg",
          target: "_blank",
          rel: "noopener noreferrer",
          children: "Please encourage the author if you want to see them faster!"
        })]
      })
    });
  }

}

exports.default = SocialPanelView;

_defineProperty(SocialPanelView, "propTypes", {});
},{"react":"dmLA","prop-types":"X9bF","../index.css":"THnX","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"IoeI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _component = _interopRequireDefault(require("./component"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = _component.default;
exports.default = _default;
},{"prop-types":"X9bF","./component":"pgKH"}],"kqE5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"IoeI"}],"VcKO":[function(require,module,exports) {
"use strict"; ////////////////////////////////////

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LIB = void 0;
var LIB = '@oh-my-rpg/rsrc-backgrounds';
exports.LIB = LIB; ////////////////////////////////////
},{}],"qz7W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var typescript_string_enums_1 = require("typescript-string-enums"); // tslint:disable-next-line: variable-name


var Tag = typescript_string_enums_1.Enum('', // features
'city', 'castle', 'mountain', 'river', 'sea', // in/outdoor
'outside', 'outside--surface', 'outside--underground', 'inside', //
'people', 'people--guard', 'people--sentinel', 'people--traveller', 'people--merchant', //
'monster', 'monster--dragon', //
'dungeon', 'dungeon--entrance', //
'activity--fight');
},{"typescript-string-enums":"qyCc"}],"NBeB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ELEMENTS = exports.AUTHORS_BY_NAME = exports.AUTHORS = void 0;
var AUTHORS = [{
  display_name: 'Ahmed Maihope',
  url: 'https://www.artstation.com/maihope'
}, {
  display_name: 'Andreas Rocha',
  url: 'https://www.artstation.com/andreasrocha'
}, {
  display_name: 'Cyril Labranche',
  url: 'https://www.artstation.com/hazdesign'
}, {
  display_name: 'Dan Zhao',
  url: 'https://www.artstation.com/danzhao'
}, {
  display_name: 'Daniel Alekow',
  url: 'https://www.artstation.com/memod'
}, {
  display_name: 'Dmitry Kremiansky',
  url: 'https://www.artstation.com/dmitrykremiansky'
}, {
  display_name: 'G Xy',
  url: 'https://www.artstation.com/gxr'
}, {
  display_name: 'Il Su Ko',
  url: 'https://www.google.com/search?q=Il+Su+Ko'
}, {
  display_name: 'Ivan Laliashvili',
  url: 'https://www.deviantart.com/ivanlaliashvili'
}, {
  display_name: 'Jorge Miguel Jacinto',
  url: 'https://www.jorgejacinto.com'
}, {
  display_name: 'Julius Camenzind',
  url: 'https://www.artstation.com/juliuscamenzind'
}, {
  display_name: 'Raphael Lacoste',
  url: 'https://www.artstation.com/raphael-lacoste'
}, {
  display_name: 'Robh Ruppel',
  url: 'https://www.artstation.com/robh_ruppel_design'
}, {
  display_name: 'Soma',
  url: 'https://krita-artists.org/u/Soma'
}, {
  display_name: 'Thomas Stoop',
  url: 'https://www.artstation.com/thomasstoop'
}, {
  display_name: 'Jaecheol Park',
  url: 'https://www.artstation.com/paperblue'
}
/*
{
    display_name: "",
    url: "",
},
*/
];
exports.AUTHORS = AUTHORS;
var AUTHORS_BY_NAME = AUTHORS.reduce(function (acc, val) {
  acc[val.display_name] = val;
  return acc;
}, {});
exports.AUTHORS_BY_NAME = AUTHORS_BY_NAME;
var ELEMENTS = [{
  author: AUTHORS_BY_NAME['Ahmed Maihope'],
  source: 'https://www.artstation.com/artwork/Yz9Gd',
  display_name: 'Forgotten Temple',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚ahmed_maihope-forgotten_temple',
  position_pct: {
    "x": 19,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Ahmed Maihope'],
  source: 'https://www.artstation.com/artwork/eZN2D',
  display_name: 'Space Station',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚ahmed_maihope-space_station',
  position_pct: {
    "x": 50,
    "y": 99
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Ahmed Maihope'],
  source: 'https://www.artstation.com/artwork/KamEVB',
  display_name: 'The Apple Thief',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚ahmed_maihope-the_apple_thief',
  position_pct: {
    "x": 26,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/zA6ow',
  display_name: 'Ar Nat Village',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-ar_nat_village',
  position_pct: {
    "x": 79,
    "y": 20
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/PmORd1',
  display_name: 'At The Gate',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-at_the_gate',
  position_pct: {
    "x": 85,
    "y": 62
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/B5OVl',
  display_name: 'Blue Valley',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-blue_valley',
  position_pct: {
    "x": 74,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/bOnRd',
  display_name: 'Castlerock',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-castlerock',
  position_pct: {
    "x": 32,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/NyAEq',
  display_name: 'City Gates',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-city_gates',
  position_pct: {
    "x": 63,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/0nnkK',
  display_name: 'Dangerous Roads',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-dangerous_roads',
  position_pct: {
    "x": 64,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/JQPmA',
  display_name: 'Dark Times',
  keywords: ['dungeon'],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-dark_times',
  position_pct: {
    "x": 78,
    "y": 60
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/yOKz9',
  display_name: 'Deep In The Jungle',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-deep_in_the_jungle',
  position_pct: {
    "x": 65,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/8eWBR',
  display_name: 'Deep In The Woods',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-deep_in_the_woods',
  position_pct: {
    "x": 30,
    "y": 80
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/233v',
  display_name: 'Deep Shadows',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-deep_shadows',
  position_pct: {
    "x": 23,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/PQobn',
  display_name: 'Dome City',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-dome_city',
  position_pct: {
    "x": 19,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/eve5D',
  display_name: 'Dragons Pass',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-dragons_pass',
  position_pct: {
    "x": 0,
    "y": 27
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/LObk5',
  display_name: 'Enchanted Forest Ii',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-enchanted_forest_ii',
  position_pct: {
    "x": 66,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/xNxbr',
  display_name: 'Fiery Path',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-fiery_path',
  position_pct: {
    "x": 78,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/Ly4YP',
  display_name: 'First Rays',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-first_rays',
  position_pct: {
    "x": 41,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/PQ064',
  display_name: 'Forbidden Kingdom',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-forbidden_kingdom',
  position_pct: {
    "x": 26,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/Y93oK',
  display_name: 'Foundation',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-foundation',
  position_pct: {
    "x": 50,
    "y": 46
  },
  position_pct_alt: {
    "x": 50,
    "y": 0
  }
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/Y83lK',
  display_name: 'Hidden Treasures',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-hidden_treasures',
  position_pct: {
    "x": 73,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/YK4Bb',
  display_name: 'Homage To Sintra',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-homage_to_sintra',
  position_pct: {
    "x": 75,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.instagram.com/p/Bco4R3jgJhR/?utm_source=ig_web_button_share_sheet',
  display_name: 'Humble Abode',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-humble_abode',
  position_pct: {
    "x": 50,
    "y": 72
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/dedbw',
  display_name: 'Ice Temple',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-ice_temple',
  position_pct: {
    "x": 78,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/dWOKw',
  display_name: 'Light Forest',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-light_forest',
  position_pct: {
    "x": 72,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/0rKZY',
  display_name: 'Magic Hour',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-magic_hour',
  position_pct: {
    "x": 81,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/grxge',
  display_name: 'Mountain Pass',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-mountain_pass',
  position_pct: {
    "x": 96,
    "y": 80
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/1bzno',
  display_name: 'Old Forest',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-old_forest',
  position_pct: {
    "x": 61,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/lVaZe',
  display_name: 'Path Of Wisdom',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-path_of_wisdom',
  position_pct: {
    "x": 65,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/AbR9y',
  display_name: 'Peace Of Mind',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-peace_of_mind',
  position_pct: {
    "x": 45,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/PvNv4',
  display_name: 'Safe Haven',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-safe_haven',
  position_pct: {
    "x": 80,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/zwlqw',
  display_name: 'Soul Searching',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-soul_searching',
  position_pct: {
    "x": 57,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/5LEmP',
  display_name: 'Spring Is Coming',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-spring_is_coming',
  position_pct: {
    "x": 68,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/D48PR',
  display_name: 'Student Vs Teacher',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-student_vs_teacher',
  position_pct: {
    "x": 45,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/Y8awY',
  display_name: 'The Citadel Ii',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_citadel_ii',
  position_pct: {
    "x": 98,
    "y": 25
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/JNraz',
  display_name: 'The Dark Citadel',
  keywords: ['dungeon'],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_dark_citadel',
  position_pct: {
    "x": 60,
    "y": 51
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.instagram.com/p/BcmGYYkAeD9/?utm_source=ig_web_button_share_sheet',
  display_name: 'The Emissary',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_emissary',
  position_pct: {
    "x": 31,
    "y": 65
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/w8838Z',
  display_name: 'The Fiery Forest',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_fiery_forest',
  position_pct: {
    "x": 84,
    "y": 1
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/2dE5B',
  display_name: 'The Gathering',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_gathering',
  position_pct: {
    "x": 51,
    "y": 99
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/kalr6',
  display_name: 'The Hidden Village Ii',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_hidden_village_ii',
  position_pct: {
    "x": 67,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/wZrGZ',
  display_name: 'The Last Fortress',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_last_fortress',
  position_pct: {
    "x": 66,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/lVVb8z',
  display_name: 'The Message',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_message',
  position_pct: {
    "x": 91,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/ZQlb1',
  display_name: 'The Treehouse',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-the_treehouse',
  position_pct: {
    "x": 75,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/O3gWk',
  display_name: 'Unnamed 2',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-unnamed_2',
  position_pct: {
    "x": 63,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/o69XL',
  display_name: 'Warm Mist',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-warm_mist',
  position_pct: {
    "x": 24,
    "y": 71
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/mOVW1',
  display_name: 'Waterfall Memories',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-waterfall_memories',
  position_pct: {
    "x": 64,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/k9eaA',
  display_name: 'We Found This Amazing Place',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-we_found_this_amazing_place',
  position_pct: {
    "x": 60,
    "y": 90
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/g3X5G',
  display_name: 'Winter Lights',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-winter_lights',
  position_pct: {
    "x": 74,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/0g2J5',
  display_name: 'Winter Travellers',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-winter_travellers',
  position_pct: {
    "x": 55,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/8lm0Kx',
  display_name: 'Wizards Tower',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-wizards_tower',
  position_pct: {
    "x": 18,
    "y": 1
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/4bKz1',
  display_name: 'Cold March',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-cold_march',
  position_pct: {
    "x": 26,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/e13G',
  display_name: 'Morning Arrival',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-morning_arrival',
  position_pct: {
    "x": 49,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Andreas Rocha'],
  source: 'https://www.artstation.com/artwork/d4zBx',
  display_name: 'Fields Of Gold',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚andreas_rocha-fields_of_gold',
  position_pct: {
    "x": 63,
    "y": 70
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Cyril Labranche'],
  source: 'https://www.artstation.com/artwork/k4EXb0',
  display_name: 'Pikes',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚cyril_labranche-pikes',
  position_pct: {
    "x": 80,
    "y": 60
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dan Zhao'],
  source: 'https://www.artstation.com/artwork/6dJvW',
  display_name: 'A Cabin In The Cave',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dan_zhao-a_cabin_in_the_cave',
  position_pct: {
    "x": 57,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dan Zhao'],
  source: 'https://www.artstation.com/artwork/2WvEe',
  display_name: 'A Practice',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dan_zhao-a_practice',
  position_pct: {
    "x": 66,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dan Zhao'],
  source: 'https://www.artstation.com/artwork/gJg3rG',
  display_name: 'Ancient Castle',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dan_zhao-ancient_castle',
  position_pct: {
    "x": 34,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dan Zhao'],
  source: 'https://www.artstation.com/artwork/Xale0',
  display_name: 'Barbacan',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dan_zhao-barbacan',
  position_pct: {
    "x": 39,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dan Zhao'],
  source: 'https://www.artstation.com/artwork/AZVkq',
  display_name: 'Canyon',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dan_zhao-canyon',
  position_pct: {
    "x": 26,
    "y": 50
  },
  position_pct_alt: {
    "x": 59,
    "y": 50
  }
}, {
  author: AUTHORS_BY_NAME['Dan Zhao'],
  source: 'https://www.artstation.com/artwork/L4dL0',
  display_name: 'Secluded Valley',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dan_zhao-secluded_valley',
  position_pct: {
    "x": 75,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Daniel Alekow'],
  source: 'https://www.artstation.com/artwork/BmXlJ6',
  display_name: 'Albion Lymhurst',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚daniel_alekow-albion_lymhurst',
  position_pct: {
    "x": 37,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Daniel Alekow'],
  source: 'https://www.artstation.com/artwork/W2dVJv',
  display_name: 'Inside Caerleon',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚daniel_alekow-inside_caerleon',
  position_pct: {
    "x": 48,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dmitry Kremiansky'],
  source: 'https://www.artstation.com/artwork/W2XxeE',
  display_name: 'A Secret Place Alps',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dmitry_kremiansky-a_secret_place_alps',
  position_pct: {
    "x": 47,
    "y": 30
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dmitry Kremiansky'],
  source: 'https://www.artstation.com/artwork/1KwQL',
  display_name: 'Ships And Seagulls',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dmitry_kremiansky-ships_and_seagulls',
  position_pct: {
    "x": 52,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dmitry Kremiansky'],
  source: 'https://www.artstation.com/artwork/Ra84X',
  display_name: 'Thames',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dmitry_kremiansky-thames',
  position_pct: {
    "x": 74,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Dmitry Kremiansky'],
  source: 'https://www.artstation.com/artwork/ODzay',
  display_name: 'Victorian Street',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚dmitry_kremiansky-victorian_street',
  position_pct: {
    "x": 79,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['G Xy'],
  source: 'https://www.artstation.com/artwork/PmGJl3',
  display_name: 'Cloud City',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚g_xy-cloud_city',
  position_pct: {
    "x": 31,
    "y": 90
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['G Xy'],
  source: 'https://www.artstation.com/artwork/BmJozl',
  display_name: 'Fog City',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚g_xy-fog_city',
  position_pct: {
    "x": 39,
    "y": 75
  },
  position_pct_alt: {
    "x": 93,
    "y": 75
  }
}, {
  author: AUTHORS_BY_NAME['G Xy'],
  source: 'https://www.artstation.com/artwork/lVP1OJ',
  display_name: 'Out Of Control',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚g_xy-out_of_control',
  position_pct: {
    "x": 90,
    "y": 54
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['G Xy'],
  source: 'https://www.artstation.com/artwork/Jl3kl0',
  display_name: 'Shuwu',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚g_xy-shuwu',
  position_pct: {
    "x": 40,
    "y": 90
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Il Su Ko'],
  source: 'https://www.artstation.com/artwork/ZBmLR',
  display_name: 'Old Concept Draft Canceled',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚il_su_ko-old_concept_draft_canceled',
  position_pct: {
    "x": 21,
    "y": 50
  },
  position_pct_alt: {
    "x": 72,
    "y": 50
  }
}, {
  author: AUTHORS_BY_NAME['Ivan Laliashvili'],
  source: 'https://www.deviantart.com/ivanlaliashvili/art/The-return-building-a-castle-764935182',
  display_name: 'The Return Building A Castle',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚ivan_laliashvili-the_return_building_a_castle',
  position_pct: {
    "x": 46,
    "y": 99
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Ivan Laliashvili'],
  source: 'https://www.iamag.co/the-art-of-ivan-laliashvili/#jp-carousel-248601',
  display_name: 'The Return',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚ivan_laliashvili-the_return',
  position_pct: {
    "x": 56,
    "y": 5
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/dvOJQ',
  display_name: 'Bank',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-bank',
  position_pct: {
    "x": 70,
    "y": 70
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/YaBABw',
  display_name: 'Bl F',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-bl_f',
  position_pct: {
    "x": 90,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/v1bYa3',
  display_name: 'Castle',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-castle',
  position_pct: {
    "x": 31,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/nrm0E',
  display_name: 'Cave Waterfall',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-cave_waterfall',
  position_pct: {
    "x": 20,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/4mQ5W',
  display_name: 'City Sea',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-city_sea',
  position_pct: {
    "x": 40,
    "y": 29
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/Kaeq9B',
  display_name: 'Forest B R',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-forest_b_r',
  position_pct: {
    "x": 31,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/Jl94qD',
  display_name: 'Forest Gr Up',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-forest_gr_up',
  position_pct: {
    "x": 37,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/GbWP3',
  display_name: 'Forest M T',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-forest_m_t',
  position_pct: {
    "x": 57,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/rbBBe',
  display_name: 'Forest Night Waterfall',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-forest_night_waterfall',
  position_pct: {
    "x": 45,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/GXaEJW',
  display_name: 'Forest Waterfall',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-forest_waterfall',
  position_pct: {
    "x": 39,
    "y": 1
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/6aNlX5',
  display_name: 'Sea R W',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-sea_r_w',
  position_pct: {
    "x": 19,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jaecheol Park'],
  source: 'https://www.artstation.com/artwork/A3gvz',
  display_name: 'Shop',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jaecheol_park-shop',
  position_pct: {
    "x": 10,
    "y": 28
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jorge Miguel Jacinto'],
  source: 'https://www.deviantart.com/jjcanvas/art/Civilization-127234207',
  display_name: 'Civilization',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jorge_miguel_jacinto-civilization',
  position_pct: {
    "x": 41,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Jorge Miguel Jacinto'],
  source: 'https://www.deviantart.com/jjcanvas/art/Half-Remembered-Ruins-351880992',
  display_name: 'Half Remembered Ruins',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚jorge_miguel_jacinto-half_remembered_ruins',
  position_pct: {
    "x": 60,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Julius Camenzind'],
  source: 'https://www.artstation.com/artwork/V84Z4',
  display_name: 'Snowcapped Environment',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚julius_camenzind-snowcapped_environment',
  position_pct: {
    "x": 74,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/wEAV',
  display_name: 'Terry Goodkind French Cover',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-terry_goodkind_french_cover',
  position_pct: {
    "x": 5,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/Kz6G',
  display_name: 'Gnomon',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-gnomon',
  position_pct: {
    "x": 32,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/yE0n',
  display_name: 'Journey To The Center Of The Earth',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-journey_to_the_center_of_the_earth',
  position_pct: {
    "x": 55,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/9By4Q',
  display_name: 'Jungle',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-jungle',
  position_pct: {
    "x": 15,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/xORGY',
  display_name: 'Kvaslr Fortress',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-kvaslr_fortress',
  position_pct: {
    "x": 84,
    "y": 1
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/dQOW',
  display_name: 'Lost Island',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-lost_island',
  position_pct: {
    "x": 2,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/oJL3q',
  display_name: 'Path To The Gothic Choir',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-path_to_the_gothic_choir',
  position_pct: {
    "x": 30,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/6aNvWx',
  display_name: 'Sentinels',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-sentinels',
  position_pct: {
    "x": 90,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/GmO4',
  display_name: 'Return Of The Knight',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-return_of_the_knight',
  position_pct: {
    "x": 79,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/0EX4',
  display_name: 'Ride At Dusk',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-ride_at_dusk',
  position_pct: {
    "x": 60,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/P2m1',
  display_name: 'Santa Lucia Arrival',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-santa_lucia_arrival',
  position_pct: {
    "x": 20,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/8rln',
  display_name: 'The Coast',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-the_coast',
  position_pct: {
    "x": 100,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/e0ayvG',
  display_name: 'The Encounter',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-the_encounter',
  position_pct: {
    "x": 1,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/ODyy',
  display_name: 'The Journey',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-the_journey',
  position_pct: {
    "x": 70,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/bVav',
  display_name: 'The Mangrove',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-the_mangrove',
  position_pct: {
    "x": 95,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Raphael Lacoste'],
  source: 'https://www.artstation.com/artwork/nZvA4',
  display_name: 'Viking Ambush',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚raphael_lacoste-viking_ambush',
  position_pct: {
    "x": 25,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Robh Ruppel'],
  source: 'https://www.artstation.com/artwork/xz3LK1',
  display_name: 'Tangled Castle',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚robh_ruppel-tangled_castle',
  position_pct: {
    "x": 45,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/dragons-lair/2072',
  display_name: 'Dragons Lair',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-dragons_lair',
  position_pct: {
    "x": 43,
    "y": 10
  },
  position_pct_alt: {
    "x": 76,
    "y": 10
  }
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/dreamscape-practice/5085',
  display_name: 'Dreamscape Practice 1',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-dreamscape_practice_1',
  position_pct: {
    "x": 24,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/dreamscape-practice/5085?alt',
  display_name: 'Dreamscape Practice 2',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-dreamscape_practice_2',
  position_pct: {
    "x": 70,
    "y": 21
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/durur-mountain/3804',
  display_name: 'Durur Mountain',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-durur_mountain',
  position_pct: {
    "x": 35,
    "y": 40
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/encounter/2319',
  display_name: 'Encounter',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-encounter',
  position_pct: {
    "x": 20,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/entrance/2875',
  display_name: 'Entrance',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-entrance',
  position_pct: {
    "x": 68,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/fire-clouds/6454',
  display_name: 'Fire Clouds',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-fire_clouds',
  position_pct: {
    "x": 60,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/mirath-towers/3634',
  display_name: 'Mirath Towers',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-mirath_towers',
  position_pct: {
    "x": 73,
    "y": 50
  },
  position_pct_alt: {
    "x": 43,
    "y": 50
  }
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/mountain-valley/5381',
  display_name: 'Mountain Valley',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-mountain_valley',
  position_pct: {
    "x": 24,
    "y": 80
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/on-a-journey-2/4051',
  display_name: 'On A Journey 2',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-on_a_journey_2',
  position_pct: {
    "x": 24,
    "y": 30
  },
  position_pct_alt: {
    "x": 99,
    "y": 30
  }
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/red-dragon/4308',
  display_name: 'Red Dragon',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-red_dragon',
  position_pct: {
    "x": 41,
    "y": 1
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/taoro-landscape/3428',
  display_name: 'Taoro Landscape',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-taoro_landscape',
  position_pct: {
    "x": 49,
    "y": 20
  },
  position_pct_alt: {
    "x": 82,
    "y": 20
  }
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/temple-ruins/3513',
  display_name: 'Temple Ruins',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-temple_ruins',
  position_pct: {
    "x": 80,
    "y": 60
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/der-bote/2696',
  display_name: 'The Messenger',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-the_messenger',
  position_pct: {
    "x": 21,
    "y": 90
  },
  position_pct_alt: {
    "x": 84,
    "y": 90
  }
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/the-source/4498',
  display_name: 'The Source',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-the_source',
  position_pct: {
    "x": 31,
    "y": 90
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Soma'],
  source: 'https://krita-artists.org/t/voyage-home/2593',
  display_name: 'Voyage Home',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚soma-voyage_home',
  position_pct: {
    "x": 54,
    "y": 66
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/XDBP0',
  display_name: 'Elysium',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-elysium',
  position_pct: {
    "x": 37,
    "y": 66
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/wbGvw',
  display_name: 'First Gate',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-first_gate',
  position_pct: {
    "x": 46,
    "y": 30
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/DKAvA',
  display_name: 'Lighthouse',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-lighthouse',
  position_pct: {
    "x": 33,
    "y": 99
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/qlgzD',
  display_name: 'Otherside',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-otherside',
  position_pct: {
    "x": 51,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/qyvwn',
  display_name: 'Pathway',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-pathway',
  position_pct: {
    "x": 69,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/A9o0wq',
  display_name: 'Penthouse',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-penthouse',
  position_pct: {
    "x": 22,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/bagvGE',
  display_name: 'Snow Forest 1',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-snow_forest_1',
  position_pct: {
    "x": 70,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/bagvGE?alt=2',
  display_name: 'Snow Forest 2',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-snow_forest_2',
  position_pct: {
    "x": 69,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/bagvGE?alt=3',
  display_name: 'Snow Forest 3',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-snow_forest_3',
  position_pct: {
    "x": 57,
    "y": 1
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/BvQdk',
  display_name: 'Surya',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-surya',
  position_pct: {
    "x": 54,
    "y": 49
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/wEErg',
  display_name: 'Time Portal',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-time_portal',
  position_pct: {
    "x": 70,
    "y": 10
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/0nwzE',
  display_name: 'Townsquare',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-townsquare',
  position_pct: {
    "x": 71,
    "y": 50
  },
  position_pct_alt: undefined
}, {
  author: AUTHORS_BY_NAME['Thomas Stoop'],
  source: 'https://www.artstation.com/artwork/B0wk6',
  display_name: 'Weeping Owls',
  keywords: [''],
  css_class: 'tbrpg⋄bg-image⁚thomas_stoop-weeping_owls',
  position_pct: {
    "x": 60,
    "y": 50
  },
  position_pct_alt: undefined
}];
exports.ELEMENTS = ELEMENTS;
},{}],"Q3ls":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_artwork_legend = void 0;

var RichText = __importStar(require("@offirmo-private/rich-text-format"));

function render_artwork_legend(artwork) {
  var author = artwork.author,
      source = artwork.source,
      display_name = artwork.display_name,
      keywords = artwork.keywords,
      position_pct = artwork.position_pct;
  var artwork_name = RichText.inline_fragment().pushText('« ').pushText(display_name.endsWith('Ii') ? display_name.slice(0, -1) + 'I' : display_name).pushText(' »').addHints({
    href: source
  }).done();
  var author_name = RichText.inline_fragment().pushText(author.display_name).addHints({
    href: author.url
  }).done();
  var builder = RichText.inline_fragment().pushNode(artwork_name).pushLineBreak().pushText(' by ').pushNode(author_name);
  var has_errors = false;
  var errors = RichText.inline_fragment();

  if (source.length < 12) {
    has_errors = true;
    errors.pushLineBreak().pushText('💥  missing source!');
  }

  if (position_pct.x === 50 && position_pct.y === 50) {
    has_errors = true;
    errors.pushLineBreak().pushText('💥  not aligned!');
  }

  if (has_errors) builder.pushNode(errors.done());
  return builder.done();
}

exports.render_artwork_legend = render_artwork_legend;
},{"@offirmo-private/rich-text-format":"aepI"}],"ZGON":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

__exportStar(require("./consts"), exports);

__exportStar(require("./types"), exports);

__exportStar(require("./data"), exports);

__exportStar(require("./utils"), exports);
},{"./consts":"VcKO","./types":"qz7W","./data":"NBeB","./utils":"Q3ls"}],"yu62":[function(require,module,exports) {

},{"./rsrc/license-pending/Ahmed_Maihope/ahmed-maihope-forgotten-temple.jpg":[["ahmed-maihope-forgotten-temple.bcdd27ad.jpg","zty4"],"zty4"],"./rsrc/license-pending/Ahmed_Maihope/ahmed-maihope-space-station.jpg":[["ahmed-maihope-space-station.72446de8.jpg","qhwQ"],"qhwQ"],"./rsrc/license-pending/Ahmed_Maihope/ahmed-maihope-the-apple-thief.jpg":[["ahmed-maihope-the-apple-thief.a88c61ed.jpg","imlo"],"imlo"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-ar-nat-village.jpg":[["andreas-rocha-ar-nat-village.85c4c387.jpg","bPYD"],"bPYD"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-at-the-gate.jpg":[["andreas-rocha-at-the-gate.bd68e95e.jpg","rDGI"],"rDGI"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-blue-valley.jpg":[["andreas-rocha-blue-valley.c18e9699.jpg","fHlP"],"fHlP"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-castlerock.jpg":[["andreas-rocha-castlerock.f437356b.jpg","QVly"],"QVly"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-city-gates.jpg":[["andreas-rocha-city-gates.fd5f8049.jpg","Qmag"],"Qmag"],"./rsrc/license-pending/Andreas_Rocha/andreas_rocha-Cold_March.jpg":[["andreas_rocha-Cold_March.ca1ee6c2.jpg","h3kd"],"h3kd"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-dangerous_roads.jpg":[["andreas-rocha-dangerous_roads.9eac2214.jpg","Xnom"],"Xnom"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-dark_times.jpg":[["andreas-rocha-dark_times.543b7cbc.jpg","CVmH"],"CVmH"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-deep_in_the_jungle.jpg":[["andreas-rocha-deep_in_the_jungle.3d3feba8.jpg","hiMW"],"hiMW"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-deep_in_the_woods.jpg":[["andreas-rocha-deep_in_the_woods.7cc92208.jpg","EEt2"],"EEt2"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-deep_shadows.jpg":[["andreas-rocha-deep_shadows.cee325ad.jpg","vfuP"],"vfuP"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-dome_city.jpg":[["andreas-rocha-dome_city.b752eeda.jpg","OllG"],"OllG"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-dragons_pass.jpg":[["andreas-rocha-dragons_pass.3ca39637.jpg","JTEQ"],"JTEQ"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-enchanted_forest_ii.jpg":[["andreas-rocha-enchanted_forest_ii.3e8be6cb.jpg","mFyM"],"mFyM"],"./rsrc/license-pending/Andreas_Rocha/fields_of_gold-andreas_rocha.jpg":[["fields_of_gold-andreas_rocha.3d80fe28.jpg","dnro"],"dnro"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-fiery_path.jpg":[["andreas-rocha-fiery_path.2b18abfd.jpg","r3x2"],"r3x2"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-first_rays.jpg":[["andreas-rocha-first_rays.54659140.jpg","RPno"],"RPno"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-forbidden_kingdom.jpg":[["andreas-rocha-forbidden_kingdom.2cb3951a.jpg","srRX"],"srRX"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-foundation.jpg":[["andreas-rocha-foundation.f81362f6.jpg","cnAV"],"cnAV"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-hidden_treasures.jpg":[["andreas-rocha-hidden_treasures.70ecf035.jpg","euCZ"],"euCZ"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-homage_to_sintra.jpg":[["andreas-rocha-homage_to_sintra.7f7903fa.jpg","PVj7"],"PVj7"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-humble_abode.jpg":[["andreas-rocha-humble_abode.b4049aef.jpg","dVX6"],"dVX6"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-ice_temple.jpg":[["andreas-rocha-ice_temple.48adbbe9.jpg","D27N"],"D27N"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-light_forest.jpg":[["andreas-rocha-light_forest.6bfad1cb.jpg","zqTN"],"zqTN"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-magic_hour.jpg":[["andreas-rocha-magic_hour.499aae3e.jpg","UJPG"],"UJPG"],"./rsrc/license-pending/Andreas_Rocha/andreas_rocha-Morning_Arrival.jpg":[["andreas_rocha-Morning_Arrival.3d1d070d.jpg","d2j3"],"d2j3"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-mountain_pass.jpg":[["andreas-rocha-mountain_pass.60b760e5.jpg","zMIJ"],"zMIJ"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-old_forest.jpg":[["andreas-rocha-old_forest.856b3c25.jpg","h9Ae"],"h9Ae"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-path_of_wisdom.jpg":[["andreas-rocha-path_of_wisdom.11f6b648.jpg","s5Lr"],"s5Lr"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-peace_of_mind.jpg":[["andreas-rocha-peace_of_mind.18a467d5.jpg","c73E"],"c73E"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-safe_haven.jpg":[["andreas-rocha-safe_haven.61cded73.jpg","McSY"],"McSY"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-soul_searching.jpg":[["andreas-rocha-soul_searching.9a8781ec.jpg","XHBe"],"XHBe"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-spring_is_coming.jpg":[["andreas-rocha-spring_is_coming.d00e1163.jpg","a6KP"],"a6KP"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-student_vs_teacher.jpg":[["andreas-rocha-student_vs_teacher.40820766.jpg","Bw49"],"Bw49"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_citadel_ii.jpg":[["andreas-rocha-the_citadel_ii.d94a0c87.jpg","VM5U"],"VM5U"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_dark_citadel.jpg":[["andreas-rocha-the_dark_citadel.e39aa1f8.jpg","wca8"],"wca8"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_emissary.jpg":[["andreas-rocha-the_emissary.e38d2b8c.jpg","Nzuu"],"Nzuu"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_fiery_forest.jpg":[["andreas-rocha-the_fiery_forest.d0807d7a.jpg","MguI"],"MguI"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_gathering.jpg":[["andreas-rocha-the_gathering.4db9ef15.jpg","h7ga"],"h7ga"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_hidden_village_ii.jpg":[["andreas-rocha-the_hidden_village_ii.9fa28656.jpg","DIUX"],"DIUX"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_last_fortress.jpg":[["andreas-rocha-the_last_fortress.4d31752f.jpg","aSir"],"aSir"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_message.jpg":[["andreas-rocha-the_message.bb5b4e8d.jpg","MVwc"],"MVwc"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-the_treehouse.jpg":[["andreas-rocha-the_treehouse.b1bac645.jpg","ZS4u"],"ZS4u"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-unnamed_2.jpg":[["andreas-rocha-unnamed_2.55d85592.jpg","rxSk"],"rxSk"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-warm_mist.jpg":[["andreas-rocha-warm_mist.c0d6db38.jpg","MR4D"],"MR4D"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-waterfall_memories.jpg":[["andreas-rocha-waterfall_memories.19b4f65d.jpg","fkRj"],"fkRj"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-we_found_this_amazing_place.jpg":[["andreas-rocha-we_found_this_amazing_place.f082529b.jpg","cRv9"],"cRv9"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-winter_lights.jpg":[["andreas-rocha-winter_lights.56301c35.jpg","R4c2"],"R4c2"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-winter_travellers.jpg":[["andreas-rocha-winter_travellers.63db4076.jpg","sC8t"],"sC8t"],"./rsrc/license-pending/Andreas_Rocha/andreas-rocha-wizards_tower.jpg":[["andreas-rocha-wizards_tower.c5841e12.jpg","BQXg"],"BQXg"],"./rsrc/license-pending/Cyril_Labranche/cyril-labranche-pikes.jpg":[["cyril-labranche-pikes.a8210d4d.jpg","vfVA"],"vfVA"],"./rsrc/license-pending/Dan_Zhao/a_cabin_in_the_cave-dan_zhao.jpg":[["a_cabin_in_the_cave-dan_zhao.90330273.jpg","T03p"],"T03p"],"./rsrc/license-pending/Dan_Zhao/a_practice-dan_zhao.jpg":[["a_practice-dan_zhao.f79128e4.jpg","GEdn"],"GEdn"],"./rsrc/license-pending/Dan_Zhao/ancient_castle-dan_zhao.jpg":[["ancient_castle-dan_zhao.9ecc1e2d.jpg","jGwB"],"jGwB"],"./rsrc/license-pending/Dan_Zhao/barbacan-dan_zhao.jpg":[["barbacan-dan_zhao.f22d5aae.jpg","i19J"],"i19J"],"./rsrc/license-pending/Dan_Zhao/canyon-dan_zhao.jpg":[["canyon-dan_zhao.46a09d57.jpg","cqDJ"],"cqDJ"],"./rsrc/license-pending/Dan_Zhao/secluded_valley-dan_zhao.jpg":[["secluded_valley-dan_zhao.25d1dfcc.jpg","QKXE"],"QKXE"],"./rsrc/license-pending/Daniel_Alekow/daniel-alekow-albion-lymhurst.jpg":[["daniel-alekow-albion-lymhurst.0f0cdfb9.jpg","fN4w"],"fN4w"],"./rsrc/license-pending/Daniel_Alekow/daniel-alekow-inside-caerleon.jpg":[["daniel-alekow-inside-caerleon.bb5b0de8.jpg","fiKH"],"fiKH"],"./rsrc/license-pending/Dmitry_Kremiansky/dmitry-kremiansky-a_secret_place_alps.jpg":[["dmitry-kremiansky-a_secret_place_alps.8b158240.jpg","jWB5"],"jWB5"],"./rsrc/license-pending/Dmitry_Kremiansky/dmitry-kremiansky-ships_and_seagulls.jpg":[["dmitry-kremiansky-ships_and_seagulls.f5edf6a7.jpg","hU8g"],"hU8g"],"./rsrc/license-pending/Dmitry_Kremiansky/dmitry-kremiansky-thames.jpg":[["dmitry-kremiansky-thames.4e30dae6.jpg","VzBP"],"VzBP"],"./rsrc/license-pending/Dmitry_Kremiansky/dmitry-kremiansky-victorian-street.jpg":[["dmitry-kremiansky-victorian-street.d8434639.jpg","o4JB"],"o4JB"],"./rsrc/license-pending/G_Xy/g-xy-cloud_city.jpg":[["g-xy-cloud_city.ea9adeb2.jpg","W1n7"],"W1n7"],"./rsrc/license-pending/G_Xy/g-xy-fog_city.jpg":[["g-xy-fog_city.08b5dbf6.jpg","wIQW"],"wIQW"],"./rsrc/license-pending/G_Xy/g-xy-out-of-control.jpg":[["g-xy-out-of-control.99e021df.jpg","GkOl"],"GkOl"],"./rsrc/license-pending/G_Xy/g-xy-shuwu.jpg":[["g-xy-shuwu.bf3883b2.jpg","fvjj"],"fvjj"],"./rsrc/license-pending/Il_Su_Ko/il-su-ko-Old-concept-draft-canceled.jpg":[["il-su-ko-Old-concept-draft-canceled.94df61f5.jpg","ny98"],"ny98"],"./rsrc/license-pending/Ivan_Laliashvili/ivan-laliashvili-the_return.jpg":[["ivan-laliashvili-the_return.8d125fe7.jpg","aZ0N"],"aZ0N"],"./rsrc/license-pending/Ivan_Laliashvili/Ivan-Laliashvili-the_return_building_a_castle.jpg":[["Ivan-Laliashvili-the_return_building_a_castle.90ff2da7.jpg","qi0Q"],"qi0Q"],"./rsrc/license-pending/Jaecheol_Park/bank.jpg":[["bank.5b7067fa.jpg","rCzA"],"rCzA"],"./rsrc/license-pending/Jaecheol_Park/bl-f.jpg":[["bl-f.f2226685.jpg","ZCHu"],"ZCHu"],"./rsrc/license-pending/Jaecheol_Park/castle.jpg":[["castle.fa7fdbd1.jpg","IKXY"],"IKXY"],"./rsrc/license-pending/Jaecheol_Park/cave-waterfall.jpg":[["cave-waterfall.baa8caee.jpg","z3eZ"],"z3eZ"],"./rsrc/license-pending/Jaecheol_Park/city-sea.jpg":[["city-sea.d5c1a8bd.jpg","WNdc"],"WNdc"],"./rsrc/license-pending/Jaecheol_Park/forest-b-r.jpg":[["forest-b-r.b048e697.jpg","o1iR"],"o1iR"],"./rsrc/license-pending/Jaecheol_Park/forest-gr-up.jpg":[["forest-gr-up.a40ef545.jpg","uzYW"],"uzYW"],"./rsrc/license-pending/Jaecheol_Park/forest-m-t.jpg":[["forest-m-t.7f50f390.jpg","ARoY"],"ARoY"],"./rsrc/license-pending/Jaecheol_Park/forest-night-waterfall.jpg":[["forest-night-waterfall.c2ef3db0.jpg","oAOv"],"oAOv"],"./rsrc/license-pending/Jaecheol_Park/forest-waterfall.jpg":[["forest-waterfall.dfee72f0.jpg","ZYGa"],"ZYGa"],"./rsrc/license-pending/Jaecheol_Park/sea-r-w.jpg":[["sea-r-w.1f006df0.jpg","a3Kq"],"a3Kq"],"./rsrc/license-pending/Jaecheol_Park/shop.jpg":[["shop.f90cbea6.jpg","BYtv"],"BYtv"],"./rsrc/license-pending/Jorge_Miguel_Jacinto/civilization.jpg":[["civilization.0c72e3a2.jpg","Fg55"],"Fg55"],"./rsrc/license-pending/Jorge_Miguel_Jacinto/half_remembered_ruins.jpg":[["half_remembered_ruins.82bbe0bb.jpg","Wd2A"],"Wd2A"],"./rsrc/license-pending/Julius_Camenzind/snowcapped_environment-julius_camenzind.jpg":[["snowcapped_environment-julius_camenzind.7ceb4f58.jpg","PvId"],"PvId"],"./rsrc/license-pending/Raphael_Lacoste/gnomon-raphael_lacoste.jpg":[["gnomon-raphael_lacoste.f097b706.jpg","My72"],"My72"],"./rsrc/license-pending/Raphael_Lacoste/journey_to_the_center_of_the_earth-raphael_lacoste.jpg":[["journey_to_the_center_of_the_earth-raphael_lacoste.661012d4.jpg","XGA6"],"XGA6"],"./rsrc/license-pending/Raphael_Lacoste/jungle-raphael_lacoste.jpg":[["jungle-raphael_lacoste.7990f9b8.jpg","pGFX"],"pGFX"],"./rsrc/license-pending/Raphael_Lacoste/kvaslr_fortress-raphael_lacoste.jpg":[["kvaslr_fortress-raphael_lacoste.02cbba15.jpg","Nw1r"],"Nw1r"],"./rsrc/license-pending/Raphael_Lacoste/lost_island-raphael_lacoste.jpg":[["lost_island-raphael_lacoste.6fd64234.jpg","Q3Ao"],"Q3Ao"],"./rsrc/license-pending/Raphael_Lacoste/path_to_the_gothic_choir-raphael_lacoste.jpg":[["path_to_the_gothic_choir-raphael_lacoste.4f0d8b55.jpg","keut"],"keut"],"./rsrc/license-pending/Raphael_Lacoste/return_of_the_knight-raphael_lacoste.jpg":[["return_of_the_knight-raphael_lacoste.efcd0da7.jpg","HRcr"],"HRcr"],"./rsrc/license-pending/Raphael_Lacoste/ride_at_dusk-raphael_lacoste.jpg":[["ride_at_dusk-raphael_lacoste.2a5c2654.jpg","y4bf"],"y4bf"],"./rsrc/license-pending/Raphael_Lacoste/santa_lucia_arrival-raphael_lacoste.jpg":[["santa_lucia_arrival-raphael_lacoste.ff43a909.jpg","LIK1"],"LIK1"],"./rsrc/license-pending/Raphael_Lacoste/raphael-lacoste-sentinels.jpg":[["raphael-lacoste-sentinels.76727229.jpg","hKFn"],"hKFn"],"./rsrc/license-pending/Raphael_Lacoste/Terry_Goodkind_French_Cover-raphael_lacoste.jpg":[["Terry_Goodkind_French_Cover-raphael_lacoste.15276973.jpg","LPoL"],"LPoL"],"./rsrc/license-pending/Raphael_Lacoste/the_coast-raphael_lacoste.jpg":[["the_coast-raphael_lacoste.111e2c52.jpg","zLan"],"zLan"],"./rsrc/license-pending/Raphael_Lacoste/the_encounter-raphael_lacoste.jpg":[["the_encounter-raphael_lacoste.79686746.jpg","BeiS"],"BeiS"],"./rsrc/license-pending/Raphael_Lacoste/the_journey-raphael_lacoste.jpg":[["the_journey-raphael_lacoste.5cdb9ad5.jpg","a7Yh"],"a7Yh"],"./rsrc/license-pending/Raphael_Lacoste/the_mangrove-raphael_lacoste.jpg":[["the_mangrove-raphael_lacoste.26c0962d.jpg","us1l"],"us1l"],"./rsrc/license-pending/Raphael_Lacoste/viking_ambush-raphael_lacoste.jpg":[["viking_ambush-raphael_lacoste.54afbb9d.jpg","wao7"],"wao7"],"./rsrc/license-pending/Robh_Ruppel/robh_ruppel-tangled_castle.jpg":[["robh_ruppel-tangled_castle.37cbe583.jpg","hfnP"],"hfnP"],"./rsrc/license-pending/Soma/soma-dragons-lair.jpg":[["soma-dragons-lair.0469ef00.jpg","SlaL"],"SlaL"],"./rsrc/license-pending/Soma/soma-dreamscape_practice_1.jpg":[["soma-dreamscape_practice_1.d8e3491a.jpg","V3ux"],"V3ux"],"./rsrc/license-pending/Soma/soma-dreamscape_practice_2.jpg":[["soma-dreamscape_practice_2.af3fc6d4.jpg","PGkx"],"PGkx"],"./rsrc/license-pending/Soma/soma-durur_mountain.jpg":[["soma-durur_mountain.4bc497ce.jpg","oA6y"],"oA6y"],"./rsrc/license-pending/Soma/soma-encounter.jpg":[["soma-encounter.9510dec9.jpg","qxrL"],"qxrL"],"./rsrc/license-pending/Soma/soma-entrance.jpg":[["soma-entrance.8309deb3.jpg","BKvo"],"BKvo"],"./rsrc/license-pending/Soma/soma-fire_clouds.jpg":[["soma-fire_clouds.fcc3f458.jpg","bUUT"],"bUUT"],"./rsrc/license-pending/Soma/soma-mirath_towers.jpg":[["soma-mirath_towers.d66fa169.jpg","UIW8"],"UIW8"],"./rsrc/license-pending/Soma/soma-mountain_valley.jpg":[["soma-mountain_valley.a81ce324.jpg","iCt9"],"iCt9"],"./rsrc/license-pending/Soma/soma-on_a_journey_2.jpg":[["soma-on_a_journey_2.58e0278e.jpg","ya0v"],"ya0v"],"./rsrc/license-pending/Soma/soma-red-dragon.jpg":[["soma-red-dragon.890327db.jpg","mCTv"],"mCTv"],"./rsrc/license-pending/Soma/soma-taoro_landscape.jpg":[["soma-taoro_landscape.c901d7b1.jpg","o6UQ"],"o6UQ"],"./rsrc/license-pending/Soma/soma-temple_ruins.jpg":[["soma-temple_ruins.a584361e.jpg","DSTf"],"DSTf"],"./rsrc/license-pending/Soma/soma-the_messenger.jpg":[["soma-the_messenger.e95c9b02.jpg","Bk05"],"Bk05"],"./rsrc/license-pending/Soma/soma-the_source.jpg":[["soma-the_source.764df7d1.jpg","y0K7"],"y0K7"],"./rsrc/license-pending/Soma/soma-voyage_home.jpg":[["soma-voyage_home.27155f92.jpg","PGab"],"PGab"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-elysium.jpg":[["thomas-stoop-elysium.26586762.jpg","qINl"],"qINl"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-first_gate.jpg":[["thomas-stoop-first_gate.74426b64.jpg","kz5V"],"kz5V"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-lighthouse.jpg":[["thomas-stoop-lighthouse.24a165f3.jpg","NFXe"],"NFXe"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-otherside.jpg":[["thomas-stoop-otherside.1a1ca97d.jpg","oEp9"],"oEp9"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-pathway.jpg":[["thomas-stoop-pathway.7f4bcfbe.jpg","BwqZ"],"BwqZ"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-penthouse.jpg":[["thomas-stoop-penthouse.b5ac8ea1.jpg","JCse"],"JCse"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-snow_forest_1.jpg":[["thomas-stoop-snow_forest_1.7873b0ab.jpg","aQhN"],"aQhN"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-snow_forest_2.jpg":[["thomas-stoop-snow_forest_2.ee2e93d7.jpg","VrZg"],"VrZg"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-snow_forest_3.jpg":[["thomas-stoop-snow_forest_3.a97f792e.jpg","zYFr"],"zYFr"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-surya.jpg":[["thomas-stoop-surya.fb8301e1.jpg","u2rF"],"u2rF"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-time_portal.jpg":[["thomas-stoop-time_portal.991fe35e.jpg","nvaT"],"nvaT"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-townsquare.jpg":[["thomas-stoop-townsquare.bdcbe6ae.jpg","lSES"],"lSES"],"./rsrc/license-pending/Thomas_Stoop/thomas-stoop-weeping_owls.jpg":[["thomas-stoop-weeping_owls.ba6426c6.jpg","O6Lw"],"O6Lw"]}],"c1AJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _rsrcBackgrounds = require("@oh-my-rpg/rsrc-backgrounds");

var _richTextToReact = _interopRequireDefault(require("../../../../services/rich-text-to-react"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const SceneryView = /*#__PURE__*/React.memo(function SceneryView({
  bg,
  next_bg
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 SceneryView');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "omr\u22C4full-size-fixed-layer omr\u22C4bg-image\u205Atiled-marble_black",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: `omr⋄full-size-background-layer o⋄bg⁚cover ${bg.css_class}`,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "scenery__legend",
        children: (0, _richTextToReact.default)((0, _rsrcBackgrounds.render_artwork_legend)(bg))
      })
    }, "background-picture"), "/* TODO improve loading */", /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: `scenery__prefetch ${next_bg.css_class}`
    }, "next-background-picture")]
  }, "background");
});
var _default = SceneryView;
exports.default = _default;
},{"react":"dmLA","@oh-my-rpg/rsrc-backgrounds":"ZGON","../../../../services/rich-text-to-react":"SetX","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"rgGP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _rsrcBackgrounds = require("@oh-my-rpg/rsrc-backgrounds");

require("@oh-my-rpg/rsrc-backgrounds/src/index.css");

var _context = require("../../../../context");

var _gameInstanceBrowser = _interopRequireDefault(require("../../../../services/game-instance-browser"));

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const FILTERED_ELEMENTS = _rsrcBackgrounds.ELEMENTS; //	.filter(({display_name}) => display_name.toLowerCase().startsWith('entrance'))

class Scenery extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render_view", ({
      u_state
    }) => {
      const {
        good_play_count
      } = (0, _gameInstanceBrowser.default)().queries.get_sub_state('progress').statistics;
      const bg = FILTERED_ELEMENTS[good_play_count % FILTERED_ELEMENTS.length];
      const next_bg = FILTERED_ELEMENTS[(good_play_count + 1) % FILTERED_ELEMENTS.length];
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
        bg: bg,
        next_bg: next_bg
      });
    });
  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.UStateListenerAndProvider, {
      render: this.render_view
    });
  }

}

_defineProperty(Scenery, "propTypes", {});

var _default = Scenery;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@oh-my-rpg/rsrc-backgrounds":"ZGON","@oh-my-rpg/rsrc-backgrounds/src/index.css":"yu62","../../../../context":"DUKA","../../../../services/game-instance-browser":"r81V","./component":"c1AJ","react/jsx-runtime":"qEpl"}],"iA75":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"rgGP"}],"DMwT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _explore = _interopRequireDefault(require("../../panels/explore"));

var _character = _interopRequireDefault(require("../../panels/character"));

var _inventory = _interopRequireDefault(require("../../panels/inventory"));

var _achievements = _interopRequireDefault(require("../../panels/achievements"));

var _social = _interopRequireDefault(require("../../panels/social"));

var _scenery = _interopRequireDefault(require("./scenery"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const MODE_TO_PANEL = {
  'explore': /*#__PURE__*/(0, _jsxRuntime.jsx)(_explore.default, {}),
  'character': /*#__PURE__*/(0, _jsxRuntime.jsx)(_character.default, {}),
  'inventory': /*#__PURE__*/(0, _jsxRuntime.jsx)(_inventory.default, {}),
  'achievements': /*#__PURE__*/(0, _jsxRuntime.jsx)(_achievements.default, {}),
  'social': /*#__PURE__*/(0, _jsxRuntime.jsx)(_social.default, {})
};
const MainAreaView = /*#__PURE__*/React.memo(function MainAreaView({
  mode
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 MainAreaView');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "omr\u22C4content-area o\u22C4top-container main-area omr\u22C4cursor\u205Asword",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_scenery.default, {}), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "o\u22C4position\uA60Crelative o\u22C4top-container o\u22C4centered-article omr\u22C4content-area--inner",
      children: MODE_TO_PANEL[mode] || /*#__PURE__*/(0, _jsxRuntime.jsx)(_explore.default, {})
    }, "content-area")]
  });
});
var _default = MainAreaView;
exports.default = _default;
},{"react":"dmLA","../../panels/explore":"H070","../../panels/character":"wrr7","../../panels/inventory":"G7bK","../../panels/achievements":"onSu","../../panels/social":"kqE5","./scenery":"iA75","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"ZZBA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBrowserReact = require("@tbrpg/ui--browser--react");

var _context = require("../../../context");

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _notifier = _interopRequireDefault(require("../notifier"));

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function render_c2(app_state) {
  //console.log('🔄 OMR-UI immersion c2')
  const {
    mode
  } = (0, _gameInstanceBrowser.default)().view.get();
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
    mode: mode
  });
}

function render_c1(omr) {
  //console.log('🔄 OMR-UI immersion c1')
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_react.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_notifier.default, {
      enqueueNotification: omr.enqueueNotification
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.AppStateContext.Consumer, {
      children: render_c2
    })]
  });
}

var _default = () => /*#__PURE__*/(0, _jsxRuntime.jsx)(_uiBrowserReact.OhMyRPGUIContext.Consumer, {
  children: render_c1
});

exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@tbrpg/ui--browser--react":"Ul2O","../../../context":"DUKA","../../../services/game-instance-browser":"r81V","../notifier":"suZ1","./component":"DMwT","react/jsx-runtime":"qEpl"}],"fSvH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"ZZBA"}],"SSF3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _gameInstanceBrowser = require("../../../services/game-instance-browser");

var _user_account = require("../../../services/user_account");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class NetlifyLoggedIndicator extends _react.Component {
  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 NetlifyIdentity');
    const {
      state,
      user,
      on_click_on_signin_button,
      on_request_logout
    } = this.props;
    let content = null;

    switch (state) {
      case _gameInstanceBrowser.ACCOUNT_STATE.waiting_for_lib:
      /* fallthrough */

      case _gameInstanceBrowser.ACCOUNT_STATE.pending:
        content = /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "blinking",
          children: "..."
        });
        break;

      case _gameInstanceBrowser.ACCOUNT_STATE.not_logged_in:
        content = /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: on_click_on_signin_button,
          children: "Sign in / sign up..."
        });
        break;

      case _gameInstanceBrowser.ACCOUNT_STATE.logged_in:
        content = /*#__PURE__*/(0, _jsxRuntime.jsxs)(_react.Fragment, {
          children: ["Logged in as: ", (0, _user_account.get_netlify_user_name)(user) || '(pending…)', /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: on_request_logout,
            children: "log out"
          })]
        });
        break;

      case _gameInstanceBrowser.ACCOUNT_STATE.error:
      /* fallthrough */

      default:
        content = /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "(login error. Disable ad blocker?)"
        });
        break;
    }

    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "netlify-widget",
      children: content
    });
  }

}

exports.default = NetlifyLoggedIndicator;

_defineProperty(NetlifyLoggedIndicator, "propTypes", {
  state: _propTypes.default.string.isRequired,
  user: _propTypes.default.object,
  on_click_on_signin_button: _propTypes.default.func.isRequired,
  on_request_logout: _propTypes.default.func.isRequired
});
},{"react":"dmLA","prop-types":"X9bF","../../../services/game-instance-browser":"r81V","../../../services/user_account":"S34u","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"kL6H":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = NetlifyIndicator;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _user_account = require("../../../services/user_account");

var _context = require("../../../context");

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function on_click_on_signin_button() {
  (0, _user_account.open_ui)();
}

function on_request_logout() {
  (0, _user_account.log_out)();
}

function NetlifyIndicator() {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.AppStateContext.Consumer, {
    children: app_state => {
      const {
        login_state,
        logged_in_user
      } = (0, _gameInstanceBrowser.default)().view.get();
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
        state: login_state,
        user: logged_in_user,
        on_click_on_signin_button: on_click_on_signin_button,
        on_request_logout: on_request_logout
      });
    }
  });
}
},{"react":"dmLA","prop-types":"X9bF","../../../services/game-instance-browser":"r81V","../../../services/user_account":"S34u","../../../context":"DUKA","./component":"SSF3","react/jsx-runtime":"qEpl"}],"WfGG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"kL6H"}],"JAib":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render_meta = render_meta;
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _xoff = require("@offirmo-private/xoff");

var RichText = _interopRequireWildcard(require("@offirmo-private/rich-text-format"));

var _marketingRsrc = require("@offirmo-private/marketing-rsrc");

var _flux = require("@tbrpg/flux");

var _consts = require("@offirmo-private/soft-execution-context-browser/src/consts");

var _build = require("../../../build.json");

var _netlify = _interopRequireDefault(require("../../misc/netlify"));

var _chatInterface = require("../../utils/chat-interface");

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

require("../index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function* gen_next_step(navigate_to_savegame_editor) {
  const game_instance = (0, _gameInstanceBrowser.default)();

  do {
    const steps = [];
    const engagement_msg = game_instance.queries.get_oldest_pending_flow_engagement();

    if (engagement_msg) {
      const {
        uid,
        $doc
      } = engagement_msg;
      steps.push({
        type: 'simple_message',
        msg_main: (0, _richTextToReact.default)($doc)
      });
      game_instance.commands.acknowledge_engagement_msg_seen(uid);
    } else {
      const view_state = game_instance.view.get();

      if (view_state.redeeming_code) {
        steps.push({
          type: 'ask_for_string',
          msg_main: 'Please enter a code…',
          msgg_as_user: value => value ? `Let's redeem "${value}".` : 'Nevermind.',
          msgg_acknowledge: code => code ? `Redeeming the code "${code}"...` : 'Maybe another time.',
          callback: value => {
            value = value.toLowerCase().trim();
            console.log({
              value,
              type: typeof value
            });

            if (value) {
              if (value === 'dev') {
                // dev mode
                localStorage.setItem(_consts.LS_KEYS.dev_mode, true);
                (0, _xoff.execute_from_top)(() => window.location.reload());
              } else if (value === 'nodev') {
                // dev mode
                localStorage.removeItem(_consts.LS_KEYS.dev_mode);
                (0, _xoff.execute_from_top)(() => window.location.reload());
              } else game_instance.commands.attempt_to_redeem_code(value);
            }

            game_instance.view.set_state(() => ({
              redeeming_code: false
            }));
          }
        });
      } else {
        steps.push({
          msg_main: 'What do you want to do?',
          callback: url => (window.open(url, '_blank') || {
            /* can fail if popup blocking for ex. */
          }).opener = null,
          choices: [{
            msg_cta: '👍 Like on social medias',
            value: _marketingRsrc.THE_BORING_RPG.aggregated_links_url,
            msgg_as_user: () => 'You’re awesome…',
            msgg_acknowledge: url => /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
              children: ["Now opening ", /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
                href: url,
                target: "_blank",
                children: url
              })]
            })
          }, {
            msg_cta: 'Enter a code',
            value: 'redeem',
            callback: () => {
              game_instance.view.set_state(() => ({
                redeeming_code: true
              }));
            }
          }, {
            msg_cta: 'Report a bug 🐞',
            value: _marketingRsrc.THE_BORING_RPG.issues_url,
            msgg_as_user: () => 'There is this annoying bug…',
            msgg_acknowledge: url => /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
              children: ["Now opening ", /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
                href: url,
                target: "_blank",
                children: url
              })]
            })
          }, {
            msg_cta: '⚙ Save/load/reset your savegame',
            value: 'save',
            msgg_as_user: () => 'Let’s mess with my savegame…',
            callback: async () => {
              navigate_to_savegame_editor(); // trick: we'll navigate, causing this chat to be unmounted
              // which is hard to sync. Delay resolution so that
              // the chat doesn't try to advance until we're already unmounted.
              // TODO improve further (intercept return of this func?)

              return new Promise(resolve => setTimeout(resolve, 2000));
            }
          }, {
            msg_cta: 'Reload page ↻',
            value: 'reload',
            msgg_as_user: () => 'Reload the page.',
            msgg_acknowledge: () => 'Reloading...',
            callback: async () => (0, _xoff.get_top_ish_window)().location.reload()
          }]
        });
      }
    }

    yield* steps;
  } while (true);
}

function render_meta(statistics) {
  const {
    CHANNEL,
    ENV
  } = (0, _softExecutionContext.getRootSEC)().getInjectedDependencies();
  const $doc_list_builder = RichText.unordered_list();
  $doc_list_builder.pushRawNode(RichText.inline_fragment().pushText(`Play count: ${statistics.good_play_count}`).done(), '01-playcount');
  $doc_list_builder.pushRawNode(RichText.inline_fragment().pushText(`Game version: ${(_flux.NUMERIC_VERSION * 100).toFixed(2)}`).done(), '02-version');
  $doc_list_builder.pushRawNode(RichText.inline_fragment().pushText(`Build date (UTC): ${_build.BUILD_DATE}`).done(), '03-builddate');
  $doc_list_builder.pushRawNode(RichText.inline_fragment().pushText(`Release channel: ${CHANNEL}`).done(), '04-channel');
  $doc_list_builder.pushRawNode(RichText.inline_fragment().pushText(`Exec env: ${ENV}`).done(), '05-env');
  $doc_list_builder.pushRawNode(RichText.inline_fragment().pushText(`Savegame version: ${_flux.SCHEMA_VERSION}`).done(), '07-savegame');
  const $doc = RichText.inline_fragment().pushNode(RichText.heading().pushText('Client infos:').done(), 'header').pushNode($doc_list_builder.done(), 'list').done();
  return $doc;
}

const MetaPanelViewM = /*#__PURE__*/React.memo(function MetaPanelView({
  statistics,
  navigate_to_savegame_editor
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 MetaPanelView', {
    statistics,
    navigate_to_savegame_editor
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "tbrpg-panel o\u22C4flex--column",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}), /*#__PURE__*/(0, _jsxRuntime.jsx)(_netlify.default, {}), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "panel-top-content o\u22C4flex-element--nogrow",
      children: (0, _richTextToReact.default)(render_meta(statistics))
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "o\u22C4flex-element--grow o\u22C4overflow-y\u205Aauto",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
        name: 'chat:meta',
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_chatInterface.Chat, {
          gen_next_step: gen_next_step(navigate_to_savegame_editor)
        })
      })
    })]
  });
});
var _default = MetaPanelViewM;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/xoff":"lQpO","@offirmo-private/rich-text-format":"aepI","@offirmo-private/marketing-rsrc":"Fure","@tbrpg/flux":"kQ36","@offirmo-private/soft-execution-context-browser/src/consts":"TqJU","../../../build.json":"TByb","../../misc/netlify":"WfGG","../../utils/chat-interface":"fxyp","../../../services/rich-text-to-react":"SetX","@offirmo-private/react-error-boundary":"UTEF","../../../services/game-instance-browser":"r81V","../index.css":"THnX","react/jsx-runtime":"qEpl"}],"RYY1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouter = require("react-router");

var _context = require("../../../context");

var _routes = require("../../../services/routes");

var _component = _interopRequireDefault(require("./component"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class MetaPanelC1 extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "navigate_to_savegame_editor", () => {
      const {
        history
      } = this.props;
      history.push(_routes.ROUTES.savegame);
    });

    _defineProperty(this, "render_view", ({
      u_state
    }) => {
      //console.log('🔄 MetaPanelC1.render_view')
      const {
        statistics
      } = (0, _gameInstanceBrowser.default)().queries.get_sub_state('progress');
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
        statistics: statistics,
        navigate_to_savegame_editor: this.navigate_to_savegame_editor
      });
    });
  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.UStateListenerAndProvider, {
      render: this.render_view
    });
  }

}

_defineProperty(MetaPanelC1, "propTypes", {
  history: _propTypes.default.object.isRequired
});

const MetaPanelC2 = (0, _reactRouter.withRouter)(MetaPanelC1);
var _default = MetaPanelC2;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","react-router":"AFYx","../../../context":"DUKA","../../../services/routes":"Mjxh","./component":"JAib","../../../services/game-instance-browser":"r81V","react/jsx-runtime":"qEpl"}],"cK44":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"RYY1"}],"xDCM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _meta = _interopRequireDefault(require("../../panels/meta"));

require("./index.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = _meta.default;
exports.default = _default;
},{"../../panels/meta":"cK44","./index.css":"THnX"}],"uY8u":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.restart = restart;
exports.toggle_visibility = toggle_visibility;

var _logger = _interopRequireDefault(require("../../../services/logger"));

require("./index.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const LIB = 'group chat SaaS (tlk.io)';
const CSS_CLASS__OPEN = 'group-chat-container--open';
const ELEMENT_ID = 'group-chat-container'; //const ELEMENT_ID = 'tlkio'
//const ERROR_ELEMENT_ID = 'tlkio'

/*
function report_error() {
	console.error(`${LIB}: error, timeout waiting for chat to load!`)

	const parent = document.getElementById(ELEMENT_ID)

	const error_elem = document.getElementById(ERROR_ELEMENT_ID) || document.createElement('div')
	error_elem.id = ERROR_ELEMENT_ID
	error_elem.innerHTML = `
			<div id="tlkio-error-msg">
		<p>
			Group chat failed to load.
		</p>
		<p>
			You may have to allow 3rd-party cookies for tlk.io by clicking the puzzle icon 🧩 in the address bar above ⇧.
		</p>
	</div>
		`

	parent.appendChild(error_elem)
}
*/

function restart({
  channel_id,
  nickname
}) {
  //console.log(`${LIB}: restart()`, {channel_id, nickname})
  if (!channel_id) throw new Error(`${LIB}: can’t set up chat without a channel id!`);
  const iframe_elem = document.getElementById(ELEMENT_ID);
  if (!iframe_elem) throw new Error(`${LIB}: can’t set up chat without a #${ELEMENT_ID} parent!`);
  /*
  setTimeout(() => {
  	// check if there is an iframe
  	// TODO
  	if (false)
  		report_error()
  }, 5000)
  */
  // the chat has a lower priority and the browser should not try to load it asap

  let optimization_delay_ms = iframe_elem.classList.contains(CSS_CLASS__OPEN) ? 0 : 1000;
  const current_src = new URL(iframe_elem.src);
  const new_src = current_src.origin + current_src.pathname + '?' + new URLSearchParams({
    id: channel_id,
    theme: 'night',
    //bg_color: 'yellow',
    nickname //css_overrides_url,

  });
  /*console.log(LIB, {
  	current_src,
  	new_src,
  })*/

  setTimeout(() => {
    //console.log(LIB + ' switching iframe src…')
    iframe_elem.src = new_src;
  }, optimization_delay_ms);
  /*
  iframe_elem = document.createElement('iframe')
  iframe_elem.id = ELEMENT_ID
  iframe_elem.className = 'o⋄top-container'
  iframe_elem.setAttribute('data-theme', 'theme--night')
  iframe_elem.setAttribute('data-channel', channel_id)
  if (nickname)
  	iframe_elem.setAttribute('data-nickname', nickname)
  	iframe_elem.appendChild(iframe_elem)
  	// add script
  // https://stackoverflow.com/a/26478358/587407
  const script_elem = document.createElement('script')
  script_elem.type = 'text/javascript'
  script_elem.async = true
  script_elem.importance = 'low'
  //script_elem.src = `${document.location.protocol || 'https:'}//tlk.io/embed.js`
  script_elem.src = 'https://tlk.io/embed.js'
  const scripts = document.getElementsByTagName('script')[0].parentNode
  scripts.appendChild(script_elem)*/
  //}, optimization_delay_ms)
}

function toggle_visibility() {
  //console.log(`${LIB}: toggle_visibility()`)
  const drawer = document.getElementById(ELEMENT_ID);
  if (drawer.classList.contains(CSS_CLASS__OPEN)) drawer.classList.remove(CSS_CLASS__OPEN);else drawer.classList.add(CSS_CLASS__OPEN);
}
},{"../../../services/logger":"qVJl","./index.css":"THnX"}],"HPyx":[function(require,module,exports) {
module.exports = "tbrpg_logo_512x98.ab82284e.png";
},{}],"ErSb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBrowserReact = _interopRequireDefault(require("@tbrpg/ui--browser--react"));

var _loader = _interopRequireDefault(require("../../services/loader"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../services/game-instance-browser"));

var _omrAbout = _interopRequireDefault(require("./omr-about"));

var _omrUniverseAnchor = _interopRequireDefault(require("./omr-universe-anchor"));

var _omrImmersion = _interopRequireDefault(require("./omr-immersion"));

var _omrHamburger = _interopRequireDefault(require("./omr-hamburger"));

var GroupChat = _interopRequireWildcard(require("../misc/group-chat-tlkio"));

require("./index.css");

var _tbrpg_logo_512x = _interopRequireDefault(require("./tbrpg_logo_512x98.png"));

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

//console.log({ logo })
const CHANNEL_ID = 'the-boring-rpg-reloaded';
const MODE_TO_INDEX = {
  'explore': 0,
  'inventory': 1,
  'character': 2,
  'achievements': 3,
  'social': 4
};

class OhMyRPGView extends _react.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      chat_nickname: 'anonymous'
    });

    _defineProperty(this, "bottomMenuItems", [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "omr\u22C4bottom-menu\u205Aicon icomoon-treasure-map",
      onClick: () => this.activate_panel('explore')
    }, "explore"), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "omr\u22C4bottom-menu\u205Aicon icomoon-cash",
      onClick: () => this.activate_panel('inventory')
    }, "inventory"), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "omr\u22C4bottom-menu\u205Aicon icomoon-battle-gear",
      onClick: () => this.activate_panel('character')
    }, "character"), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "omr\u22C4bottom-menu\u205Aicon icomoon-laurel-crown",
      onClick: () => this.activate_panel('achievements')
    }, "achievements"), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "omr\u22C4bottom-menu\u205Aicon icomoon-eagle-emblem",
      onClick: () => this.activate_panel('social')
    }, "social"), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: "omr\u22C4bottom-menu\u205Aicon icomoon-conversation",
      onClick: () => GroupChat.toggle_visibility()
    }, "chat")]);

    _defineProperty(this, "activate_panel", panel_id => {
      (0, _gameInstanceBrowser.default)().view.set_state(() => ({
        mode: panel_id
      }));
    });

    _defineProperty(this, "toggle_character_panel", () => {
      const {
        mode
      } = this.props;
      this.activate_panel(mode === 'explore' ? 'character' : 'explore');
    });
  }

  static getDerivedStateFromProps(nextProps, prevState) {
    const avatar_name = nextProps.avatar_name;
    if (avatar_name === prevState.chat_nickname) return null; // no update needed
    //console.info('omr-root: getDerivedStateFromProps: change detected', avatar_name)

    return {
      chat_nickname: avatar_name
    };
  }

  componentDidMount() {
    //console.log('omr-root: componentDidMount')
    GroupChat.restart({
      channel_id: CHANNEL_ID,
      nickname: this.state.chat_nickname
    });
  }

  componentDidUpdate(prevProps, prevState) {
    if (prevState.chat_nickname !== this.state.chat_nickname) {
      // TODO this doesn't seem to work
      console.info('omr-root: componentDidUpdate: restarting group chat...');
      GroupChat.restart({
        channel_id: CHANNEL_ID,
        nickname: this.state.chat_nickname
      });
    }
  }

  render() {
    const {
      mode
    } = this.props;
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 OhMyRPGView');
    (0, _loader.default)();
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_uiBrowserReact.default, {
      logo:
      /*#__PURE__*/
      // strange bug 'logo' in dev and '/logo' in prod
      //<img src={['.', ...logo.split('/')].filter(s => !!s).join('/')} height="100%" />
      (0, _jsxRuntime.jsx)("img", {
        src: _tbrpg_logo_512x.default,
        height: "100%"
      }),
      aboutContent: /*#__PURE__*/(0, _jsxRuntime.jsx)(_omrAbout.default, {}),
      universeAnchor: /*#__PURE__*/(0, _jsxRuntime.jsx)(_omrUniverseAnchor.default, {
        onClick: this.toggle_character_panel
      }),
      burgerPanelContent: /*#__PURE__*/(0, _jsxRuntime.jsx)(_omrHamburger.default, {}),
      bottomMenuItems: this.bottomMenuItems,
      bottomMarkerIndex: MODE_TO_INDEX[mode],
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_omrImmersion.default, {})
    });
  }

}

exports.default = OhMyRPGView;

_defineProperty(OhMyRPGView, "propTypes", {
  mode: _propTypes.default.string.isRequired,
  avatar_name: _propTypes.default.string.isRequired
});
},{"react":"dmLA","prop-types":"X9bF","@tbrpg/ui--browser--react":"Ul2O","../../services/loader":"ZIHH","../../services/game-instance-browser":"r81V","./omr-about":"Hk3A","./omr-universe-anchor":"aQyf","./omr-immersion":"fSvH","./omr-hamburger":"xDCM","../misc/group-chat-tlkio":"uY8u","./index.css":"THnX","./tbrpg_logo_512x98.png":"HPyx","react/jsx-runtime":"qEpl"}],"FQPX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../services/game-instance-browser"));

var _context = require("../../context");

var _component = _interopRequireDefault(require("./component"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function OMRUI() {
  //console.log('🔄 OMRUI')
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.AppStateContext.Consumer, {
    children: app_state => {
      const {
        mode
      } = (0, _gameInstanceBrowser.default)().view.get();
      const avatar_name = (0, _gameInstanceBrowser.default)().queries.get_sub_state('avatar').name;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
        mode: mode,
        avatar_name: avatar_name
      });
    }
  });
}

var _default = OMRUI;
exports.default = _default;
},{"prop-types":"X9bF","../../services/game-instance-browser":"r81V","../../context":"DUKA","./component":"ErSb","react/jsx-runtime":"qEpl"}],"xxPN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"FQPX"}],"KpaO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _omrUi.default;
  }
});

var _omrUi = _interopRequireDefault(require("../../omr-ui"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"../../omr-ui":"xxPN"}],"mHsM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Copyright (C) Josh Habdas <jhabdas@protonmail.com> (https://habd.as)
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */
const head = function (i, n, j, e, c, t, s) {
  t = n.createElement(j), s = n.getElementsByTagName(j)[0];
  t.appendChild(n.createTextNode(e.text));
  t.onload = c(e);
  s ? s.parentNode.insertBefore(t, s) : n.head.appendChild(t);
}; // eslint-disable-line

/**
 * Fetch Inject module.
 *
 * @module fetchInject
 * @license Zlib
 * @param {(USVString[]|Request[])} inputs Resources you wish to fetch.
 * @param {Promise} [promise] A promise to await before attempting injection.
 * @throws {Promise<ReferenceError>} Rejects with error when given no arguments.
 * @throws {Promise<TypeError>} Rejects with error on invalid arguments.
 * @throws {Promise<Error>} Whatever `fetch` decides to throw.
 * @throws {SyntaxError} Via DOM upon attempting to parse unexpected tokens.
 * @returns {Promise<Object[]>} A promise which resolves to an `Array` of
 *     Objects containing `Response` `Body` properties used by the module.
 */


const fetchInject = function (inputs, promise) {
  if (!arguments.length) return Promise.reject(new ReferenceError("Failed to execute 'fetchInject': 1 argument required but only 0 present."));
  if (arguments[0] && arguments[0].constructor !== Array) return Promise.reject(new TypeError("Failed to execute 'fetchInject': argument 1 must be of type 'Array'."));
  if (arguments[1] && arguments[1].constructor !== Promise) return Promise.reject(new TypeError("Failed to execute 'fetchInject': argument 2 must be of type 'Promise'."));
  const resources = [];
  const deferreds = promise ? [].concat(promise) : [];
  const thenables = [];
  inputs.forEach(input => deferreds.push(window.fetch(input).then(res => {
    return [res.clone().text(), res.blob()];
  }).then(promises => {
    return Promise.all(promises).then(resolved => {
      resources.push({
        text: resolved[0],
        blob: resolved[1]
      });
    });
  })));
  return Promise.all(deferreds).then(() => {
    resources.forEach(resource => {
      thenables.push({
        then: resolve => {
          resource.blob.type.includes('text/css') ? head(window, document, 'style', resource, resolve) : head(window, document, 'script', resource, resolve);
        }
      });
    });
    return Promise.all(thenables);
  });
};

var _default = fetchInject;
exports.default = _default;
},{}],"mSRe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _fetchInject = _interopRequireDefault(require("fetch-inject"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const ACE_BASE_PATH = 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.1/';
let ↆace = null;

function ↆensureACE() {
  if (!ↆace) {
    console.log('injecting ACE editor…');
    ↆace = (0, _fetchInject.default)([`${ACE_BASE_PATH}/ace.js`]).then(() => {
      console.log('ACE injected ✅');
      return window.ace;
    }).then(ace => {
      // https://github.com/ajaxorg/ace/wiki/Configuring-Ace
      ace.config.set('basePath', ACE_BASE_PATH); // TODO maybe https://github.com/ajaxorg/ace/wiki/Syntax-validation

      return ace;
    });
  }

  return ↆace;
}

class PageSavegameEditorView extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "editor", null);

    _defineProperty(this, "initial_revision", null);

    _defineProperty(this, "get_formatted_ace_data", () => {
      const {
        initial_data
      } = this.props;
      this.initial_revision = initial_data.u_state.revision;
      return JSON.stringify(initial_data, null, 3);
    });

    _defineProperty(this, "on_save", () => {
      if (!this.editor) return;

      try {
        const data = JSON.parse(this.editor.getValue());
        const {
          initial_data
        } = this.props;
        console.log('Replacing current data =', initial_data);
        if (data.u_state.revision === initial_data.u_state.revision) data.u_state.revision = initial_data.u_state.revision + 1;
        (0, _gameInstanceBrowser.default)().commands.set(data);
      } catch (err) {
        window.alert('Save failed (invalid JSON?): ' + err);
      }
    });

    _defineProperty(this, "on_reset", () => {
      if (!window.confirm('' + '💀 Do you really really want to reset your savegame, ' + 'loose all progression and start over? ' + 'This will also reset your cloud game if you have one.')) return;
      (0, _gameInstanceBrowser.default)().model.reset();
      this.props.navigate_home();
    });

    _defineProperty(this, "render", () => {
      if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 PageSavegameEditorView');
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "o\u22C4top-container o\u22C4pad\uA60C0 page--savegame",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "o\u22C4flex--row o\u22C4pad\uA60C7",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
            children: "Savegame editor"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: this.props.navigate_home,
            children: "Back to game"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: this.on_save,
            children: "\uD83D\uDC80 Save changes"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            onClick: this.on_reset,
            children: "\uD83D\uDC80 Reset"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          id: "ace-editor",
          className: "o\u22C4top-container",
          children: this.get_formatted_ace_data()
        })]
      });
    });
  }

  componentDidMount() {
    //console.log('Savegame did mount')
    ↆensureACE().then(ace => {
      const editor = ace.edit('ace-editor');
      if (!editor) return; // TODO report?

      this.editor = editor;
      editor.setTheme('ace/theme/monokai');
      editor.session.setMode('ace/mode/json');
      editor.renderer.setOption({
        vScrollBarAlwaysVisible: true
      });
      editor.setOption({
        tabSize: 3
      });
      editor.setValue(this.get_formatted_ace_data()); // https://stackoverflow.com/questions/12823456/programmatically-fold-code-in-ace-editor#comment17377281_12840753

      setTimeout(
      /*XXX*/
      () => {
        editor.session.foldAll();
        editor.session.unfold(1);
      }, 500); // or ?
      // https://stackoverflow.com/a/37796568/587407
      // editor.renderer.on('afterRender', function() { ... })
    });
  }

  componentWillUnmount() {
    if (!this.editor) return; //console.log('cleaning ACE editor')

    this.editor.destroy();
    this.editor = null;
  }

}

exports.default = PageSavegameEditorView;

_defineProperty(PageSavegameEditorView, "propTypes", {
  initial_data: _propTypes.default.object.isRequired,
  navigate_home: _propTypes.default.func.isRequired
});
},{"react":"dmLA","prop-types":"X9bF","fetch-inject":"mHsM","../../../services/game-instance-browser":"r81V","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"h9Cg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouter = require("react-router");

var _component = _interopRequireDefault(require("./component"));

var _consts = require("../../../services/consts");

var _routes = require("../../../services/routes");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class PageSavegameEditorC1 extends _react.Component {
  constructor(props) {
    console.info('~~ PageSavegameEditorC1 constructor');
    super(props);

    _defineProperty(this, "initial_data", JSON.parse(localStorage.getItem(_consts.LS_KEYS.savegame)));

    _defineProperty(this, "navigate_home", () => {
      this.props.history.push(_routes.ROUTES.home);
    });

    console.log({
      key: _consts.LS_KEYS.savegame,
      data: this.initial_data,
      type: typeof this.initial_data
    });
  }

  componentDidMount() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 PageSavegameEditorC1 componentDidMount', _consts.LS_KEYS.savegame);

    if (this.initial_data.u_state.meta.persistence_id) {
      if (!window.confirm('' + '💀 Editing your game will turn off all social features, ' + 'and your game will no longer be saved in the cloud. ' + 'You’ll be responsible for backupping your game. ' + 'Are you sure?')) return this.navigate_home();
    } // TODO mark the game as edited in some safe way
    //this.initial_data.u_state.meta.persistence_id = null // no longer sync with cloud

  }

  render() {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
      initial_data: this.initial_data,
      navigate_home: this.navigate_home
    });
  }

}

_defineProperty(PageSavegameEditorC1, "propTypes", {
  history: _propTypes.default.object.isRequired
});

const PageSavegameEditorC2 = (0, _reactRouter.withRouter)(PageSavegameEditorC1);
var _default = PageSavegameEditorC2;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","react-router":"AFYx","./component":"mSRe","../../../services/consts":"h9V3","../../../services/routes":"Mjxh","react/jsx-runtime":"qEpl"}],"ISBv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"h9Cg"}],"KfBV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _viewRichText = require("@oh-my-rpg/view-rich-text");

var _interactiveElement = require("../../misc/interactive-element");

var _richTextToReact = _interopRequireDefault(require("../../../services/rich-text-to-react"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _component = require("../../panels/meta/component");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PageDevViewM = /*#__PURE__*/React.memo(function PageDevView({
  state,
  view_state
}) {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 PageDevView');
  const inventory = (0, _gameInstanceBrowser.default)().queries.get_sub_state('inventory');
  const interactive_items = [...Object.values(inventory.slotted), ...inventory.unslotted];
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: "dev-page",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
      children: "Dev area"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}, "recap"), (0, _richTextToReact.default)((0, _gameInstanceBrowser.default)().queries.get_recap()), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}, "last_adventure"), (0, _richTextToReact.default)((0, _viewRichText.render_adventure)((0, _gameInstanceBrowser.default)().queries.get_last_adventure())), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}, "pending"), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}, "avatar"), (0, _richTextToReact.default)((0, _viewRichText.render_character_sheet)((0, _gameInstanceBrowser.default)().queries.get_sub_state('avatar'))), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}, "inventory"), (0, _richTextToReact.default)((0, _viewRichText.render_full_inventory)(inventory, (0, _gameInstanceBrowser.default)().queries.get_sub_state('wallet'))), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}, "meta"), (0, _richTextToReact.default)((0, _component.render_meta)(state, view_state)), /*#__PURE__*/(0, _jsxRuntime.jsx)("hr", {}, "items"), /*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
      children: "Interactive items:"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("h4", {
      children: "interactive (auto)"
    }), interactive_items.map(i => (0, _richTextToReact.default)((0, _viewRichText.render_item_short)(i))), /*#__PURE__*/(0, _jsxRuntime.jsx)("h4", {
      children: "short"
    }), interactive_items.map(i => /*#__PURE__*/(0, _jsxRuntime.jsx)(_interactiveElement.Short, {
      UUID: i.uuid
    })), /*#__PURE__*/(0, _jsxRuntime.jsx)("h4", {
      children: "detailed"
    }), interactive_items.map(i => /*#__PURE__*/(0, _jsxRuntime.jsx)(_interactiveElement.Detailed, {
      UUID: i.uuid
    }))]
  });
});
var _default = PageDevViewM;
exports.default = _default;
},{"react":"dmLA","@oh-my-rpg/view-rich-text":"asRH","../../misc/interactive-element":"P8Kk","../../../services/rich-text-to-react":"SetX","../../../services/game-instance-browser":"r81V","../../panels/meta/component":"JAib","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"s6H2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _component = _interopRequireDefault(require("./component"));

var _gameInstanceBrowser = _interopRequireDefault(require("../../../services/game-instance-browser"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PageDev = /*#__PURE__*/React.memo(function PageDevC1() {
  if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 PageDevC1');
  const state = (0, _gameInstanceBrowser.default)().model.get();
  const view_state = (0, _gameInstanceBrowser.default)().view.get();
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_component.default, {
    state: state,
    view_state: view_state
  });
});
var _default = PageDev;
exports.default = _default;
},{"react":"dmLA","prop-types":"X9bF","./component":"KfBV","../../../services/game-instance-browser":"r81V","react/jsx-runtime":"qEpl"}],"HwTH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connected.default;
  }
});

var _connected = _interopRequireDefault(require("./connected"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./connected":"s6H2"}],"vzaP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _featuresDetectionBrowser = require("@offirmo-private/features-detection-browser");

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function get_data() {
  const SEC = (0, _softExecutionContext.getRootSEC)();
  const test_err = new Error('Diagnostic!');

  SEC._decorateErrorWithDetails(test_err);

  console.log({
    test_err
  });
  return {
    'err.details': test_err.details,
    'features-detection': (0, _featuresDetectionBrowser.get_debug_snapshot)()
  };
}

class PageDiagnostic extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "render", () => {
      console.log('🔄 PageDiagnostic');
      return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "o\u22C4pad\uA60C7",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: () => this.setState({}),
          children: "Refresh"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
          children: "Diagnostic area"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("pre", {
          children: JSON.stringify(get_data(), null, 3)
        })]
      });
    });
  }

}

exports.default = PageDiagnostic;

_defineProperty(PageDiagnostic, "propTypes", {});
},{"react":"dmLA","prop-types":"X9bF","@offirmo-private/features-detection-browser":"WubM","@offirmo-private/soft-execution-context":"cjhL","react/jsx-runtime":"qEpl"}],"EKZP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _xoff = require("@offirmo-private/xoff");

var _softExecutionContext = require("@offirmo-private/soft-execution-context");

var _featuresDetectionBrowser = require("@offirmo-private/features-detection-browser");

var _build = require("../../../build.json");

require("./index.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class DevArea extends _react.Component {
  constructor(props) {
    super(props);

    _defineProperty(this, "onToggle", () => {
      this.setState({
        open: !this.state.open
      });
    });

    _defineProperty(this, "onPlayPause", () => {
      if (!this.props.onPlayPause) return;
      this.setState({
        paused: !this.state.paused
      });
      this.props.onPlayPause(!this.state.paused);
    });

    _defineProperty(this, "onFastForward", () => {
      if (!this.props.onFastForward) return;
      this.props.onFastForward();
    });

    _defineProperty(this, "onNext", () => {
      if (!this.props.onNext) return;
      this.props.onNext();
    });

    this.SEC = props.SEC || (0, _softExecutionContext.getRootSEC)();
    const {
      CHANNEL,
      IS_DEV_MODE,
      logger
    } = this.SEC.getInjectedDependencies();
    this.logger = logger;
    this.channel = props.channel || CHANNEL;
    this.state = {
      displayed: !this.channel.startsWith('prod') || IS_DEV_MODE,
      open: false,
      paused: false
    };
  }

  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 DevArea');
    const media_controls = [];
    if (this.props.onPlayPause) media_controls.push( /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
      onClick: this.onPlayPause,
      children: this.state.paused ? '▶️' : '⏸️'
    }, "PlayPause"));
    if (this.props.onFastForward) media_controls.push( /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
      onClick: this.onFastForward,
      children: "\u23E9"
    }, "FastForward"));
    if (this.props.onNext) media_controls.push( /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
      onClick: this.onNext,
      children: "\u23ED"
    }, "Next"));
    const dev_controls = [/*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
        className: "DA-refresh",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: () => {
            (0, _xoff.get_top_ish_window)().location.reload();
          },
          children: "\uD83D\uDD04"
        })
      })
    }, "refresh"), /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: () => {
            const e = new Error('TEST ERROR synchronous!');
            throw e;
          },
          children: "\uD83D\uDD25SE"
        })
      })
    }, "SE"), /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: () => {
            setTimeout(() => {
              const e = new Error('TEST ERROR Asynchronous!');
              throw e;
            }, 200);
          },
          children: "\uD83D\uDD25AE"
        })
      })
    }, "AE"), /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
          onClick: () => {
            setTimeout(() => {
              Promise.reject(new Error('TEST ERROR promise rejection!'));
            }, 200);
          },
          children: "\uD83D\uDD25UP"
        })
      })
    }, "UP"), /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("button", {
          onClick: () => {
            console.info('❓INFO', {
              location,
              '@offirmo-private/features-detection-browser': (0, _featuresDetectionBrowser.get_debug_snapshot)()
            });
          },
          children: ["\u2753INFO", /*#__PURE__*/(0, _jsxRuntime.jsx)("br", {}), /*#__PURE__*/(0, _jsxRuntime.jsx)("small", {
            children: _build.BUILD_DATE
          })]
        })
      })
    }, "INFO")];
    if (media_controls.length > 0) dev_controls.unshift( /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
        className: "DA-controls",
        children: media_controls
      })
    }, "media"));
    return this.state.displayed && /*#__PURE__*/(0, _jsxRuntime.jsx)("table", {
      className: "dev-area",
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("tbody", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
            className: "DA-environment",
            onClick: this.onToggle,
            children: this.channel
          })
        }, "main"), this.state.open && dev_controls]
      })
    });
  }

}

exports.default = DevArea;

_defineProperty(DevArea, "propTypes", {
  SEC: _propTypes.default.object,
  onPlayPause: _propTypes.default.func,
  onFastForward: _propTypes.default.func,
  onNext: _propTypes.default.func
});
},{"react":"dmLA","prop-types":"X9bF","@offirmo-private/xoff":"lQpO","@offirmo-private/soft-execution-context":"cjhL","@offirmo-private/features-detection-browser":"WubM","../../../build.json":"TByb","./index.css":"THnX","react/jsx-runtime":"qEpl"}],"ZDz5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _xoff = require("@offirmo-private/xoff");

var _gameInstanceBrowser = _interopRequireDefault(require("../services/game-instance-browser"));

var _routes = require("../services/routes");

var _channel = require("../services/channel");

var _context = require("../context");

var _home = _interopRequireDefault(require("./pages/home"));

var _savegame = _interopRequireDefault(require("./pages/savegame"));

var _dev = _interopRequireDefault(require("./pages/dev"));

var _diagnostic = _interopRequireDefault(require("./pages/diagnostic"));

var _devArea = _interopRequireDefault(require("./meta/dev-area"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/////////////////////////////////////////////////
//const StrictCheck = StrictMode
const StrictCheck = _react.Fragment;
/*floating({
	content: '<span style="color: snow;">❄</span>',
	number: 25,
	direction: 'reverse',
	size: [1, 3].map(x => x * .5),
})
*/
// TODO https://reactjs.org/docs/react-api.html#reactlazy

function render_home() {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(StrictCheck, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_context.AppStateListenerAndProvider, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_home.default, {})
    })
  });
}

function render_savegame() {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(StrictCheck, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_savegame.default, {})
  });
}

function render_dev() {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(StrictCheck, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_dev.default, {})
  });
}

function render_diagnostic() {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(StrictCheck, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_diagnostic.default, {})
  });
}

class Root extends _react.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "BASE_ROUTE", (0, _routes.get_base_route)());
  }

  render() {
    if (window.oᐧextra.flagꓽdebug_render) console.log('🔄 Root');
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_react.Fragment, {
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.MemoryRouter, {
        basename: this.BASE_ROUTE,
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Switch, {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            exact: true,
            path: _routes.ROUTES.home,
            render: render_home
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            exact: true,
            path: _routes.ROUTES.savegame,
            render: render_savegame
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            exact: true,
            path: _routes.ROUTES.dev,
            render: render_dev
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Route, {
            exact: true,
            path: _routes.ROUTES.diagnostic,
            render: render_diagnostic
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.Redirect, {
            to: _routes.ROUTES.home
          })]
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_devArea.default, {
        channel: _channel.CHANNEL,
        onPlayPause: is_paused => {
          (0, _xoff.set_xoff_flag)('is_paused', is_paused);
          if (is_paused) console.warn('⏸ Game is now paused!');else console.info('▶️ Game will now resume');
        },
        onFastForward: () => (0, _gameInstanceBrowser.default)().commands.custom(state => {
          const {
            n,
            d
          } = state.t_state.energy.available_energy;
          return { ...state,
            t_state: { ...state.t_state,
              energy: { ...state.t_state.energy,
                available_energy: {
                  n: n + d,
                  d
                }
              }
            }
          };
        }),
        onNext: () => (0, _gameInstanceBrowser.default)().commands.custom(state => {
          return { ...state,
            t_state: { ...state.t_state,
              energy: { ...state.t_state.energy,
                available_energy: {
                  n: 1000,
                  // will be capped
                  d: 1
                }
              }
            }
          };
        })
      })]
    });
  }

}

exports.default = Root;

_defineProperty(Root, "propTypes", {});
},{"react":"dmLA","prop-types":"X9bF","react-router-dom":"eu5S","@offirmo-private/xoff":"lQpO","../services/game-instance-browser":"r81V","../services/routes":"Mjxh","../services/channel":"skGu","../context":"DUKA","./pages/home":"KpaO","./pages/savegame":"ISBv","./pages/dev":"HwTH","./pages/diagnostic":"vzaP","./meta/dev-area":"EKZP","react/jsx-runtime":"qEpl"}],"CvCW":[function(require,module,exports) {
"use strict";

var _reactDom = _interopRequireDefault(require("react-dom"));

var _xoff = require("@offirmo-private/xoff");

var _reactErrorBoundary = _interopRequireDefault(require("@offirmo-private/react-error-boundary"));

var _universalDebugApiBrowser = require("@offirmo/universal-debug-api-browser");

var _iframeLoading = _interopRequireDefault(require("@offirmo-private/iframe--loading"));

var _asyncUtils = require("@offirmo-private/async-utils");

var _flux = require("@tbrpg/flux");

var _channel = require("./services/channel");

var _build = require("./build.json");

var _analytics = _interopRequireDefault(require("./services/analytics"));

var _analyticsGa = _interopRequireDefault(require("./services/analytics-ga4"));

var _cordova = _interopRequireDefault(require("./services/cordova"));

var _sec = _interopRequireDefault(require("./services/sec"));

var _user_account = _interopRequireDefault(require("./services/user_account"));

var _root = _interopRequireDefault(require("./components/root"));

require("./index-2.css");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/////////////////////////////////////////////////
(0, _asyncUtils.asap_but_out_of_immediate_execution)(() => {
  console.groupCollapsed('——————— end of immediate, synchronous, non-import code ———————');
  console.log({
    BUILD_DATE: _build.BUILD_DATE,
    CHANNEL: _channel.CHANNEL
  });
  console.groupEnd();
}); /////////////////////////////////////////////////

(0, _sec.default)();
(0, _iframeLoading.default)().configure({
  bg_color: 'rgb(84, 61, 70)',
  fg_color: 'rgb(255, 235, 188)',
  legend: 'The Boring RPG, reborn'
});
(0, _flux.setTextEncoder)(TextEncoder);
(0, _cordova.default)();
(0, _analytics.default)();
(0, _analyticsGa.default)();
(0, _user_account.default)();
(0, _xoff.set_xoff_flag)('debug_render', (0, _universalDebugApiBrowser.overrideHook)('should_trace_renders', false));
(0, _xoff.set_xoff_flag)('is_paused', (0, _universalDebugApiBrowser.overrideHook)('should_start_paused', false));

if ((0, _universalDebugApiBrowser.overrideHook)('should_start_paused', false)) {
  console.warn('🛠 GAME STARTING IN PAUSE MODE');
}

(0, _asyncUtils.schedule_when_idle_but_within_human_perception)(() => {
  console.log('🔄 starting react…');

  _reactDom.default.render( /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactErrorBoundary.default, {
    name: 'tbrpg_root',
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_root.default, {})
  }), document.getElementById('root'));
});
},{"react-dom":"kUqu","@offirmo-private/xoff":"lQpO","@offirmo-private/react-error-boundary":"UTEF","@offirmo/universal-debug-api-browser":"M3Pi","@offirmo-private/iframe--loading":"Be1M","@offirmo-private/async-utils":"i8Ln","@tbrpg/flux":"kQ36","./services/channel":"skGu","./build.json":"TByb","./services/analytics":"FhkN","./services/analytics-ga4":"UBDq","./services/cordova":"xqeo","./services/sec":"bMEn","./services/user_account":"S34u","./components/root":"ZDz5","./index-2.css":"THnX","react/jsx-runtime":"qEpl"}]},{},["CvCW"], null)
//# sourceMappingURL=index-2.e10c6dd3.js.map